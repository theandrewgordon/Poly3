/* Bundled by @tririga/tri-bundler version 1.1.0 */
define(["exports","meta"],function(_exports,meta){"use strict";Object.defineProperty(_exports,"__esModule",{value:true});_exports.$documentWaitDefault=documentWait;_exports._composedTreeContains=_composedTreeContains;_exports._getScrollInfo=_getScrollInfo;_exports._getScrollableNodes=_getScrollableNodes;_exports._getScrollingNode=_getScrollingNode;_exports._hasCachedLockedElement=_hasCachedLockedElement;_exports._hasCachedUnlockedElement=_hasCachedUnlockedElement;_exports._lockScrollInteractions=_lockScrollInteractions;_exports._scrollInteractionHandler=_scrollInteractionHandler;_exports._shouldPreventScrolling=_shouldPreventScrolling;_exports._unlockScrollInteractions=_unlockScrollInteractions;_exports.addCustomStyle=addCustomStyle;_exports.addDomNodes=addDomNodes;_exports.addDomStyleModule=addDomStyleModule;_exports.addListener=addListener;_exports.addLoadingListener=addLoadingListener;_exports.afterNextRender=afterNextRender;_exports.applyCss=applyCss;_exports.applyStyle=applyStyle;_exports.applyStylePlaceHolder=applyStylePlaceHolder;_exports.assertParametersAreDefined=assertParametersAreDefined;_exports.beforeNextRender=beforeNextRender;_exports.calculateSplices=calculateSplices;_exports.camelToDashCase=camelToDashCase;_exports.capitalizeString=capitalizeString;_exports.computeGeneralLoading=computeGeneralLoading;_exports.createScopeStyle=createScopeStyle;_exports.cssFromModule=cssFromModule;_exports.cssFromModuleImports=cssFromModuleImports;_exports.cssFromModules=cssFromModules;_exports.cssFromTemplate=cssFromTemplate;_exports.dashToCamelCase=dashToCamelCase;_exports.deepTargetFind=deepTargetFind;_exports.deleteDataFromLocal=deleteDataFromLocal;_exports.detectMixin=_detectMixin;_exports.dumpRegistrations=dumpRegistrations;_exports.elementHasBuiltCss=elementHasBuiltCss;_exports.elementIsScrollLocked=elementIsScrollLocked;_exports.elementsAreInvalid=elementsAreInvalid;_exports.findMatchingParen=findMatchingParen;_exports.flush$2=flush;_exports.forEachRule=forEachRule;_exports.formatMarkupForDemo=formatMarkupForDemo;_exports.gatherStyleText=gatherStyleText;_exports.get=_get;_exports.getBuildComment=getBuildComment;_exports.getComputedStyleValue=_getComputedStyleValue;_exports.getCssBuild=getCssBuild;_exports.getDataFromLocal=getDataFromLocal;_exports.getIsExtends=getIsExtends;_exports.getModuleUrl=getModuleUrl;_exports.getResourceUrl=getResourceUrl;_exports.getRouteById=getRouteById;_exports.getRouteByName=getRouteByName;_exports.getService=getService;_exports.getTriroutesApp=getTriroutesApp;_exports.getTriroutesRoomSearch=getTriroutesRoomSearch;_exports.getTriserviceApplicationSettings=getTriserviceApplicationSettings;_exports.getTriserviceFavoriteRooms=getTriserviceFavoriteRooms;_exports.getTriserviceLogin=getTriserviceLogin;_exports.getTriserviceMessage=getTriserviceMessage;_exports.getTriserviceOutlook=getTriserviceOutlook;_exports.getTriserviceRecurrence=getTriserviceRecurrence;_exports.getTriserviceRoomFilters=getTriserviceRoomFilters;_exports.getTriserviceRoomsSearch=getTriserviceRoomsSearch;_exports.getTriserviceUser=getTriserviceUser;_exports.hideElementsGlobally=hideElementsGlobally;_exports.importCss=importCss;_exports.importJs=importJs;_exports.incrementInstanceCount=incrementInstanceCount;_exports.invalidate=invalidate;_exports.invalidateTemplate=invalidateTemplate;_exports.isAncestor=isAncestor;_exports.isDescendant=isDescendant;_exports.isEmptyArray=isEmptyArray;_exports.isEmptyObj=isEmptyObj;_exports.isIEorEdgeBrowser=isIEorEdgeBrowser;_exports.isKeyframesSelector=isKeyframesSelector;_exports.isOptimalCssBuild=isOptimalCssBuild;_exports.isPath=isPath;_exports.isSafariBrowser=isSafariBrowser;_exports.isTargetedBuild=isTargetedBuild;_exports.isUnscopedStyle=isUnscopedStyle;_exports.isValid=isValid;_exports.isValidating=isValidating;_exports.matches=matches;_exports.mixinBehaviors=mixinBehaviors;_exports.modelForElement=_modelForElement;_exports.normalize=normalize;_exports.parse=parse;_exports.pathFromUrl=pathFromUrl;_exports.prevent=_prevent;_exports.processUnscopedStyle=processUnscopedStyle;_exports.processVariableAndFallback=processVariableAndFallback;_exports.pushScrollLock=pushScrollLock;_exports.register=register$1;_exports.register$1=register;_exports.removeCustomPropAssignment=removeCustomPropAssignment;_exports.removeListener=removeListener;_exports.removeScrollLock=removeScrollLock;_exports.resetMouseCanceller=resetMouseCanceller;_exports.resolveCss=resolveCss;_exports.resolveUrl=_resolveUrl;_exports.root=root;_exports.rulesForStyle=rulesForStyle;_exports.saveDataToLocal=saveDataToLocal;_exports.scopeSubtree=_scopeSubtree;_exports.set=_set;_exports.setElementClassRaw=setElementClassRaw;_exports.setLoadingValue=setLoadingValue;_exports.setTouchAction=setTouchAction;_exports.split=split;_exports.splitSelectorList=splitSelectorList;_exports.startValidating=startValidating;_exports.startValidatingTemplate=startValidatingTemplate;_exports.stringify=stringify;_exports.stylesFromModule=stylesFromModule;_exports.stylesFromModuleImports=stylesFromModuleImports;_exports.stylesFromModules=stylesFromModules;_exports.stylesFromTemplate=stylesFromTemplate;_exports.templateIsValid=templateIsValid;_exports.templateIsValidating=templateIsValidating;_exports.templatize=_templatize;_exports.toCssText=toCssText;_exports.toLowerCase=toLowerCase;_exports.translate=translate;_exports.updateNativeProperties=updateNativeProperties;_exports.$triserviceRoomsSearch=_exports.$triserviceRoomFilters=_exports.$triserviceRecurrence=_exports.$triserviceOutlook=_exports.$triserviceMessage=_exports.$triserviceLogin=_exports.$triserviceFavoriteRooms=_exports.$triserviceApplicationSettings=_exports.$triroutesRoomSearch=_exports.$triroutesApp=_exports.$triplatRouteContextBehavior=_exports.$triplatRequiresWebContextIdBehavior=_exports.$triplatQueryPageBehavior=_exports.$triplatQuery=_exports.$triplatInputContainerBehavior=_exports.$triplatDurationBehavior=_exports.$triplatDsChangeBehavior=_exports.$triplatDs=_exports.$triplatDateUtilities=_exports.$triplatChangeTrackerBehavior=_exports.$trimixinService=_exports.$tricoreUtil=_exports.$tricoreDirBehavior=_exports.$triblockViewResponsiveBehavior=_exports.$templatizerBehavior=_exports.$templatize=_exports.$templateStamp=_exports.$templateMapDefault=_exports.$templateMap=_exports.$telemetry=_exports.$styleUtil=_exports.$styleSettings=_exports.$styleGather=_exports.$settings=_exports.$scopeSubtree=_exports.$resolveUrl=_exports.$renderStatus=_exports.$propertyEffects=_exports.$propertyAccessors=_exports.$propertiesMixin=_exports.$propertiesChanged=_exports.$polymerLegacy=_exports.$polymerFn=_exports.$polymerElement=_exports.$polymerDom=_exports.$path=_exports.$paperSpinnerBehavior=_exports.$paperRippleBehavior=_exports.$paperInputBehavior=_exports.$paperInputAddonBehavior=_exports.$paperInkyFocusBehavior=_exports.$paperDialogBehavior=_exports.$paperButtonBehavior=_exports.$neonAnimationRunnerBehavior=_exports.$neonAnimatableBehavior=_exports.$mutableDataBehavior=_exports.$mutableData=_exports.$mixin=_exports.$legacyElementMixin=_exports.$ironValidatableBehavior=_exports.$ironScrollManager=_exports.$ironResizableBehavior=_exports.$ironOverlayManager=_exports.$ironOverlayBehavior=_exports.$ironMeta=_exports.$ironFormElementBehavior=_exports.$ironFocusablesHelper=_exports.$ironFitBehavior=_exports.$ironControlState=_exports.$ironButtonState=_exports.$ironA11yKeysBehavior=_exports.$ironA11yAnnouncer=_exports.$htmlTag=_exports.$hideTemplateControls=_exports.$gestures=_exports.$gestureEventListeners=_exports.$flush=_exports.$flattenedNodesObserver=_exports.$elementMixin=_exports.$domRepeat=_exports.$domModule=_exports.$domIf=_exports.$domBind=_exports.$documentWait=_exports.$dirMixin=_exports.$debounce=_exports.$customStyleInterfaceDefault=_exports.$customStyleInterface$1=_exports.$customStyle=_exports.$cssParse=_exports.$commonUtils=_exports.$commonRegex=_exports.$class=_exports.$caseMap=_exports.$async=_exports.$arraySplice=_exports.$arraySelector=_exports.$applyShimUtils=_exports.$applyShimDefault=_exports.$applyShim$1=void 0;_exports._boundScrollHandler=_exports.VAR_CONSUMED=_exports.VAR_ASSIGN=_exports.UNAUTHORIZED=_exports.TriplatRequiresWebContextIdBehavior=_exports.TriplatQueryPageBehaviorImpl=_exports.TriplatQueryPageBehavior=_exports.TriplatQuery=_exports.TriplatInputContainerBehavior=_exports.TriplatDsChangeBehavior=_exports.TrimixinService=_exports.TriPlatRouteContextBehavior=_exports.TriPlatDurationBehavior=_exports.TriPlatDs=_exports.TriPlatChangeTrackerBehavior=_exports.TriDirBehavior=_exports.TriDateUtilities=_exports.TriBlockViewResponsiveBehavior=_exports.Templatizer=_exports.TemplateStamp=_exports.TemplateInstanceBase=_exports.StyleNode=_exports.SUCCESS=_exports.PropertyEffects=_exports.PropertyAccessors=_exports.PropertiesMixin=_exports.PropertiesChanged=_exports.PolymerElement=_exports.Polymer$1=_exports.Polymer=_exports.PaperSpinnerBehavior=_exports.PaperRippleBehavior=_exports.PaperInputHelper=_exports.PaperInputBehaviorImpl=_exports.PaperInputBehavior=_exports.PaperInputAddonBehavior=_exports.PaperInkyFocusBehaviorImpl=_exports.PaperInkyFocusBehavior=_exports.PaperDialogBehaviorImpl=_exports.PaperDialogBehavior=_exports.PaperButtonBehaviorImpl=_exports.PaperButtonBehavior=_exports.OptionalMutableDataBehavior=_exports.OptionalMutableData=_exports.OUTLOOK_TOKEN_KEY=_exports.NeonAnimationRunnerBehaviorImpl=_exports.NeonAnimationRunnerBehavior=_exports.NeonAnimatableBehavior=_exports.MutableDataBehavior=_exports.MutableData=_exports.MIXIN_MATCH=_exports.MEDIA_MATCH=_exports.LegacyElementMixin=_exports.IronValidatableBehaviorMeta=_exports.IronValidatableBehavior=_exports.IronResizableBehavior=_exports.IronOverlayManagerClass=_exports.IronOverlayManager=_exports.IronOverlayBehaviorImpl=_exports.IronOverlayBehavior=_exports.IronMeta=_exports.IronFormElementBehavior=_exports.IronFocusablesHelper=_exports.IronFitBehavior=_exports.IronControlState=_exports.IronButtonStateImpl=_exports.IronButtonState=_exports.IronA11yKeysBehavior=_exports.IronA11yAnnouncer=_exports.IS_VAR=_exports.INTERNAL_SERVER_ERROR=_exports.HOST_SUFFIX=_exports.HOST_PREFIX=_exports.GestureEventListeners=_exports.FlattenedNodesObserver=_exports.EventApi=_exports.ElementMixin=_exports.DomRepeat=_exports.DomModule=_exports.DomIf=_exports.DomBind=_exports.DomApi=_exports.DirMixin=_exports.Debouncer=_exports.CustomStyleProvider=_exports.CustomStyleInterfaceInterface=_exports.CustomStyle=_exports.Class=_exports.Base=_exports.BRACKETED=_exports.ArraySelectorMixin=_exports.ArraySelector=_exports.AUTHENTICATION_REQUIRED=_exports.ANIMATION_MATCH=_exports.ALREADY_LOGGED=_exports.$wrap=_exports.$unscopedStyleHandler=_exports.$triutilsUtilities=_exports.$triutilsLocalstorage=_exports.$triserviceUser=void 0;_exports.wrap$1=_exports.wrap=_exports.version$1=_exports.version=_exports.useShadow=_exports.useNativeCustomElements=_exports.useNativeCSSProperties=_exports.updateStyles=_exports.types=_exports.triPlatDuration=_exports.timeOut=_exports.syncInitialRender=_exports.strictTemplatePolicy=_exports.setSyncInitialRender=_exports.setStrictTemplatePolicy=_exports.setSanitizeDOMValue=_exports.setRootPath=_exports.setPassiveTouchGestures=_exports.setLegacyOptimizations=_exports.setCancelSyntheticClickEvents=_exports.setAllowTemplateFromDomModule=_exports.scopingAttribute=_exports.sanitizeDOMValue=_exports.rootPath=_exports.remove=_exports.registrations=_exports.recognizers=_exports.passiveTouchGestures=_exports.nativeShadow=_exports.nativeCssVariables=_exports.microTask=_exports.matchesSelector=_exports.legacyOptimizations=_exports.isDeep=_exports.instanceCount=_exports.importJsPromise=_exports.idlePeriod=_exports.htmlLiteral=_exports.html$2=_exports.html$1=_exports.html=_exports.gestures=_exports.flushDebouncers=_exports.flush$1=_exports.flush=_exports.findOriginalTarget=_exports.dom=_exports.disableRuntime=_exports.dedupingMixin=_exports.currentLockingElement=_exports.cssBuild=_exports.cancelSyntheticClickEvents=_exports.animationFrame=_exports.allowTemplateFromDomModule=_exports.enqueueDebouncer$1=_exports.enqueueDebouncer=_exports.addDebouncer=_exports.add=_exports._unlockedElementCache=_exports._lockingElements=_exports._lockedElementCache=void 0;meta=babelHelpers.interopRequireWildcard(meta);function _templateObject51_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<style>\n\t\t\t\t.loading-indicator {\n\t\t\t\t\t--triplat-loading-indicator-clear-background: transparent;\n\t\t\t\t\tz-index: 200;\n\t\t\t\t\t--triplat-loading-indicator-container: {\n\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t<tricore-properties id=\"properties\" sso=\"{{_sso}}\"></tricore-properties>\n\t\t\t<triservice-loading loading=\"{{_loading}}\"></triservice-loading>\n\t\t\t<triservice-login id=\"serviceLogin\"></triservice-login>\n\t\t\t<triservice-outlook id=\"serviceOutlook\"></triservice-outlook>\n\n\t\t\t<dom-if if=\"[[_displayLoginPage]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<trioutlook-login-ui id=\"loginUI\" on-login=\"_handleLogin\" on-force-login=\"_handleForceLogin\" login-button-only=\"[[_loginButtonOnly]]\">\n\t\t\t\t\t</trioutlook-login-ui>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t\t<triplat-loading-indicator class=\"loading-indicator\" show=\"[[_computeShowLoading(_displayLoginPage, _loading)]]\"></triplat-loading-indicator>\n\t\t"]);_templateObject51_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject51_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject50_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t\t\t.container > div {\n\t\t\t\t\t@apply --layout-fit;\n\t\t\t\t\t@apply --layout-vertical;\n\t\t\t\t\t@apply --layout-center-center;\n\t\t\t\t\tz-index: 7;\n\t\t\t\t\t@apply --triplat-loading-indicator-container;\n\t\t\t\t}\n\t\t\n\t\t\t\t.clear-background {\n\t\t\t\t\tbackground-color: var(--triplat-loading-indicator-clear-background, rgba(0, 0, 0, .65));\n\t\t\t\t}\n\t\t\n\t\t\t\t.opaque-background {\n\t\t\t\t\tbackground-color: var(--triplat-loading-indicator-opaque-background, var(--tri-body-background-color));\n\t\t\t\t}\n\t\t\n\t\t\t\tpaper-spinner {\n\t\t\t\t\tz-index: 8;\n\t\t\t\t}\n\t\t\t\n\t\t</style>\n\n\t\t<div class=\"container\" hidden$=\"{{!show}}\">\n\t\t\t<div class=\"clear-background\" hidden$=\"{{hideBackground}}\">\n\t\t\t\t<paper-spinner active=\"\"></paper-spinner>\n\t\t\t</div>\n\t\t\t<div class=\"opaque-background\" hidden$=\"{{!hideBackground}}\">\n\t\t\t\t<paper-spinner active=\"\"></paper-spinner>\n\t\t\t</div>\n\t\t</div>\n\t"],["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t\t\t.container > div {\n\t\t\t\t\t@apply --layout-fit;\n\t\t\t\t\t@apply --layout-vertical;\n\t\t\t\t\t@apply --layout-center-center;\n\t\t\t\t\tz-index: 7;\n\t\t\t\t\t@apply --triplat-loading-indicator-container;\n\t\t\t\t}\n\t\t\n\t\t\t\t.clear-background {\n\t\t\t\t\tbackground-color: var(--triplat-loading-indicator-clear-background, rgba(0, 0, 0, .65));\n\t\t\t\t}\n\t\t\n\t\t\t\t.opaque-background {\n\t\t\t\t\tbackground-color: var(--triplat-loading-indicator-opaque-background, var(--tri-body-background-color));\n\t\t\t\t}\n\t\t\n\t\t\t\tpaper-spinner {\n\t\t\t\t\tz-index: 8;\n\t\t\t\t}\n\t\t\t\n\t\t</style>\n\n\t\t<div class=\"container\" hidden\\$=\"{{!show}}\">\n\t\t\t<div class=\"clear-background\" hidden\\$=\"{{hideBackground}}\">\n\t\t\t\t<paper-spinner active=\"\"></paper-spinner>\n\t\t\t</div>\n\t\t\t<div class=\"opaque-background\" hidden\\$=\"{{!hideBackground}}\">\n\t\t\t\t<paper-spinner active=\"\"></paper-spinner>\n\t\t\t</div>\n\t\t</div>\n\t"]);_templateObject50_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject50_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject49_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<tricore-url raw-url=\"/p/websignon/exchangeit/signon\" bind-url=\"{{_signonUrl}}\"></tricore-url>\n\t\t\t\t\t<tricore-url raw-url=\"/p/websignon/exchangeit/save\" bind-url=\"{{_saveEITUrl}}\"></tricore-url>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject49_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject49_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject48_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<triservice-user current-user=\"{{_currentUser}}\"></triservice-user>\n\n\t\t\t\t\t<triplat-ds id=\"favoriteRoomsDS\" name=\"favoriteRooms\" data=\"{{favoriteRooms}}\" loading=\"{{_loadingFavoriteRooms}}\" manual>\n\t\t\t\t\t\t<triplat-ds-context name=\"currentUser\" context-id=\"[[_currentUser._id]]\"></triplat-ds-context>\n\t\t\t\t\t</triplat-ds>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject48_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject48_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject47_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<triroutes-room-search results-route-active=\"{{_resultsRouteActive}}\"></triroutes-room-search>\n\n\t\t\t\t\t<triservice-application-settings is-ready=\"{{_isApplicationSettingsReady}}\"></triservice-application-settings>\n\t\t\t\t\t<triservice-favorite-rooms favorite-rooms=\"{{_favoriteRooms}}\"></triservice-favorite-rooms>\n\t\t\t\t\t<triservice-outlook start-date=\"{{_startDate}}\" end-date=\"{{_endDate}}\"></triservice-outlook>\n\t\t\t\t\t<triservice-recurrence recurrence=\"{{_recurrence}}\" recurrence-availability-percentage=\"{{_recurrenceAvailabilityPercentage}}\" is-recurring=\"{{_isRecurring}}\" recurrence-end-date=\"{{_recurrenceEndDate}}\"></triservice-recurrence>\n\t\t\t\t\t<triservice-room-filters default-filters-loaded=\"{{_defaultFiltersLoaded}}\" all-filters=\"{{_allFilters}}\" location-filter=\"{{_locationFilter}}\" room-capacity=\"{{_roomCapacity}}\" layout-filter=\"{{_layoutFilter}}\" amenities-filter=\"{{_amenitiesFilter}}\"></triservice-room-filters>\n\n\t\t\t\t\t<triplat-ds-core id=\"addedRoomsDSCore\" context=\"/triOutlookRoomReservation/-1/allReservableRooms\" type=\"GET\"></triplat-ds-core>\n\n\t\t\t\t\t<triplat-query data=\"[[_addedRoomsWithFavorites]]\" filtered-data-out=\"{{addedRooms}}\">\n\t\t\t\t\t\t<triplat-query-sort name=\"name\"></triplat-query-sort>\n\t\t\t\t\t</triplat-query>\n\n\t\t\t\t\t<triplat-ds id=\"reservableRoomsDS\" name=\"reservableRooms\" data=\"{{_reservableRooms}}\" loading=\"{{_loadingReservableRooms}}\" force-server-filtering reserve-include-unavailable manual>\n\t\t\t\t\t\t<triplat-query delay=\"0\">\n\t\t\t\t\t\t\t<triplat-query-reserve-context start-date=\"[[_startDate]]\" end-date=\"[[_endDate]]\" recurrence=\"[[_recurrence]]\" recurrence-availability-percentage=\"[[_recurrenceAvailabilityPercentage]]\"></triplat-query-reserve-context>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSIdFilter\" name=\"systemRecordID\" operator=\"in\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-open-paren></triplat-query-open-paren>\n\t\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSCityFilter\" name=\"citySystemRecordID\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t\t<triplat-query-or></triplat-query-or>\n\t\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSPropertiesFilter\" name=\"propertySystemRecordID\" operator=\"in\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t\t<triplat-query-or></triplat-query-or>\n\t\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSBuildingsFilter\" name=\"buildingSystemRecordID\" operator=\"in\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-close-paren></triplat-query-close-paren>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSRoomLayoutFilter\" name=\"layoutType\" operator=\"in\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSCateringFilter\" name=\"cateringAvailable\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSAdaFilter\" name=\"adaAvailable\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSProjectorFilter\" name=\"inRoomProjector\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSTelephoneFilter\" name=\"telephoneConference\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSWhiteboardFilter\" name=\"whiteboard\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSVideoConferenceFilter\" name=\"videoConferenceRoom\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter id=\"reservableRoomsDSNetworkConnectionFilter\" name=\"networkConnection\" operator=\"equals\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter name=\"capacity\" operator=\"greater than or equals\" value=\"[[_roomCapacity]]\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t</triplat-query>\n\t\t\t\t\t</triplat-ds>\n\n\t\t\t\t\t<triplat-query data=\"[[_definitiveReservableRooms]]\" filtered-data-out=\"{{reservableRooms}}\">\n\t\t\t\t\t\t<triplat-query-filter name=\"isFavorite\" operator=\"equals\" value=\"[[onlyFavoritesFilter]]\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t<triplat-query-filter name=\"isUnavailable\" operator=\"equals\" value=\"[[unavailableFilter]]\" ignore-if-blank></triplat-query-filter>\n\t\t\t\t\t\t<triplat-query-sort name=\"property\"></triplat-query-sort>\n\t\t\t\t\t\t<triplat-query-sort name=\"building\"></triplat-query-sort>\n\t\t\t\t\t\t<triplat-query-sort name=\"floorLevel\"></triplat-query-sort>\n\t\t\t\t\t\t<triplat-query-sort name=\"isUnavailable\"></triplat-query-sort>\n\t\t\t\t\t\t<triplat-query-sort name=\"name\"></triplat-query-sort>\n\t\t\t\t\t</triplat-query>\n\n\t\t\t\t\t<triplat-ds id=\"spaceLabelStylesDS\" name=\"spaceLabelStyles\" data=\"{{spaceLabelStyles}}\" force-server-filtering loading=\"{{_loadingGraphicLabelStyles}}\" manual>\n\t\t\t\t\t\t<triplat-query>\n\t\t\t\t\t\t\t<triplat-query-filter name=\"id\" operator=\"equals\" value=\"triSpaceClass002\"></triplat-query-filter>\n\t\t\t\t\t\t</triplat-query>\n\t\t\t\t\t</triplat-ds>\n\n\t\t\t\t\t<triplat-duration id=\"duration\" hidden></triplat-duration>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject47_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject47_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject46_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<triservice-application-settings application-settings=\"{{_applicationSettings}}\"></triservice-application-settings>\n\t\t\t<triservice-outlook recurrence=\"{{_outlookRecurrence}}\"></triservice-outlook>\n\t\t"]);_templateObject46_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject46_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject45_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<tricore-url raw-url=\"/p/web/locate\" bind-url=\"{{_locateUrl}}\"></tricore-url>\n\t\t\t\t\t<tricore-url raw-url=\"/p/websignon\" bind-url=\"{{_webSignonUrl}}\"></tricore-url>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject45_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject45_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject44_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<style include=\"room-reservation-popup-styles carbon-style\">\n\t\t\t</style>\n\n\t\t\t<dom-if if=\"[[_isRootInstance]]\" on-dom-change=\"_handleDomIfChange\">\n\t\t\t\t<template>\n\t\t\t\t\t<triblock-toast id=\"toastAlert\" on-opened-changed=\"_handleToastOpenedChanged\" allow-click-through></triblock-toast>\n\t\t\t\t\t<triblock-popup id=\"defaultErrorPopup\" class=\"popup-alert\" with-backdrop small-screen-max-width=\"0px\" hidden>\n\t\t\t\t\t\t<div class=\"productive-heading-03 header-warning\">Error</div>\n\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t<p>An error occurred. Please contact your server administrator.</p>\n\t\t\t\t\t\t\t<p>You can <a on-tap=\"_handleRefreshPage\">refresh the page</a> or return to the application.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"footer\"><paper-button dialog-dismiss>Got it</paper-button></div>\n\t\t\t\t\t</triblock-popup>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject44_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject44_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject43_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if id=\"rootInstanceIf\" if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<triplat-ds id=\"currentUserDS\" name=\"currentUser\" data=\"{{currentUser}}\" loading=\"{{_loadingCurrentUser}}\"></triplat-ds>\n\n\t\t\t\t\t<triplat-ds id=\"buildingsDS\" name=\"buildings\" loading=\"{{_loadingBuildingsForGeoLocation}}\" force-server-filtering manual>\n\t\t\t\t\t\t<triplat-query>\n\t\t\t\t\t\t\t<triplat-query-filter name=\"latitude\" operator=\"not equals\" value=\"0\"></triplat-query-filter>\n\t\t\t\t\t\t\t<triplat-query-and></triplat-query-and>\n\t\t\t\t\t\t\t<triplat-query-filter name=\"longitude\" operator=\"not equals\" value=\"0\"></triplat-query-filter>\n\t\t\t\t\t\t</triplat-query>\n\t\t\t\t\t</triplat-ds>\n\n\t\t\t\t\t<triplat-ds id=\"primaryBuildingDS\" name=\"myPrimaryBuilding\" loading=\"{{_loadingPrimaryBuilding}}\" manual></triplat-ds>\n\n\t\t\t\t\t<triplat-search-location id=\"searchLocation\" closest-location=\"{{_closestBuilding}}\" threshold=\"100\" disable\n\t\t\t\t\t\ton-triplat-geo-success=\"_handleGetGeoLocationSuccess\"\n\t\t\t\t\t\ton-triplat-geo-error=\"_handleGetGeoLocationError\">\n\t\t\t\t\t</triplat-search-location>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject43_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject43_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject42_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t</style>\n\n\t\t<triplat-geo id=\"geoLocation\" latitude=\"{{latitude}}\" longitude=\"{{longitude}}\" accuracy=\"{{accuracy}}\" is-watch-position=\"{{isWatchPosition}}\" time-out=\"{{timeOut}}\" maximum-age=\"{{maximumAge}}\" disable=\"{{disable}}\">\n\t\t</triplat-geo>\n\t"]);_templateObject42_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject42_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject41_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"iron-flex iron-flex-alignment tristyles-theme\">\n\n\t\t\n\t\t\t.triplat-duration-div {\n\t\t\t\t@apply --layout;\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\twidth: var(--triplat-duration-width, 100%);\n\t\t\t}\n\n\t\t\tpaper-input-container {\n\t\t\t\t--paper-input-container-input: {\n\t\t\t\t\tcolor: inherit;\n\t\t\t\t\tfont-size: inherit;\n\t\t\t\t};\n\t\t\t}\n\t\t\t:host([no-underline]) paper-input-container {\n\t\t\t\t--paper-input-container-underline: {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t.clock-time-icon {\n\t\t\t\tpadding: 0px;\n\t\t\t\tbottom: 2px;\n\t\t\t\theight: 24px;\n\t\t\t\twidth: 24px;\n\t\t\t\tcolor: var(--tri-actionable-color, var(--tri-primary-color));\n\t\t\t\tbackground-color: var(--tri-actionable-color-contrast, white);\n\t\t\t\tcursor: pointer;\n\t\t\t\t@apply --triplat-duration-clock-time-icon;\n\t\t\t}\n\n\t\t\t.__triplatDurationPicker {\n\t\t\t\ttop: var(--triplat-duration-picker-position-top);\n\t\t\t\tleft: var(--triplat-duration-picker-position-left);\n\t\t\t\tposition: var(--triplat-duration-picker-position);\n\t\t\t}\n\n\t\t\t\n\t\t\tinput {\n\n\t\t\t@apply --paper-input-container-shared-input-style;\n\n\t\t}\n\n\t\t\n\t\t</style>\n\n\t\t<iron-media-query query=\"max-width: 414px\" query-matches=\"{{phone}}\"></iron-media-query>\n\n\t\t<div class=\"triplat-duration-div\">\n\t\t\t<paper-input-container class=\"flex\" no-label-float=\"[[noLabelFloat]]\">\n\t\t\t\t<label id=\"[[_labelId]]\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]<slot id=\"labelContent\" name=\"label\"></slot></label>\n\t\t\t\t<iron-input id=\"[[_inputId]]\" bind-value=\"{{_displayValue(value)}}\" slot=\"input\">\n\t\t\t\t\t<input readonly=\"\" aria-labelledby$=\"[[_labelId]]\">\n\t\t\t\t</iron-input>\n\t\t\t\t<template is=\"dom-if\" if=\"{{!readonly}}\">\n\t\t\t\t\t<paper-icon-button suffix=\"\" class=\"clock-time-icon\" icon=\"ibm:clock-time\" id=\"durationPickerButton\" on-tap=\"_openDurationPicker\" aria-label$=\"{{_setPickerAriaLabel(label)}}\" slot=\"suffix\"></paper-icon-button>\n\t\t\t\t</template>\n\n\t\t\t</paper-input-container>\n\t\t</div>\n\t\t<triplat-duration-picker class=\"__triplatDurationPicker\" id=\"durationPicker\" display-tokens=\"{{displayTokens}}\" value=\"{{value}}\" year-min$=\"[[yearMin]]\" year-max$=\"[[yearMax]]\" year-step$=\"[[yearStep]]\" year-loop$=\"[[yearLoop]]\" month-min$=\"[[monthMin]]\" month-max$=\"[[monthMax]]\" month-step$=\"[[monthStep]]\" month-loop$=\"[[monthLoop]]\" week-min$=\"[[weekMin]]\" week-max$=\"[[weekMax]]\" week-step$=\"[[weekStep]]\" week-loop$=\"[[weekLoop]]\" day-min$=\"[[dayMin]]\" day-max$=\"[[dayMax]]\" day-step$=\"[[dayStep]]\" day-loop$=\"[[dayLoop]]\" hour-min$=\"[[hourMin]]\" hour-max$=\"[[hourMax]]\" hour-step$=\"[[hourStep]]\" hour-loop$=\"[[hourLoop]]\" minute-min$=\"[[minuteMin]]\" minute-max$=\"[[minuteMax]]\" minute-step$=\"[[minuteStep]]\" minute-loop$=\"[[minuteLoop]]\" second-min$=\"[[secondMin]]\" second-max$=\"[[secondMax]]\" second-step$=\"[[secondStep]]\" second-loop$=\"[[secondLoop]]\" millisecond-min$=\"[[millisecondMin]]\" millisecond-max$=\"[[millisecondMax]]\" millisecond-step$=\"[[millisecondStep]]\" millisecond-loop$=\"[[millisecondLoop]]\" restore-focus-on-close=\"\"></triplat-duration-picker>\n\t"],["\n\t\t<style include=\"iron-flex iron-flex-alignment tristyles-theme\">\n\n\t\t\n\t\t\t.triplat-duration-div {\n\t\t\t\t@apply --layout;\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\twidth: var(--triplat-duration-width, 100%);\n\t\t\t}\n\n\t\t\tpaper-input-container {\n\t\t\t\t--paper-input-container-input: {\n\t\t\t\t\tcolor: inherit;\n\t\t\t\t\tfont-size: inherit;\n\t\t\t\t};\n\t\t\t}\n\t\t\t:host([no-underline]) paper-input-container {\n\t\t\t\t--paper-input-container-underline: {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t.clock-time-icon {\n\t\t\t\tpadding: 0px;\n\t\t\t\tbottom: 2px;\n\t\t\t\theight: 24px;\n\t\t\t\twidth: 24px;\n\t\t\t\tcolor: var(--tri-actionable-color, var(--tri-primary-color));\n\t\t\t\tbackground-color: var(--tri-actionable-color-contrast, white);\n\t\t\t\tcursor: pointer;\n\t\t\t\t@apply --triplat-duration-clock-time-icon;\n\t\t\t}\n\n\t\t\t.__triplatDurationPicker {\n\t\t\t\ttop: var(--triplat-duration-picker-position-top);\n\t\t\t\tleft: var(--triplat-duration-picker-position-left);\n\t\t\t\tposition: var(--triplat-duration-picker-position);\n\t\t\t}\n\n\t\t\t\n\t\t\tinput {\n\n\t\t\t@apply --paper-input-container-shared-input-style;\n\n\t\t}\n\n\t\t\n\t\t</style>\n\n\t\t<iron-media-query query=\"max-width: 414px\" query-matches=\"{{phone}}\"></iron-media-query>\n\n\t\t<div class=\"triplat-duration-div\">\n\t\t\t<paper-input-container class=\"flex\" no-label-float=\"[[noLabelFloat]]\">\n\t\t\t\t<label id=\"[[_labelId]]\" for\\$=\"[[_inputId]]\" slot=\"label\">[[label]]<slot id=\"labelContent\" name=\"label\"></slot></label>\n\t\t\t\t<iron-input id=\"[[_inputId]]\" bind-value=\"{{_displayValue(value)}}\" slot=\"input\">\n\t\t\t\t\t<input readonly=\"\" aria-labelledby\\$=\"[[_labelId]]\">\n\t\t\t\t</iron-input>\n\t\t\t\t<template is=\"dom-if\" if=\"{{!readonly}}\">\n\t\t\t\t\t<paper-icon-button suffix=\"\" class=\"clock-time-icon\" icon=\"ibm:clock-time\" id=\"durationPickerButton\" on-tap=\"_openDurationPicker\" aria-label\\$=\"{{_setPickerAriaLabel(label)}}\" slot=\"suffix\"></paper-icon-button>\n\t\t\t\t</template>\n\n\t\t\t</paper-input-container>\n\t\t</div>\n\t\t<triplat-duration-picker class=\"__triplatDurationPicker\" id=\"durationPicker\" display-tokens=\"{{displayTokens}}\" value=\"{{value}}\" year-min\\$=\"[[yearMin]]\" year-max\\$=\"[[yearMax]]\" year-step\\$=\"[[yearStep]]\" year-loop\\$=\"[[yearLoop]]\" month-min\\$=\"[[monthMin]]\" month-max\\$=\"[[monthMax]]\" month-step\\$=\"[[monthStep]]\" month-loop\\$=\"[[monthLoop]]\" week-min\\$=\"[[weekMin]]\" week-max\\$=\"[[weekMax]]\" week-step\\$=\"[[weekStep]]\" week-loop\\$=\"[[weekLoop]]\" day-min\\$=\"[[dayMin]]\" day-max\\$=\"[[dayMax]]\" day-step\\$=\"[[dayStep]]\" day-loop\\$=\"[[dayLoop]]\" hour-min\\$=\"[[hourMin]]\" hour-max\\$=\"[[hourMax]]\" hour-step\\$=\"[[hourStep]]\" hour-loop\\$=\"[[hourLoop]]\" minute-min\\$=\"[[minuteMin]]\" minute-max\\$=\"[[minuteMax]]\" minute-step\\$=\"[[minuteStep]]\" minute-loop\\$=\"[[minuteLoop]]\" second-min\\$=\"[[secondMin]]\" second-max\\$=\"[[secondMax]]\" second-step\\$=\"[[secondStep]]\" second-loop\\$=\"[[secondLoop]]\" millisecond-min\\$=\"[[millisecondMin]]\" millisecond-max\\$=\"[[millisecondMax]]\" millisecond-step\\$=\"[[millisecondStep]]\" millisecond-loop\\$=\"[[millisecondLoop]]\" restore-focus-on-close=\"\"></triplat-duration-picker>\n\t"]);_templateObject41_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject41_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject40_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"iron-flex iron-flex-alignment tristyles-theme\">\n\n\t\t\t:host {\n\t\t\tbackground-color: #fff;\n\t\t\tborder: 1px solid #ccc;\n\t\t\t\tpadding-top: 20px;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t\toverflow: auto;\n\t\t\t}\n\n\t\t\t.rtl-picker {\n\t\t\t\tpadding-right: 20px;\n\t\t\t\tpadding-left: 14px;\n\t\t\t}\n\n\t\t\t.ltr-picker {\n\t\t\t\tpadding-right: 14px;\n\t\t\t\tpadding-left: 20px;\n\t\t\t}\n\n\t\t\t.periods {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tmax-width: 100%;\n\t\t\t\tpadding-top: 14px;\n\t\t\t\tpadding-bottom: 24px;\n\t\t\t\toverflow: auto; \n\t\t\t\tfont-size: 14px;\n\t\t\t\toverflow: visible;\n\t\t\t}\n\t\t\t\n\t\t\t#cancelButton {\n\t\t\t\theight: 40px;\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t\tborder: 1px solid var(--tri-primary-color);\n\t\t\t\t-moz-border-radius: 0px;\n\t\t\t\t-webkit-border-radius: 0px;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\ttext-transform: none;\n\t\t\t\t--paper-button-flat-keyboard-focus: {\n\t\t\t\t\tborder-width: 3px !important;\n\t\t\t\t};\n\t\t\t\t@apply --triplat-duration-cancel-button;  \n\t\t\t}\n\n\t\t\t#doneButton {\n\t\t\t\theight: 40px;\n\t\t\t\tbackground-color: var(--tri-primary-color);\n\t\t\t\tcolor: white;\n\t\t\t\t-moz-border-radius: 0px;\n\t\t\t\t-webkit-border-radius: 0px;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\ttext-transform: none;\n\t\t\t\t@apply --triplat-duration-done-button;  \n\t\t\t}\n\n\t\t\t.ltr-done-button {\n\t\t\t\tmargin-right: 10px;\n\t\t\t}\n\t\t\t\n\t\t\t.rtl-done-button {\n\t\t\t\tmargin-left: 10px;\n\t\t\t}\n\t\t\t\n\t\t\t.header {\n\t\t\t\tmargin: 0;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tletter-spacing: 0.02em;\n\t\t\t\ttext-align: left;\n\t\t\t\tcolor: var(--ibm-gray-60);\n\t\t\t}\n\n\t\t\tpaper-input {\n\t\t\t\ttext-align: center;\n\t\t\t\twidth: 50px;\n\t\t\t\tmargin-top: -2em;\n\t\t\t}\n\n\t\t\tpaper-button:not([raised]).paper-button-0.keyboard-focus{\n\t\t\t\tborder-style: none;\n\t\t\t}\n\n\t\t\t.period-label{\n\t\t\t\twidth: 80px;\n\t\t\t}\n\t\t\t\n\t\t\ttriplat-duration-period-counter {\n\t\t\t\t@apply --layout-flex;\n\t\t\t}\n\t\t\t\t\n\t\t\n\t\t</style>\n\n\t<div id=\"picker\">\n\t\t<div class=\"layout horizontal\">\n\t\t\t<div class=\"flex relative\">\n\t\t\t\t<span class=\"header\">Duration</span>\n\t\t\t</div>\n\t\t</div>\n\n\t\t <div class=\"periods layout vertical\">\n\n\t\t\t<div class=\"layout horizontal\" hidden$=\"{{!isDisplayYears(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Years:\" value=\"{{year}}\" min$=\"[[yearMin]]\" max$=\"[[yearMax]]\" step$=\"[[yearStep]]\" loop$=\"[[isLoop(yearLoop)]]\" increase-aria-label=\"{{increaseYears}}\" decrease-aria-label=\"{{decreaseYears}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden$=\"{{!isDisplayMonths(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Months:\" value=\"{{month}}\" min$=\"[[monthMin]]\" max$=\"[[monthMax]]\" step$=\"[[monthStep]]\" loop$=\"[[isLoop(monthLoop)]]\" increase-aria-label=\"{{increaseMonths}}\" decrease-aria-label=\"{{decreaseMonths}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden$=\"{{!isDisplayWeeks(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Weeks:\" value=\"{{week}}\" min$=\"[[weekMin]]\" max$=\"[[weekMax]]\" step$=\"[[weekStep]]\" loop$=\"[[isLoop(weekLoop)]]\" increase-aria-label=\"{{increaseWeeks}}\" decrease-aria-label=\"{{decreaseWeeks}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden$=\"{{!isDisplayDays(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Days:\" value=\"{{day}}\" min$=\"[[dayMin]]\" max$=\"[[dayMax]]\" step$=\"[[dayStep]]\" loop$=\"[[isLoop(dayLoop)]]\" increase-aria-label=\"{{increaseDays}}\" decrease-aria-label=\"{{decreaseDays}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden$=\"{{!isDisplayHours(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Hours:\" value=\"{{hour}}\" min$=\"[[hourMin]]\" max$=\"[[hourMax]]\" step$=\"[[hourStep]]\" loop$=\"[[isLoop(hourLoop)]]\" increase-aria-label=\"{{increaseHours}}\" decrease-aria-label=\"{{decreaseHours}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden$=\"{{!isDisplayMinutes(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Minutes:\" value=\"{{minute}}\" min$=\"[[minuteMin]]\" max$=\"[[minuteMax]]\" step$=\"[[minuteStep]]\" loop$=\"[[isLoop(minuteLoo)]]\" increase-aria-label=\"{{increaseMinutes}}\" decrease-aria-label=\"{{decreaseMinutes}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t   <div class=\"layout horizontal\" hidden$=\"{{!isDisplaySeconds(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Seconds:\" value=\"{{second}}\" min$=\"[[secondMin]]\" max$=\"[[secondMax]]\" step$=\"[[secondStep]]\" loop$=\"[[isLoop(secondLoop)]]\" increase-aria-label=\"{{increaseSeconds}}\" decrease-aria-label=\"{{decreaseSeconds}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t   <div class=\"layout horizontal\" hidden$=\"{{!isDisplayMilliseconds(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Milliseconds:\" value=\"{{millisecond}}\" min$=\"[[millisecondMin]]\" max$=\"[[millisecondMax]]\" step$=\"[[millisecondStep]]\" loop$=\"[[isLoop(millisecondLoop)]]\" increase-aria-label=\"{{increaseMilliseconds}}\" decrease-aria-label=\"{{decreaseMilliseconds}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\t\t  </div>\n\n\t\t  <div class=\"layout horizontal\">\n\t\t\t<paper-button id=\"cancelButton\" class=\"cancelButton\" on-tap=\"_handleCancel\" tabindex=\"0\">Cancel</paper-button>\n\t\t\t<paper-button id=\"doneButton\" class=\"doneButton\" on-tap=\"_handleOk\" tabindex=\"0\" disabled$=\"{{invalidInput}}\">Done</paper-button>\n\t\t  </div>\n\t</div>\n\t"],["\n\t\t<style include=\"iron-flex iron-flex-alignment tristyles-theme\">\n\n\t\t\t:host {\n\t\t\tbackground-color: #fff;\n\t\t\tborder: 1px solid #ccc;\n\t\t\t\tpadding-top: 20px;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t\toverflow: auto;\n\t\t\t}\n\n\t\t\t.rtl-picker {\n\t\t\t\tpadding-right: 20px;\n\t\t\t\tpadding-left: 14px;\n\t\t\t}\n\n\t\t\t.ltr-picker {\n\t\t\t\tpadding-right: 14px;\n\t\t\t\tpadding-left: 20px;\n\t\t\t}\n\n\t\t\t.periods {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tmax-width: 100%;\n\t\t\t\tpadding-top: 14px;\n\t\t\t\tpadding-bottom: 24px;\n\t\t\t\toverflow: auto; \n\t\t\t\tfont-size: 14px;\n\t\t\t\toverflow: visible;\n\t\t\t}\n\t\t\t\n\t\t\t#cancelButton {\n\t\t\t\theight: 40px;\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t\tborder: 1px solid var(--tri-primary-color);\n\t\t\t\t-moz-border-radius: 0px;\n\t\t\t\t-webkit-border-radius: 0px;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\ttext-transform: none;\n\t\t\t\t--paper-button-flat-keyboard-focus: {\n\t\t\t\t\tborder-width: 3px !important;\n\t\t\t\t};\n\t\t\t\t@apply --triplat-duration-cancel-button;  \n\t\t\t}\n\n\t\t\t#doneButton {\n\t\t\t\theight: 40px;\n\t\t\t\tbackground-color: var(--tri-primary-color);\n\t\t\t\tcolor: white;\n\t\t\t\t-moz-border-radius: 0px;\n\t\t\t\t-webkit-border-radius: 0px;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\ttext-transform: none;\n\t\t\t\t@apply --triplat-duration-done-button;  \n\t\t\t}\n\n\t\t\t.ltr-done-button {\n\t\t\t\tmargin-right: 10px;\n\t\t\t}\n\t\t\t\n\t\t\t.rtl-done-button {\n\t\t\t\tmargin-left: 10px;\n\t\t\t}\n\t\t\t\n\t\t\t.header {\n\t\t\t\tmargin: 0;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tletter-spacing: 0.02em;\n\t\t\t\ttext-align: left;\n\t\t\t\tcolor: var(--ibm-gray-60);\n\t\t\t}\n\n\t\t\tpaper-input {\n\t\t\t\ttext-align: center;\n\t\t\t\twidth: 50px;\n\t\t\t\tmargin-top: -2em;\n\t\t\t}\n\n\t\t\tpaper-button:not([raised]).paper-button-0.keyboard-focus{\n\t\t\t\tborder-style: none;\n\t\t\t}\n\n\t\t\t.period-label{\n\t\t\t\twidth: 80px;\n\t\t\t}\n\t\t\t\n\t\t\ttriplat-duration-period-counter {\n\t\t\t\t@apply --layout-flex;\n\t\t\t}\n\t\t\t\t\n\t\t\n\t\t</style>\n\n\t<div id=\"picker\">\n\t\t<div class=\"layout horizontal\">\n\t\t\t<div class=\"flex relative\">\n\t\t\t\t<span class=\"header\">Duration</span>\n\t\t\t</div>\n\t\t</div>\n\n\t\t <div class=\"periods layout vertical\">\n\n\t\t\t<div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayYears(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Years:\" value=\"{{year}}\" min\\$=\"[[yearMin]]\" max\\$=\"[[yearMax]]\" step\\$=\"[[yearStep]]\" loop\\$=\"[[isLoop(yearLoop)]]\" increase-aria-label=\"{{increaseYears}}\" decrease-aria-label=\"{{decreaseYears}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayMonths(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Months:\" value=\"{{month}}\" min\\$=\"[[monthMin]]\" max\\$=\"[[monthMax]]\" step\\$=\"[[monthStep]]\" loop\\$=\"[[isLoop(monthLoop)]]\" increase-aria-label=\"{{increaseMonths}}\" decrease-aria-label=\"{{decreaseMonths}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayWeeks(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Weeks:\" value=\"{{week}}\" min\\$=\"[[weekMin]]\" max\\$=\"[[weekMax]]\" step\\$=\"[[weekStep]]\" loop\\$=\"[[isLoop(weekLoop)]]\" increase-aria-label=\"{{increaseWeeks}}\" decrease-aria-label=\"{{decreaseWeeks}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayDays(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Days:\" value=\"{{day}}\" min\\$=\"[[dayMin]]\" max\\$=\"[[dayMax]]\" step\\$=\"[[dayStep]]\" loop\\$=\"[[isLoop(dayLoop)]]\" increase-aria-label=\"{{increaseDays}}\" decrease-aria-label=\"{{decreaseDays}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayHours(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Hours:\" value=\"{{hour}}\" min\\$=\"[[hourMin]]\" max\\$=\"[[hourMax]]\" step\\$=\"[[hourStep]]\" loop\\$=\"[[isLoop(hourLoop)]]\" increase-aria-label=\"{{increaseHours}}\" decrease-aria-label=\"{{decreaseHours}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t\t<div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayMinutes(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Minutes:\" value=\"{{minute}}\" min\\$=\"[[minuteMin]]\" max\\$=\"[[minuteMax]]\" step\\$=\"[[minuteStep]]\" loop\\$=\"[[isLoop(minuteLoo)]]\" increase-aria-label=\"{{increaseMinutes}}\" decrease-aria-label=\"{{decreaseMinutes}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t   <div class=\"layout horizontal\" hidden\\$=\"{{!isDisplaySeconds(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Seconds:\" value=\"{{second}}\" min\\$=\"[[secondMin]]\" max\\$=\"[[secondMax]]\" step\\$=\"[[secondStep]]\" loop\\$=\"[[isLoop(secondLoop)]]\" increase-aria-label=\"{{increaseSeconds}}\" decrease-aria-label=\"{{decreaseSeconds}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\n\t\t   <div class=\"layout horizontal\" hidden\\$=\"{{!isDisplayMilliseconds(displayTokens)}}\">\n\t\t\t\t<triplat-duration-period-counter label=\"Milliseconds:\" value=\"{{millisecond}}\" min\\$=\"[[millisecondMin]]\" max\\$=\"[[millisecondMax]]\" step\\$=\"[[millisecondStep]]\" loop\\$=\"[[isLoop(millisecondLoop)]]\" increase-aria-label=\"{{increaseMilliseconds}}\" decrease-aria-label=\"{{decreaseMilliseconds}}\" on-change=\"_handleEdit\"></triplat-duration-period-counter>\n\t\t\t</div>\n\t\t  </div>\n\n\t\t  <div class=\"layout horizontal\">\n\t\t\t<paper-button id=\"cancelButton\" class=\"cancelButton\" on-tap=\"_handleCancel\" tabindex=\"0\">Cancel</paper-button>\n\t\t\t<paper-button id=\"doneButton\" class=\"doneButton\" on-tap=\"_handleOk\" tabindex=\"0\" disabled\\$=\"{{invalidInput}}\">Done</paper-button>\n\t\t  </div>\n\t</div>\n\t"]);_templateObject40_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject40_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject39_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"iron-flex iron-flex-alignment tristyles-theme\">\n\n\n\t\t\tpaper-input {\n\t\t\t\ttext-align: center;\n\t\t\t\twidth: 44px;\n\t\t\t\tpadding-left: 4px;\n\t\t\t\tpadding-right: 4px;\n\t\t\t}\n\n\t\t\t.period-label{\n\t\t\t\tcolor: var(--ibm-gray-60);\n\t\t\t}\n\t\t\t\t\n\t\t\tpaper-icon-button{\n\t\t\theight: 44px;\n\t\t\twidth: 44px; \n\t\t\tpadding: 6px;\n\t\t\tcolor: var(--tri-actionable-color, var(--tri-primary-color));\n\t\t\tbackground-color: var(--tri-actionable-color-contrast, white);\n\t\t\t@apply --triplat-duration-period-counter-icon; \n\t\t}\n\n\t\t\n\t\t</style>\n\n\t<div class=\"layout vertical\">\n\t\t<span class=\"period-label\">{{label}}</span>\n\t\t<div class=\"layout horizontal center-center\">\n\t\t\t<paper-icon-button icon=\"ibm-glyphs:incremental-input-minus\" on-tap=\"decreaseValue\" aria-label$=\"[[decreaseAriaLabel]]\" disabled$=\"[[_disableDecrementButton(loop, value)]]\"></paper-icon-button>\n\t\t\t<paper-input value=\"{{value}}\" on-change=\"_handleEdit\" allowed-pattern=\"[0-9]\" prevent-invalid-input=\"\" no-label-float=\"\" readonly=\"[[disableKeyboardInput]]\">\n\t\t\t</paper-input>\n\t\t\t<paper-icon-button icon=\"ibm-glyphs:incremental-input-add\" on-tap=\"increaseValue\" aria-label$=\"[[increaseAriaLabel]]\" disabled$=\"[[_disableIncrementButton(loop, value)]]\"></paper-icon-button>\n\t\t</div>\n\t</div>\n\t"],["\n\t\t<style include=\"iron-flex iron-flex-alignment tristyles-theme\">\n\n\n\t\t\tpaper-input {\n\t\t\t\ttext-align: center;\n\t\t\t\twidth: 44px;\n\t\t\t\tpadding-left: 4px;\n\t\t\t\tpadding-right: 4px;\n\t\t\t}\n\n\t\t\t.period-label{\n\t\t\t\tcolor: var(--ibm-gray-60);\n\t\t\t}\n\t\t\t\t\n\t\t\tpaper-icon-button{\n\t\t\theight: 44px;\n\t\t\twidth: 44px; \n\t\t\tpadding: 6px;\n\t\t\tcolor: var(--tri-actionable-color, var(--tri-primary-color));\n\t\t\tbackground-color: var(--tri-actionable-color-contrast, white);\n\t\t\t@apply --triplat-duration-period-counter-icon; \n\t\t}\n\n\t\t\n\t\t</style>\n\n\t<div class=\"layout vertical\">\n\t\t<span class=\"period-label\">{{label}}</span>\n\t\t<div class=\"layout horizontal center-center\">\n\t\t\t<paper-icon-button icon=\"ibm-glyphs:incremental-input-minus\" on-tap=\"decreaseValue\" aria-label\\$=\"[[decreaseAriaLabel]]\" disabled\\$=\"[[_disableDecrementButton(loop, value)]]\"></paper-icon-button>\n\t\t\t<paper-input value=\"{{value}}\" on-change=\"_handleEdit\" allowed-pattern=\"[0-9]\" prevent-invalid-input=\"\" no-label-float=\"\" readonly=\"[[disableKeyboardInput]]\">\n\t\t\t</paper-input>\n\t\t\t<paper-icon-button icon=\"ibm-glyphs:incremental-input-add\" on-tap=\"increaseValue\" aria-label\\$=\"[[increaseAriaLabel]]\" disabled\\$=\"[[_disableIncrementButton(loop, value)]]\"></paper-icon-button>\n\t\t</div>\n\t</div>\n\t"]);_templateObject39_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject39_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject38_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t</style>\n\n\t\t<tricore-url id=\"url\"></tricore-url>\n\t\t<iron-ajax id=\"ajax\" on-response=\"_onResponse\" on-error=\"_onError\"></iron-ajax>\n\t"]);_templateObject38_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject38_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject37_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t</style>\n\n\t\t<tricore-context-path get-path=\"{{_contextPath}}\"></tricore-context-path>\n\t\t<slot></slot>\n\t\t<paper-dialog id=\"triPlatDsErrorDialog\">\n\t\t\t<tricore-error id=\"triPlatDsErrorMsg\" elevation=\"0\"></tricore-error>\n\t\t\t<div class=\"buttons\">\n\t\t\t\t<paper-button id=\"triPlatDsCloseButton\" dialog-dismiss=\"\">Close</paper-button>\n\t\t\t</div>\n\t\t</paper-dialog>\n\t"]);_templateObject37_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject37_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject36_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style>\n\n\t\t\t:host {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\n\t\t</style>\n\n\t\t<slot></slot>\n\t"]);_templateObject36_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject36_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject35_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<triplat-ds id=\"applicationSettingsDS\" name=\"applicationSettings\" data=\"{{applicationSettings}}\" loading=\"{{_loadingApplicationSettings}}\" manual></triplat-ds>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject35_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject35_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject34_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if id=\"rootInstanceIf\" if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<triplat-route id=\"resultsRoute\" name=\"results\" path=\"/results\"\n\t\t\t\t\t\tactive=\"{{resultsRouteActive}}\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t\t<triplat-route id=\"filtersRoute\" name=\"filters\" path=\"/filters\"\n\t\t\t\t\t\tactive=\"{{filtersRouteActive}}\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t\t<triplat-route id=\"notSupportedRoute\" name=\"notSupported\" path=\"/notSupported\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject34_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject34_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject33_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<dom-if id=\"rootInstanceIf\" if=\"[[_isRootInstance]]\">\n\t\t\t\t<template>\n\t\t\t\t\t<triplat-route id=\"roomSearchRoute\" name=\"roomSearch\" path=\"/\"\n\t\t\t\t\t\tactive=\"{{roomSearchRouteActive}}\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t\t<triplat-route id=\"roomDetailRoute\" name=\"roomDetail\" path=\"/roomDetail/:roomId/:added\"\n\t\t\t\t\t\tactive=\"{{roomDetailRouteActive}}\" params=\"{{roomDetailParams}}\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t\t<triplat-route id=\"floorplanRoute\" name=\"floorplan\" path=\"/building/:buildingId/floor/:floorId\"\n\t\t\t\t\t\tactive=\"{{floorplanRouteActive}}\" params=\"{{floorplanParams}}\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t\t<triplat-route id=\"ssoRoute\" name=\"sso\" path=\"/sso\"\n\t\t\t\t\t\tactive=\"{{ssoRouteActive}}\">\n\t\t\t\t\t</triplat-route>\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\t\t"]);_templateObject33_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject33_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject32_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t\t:host {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\n\t\t</style>\n\n\t\t<slot></slot>\n\t"]);_templateObject32_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject32_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject31_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t<style include=\"iron-flex iron-flex-alignment carbon-style\">\n\t\t\t\t:host {\n\t\t\t\t\tfont-family: var(--carbon-font-family); \n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\n\t\t\t\t.bg-picture {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tz-index: -1;\n\t\t\t\t\tbackground-image: url('images/BuildingsLowResBlur.svg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t}\n\n\t\t\t\t.bg-picture:after {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\tbackground-image: url('images/Buildings.jpg');\n\t\t\t\t\ttransition-property: opacity;\n\t\t\t\t\ttransition-duration: 2s;\n\t\t\t\t\ttransition-timing-function: ease;\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\n\t\t\t\t.bg-picture[enhanced]:after {\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\n\t\t\t\t.login-box {\n\t\t\t\t\twidth: 80%;\n\t\t\t\t\tpadding: 16px;\n\t\t\t\t\tmargin-top: 50px;\n\t\t\t\t\tmargin-left: auto;\n\t\t\t\t\tmargin-right: auto;\n\t\t\t\t\tbackground-color: white;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.button-container {\n\t\t\t\t\tmargin-top: 30px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.error, .processing {\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tpadding-top: 16px;\n\t\t\t\t\tpadding-bottom: 16px;\n\t\t\t\t}\n\n\t\t\t\t.processing {\n\t\t\t\t\tcolor: grey;\n\t\t\t\t}\n\n\t\t\t\t.error {\n\t\t\t\t\tcolor: #da1e28;\n\t\t\t\t}\n\n\t\t\t\t.login-title {\n\t\t\t\t\tmargin-bottom: 0px;\n\t\t\t\t\tmargin-top: 0px;\n\t\t\t\t\tclear: left;\n\t\t\t\t\tcolor: var(--carbon-text-02);\n\t\t\t\t}\n\n\t\t\t\tpaper-button {\n\t\t\t\t\tfont-size: small;\n\t\t\t\t\ttext-transform: none;\n\t\t\t\t\tborder:2px solid #90a4ae; \n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tborder-radius:0;\n\t\t\t\t}\n\n\t\t\t\tpaper-input {\n\t\t\t\t\twidth: 90%;\n\t\t\t\t\t--paper-input-container-input: {\n\t\t\t\t\t\tfont-family: var(--carbon-font-family); \n\t\t\t\t\t\tfont-size:14px;\n\t\t\t\t\t\tbackground-color: #f3f3f3;\n\t\t\t\t\t};\n\t\t\t\t\t--paper-input-container-label: {\n\t\t\t\t\t\tfont-family: var(--carbon-font-family); \n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t.dialog-header { \n\t\t\t\t\tbackground-color: var(--carbon-ui-05);\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 15px;\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t\t.dialog-body {\n\t\t\t\t\tmargin-top: .5em;\n\t\t\t\t\tpadding: 10px 15px;\n\t\t\t\t\ttext-align:justify;\n\t\t\t\t}\n\n\t\t\t\tpaper-dialog {\n\t\t\t\t\tmargin-bottom: -2em;\n\t\t\t\t\twidth: 310px;\n\t\t\t\t\tbackground-color: white;\n\t\t\t\t\tmax-height: 400px;\n\t\t\t\t\ttop:22.5% !important;\n\t\t\t\t\twhite-space: normal;\n\t\t\t\t\t@apply --layout-vertical;\n\t\t\t\t}\n\n\t\t\t\t.active-user {\n\t\t\t\t\tcolor: #FFFFC2;\n\t\t\t\t}\n\n\t\t\t\t.login-input {\n\t\t\t\t\tmargin-top: 19px;\n\t\t\t\t}\n\n\t\t\t\t.login-btn {\n\t\t\t\t\tpadding: 6px 32px 6px 8px !important;\n\t\t\t\t\talign-items: start !important;\n\t\t\t\t}\n\n\t\t\t\t.message-container {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 34px;\n\t\t\t\t\t@apply(--layout-vertical);\n\t\t\t\t\t@apply(--layout-center-center);\n\t\t\t\t}\n\t\t\t</style>\n\n\t\t\t<div class=\"bg-picture\" enhanced$=\"[[_imagesLoaded]]\"></div>\n\n\t\t\t<dom-if if=\"[[!_imagesLoaded]]\" restamp>\n\t\t\t\t<template>\n\t\t\t\t\t<img hidden src=\"[[importPath]]images/BuildingsLowResBlur.svg\" on-load=\"_handleLoadLowRes\">\n\t\t\t\t\t<img hidden src=\"[[importPath]]images/Buildings.jpg\" on-load=\"_handleLoadHighRes\">\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\n\t\t\t<div class=\"login-box\">\n\t\t\t\t<div class=\"login-title productive-heading-03\">[[loginTitle]]</div>\n\t\t\t\t\n\t\t\t\t<dom-if if=\"[[!loginButtonOnly]]\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<div class=\"login-input\" hidden$=\"[[loginButtonOnly]]\">\n\t\t\t\t\t\t\t<paper-input label=\"User ID\" value=\"{{username}}\" auto-validate on-keypress=\"_keyPressHandler\"\n\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"1\" autofocus required always-float-label>\n\t\t\t\t\t\t\t</paper-input>\n\t\t\t\t\t\t\t<paper-input label=\"Password\" value=\"{{password}}\" auto-validate type=\"password\" on-keypress=\"_keyPressHandler\"\n\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"2\" required always-float-label>\n\t\t\t\t\t\t\t</paper-input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</dom-if>\n\t\t\t\t<dom-if if=\"[[loginButtonOnly]]\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<div class=\"login-input body-long-01\">Click Continue to authenticate.</div>\n\t\t\t\t\t</template>\n\t\t\t\t</dom-if>\n\n\t\t\t\t<div class=\"layout horizontal button-container\">\n\t\t\t\t\t<paper-button id=\"loginButton\" outlook-primary class=\"login-btn\" tabIndex=\"3\" on-tap=\"_handleLoginTap\">Continue</paper-button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"message-container\">\n\t\t\t\t\t<dom-if if=\"[[_logging]]\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"processing\">Logging in...</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</dom-if>\n\t\t\t\t\t<dom-if if=\"[[_unauthorized]]\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"error\">Invalid User ID or Password.</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</dom-if>\n\t\t\t\t\t<dom-if if=\"[[_error]]\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"error\">Login failed</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</dom-if>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<paper-dialog id=\"message\" modal>\n\t\t\t\t<div class=\"dialog-header productive-heading-02\">The user <span class=\"active-user\">{{username}}</span> is already active.</div>\n\t\t\t\t<div class=\"dialog-body body-long-01\">You may end the active session or click cancel to log in as another user.</div>\n\t\t\t\t\n\t\t\t\t<div class=\"buttons\">\n\t\t\t\t\t<paper-button id=\"forceLogin\" outlook-primary on-tap=\"_handleForceLogin\">End Session</paper-button>&nbsp;\n\t\t\t\t\t<paper-button outlook-secondary on-tap=\"_closeDialog\">Cancel</paper-button>\n\t\t\t\t</div>\n\t\t\t</paper-dialog>\n\t\t"],["\n\t\t\t<style include=\"iron-flex iron-flex-alignment carbon-style\">\n\t\t\t\t:host {\n\t\t\t\t\tfont-family: var(--carbon-font-family); \n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\n\t\t\t\t.bg-picture {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tz-index: -1;\n\t\t\t\t\tbackground-image: url('images/BuildingsLowResBlur.svg');\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t}\n\n\t\t\t\t.bg-picture:after {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\tbackground-image: url('images/Buildings.jpg');\n\t\t\t\t\ttransition-property: opacity;\n\t\t\t\t\ttransition-duration: 2s;\n\t\t\t\t\ttransition-timing-function: ease;\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\n\t\t\t\t.bg-picture[enhanced]:after {\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\n\t\t\t\t.login-box {\n\t\t\t\t\twidth: 80%;\n\t\t\t\t\tpadding: 16px;\n\t\t\t\t\tmargin-top: 50px;\n\t\t\t\t\tmargin-left: auto;\n\t\t\t\t\tmargin-right: auto;\n\t\t\t\t\tbackground-color: white;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.button-container {\n\t\t\t\t\tmargin-top: 30px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.error, .processing {\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tpadding-top: 16px;\n\t\t\t\t\tpadding-bottom: 16px;\n\t\t\t\t}\n\n\t\t\t\t.processing {\n\t\t\t\t\tcolor: grey;\n\t\t\t\t}\n\n\t\t\t\t.error {\n\t\t\t\t\tcolor: #da1e28;\n\t\t\t\t}\n\n\t\t\t\t.login-title {\n\t\t\t\t\tmargin-bottom: 0px;\n\t\t\t\t\tmargin-top: 0px;\n\t\t\t\t\tclear: left;\n\t\t\t\t\tcolor: var(--carbon-text-02);\n\t\t\t\t}\n\n\t\t\t\tpaper-button {\n\t\t\t\t\tfont-size: small;\n\t\t\t\t\ttext-transform: none;\n\t\t\t\t\tborder:2px solid #90a4ae; \n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tborder-radius:0;\n\t\t\t\t}\n\n\t\t\t\tpaper-input {\n\t\t\t\t\twidth: 90%;\n\t\t\t\t\t--paper-input-container-input: {\n\t\t\t\t\t\tfont-family: var(--carbon-font-family); \n\t\t\t\t\t\tfont-size:14px;\n\t\t\t\t\t\tbackground-color: #f3f3f3;\n\t\t\t\t\t};\n\t\t\t\t\t--paper-input-container-label: {\n\t\t\t\t\t\tfont-family: var(--carbon-font-family); \n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t.dialog-header { \n\t\t\t\t\tbackground-color: var(--carbon-ui-05);\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 15px;\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t\t.dialog-body {\n\t\t\t\t\tmargin-top: .5em;\n\t\t\t\t\tpadding: 10px 15px;\n\t\t\t\t\ttext-align:justify;\n\t\t\t\t}\n\n\t\t\t\tpaper-dialog {\n\t\t\t\t\tmargin-bottom: -2em;\n\t\t\t\t\twidth: 310px;\n\t\t\t\t\tbackground-color: white;\n\t\t\t\t\tmax-height: 400px;\n\t\t\t\t\ttop:22.5% !important;\n\t\t\t\t\twhite-space: normal;\n\t\t\t\t\t@apply --layout-vertical;\n\t\t\t\t}\n\n\t\t\t\t.active-user {\n\t\t\t\t\tcolor: #FFFFC2;\n\t\t\t\t}\n\n\t\t\t\t.login-input {\n\t\t\t\t\tmargin-top: 19px;\n\t\t\t\t}\n\n\t\t\t\t.login-btn {\n\t\t\t\t\tpadding: 6px 32px 6px 8px !important;\n\t\t\t\t\talign-items: start !important;\n\t\t\t\t}\n\n\t\t\t\t.message-container {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 34px;\n\t\t\t\t\t@apply(--layout-vertical);\n\t\t\t\t\t@apply(--layout-center-center);\n\t\t\t\t}\n\t\t\t</style>\n\n\t\t\t<div class=\"bg-picture\" enhanced\\$=\"[[_imagesLoaded]]\"></div>\n\n\t\t\t<dom-if if=\"[[!_imagesLoaded]]\" restamp>\n\t\t\t\t<template>\n\t\t\t\t\t<img hidden src=\"[[importPath]]images/BuildingsLowResBlur.svg\" on-load=\"_handleLoadLowRes\">\n\t\t\t\t\t<img hidden src=\"[[importPath]]images/Buildings.jpg\" on-load=\"_handleLoadHighRes\">\n\t\t\t\t</template>\n\t\t\t</dom-if>\n\n\t\t\t<div class=\"login-box\">\n\t\t\t\t<div class=\"login-title productive-heading-03\">[[loginTitle]]</div>\n\t\t\t\t\n\t\t\t\t<dom-if if=\"[[!loginButtonOnly]]\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<div class=\"login-input\" hidden\\$=\"[[loginButtonOnly]]\">\n\t\t\t\t\t\t\t<paper-input label=\"User ID\" value=\"{{username}}\" auto-validate on-keypress=\"_keyPressHandler\"\n\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"1\" autofocus required always-float-label>\n\t\t\t\t\t\t\t</paper-input>\n\t\t\t\t\t\t\t<paper-input label=\"Password\" value=\"{{password}}\" auto-validate type=\"password\" on-keypress=\"_keyPressHandler\"\n\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"2\" required always-float-label>\n\t\t\t\t\t\t\t</paper-input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</dom-if>\n\t\t\t\t<dom-if if=\"[[loginButtonOnly]]\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<div class=\"login-input body-long-01\">Click Continue to authenticate.</div>\n\t\t\t\t\t</template>\n\t\t\t\t</dom-if>\n\n\t\t\t\t<div class=\"layout horizontal button-container\">\n\t\t\t\t\t<paper-button id=\"loginButton\" outlook-primary class=\"login-btn\" tabIndex=\"3\" on-tap=\"_handleLoginTap\">Continue</paper-button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"message-container\">\n\t\t\t\t\t<dom-if if=\"[[_logging]]\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"processing\">Logging in...</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</dom-if>\n\t\t\t\t\t<dom-if if=\"[[_unauthorized]]\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"error\">Invalid User ID or Password.</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</dom-if>\n\t\t\t\t\t<dom-if if=\"[[_error]]\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"error\">Login failed</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</dom-if>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<paper-dialog id=\"message\" modal>\n\t\t\t\t<div class=\"dialog-header productive-heading-02\">The user <span class=\"active-user\">{{username}}</span> is already active.</div>\n\t\t\t\t<div class=\"dialog-body body-long-01\">You may end the active session or click cancel to log in as another user.</div>\n\t\t\t\t\n\t\t\t\t<div class=\"buttons\">\n\t\t\t\t\t<paper-button id=\"forceLogin\" outlook-primary on-tap=\"_handleForceLogin\">End Session</paper-button>&nbsp;\n\t\t\t\t\t<paper-button outlook-secondary on-tap=\"_closeDialog\">Cancel</paper-button>\n\t\t\t\t</div>\n\t\t\t</paper-dialog>\n\t\t"]);_templateObject31_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject31_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject30_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style>\n\n\t\t\t:host {\n\t\t\t\tfont-family: \"Helvetica Neue\";\n\t\t\t\t@apply --layout;\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\t@apply --layout-center-justified;\n\t\t\t}\n\t\t\t\n\t\t\t@media (min-width: 500px) {\n\t\t\t\t.container {\n\t\t\t\t\twidth: 400px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@media (max-width: 499px) {\n\t\t\t\t.container {\n\t\t\t\t\t@apply --layout-flex;\n\t\t\t\t\tpadding: 0px 30px;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpaper-material {\n\t\t\t\tpadding: 20px;\n\t\t\t\tmargin-left: 10px;\n\t\t\t}\n\t\t\t\n\t\t\n\t\t</style>\n\n\t<triplat-signout id=\"signout\"></triplat-signout>\t\n\t<paper-material elevation=\"[[elevation]]\">\n\t\t<div class=\"layout vertial container\" tabindex=\"0\">\n\t\t\t<h2>[[title]]</h2>\n\t\t\t<p>[[message_line1Label]]</p>\n\t\t\t<p>[[message_line2Label]]</p>\n\t\t\t<p hidden$=\"{{!includeSignin}}\"><a on-tap=\"_signout\" href=\"\">[[_signIn]]</a></p>\n\t\t</div>\n\t</paper-material>\n\t"],["\n\t\t<style>\n\n\t\t\t:host {\n\t\t\t\tfont-family: \"Helvetica Neue\";\n\t\t\t\t@apply --layout;\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\t@apply --layout-center-justified;\n\t\t\t}\n\t\t\t\n\t\t\t@media (min-width: 500px) {\n\t\t\t\t.container {\n\t\t\t\t\twidth: 400px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@media (max-width: 499px) {\n\t\t\t\t.container {\n\t\t\t\t\t@apply --layout-flex;\n\t\t\t\t\tpadding: 0px 30px;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpaper-material {\n\t\t\t\tpadding: 20px;\n\t\t\t\tmargin-left: 10px;\n\t\t\t}\n\t\t\t\n\t\t\n\t\t</style>\n\n\t<triplat-signout id=\"signout\"></triplat-signout>\t\n\t<paper-material elevation=\"[[elevation]]\">\n\t\t<div class=\"layout vertial container\" tabindex=\"0\">\n\t\t\t<h2>[[title]]</h2>\n\t\t\t<p>[[message_line1Label]]</p>\n\t\t\t<p>[[message_line2Label]]</p>\n\t\t\t<p hidden\\$=\"{{!includeSignin}}\"><a on-tap=\"_signout\" href=\"\">[[_signIn]]</a></p>\n\t\t</div>\n\t</paper-material>\n\t"]);_templateObject30_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject30_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject29_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t</style>\n\n\t\t<tricore-url id=\"homeUrl\" bind-url=\"{{homeUrl}}\"></tricore-url>\n\t\t<tricore-url raw-url=\"/p/websignon/signout\" bind-url=\"{{url}}\"></tricore-url>\n\t\t<tricore-url raw-url=\"/p/websignon/sso/signout\" bind-url=\"{{ssoUrl}}\"></tricore-url>\n\t\t<iron-ajax id=\"ajax\" url=\"{{url}}\" method=\"POST\" on-response=\"_handleRespone\" on-error=\"_handleRespone\"></iron-ajax>\n\t\t<tricore-properties id=\"properties\" sso=\"{{sso}}\"></tricore-properties>\n\t"]);_templateObject29_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject29_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject28_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\n\t\t</style>\n\n\t\t<iron-meta id=\"meta\" type=\"tri\" key=\"sso\"></iron-meta>\n\t"]);_templateObject28_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject28_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject27_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t\t\t#toast {\n\t\t\t\t\t@apply --layout-horizontal;\n\t\t\t\t\t--paper-toast-color: var(--tri-primary-content-color);\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\tmax-width: 250px;\n\t\t\t\t\tmin-width: 100px;\n\t\t\t\t\tpadding: 0px;\n\n\t\t\t\t\t@apply --triblock-toast-paper-toast;\n\t\t\t\t}\n\n\t\t\t\t:host([type=\"success\"]) #toast {\n\t\t\t\t\tbackground-color: var(--tri-success-color);\n\t\t\t\t}\n\n\t\t\t\t:host([type=\"warning\"]) #toast {\n\t\t\t\t\tbackground-color: var(--tri-warning-color);\n\t\t\t\t}\n\n\t\t\t\t:host([type=\"major-warning\"]) #toast {\n\t\t\t\t\tbackground-color: var(--tri-major-warning-color);\n\t\t\t\t}\n\n\t\t\t\t:host([type=\"error\"]) #toast {\n\t\t\t\t\tbackground-color: var(--tri-error-color);\n\t\t\t\t}\n\n\t\t\t\t:host([type=\"info\"]) #toast {\n\t\t\t\t\tbackground-color: var(--tri-info-color);\n\t\t\t\t}\n\n\t\t\t\t.icon-container {\n\t\t\t\t\t@apply --layout-center-justified;\n\t\t\t\t\t@apply --layout-vertical;\n\t\t\t\t\tpadding: 6px;\n\t\t\t\t}\n\n\t\t\t\t.icon {\n\t\t\t\t\tpadding: 0px;\n\t\t\t\t\twidth: 22px;\n\t\t\t\t\theight: 22px;\n\t\t\t\t\tmargin-left: 0px;\n\t\t\t\t\tcolor: white;\n\n\t\t\t\t\t@apply --triblock-toast-icon;\n\t\t\t\t}\n\n\t\t\t\t.message-container {\n\t\t\t\t\t@apply --layout-flex;\n\t\t\t\t\t@apply --layout-vertical;\n\t\t\t\t\t@apply --layout-center-justified;\n\t\t\t\t\tbackground-color: rgba(255,255,255,0.8);\n\t\t\t\t\tmin-width: 100px;\n\t\t\t\t\tpadding: 6px;\n\n\t\t\t\t\t@apply --triblock-toast-message-container;\n\t\t\t\t}\n\n\t\t\t\t.title {\n\t\t\t\t\tfont-weight: bold;\n\n\t\t\t\t\t@apply --triblock-toast-title;\n\t\t\t\t}\n\n\t\t\t\t.message {\n\t\t\t\t\tdisplay: flex;\n\n\t\t\t\t\t@apply --triblock-toast-message;\n\t\t\t\t}\n\t\t\t\n\t\t</style>\n\n\t\t<paper-toast id=\"toast\" duration=\"[[duration]]\" fit-into=\"[[fitInto]]\" \n\t\t\thorizontal-align=\"[[horizontalAlign]]\" opened=\"{{opened}}\" allow-click-through=\"[[allowClickThrough]]\">\n\t\t\t<div class=\"icon-container\">\n\t\t\t\t<iron-icon class=\"icon\" icon=\"[[_getIcon(type)]]\"></iron-icon>\n\t\t\t</div>\n\t\t\t<div class=\"message-container\">\n\t\t\t\t<template is=\"dom-if\" if=\"[[title]]\">\n\t\t\t\t\t<span class=\"title\">[[title]]</span>\n\t\t\t\t</template>\n\t\t\t\t<template is=\"dom-if\" if=\"[[text]]\">\n\t\t\t\t\t<span class=\"message\">[[text]]</span>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</paper-toast>\n\t"]);_templateObject27_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject27_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject26_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"iron-flex iron-flex-alignment iron-flex-factors iron-positioning tristyles-theme\">\n\n\t\t\t\t:host{\n\t\t\t\t\tbackground: var(--triblock-popup-background-color, var(--tri-primary-content-background-color));\n\t\t\t\t\t@apply --shadow-elevation-16dp;\n\t\t\t\t\tpadding: 30px;\n\t\t\t\t\t@apply --triblock-popup;\n\t\t\t\t}\n\n\t\t\t\t:host([small-screen-width]){\n\t\t\t\t\theight: auto !important;\n\t\t\t\t\twidth: auto !important;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop:0;\n\t\t\t\t\tright:0;\n\t\t\t\t\tbottom:0;\n\t\t\t\t\tleft:0;\n\t\t\t\t}\n\n\t\t\t\tpaper-icon-button {\n\t\t\t\t\t--paper-icon-button: {\n\t\t\t\t\t\tpadding: 0px;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t#xbtn {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tright: -11px;\n\t\t\t\t\ttop: -11px;\n\t\t\t\t\tz-index: 999;\n\t\t\t\t\theight: 22px;\n\t\t\t\t\twidth: 22px;\n\t\t\t\t\t@apply --triblock-popup-close-button;\n\t\t\t\t}\n\n\t\t\t\t:host([dir=\"rtl\"]) #xbtn{\n\t\t\t\t\tright: auto;\n\t\t\t\t\tleft: -11px;\n\t\t\t\t}\n\n\t\t\t\t:host([small-screen-width]) #xbtn {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t#xbtn[focused] {\n\t\t\t\t\tcolor: var(--tri-primary-icon-button-hover-color);\n\t\t\t\t}\n\t\t\t\n\t\t</style>\n\n\t\t<paper-icon-button id=\"xbtn\" icon=\"ibm-glyphs:popup-close-filled\" on-tap=\"cancel\" alt=\"Close popup\"></paper-icon-button>\n\n\t\t<slot></slot>\n\t"]);_templateObject26_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject26_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject25_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t:host {\n\t\t\t@apply --layout-inline;\n\t\t\t@apply --layout-center-center;\n\t\t\tposition: relative;\n\t\t\tvertical-align: middle;\n\t\t}\n\t\tiron-icon {\n\t\t\t--iron-icon-height: var(--triplat-icon-height);\n\t\t\t--iron-icon-width: var(--triplat-icon-width);\n\t\t\t--iron-icon-fill-color: var(--triplat-icon-fill-color);\n\t\t\t--iron-icon-stroke-color: var(--triplat-icon-stroke-color);\n\t\t\t@apply --triplat-icon-style;\n\t\t\t@apply --triplat-icon-iron-icon;\n\t\t}\n\n \n\t\n\t\t</style>\n\n\t\t<iron-meta type=\"iconset\"></iron-meta>\n\n\t\t<iron-icon id=\"triCustomIcon\" icon=\"{{_setIcon(icon,iconsets)}}\" class=\"{{_setClass(class)}}\" tabindex$=\"[[tabIndex]]\" role=\"button\" aria-label$=\"{{description}}\" on-keypress=\"_keyPressHandler\"></iron-icon>\n\t"],["\n\t\t<style include=\"tristyles-theme\">\n\n\t\t:host {\n\t\t\t@apply --layout-inline;\n\t\t\t@apply --layout-center-center;\n\t\t\tposition: relative;\n\t\t\tvertical-align: middle;\n\t\t}\n\t\tiron-icon {\n\t\t\t--iron-icon-height: var(--triplat-icon-height);\n\t\t\t--iron-icon-width: var(--triplat-icon-width);\n\t\t\t--iron-icon-fill-color: var(--triplat-icon-fill-color);\n\t\t\t--iron-icon-stroke-color: var(--triplat-icon-stroke-color);\n\t\t\t@apply --triplat-icon-style;\n\t\t\t@apply --triplat-icon-iron-icon;\n\t\t}\n\n \n\t\n\t\t</style>\n\n\t\t<iron-meta type=\"iconset\"></iron-meta>\n\n\t\t<iron-icon id=\"triCustomIcon\" icon=\"{{_setIcon(icon,iconsets)}}\" class=\"{{_setClass(class)}}\" tabindex\\$=\"[[tabIndex]]\" role=\"button\" aria-label\\$=\"{{description}}\" on-keypress=\"_keyPressHandler\"></iron-icon>\n\t"]);_templateObject25_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject25_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject24_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        position: fixed;\n        background-color: var(--paper-toast-background-color, #323232);\n        color: var(--paper-toast-color, #f1f1f1);\n        min-height: 48px;\n        min-width: 288px;\n        padding: 16px 24px;\n        box-sizing: border-box;\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n        border-radius: 2px;\n        margin: 12px;\n        font-size: 14px;\n        cursor: default;\n        -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        opacity: 0;\n        -webkit-transform: translateY(100px);\n        transform: translateY(100px);\n        @apply --paper-font-common-base;\n      }\n\n      :host(.capsule) {\n        border-radius: 24px;\n      }\n\n      :host(.fit-bottom) {\n        width: 100%;\n        min-width: 0;\n        border-radius: 0;\n        margin: 0;\n      }\n\n      :host(.paper-toast-open) {\n        opacity: 1;\n        -webkit-transform: translateY(0px);\n        transform: translateY(0px);\n      }\n    </style>\n\n    <span id=\"label\">{{text}}</span>\n    <slot></slot>\n"]);_templateObject24_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject24_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject23_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n"]);_templateObject23_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject23_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject22_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"paper-material-shared-styles\"></style>\n    <style>\n      :host([animated]) {\n        @apply --shadow-transition;\n      }\n      :host {\n        @apply --paper-material;\n      }\n    </style>\n\n    <slot></slot>\n"]);_templateObject22_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject22_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject21_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<dom-module id=\"paper-material-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        position: relative;\n      }\n\n      :host([elevation=\"1\"]) {\n        @apply --shadow-elevation-2dp;\n      }\n\n      :host([elevation=\"2\"]) {\n        @apply --shadow-elevation-4dp;\n      }\n\n      :host([elevation=\"3\"]) {\n        @apply --shadow-elevation-6dp;\n      }\n\n      :host([elevation=\"4\"]) {\n        @apply --shadow-elevation-8dp;\n      }\n\n      :host([elevation=\"5\"]) {\n        @apply --shadow-elevation-16dp;\n      }\n    </style>\n  </template>\n</dom-module>\n"]);_templateObject21_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject21_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject20_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([focused]) {\n        outline: none;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      input {\n        /* Firefox sets a min-width on the input, which can cause layout issues */\n        min-width: 0;\n      }\n\n      /* In 1.x, the <input> is distributed to paper-input-container, which styles it.\n      In 2.x the <iron-input> is distributed to paper-input-container, which styles\n      it, but in order for this to work correctly, we need to reset some\n      of the native input's properties to inherit (from the iron-input) */\n      iron-input > input {\n        @apply --paper-input-container-shared-input-style;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        letter-spacing: inherit;\n        word-spacing: inherit;\n        line-height: inherit;\n        text-shadow: inherit;\n        color: inherit;\n        cursor: inherit;\n      }\n\n      input:disabled {\n        @apply --paper-input-container-input-disabled;\n      }\n\n      input::-webkit-outer-spin-button,\n      input::-webkit-inner-spin-button {\n        @apply --paper-input-container-input-webkit-spinner;\n      }\n\n      input::-webkit-clear-button {\n        @apply --paper-input-container-input-webkit-clear;\n      }\n\n      input::-webkit-calendar-picker-indicator {\n        @apply --paper-input-container-input-webkit-calendar-picker-indicator;\n      }\n\n      input::-webkit-input-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input:-moz-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input::-moz-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      input::-ms-clear {\n        @apply --paper-input-container-ms-clear;\n      }\n\n      input::-ms-reveal {\n        @apply --paper-input-container-ms-reveal;\n      }\n\n      input:-ms-input-placeholder {\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container id=\"container\" no-label-float=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <slot name=\"prefix\" slot=\"prefix\"></slot>\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <!-- Need to bind maxlength so that the paper-input-char-counter works correctly -->\n      <iron-input bind-value=\"{{value}}\" slot=\"input\" class=\"input-element\" id$=\"[[_inputId]]\" maxlength$=\"[[maxlength]]\" allowed-pattern=\"[[allowedPattern]]\" invalid=\"{{invalid}}\" validator=\"[[validator]]\">\n        <input aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" disabled$=\"[[disabled]]\" title$=\"[[title]]\" type$=\"[[type]]\" pattern$=\"[[pattern]]\" required$=\"[[required]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" min$=\"[[min]]\" max$=\"[[max]]\" step$=\"[[step]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" list$=\"[[list]]\" size$=\"[[size]]\" autocapitalize$=\"[[autocapitalize]]\" autocorrect$=\"[[autocorrect]]\" on-change=\"_onChange\" tabindex$=\"[[tabIndex]]\" autosave$=\"[[autosave]]\" results$=\"[[results]]\" accept$=\"[[accept]]\" multiple$=\"[[multiple]]\">\n      </iron-input>\n\n      <slot name=\"suffix\" slot=\"suffix\"></slot>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n  "]);_templateObject20_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject20_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject19_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n        visibility: hidden;\n\n        color: var(--paper-input-container-invalid-color, var(--error-color));\n\n        @apply --paper-font-caption;\n        @apply --paper-input-error;\n        position: absolute;\n        left:0;\n        right:0;\n      }\n\n      :host([invalid]) {\n        visibility: visible;\n      }\n\n      #a11yWrapper {\n        visibility: hidden;\n      }\n\n      :host([invalid]) #a11yWrapper {\n        visibility: visible;\n      }\n    </style>\n\n    <!--\n    If the paper-input-error element is directly referenced by an\n    `aria-describedby` attribute, such as when used as a paper-input add-on,\n    then applying `visibility: hidden;` to the paper-input-error element itself\n    does not hide the error.\n\n    For more information, see:\n    https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\n    -->\n    <div id=\"a11yWrapper\">\n      <slot></slot>\n    </div>\n"],["\n    <style>\n      :host {\n        display: inline-block;\n        visibility: hidden;\n\n        color: var(--paper-input-container-invalid-color, var(--error-color));\n\n        @apply --paper-font-caption;\n        @apply --paper-input-error;\n        position: absolute;\n        left:0;\n        right:0;\n      }\n\n      :host([invalid]) {\n        visibility: visible;\n      }\n\n      #a11yWrapper {\n        visibility: hidden;\n      }\n\n      :host([invalid]) #a11yWrapper {\n        visibility: visible;\n      }\n    </style>\n\n    <!--\n    If the paper-input-error element is directly referenced by an\n    \\`aria-describedby\\` attribute, such as when used as a paper-input add-on,\n    then applying \\`visibility: hidden;\\` to the paper-input-error element itself\n    does not hide the error.\n\n    For more information, see:\n    https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\n    -->\n    <div id=\"a11yWrapper\">\n      <slot></slot>\n    </div>\n"]);_templateObject19_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject19_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject18_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        padding: 8px 0;\n        @apply --paper-input-container;\n      }\n\n      :host([inline]) {\n        display: inline-block;\n      }\n\n      :host([disabled]) {\n        pointer-events: none;\n        opacity: 0.33;\n\n        @apply --paper-input-container-disabled;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      .floated-label-placeholder {\n        @apply --paper-font-caption;\n      }\n\n      .underline {\n        height: 2px;\n        position: relative;\n      }\n\n      .focused-line {\n        @apply --layout-fit;\n        border-bottom: 2px solid var(--paper-input-container-focus-color, var(--primary-color));\n\n        -webkit-transform-origin: center center;\n        transform-origin: center center;\n        -webkit-transform: scale3d(0,1,1);\n        transform: scale3d(0,1,1);\n\n        @apply --paper-input-container-underline-focus;\n      }\n\n      .underline.is-highlighted .focused-line {\n        -webkit-transform: none;\n        transform: none;\n        -webkit-transition: -webkit-transform 0.25s;\n        transition: transform 0.25s;\n\n        @apply --paper-transition-easing;\n      }\n\n      .underline.is-invalid .focused-line {\n        border-color: var(--paper-input-container-invalid-color, var(--error-color));\n        -webkit-transform: none;\n        transform: none;\n        -webkit-transition: -webkit-transform 0.25s;\n        transition: transform 0.25s;\n\n        @apply --paper-transition-easing;\n      }\n\n      .unfocused-line {\n        @apply --layout-fit;\n        border-bottom: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\n        @apply --paper-input-container-underline;\n      }\n\n      :host([disabled]) .unfocused-line {\n        border-bottom: 1px dashed;\n        border-color: var(--paper-input-container-color, var(--secondary-text-color));\n        @apply --paper-input-container-underline-disabled;\n      }\n\n      .input-wrapper {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        position: relative;\n      }\n\n      .input-content {\n        @apply --layout-flex-auto;\n        @apply --layout-relative;\n        max-width: 100%;\n      }\n\n      .input-content ::slotted(label),\n      .input-content ::slotted(.paper-input-label) {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        font: inherit;\n        color: var(--paper-input-container-color, var(--secondary-text-color));\n        -webkit-transition: -webkit-transform 0.25s, width 0.25s;\n        transition: transform 0.25s, width 0.25s;\n        -webkit-transform-origin: left top;\n        transform-origin: left top;\n        /* Fix for safari not focusing 0-height date/time inputs with -webkit-apperance: none; */\n        min-height: 1px;\n\n        @apply --paper-font-common-nowrap;\n        @apply --paper-font-subhead;\n        @apply --paper-input-container-label;\n        @apply --paper-transition-easing;\n      }\n\n      .input-content.label-is-floating ::slotted(label),\n      .input-content.label-is-floating ::slotted(.paper-input-label) {\n        -webkit-transform: translateY(-75%) scale(0.75);\n        transform: translateY(-75%) scale(0.75);\n\n        /* Since we scale to 75/100 of the size, we actually have 100/75 of the\n        original space now available */\n        width: 133%;\n\n        @apply --paper-input-container-label-floating;\n      }\n\n      :host(:dir(rtl)) .input-content.label-is-floating ::slotted(label),\n      :host(:dir(rtl)) .input-content.label-is-floating ::slotted(.paper-input-label) {\n        right: 0;\n        left: auto;\n        -webkit-transform-origin: right top;\n        transform-origin: right top;\n      }\n\n      .input-content.label-is-highlighted ::slotted(label),\n      .input-content.label-is-highlighted ::slotted(.paper-input-label) {\n        color: var(--paper-input-container-focus-color, var(--primary-color));\n\n        @apply --paper-input-container-label-focus;\n      }\n\n      .input-content.is-invalid ::slotted(label),\n      .input-content.is-invalid ::slotted(.paper-input-label) {\n        color: var(--paper-input-container-invalid-color, var(--error-color));\n      }\n\n      .input-content.label-is-hidden ::slotted(label),\n      .input-content.label-is-hidden ::slotted(.paper-input-label) {\n        visibility: hidden;\n      }\n\n      .input-content ::slotted(input),\n      .input-content ::slotted(iron-input),\n      .input-content ::slotted(textarea),\n      .input-content ::slotted(iron-autogrow-textarea),\n      .input-content ::slotted(.paper-input-input) {\n        @apply --paper-input-container-shared-input-style;\n        /* The apply shim doesn't apply the nested color custom property,\n          so we have to re-apply it here. */\n        color: var(--paper-input-container-input-color, var(--primary-text-color));\n        @apply --paper-input-container-input;\n      }\n\n      .input-content ::slotted(input)::-webkit-outer-spin-button,\n      .input-content ::slotted(input)::-webkit-inner-spin-button {\n        @apply --paper-input-container-input-webkit-spinner;\n      }\n\n      .input-content.focused ::slotted(input),\n      .input-content.focused ::slotted(iron-input),\n      .input-content.focused ::slotted(textarea),\n      .input-content.focused ::slotted(iron-autogrow-textarea),\n      .input-content.focused ::slotted(.paper-input-input) {\n        @apply --paper-input-container-input-focus;\n      }\n\n      .input-content.is-invalid ::slotted(input),\n      .input-content.is-invalid ::slotted(iron-input),\n      .input-content.is-invalid ::slotted(textarea),\n      .input-content.is-invalid ::slotted(iron-autogrow-textarea),\n      .input-content.is-invalid ::slotted(.paper-input-input) {\n        @apply --paper-input-container-input-invalid;\n      }\n\n      .prefix ::slotted(*) {\n        display: inline-block;\n        @apply --paper-font-subhead;\n        @apply --layout-flex-none;\n        @apply --paper-input-prefix;\n      }\n\n      .suffix ::slotted(*) {\n        display: inline-block;\n        @apply --paper-font-subhead;\n        @apply --layout-flex-none;\n\n        @apply --paper-input-suffix;\n      }\n\n      /* Firefox sets a min-width on the input, which can cause layout issues */\n      .input-content ::slotted(input) {\n        min-width: 0;\n      }\n\n      .input-content ::slotted(textarea) {\n        resize: none;\n      }\n\n      .add-on-content {\n        position: relative;\n      }\n\n      .add-on-content.is-invalid ::slotted(*) {\n        color: var(--paper-input-container-invalid-color, var(--error-color));\n      }\n\n      .add-on-content.is-highlighted ::slotted(*) {\n        color: var(--paper-input-container-focus-color, var(--primary-color));\n      }\n    </style>\n\n    <div class=\"floated-label-placeholder\" aria-hidden=\"true\" hidden=\"[[noLabelFloat]]\">&nbsp;</div>\n\n    <div class=\"input-wrapper\">\n      <span class=\"prefix\"><slot name=\"prefix\"></slot></span>\n\n      <div class$=\"[[_computeInputContentClass(noLabelFloat,alwaysFloatLabel,focused,invalid,_inputHasContent)]]\" id=\"labelAndInputContainer\">\n        <slot name=\"label\"></slot>\n        <slot name=\"input\"></slot>\n      </div>\n\n      <span class=\"suffix\"><slot name=\"suffix\"></slot></span>\n    </div>\n\n    <div class$=\"[[_computeUnderlineClass(focused,invalid)]]\">\n      <div class=\"unfocused-line\"></div>\n      <div class=\"focused-line\"></div>\n    </div>\n\n    <div class$=\"[[_computeAddOnContentClass(focused,invalid)]]\">\n      <slot name=\"add-on\"></slot>\n    </div>\n"]);_templateObject18_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject18_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject17_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n      --paper-input-container-shared-input-style: {\n        position: relative; /* to make a stacking context */\n        outline: none;\n        box-shadow: none;\n        padding: 0;\n        margin: 0;\n        width: 100%;\n        max-width: 100%;\n        background: transparent;\n        border: none;\n        color: var(--paper-input-container-input-color, var(--primary-text-color));\n        -webkit-appearance: none;\n        text-align: inherit;\n        vertical-align: var(--paper-input-container-input-align, bottom);\n\n        @apply --paper-font-subhead;\n      };\n    }\n  </style>\n</custom-style>\n"]);_templateObject17_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject17_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject16_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n        float: right;\n\n        @apply --paper-font-caption;\n        @apply --paper-input-char-counter;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:dir(rtl)) {\n        float: left;\n      }\n    </style>\n\n    <span>[[_charCounterStr]]</span>\n"]);_templateObject16_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject16_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject15_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        padding: 8px;\n        outline: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        z-index: 0;\n        line-height: 1;\n\n        width: 40px;\n        height: 40px;\n\n        /*\n          NOTE: Both values are needed, since some phones require the value to\n          be `transparent`.\n        */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -webkit-tap-highlight-color: transparent;\n\n        /* Because of polymer/2558, this style has lower specificity than * */\n        box-sizing: border-box !important;\n\n        @apply --paper-icon-button;\n      }\n\n      :host #ink {\n        color: var(--paper-icon-button-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n      }\n\n      :host([disabled]) {\n        color: var(--paper-icon-button-disabled-text, var(--disabled-text-color));\n        pointer-events: none;\n        cursor: auto;\n\n        @apply --paper-icon-button-disabled;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:hover) {\n        @apply --paper-icon-button-hover;\n      }\n\n      iron-icon {\n        --iron-icon-width: 100%;\n        --iron-icon-height: 100%;\n      }\n    </style>\n\n    <iron-icon id=\"icon\" src=\"[[src]]\" icon=\"[[icon]]\"\n               alt$=\"[[alt]]\"></iron-icon>\n  "],["\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        padding: 8px;\n        outline: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        z-index: 0;\n        line-height: 1;\n\n        width: 40px;\n        height: 40px;\n\n        /*\n          NOTE: Both values are needed, since some phones require the value to\n          be \\`transparent\\`.\n        */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -webkit-tap-highlight-color: transparent;\n\n        /* Because of polymer/2558, this style has lower specificity than * */\n        box-sizing: border-box !important;\n\n        @apply --paper-icon-button;\n      }\n\n      :host #ink {\n        color: var(--paper-icon-button-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n      }\n\n      :host([disabled]) {\n        color: var(--paper-icon-button-disabled-text, var(--disabled-text-color));\n        pointer-events: none;\n        cursor: auto;\n\n        @apply --paper-icon-button-disabled;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:hover) {\n        @apply --paper-icon-button-hover;\n      }\n\n      iron-icon {\n        --iron-icon-width: 100%;\n        --iron-icon-height: 100%;\n      }\n    </style>\n\n    <iron-icon id=\"icon\" src=\"[[src]]\" icon=\"[[icon]]\"\n               alt$=\"[[alt]]\"></iron-icon>\n  "]);_templateObject15_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject15_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject14_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n"]);_templateObject14_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject14_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject13_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["<custom-style>\n  <style is=\"custom-style\">\n    html {\n\n      /* Shared Styles */\n      --paper-font-common-base: {\n        font-family: 'Roboto', 'Noto', sans-serif;\n        -webkit-font-smoothing: antialiased;\n      };\n\n      --paper-font-common-code: {\n        font-family: 'Roboto Mono', 'Consolas', 'Menlo', monospace;\n        -webkit-font-smoothing: antialiased;\n      };\n\n      --paper-font-common-expensive-kerning: {\n        text-rendering: optimizeLegibility;\n      };\n\n      --paper-font-common-nowrap: {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      };\n\n      /* Material Font Styles */\n\n      --paper-font-display4: {\n        @apply --paper-font-common-base;\n        @apply --paper-font-common-nowrap;\n\n        font-size: 112px;\n        font-weight: 300;\n        letter-spacing: -.044em;\n        line-height: 120px;\n      };\n\n      --paper-font-display3: {\n        @apply --paper-font-common-base;\n        @apply --paper-font-common-nowrap;\n\n        font-size: 56px;\n        font-weight: 400;\n        letter-spacing: -.026em;\n        line-height: 60px;\n      };\n\n      --paper-font-display2: {\n        @apply --paper-font-common-base;\n\n        font-size: 45px;\n        font-weight: 400;\n        letter-spacing: -.018em;\n        line-height: 48px;\n      };\n\n      --paper-font-display1: {\n        @apply --paper-font-common-base;\n\n        font-size: 34px;\n        font-weight: 400;\n        letter-spacing: -.01em;\n        line-height: 40px;\n      };\n\n      --paper-font-headline: {\n        @apply --paper-font-common-base;\n\n        font-size: 24px;\n        font-weight: 400;\n        letter-spacing: -.012em;\n        line-height: 32px;\n      };\n\n      --paper-font-title: {\n        @apply --paper-font-common-base;\n        @apply --paper-font-common-nowrap;\n\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 28px;\n      };\n\n      --paper-font-subhead: {\n        @apply --paper-font-common-base;\n\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 24px;\n      };\n\n      --paper-font-body2: {\n        @apply --paper-font-common-base;\n\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 24px;\n      };\n\n      --paper-font-body1: {\n        @apply --paper-font-common-base;\n\n        font-size: 14px;\n        font-weight: 400;\n        line-height: 20px;\n      };\n\n      --paper-font-caption: {\n        @apply --paper-font-common-base;\n        @apply --paper-font-common-nowrap;\n\n        font-size: 12px;\n        font-weight: 400;\n        letter-spacing: 0.011em;\n        line-height: 20px;\n      };\n\n      --paper-font-menu: {\n        @apply --paper-font-common-base;\n        @apply --paper-font-common-nowrap;\n\n        font-size: 13px;\n        font-weight: 500;\n        line-height: 24px;\n      };\n\n      --paper-font-button: {\n        @apply --paper-font-common-base;\n        @apply --paper-font-common-nowrap;\n\n        font-size: 14px;\n        font-weight: 500;\n        letter-spacing: 0.018em;\n        line-height: 24px;\n        text-transform: uppercase;\n      };\n\n      --paper-font-code2: {\n        @apply --paper-font-common-code;\n\n        font-size: 14px;\n        font-weight: 700;\n        line-height: 20px;\n      };\n\n      --paper-font-code1: {\n        @apply --paper-font-common-code;\n\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 20px;\n      };\n\n    }\n\n  </style>\n</custom-style>"]);_templateObject13_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject13_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject12_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n      /*\n       * You can use these generic variables in your elements for easy theming.\n       * For example, if all your elements use `--primary-text-color` as its main\n       * color, then switching from a light to a dark theme is just a matter of\n       * changing the value of `--primary-text-color` in your application.\n       */\n      --primary-text-color: var(--light-theme-text-color);\n      --primary-background-color: var(--light-theme-background-color);\n      --secondary-text-color: var(--light-theme-secondary-color);\n      --disabled-text-color: var(--light-theme-disabled-color);\n      --divider-color: var(--light-theme-divider-color);\n      --error-color: var(--paper-deep-orange-a700);\n\n      /*\n       * Primary and accent colors. Also see color.js for more colors.\n       */\n      --primary-color: var(--paper-indigo-500);\n      --light-primary-color: var(--paper-indigo-100);\n      --dark-primary-color: var(--paper-indigo-700);\n\n      --accent-color: var(--paper-pink-a200);\n      --light-accent-color: var(--paper-pink-a100);\n      --dark-accent-color: var(--paper-pink-a400);\n\n\n      /*\n       * Material Design Light background theme\n       */\n      --light-theme-background-color: #ffffff;\n      --light-theme-base-color: #000000;\n      --light-theme-text-color: var(--paper-grey-900);\n      --light-theme-secondary-color: #737373;  /* for secondary text and icons */\n      --light-theme-disabled-color: #9b9b9b;  /* disabled/hint text */\n      --light-theme-divider-color: #dbdbdb;\n\n      /*\n       * Material Design Dark background theme\n       */\n      --dark-theme-background-color: var(--paper-grey-900);\n      --dark-theme-base-color: #ffffff;\n      --dark-theme-text-color: #ffffff;\n      --dark-theme-secondary-color: #bcbcbc;  /* for secondary text and icons */\n      --dark-theme-disabled-color: #646464;  /* disabled/hint text */\n      --dark-theme-divider-color: #3c3c3c;\n\n      /*\n       * Deprecated values because of their confusing names.\n       */\n      --text-primary-color: var(--dark-theme-text-color);\n      --default-primary-color: var(--primary-color);\n    }\n  </style>\n</custom-style>"],["\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n      /*\n       * You can use these generic variables in your elements for easy theming.\n       * For example, if all your elements use \\`--primary-text-color\\` as its main\n       * color, then switching from a light to a dark theme is just a matter of\n       * changing the value of \\`--primary-text-color\\` in your application.\n       */\n      --primary-text-color: var(--light-theme-text-color);\n      --primary-background-color: var(--light-theme-background-color);\n      --secondary-text-color: var(--light-theme-secondary-color);\n      --disabled-text-color: var(--light-theme-disabled-color);\n      --divider-color: var(--light-theme-divider-color);\n      --error-color: var(--paper-deep-orange-a700);\n\n      /*\n       * Primary and accent colors. Also see color.js for more colors.\n       */\n      --primary-color: var(--paper-indigo-500);\n      --light-primary-color: var(--paper-indigo-100);\n      --dark-primary-color: var(--paper-indigo-700);\n\n      --accent-color: var(--paper-pink-a200);\n      --light-accent-color: var(--paper-pink-a100);\n      --dark-accent-color: var(--paper-pink-a400);\n\n\n      /*\n       * Material Design Light background theme\n       */\n      --light-theme-background-color: #ffffff;\n      --light-theme-base-color: #000000;\n      --light-theme-text-color: var(--paper-grey-900);\n      --light-theme-secondary-color: #737373;  /* for secondary text and icons */\n      --light-theme-disabled-color: #9b9b9b;  /* disabled/hint text */\n      --light-theme-divider-color: #dbdbdb;\n\n      /*\n       * Material Design Dark background theme\n       */\n      --dark-theme-background-color: var(--paper-grey-900);\n      --dark-theme-base-color: #ffffff;\n      --dark-theme-text-color: #ffffff;\n      --dark-theme-secondary-color: #bcbcbc;  /* for secondary text and icons */\n      --dark-theme-disabled-color: #646464;  /* disabled/hint text */\n      --dark-theme-divider-color: #3c3c3c;\n\n      /*\n       * Deprecated values because of their confusing names.\n       */\n      --text-primary-color: var(--dark-theme-text-color);\n      --default-primary-color: var(--primary-color);\n    }\n  </style>\n</custom-style>"]);_templateObject12_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject12_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject11_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n\n      /* Material Design color palette for Google products */\n\n      --google-red-100: #f4c7c3;\n      --google-red-300: #e67c73;\n      --google-red-500: #db4437;\n      --google-red-700: #c53929;\n\n      --google-blue-100: #c6dafc;\n      --google-blue-300: #7baaf7;\n      --google-blue-500: #4285f4;\n      --google-blue-700: #3367d6;\n\n      --google-green-100: #b7e1cd;\n      --google-green-300: #57bb8a;\n      --google-green-500: #0f9d58;\n      --google-green-700: #0b8043;\n\n      --google-yellow-100: #fce8b2;\n      --google-yellow-300: #f7cb4d;\n      --google-yellow-500: #f4b400;\n      --google-yellow-700: #f09300;\n\n      --google-grey-100: #f5f5f5;\n      --google-grey-300: #e0e0e0;\n      --google-grey-500: #9e9e9e;\n      --google-grey-700: #616161;\n\n      /* Material Design color palette from online spec document */\n\n      --paper-red-50: #ffebee;\n      --paper-red-100: #ffcdd2;\n      --paper-red-200: #ef9a9a;\n      --paper-red-300: #e57373;\n      --paper-red-400: #ef5350;\n      --paper-red-500: #f44336;\n      --paper-red-600: #e53935;\n      --paper-red-700: #d32f2f;\n      --paper-red-800: #c62828;\n      --paper-red-900: #b71c1c;\n      --paper-red-a100: #ff8a80;\n      --paper-red-a200: #ff5252;\n      --paper-red-a400: #ff1744;\n      --paper-red-a700: #d50000;\n\n      --paper-pink-50: #fce4ec;\n      --paper-pink-100: #f8bbd0;\n      --paper-pink-200: #f48fb1;\n      --paper-pink-300: #f06292;\n      --paper-pink-400: #ec407a;\n      --paper-pink-500: #e91e63;\n      --paper-pink-600: #d81b60;\n      --paper-pink-700: #c2185b;\n      --paper-pink-800: #ad1457;\n      --paper-pink-900: #880e4f;\n      --paper-pink-a100: #ff80ab;\n      --paper-pink-a200: #ff4081;\n      --paper-pink-a400: #f50057;\n      --paper-pink-a700: #c51162;\n\n      --paper-purple-50: #f3e5f5;\n      --paper-purple-100: #e1bee7;\n      --paper-purple-200: #ce93d8;\n      --paper-purple-300: #ba68c8;\n      --paper-purple-400: #ab47bc;\n      --paper-purple-500: #9c27b0;\n      --paper-purple-600: #8e24aa;\n      --paper-purple-700: #7b1fa2;\n      --paper-purple-800: #6a1b9a;\n      --paper-purple-900: #4a148c;\n      --paper-purple-a100: #ea80fc;\n      --paper-purple-a200: #e040fb;\n      --paper-purple-a400: #d500f9;\n      --paper-purple-a700: #aa00ff;\n\n      --paper-deep-purple-50: #ede7f6;\n      --paper-deep-purple-100: #d1c4e9;\n      --paper-deep-purple-200: #b39ddb;\n      --paper-deep-purple-300: #9575cd;\n      --paper-deep-purple-400: #7e57c2;\n      --paper-deep-purple-500: #673ab7;\n      --paper-deep-purple-600: #5e35b1;\n      --paper-deep-purple-700: #512da8;\n      --paper-deep-purple-800: #4527a0;\n      --paper-deep-purple-900: #311b92;\n      --paper-deep-purple-a100: #b388ff;\n      --paper-deep-purple-a200: #7c4dff;\n      --paper-deep-purple-a400: #651fff;\n      --paper-deep-purple-a700: #6200ea;\n\n      --paper-indigo-50: #e8eaf6;\n      --paper-indigo-100: #c5cae9;\n      --paper-indigo-200: #9fa8da;\n      --paper-indigo-300: #7986cb;\n      --paper-indigo-400: #5c6bc0;\n      --paper-indigo-500: #3f51b5;\n      --paper-indigo-600: #3949ab;\n      --paper-indigo-700: #303f9f;\n      --paper-indigo-800: #283593;\n      --paper-indigo-900: #1a237e;\n      --paper-indigo-a100: #8c9eff;\n      --paper-indigo-a200: #536dfe;\n      --paper-indigo-a400: #3d5afe;\n      --paper-indigo-a700: #304ffe;\n\n      --paper-blue-50: #e3f2fd;\n      --paper-blue-100: #bbdefb;\n      --paper-blue-200: #90caf9;\n      --paper-blue-300: #64b5f6;\n      --paper-blue-400: #42a5f5;\n      --paper-blue-500: #2196f3;\n      --paper-blue-600: #1e88e5;\n      --paper-blue-700: #1976d2;\n      --paper-blue-800: #1565c0;\n      --paper-blue-900: #0d47a1;\n      --paper-blue-a100: #82b1ff;\n      --paper-blue-a200: #448aff;\n      --paper-blue-a400: #2979ff;\n      --paper-blue-a700: #2962ff;\n\n      --paper-light-blue-50: #e1f5fe;\n      --paper-light-blue-100: #b3e5fc;\n      --paper-light-blue-200: #81d4fa;\n      --paper-light-blue-300: #4fc3f7;\n      --paper-light-blue-400: #29b6f6;\n      --paper-light-blue-500: #03a9f4;\n      --paper-light-blue-600: #039be5;\n      --paper-light-blue-700: #0288d1;\n      --paper-light-blue-800: #0277bd;\n      --paper-light-blue-900: #01579b;\n      --paper-light-blue-a100: #80d8ff;\n      --paper-light-blue-a200: #40c4ff;\n      --paper-light-blue-a400: #00b0ff;\n      --paper-light-blue-a700: #0091ea;\n\n      --paper-cyan-50: #e0f7fa;\n      --paper-cyan-100: #b2ebf2;\n      --paper-cyan-200: #80deea;\n      --paper-cyan-300: #4dd0e1;\n      --paper-cyan-400: #26c6da;\n      --paper-cyan-500: #00bcd4;\n      --paper-cyan-600: #00acc1;\n      --paper-cyan-700: #0097a7;\n      --paper-cyan-800: #00838f;\n      --paper-cyan-900: #006064;\n      --paper-cyan-a100: #84ffff;\n      --paper-cyan-a200: #18ffff;\n      --paper-cyan-a400: #00e5ff;\n      --paper-cyan-a700: #00b8d4;\n\n      --paper-teal-50: #e0f2f1;\n      --paper-teal-100: #b2dfdb;\n      --paper-teal-200: #80cbc4;\n      --paper-teal-300: #4db6ac;\n      --paper-teal-400: #26a69a;\n      --paper-teal-500: #009688;\n      --paper-teal-600: #00897b;\n      --paper-teal-700: #00796b;\n      --paper-teal-800: #00695c;\n      --paper-teal-900: #004d40;\n      --paper-teal-a100: #a7ffeb;\n      --paper-teal-a200: #64ffda;\n      --paper-teal-a400: #1de9b6;\n      --paper-teal-a700: #00bfa5;\n\n      --paper-green-50: #e8f5e9;\n      --paper-green-100: #c8e6c9;\n      --paper-green-200: #a5d6a7;\n      --paper-green-300: #81c784;\n      --paper-green-400: #66bb6a;\n      --paper-green-500: #4caf50;\n      --paper-green-600: #43a047;\n      --paper-green-700: #388e3c;\n      --paper-green-800: #2e7d32;\n      --paper-green-900: #1b5e20;\n      --paper-green-a100: #b9f6ca;\n      --paper-green-a200: #69f0ae;\n      --paper-green-a400: #00e676;\n      --paper-green-a700: #00c853;\n\n      --paper-light-green-50: #f1f8e9;\n      --paper-light-green-100: #dcedc8;\n      --paper-light-green-200: #c5e1a5;\n      --paper-light-green-300: #aed581;\n      --paper-light-green-400: #9ccc65;\n      --paper-light-green-500: #8bc34a;\n      --paper-light-green-600: #7cb342;\n      --paper-light-green-700: #689f38;\n      --paper-light-green-800: #558b2f;\n      --paper-light-green-900: #33691e;\n      --paper-light-green-a100: #ccff90;\n      --paper-light-green-a200: #b2ff59;\n      --paper-light-green-a400: #76ff03;\n      --paper-light-green-a700: #64dd17;\n\n      --paper-lime-50: #f9fbe7;\n      --paper-lime-100: #f0f4c3;\n      --paper-lime-200: #e6ee9c;\n      --paper-lime-300: #dce775;\n      --paper-lime-400: #d4e157;\n      --paper-lime-500: #cddc39;\n      --paper-lime-600: #c0ca33;\n      --paper-lime-700: #afb42b;\n      --paper-lime-800: #9e9d24;\n      --paper-lime-900: #827717;\n      --paper-lime-a100: #f4ff81;\n      --paper-lime-a200: #eeff41;\n      --paper-lime-a400: #c6ff00;\n      --paper-lime-a700: #aeea00;\n\n      --paper-yellow-50: #fffde7;\n      --paper-yellow-100: #fff9c4;\n      --paper-yellow-200: #fff59d;\n      --paper-yellow-300: #fff176;\n      --paper-yellow-400: #ffee58;\n      --paper-yellow-500: #ffeb3b;\n      --paper-yellow-600: #fdd835;\n      --paper-yellow-700: #fbc02d;\n      --paper-yellow-800: #f9a825;\n      --paper-yellow-900: #f57f17;\n      --paper-yellow-a100: #ffff8d;\n      --paper-yellow-a200: #ffff00;\n      --paper-yellow-a400: #ffea00;\n      --paper-yellow-a700: #ffd600;\n\n      --paper-amber-50: #fff8e1;\n      --paper-amber-100: #ffecb3;\n      --paper-amber-200: #ffe082;\n      --paper-amber-300: #ffd54f;\n      --paper-amber-400: #ffca28;\n      --paper-amber-500: #ffc107;\n      --paper-amber-600: #ffb300;\n      --paper-amber-700: #ffa000;\n      --paper-amber-800: #ff8f00;\n      --paper-amber-900: #ff6f00;\n      --paper-amber-a100: #ffe57f;\n      --paper-amber-a200: #ffd740;\n      --paper-amber-a400: #ffc400;\n      --paper-amber-a700: #ffab00;\n\n      --paper-orange-50: #fff3e0;\n      --paper-orange-100: #ffe0b2;\n      --paper-orange-200: #ffcc80;\n      --paper-orange-300: #ffb74d;\n      --paper-orange-400: #ffa726;\n      --paper-orange-500: #ff9800;\n      --paper-orange-600: #fb8c00;\n      --paper-orange-700: #f57c00;\n      --paper-orange-800: #ef6c00;\n      --paper-orange-900: #e65100;\n      --paper-orange-a100: #ffd180;\n      --paper-orange-a200: #ffab40;\n      --paper-orange-a400: #ff9100;\n      --paper-orange-a700: #ff6500;\n\n      --paper-deep-orange-50: #fbe9e7;\n      --paper-deep-orange-100: #ffccbc;\n      --paper-deep-orange-200: #ffab91;\n      --paper-deep-orange-300: #ff8a65;\n      --paper-deep-orange-400: #ff7043;\n      --paper-deep-orange-500: #ff5722;\n      --paper-deep-orange-600: #f4511e;\n      --paper-deep-orange-700: #e64a19;\n      --paper-deep-orange-800: #d84315;\n      --paper-deep-orange-900: #bf360c;\n      --paper-deep-orange-a100: #ff9e80;\n      --paper-deep-orange-a200: #ff6e40;\n      --paper-deep-orange-a400: #ff3d00;\n      --paper-deep-orange-a700: #dd2c00;\n\n      --paper-brown-50: #efebe9;\n      --paper-brown-100: #d7ccc8;\n      --paper-brown-200: #bcaaa4;\n      --paper-brown-300: #a1887f;\n      --paper-brown-400: #8d6e63;\n      --paper-brown-500: #795548;\n      --paper-brown-600: #6d4c41;\n      --paper-brown-700: #5d4037;\n      --paper-brown-800: #4e342e;\n      --paper-brown-900: #3e2723;\n\n      --paper-grey-50: #fafafa;\n      --paper-grey-100: #f5f5f5;\n      --paper-grey-200: #eeeeee;\n      --paper-grey-300: #e0e0e0;\n      --paper-grey-400: #bdbdbd;\n      --paper-grey-500: #9e9e9e;\n      --paper-grey-600: #757575;\n      --paper-grey-700: #616161;\n      --paper-grey-800: #424242;\n      --paper-grey-900: #212121;\n\n      --paper-blue-grey-50: #eceff1;\n      --paper-blue-grey-100: #cfd8dc;\n      --paper-blue-grey-200: #b0bec5;\n      --paper-blue-grey-300: #90a4ae;\n      --paper-blue-grey-400: #78909c;\n      --paper-blue-grey-500: #607d8b;\n      --paper-blue-grey-600: #546e7a;\n      --paper-blue-grey-700: #455a64;\n      --paper-blue-grey-800: #37474f;\n      --paper-blue-grey-900: #263238;\n\n      /* opacity for dark text on a light background */\n      --dark-divider-opacity: 0.12;\n      --dark-disabled-opacity: 0.38; /* or hint text or icon */\n      --dark-secondary-opacity: 0.54;\n      --dark-primary-opacity: 0.87;\n\n      /* opacity for light text on a dark background */\n      --light-divider-opacity: 0.12;\n      --light-disabled-opacity: 0.3; /* or hint text or icon */\n      --light-secondary-opacity: 0.7;\n      --light-primary-opacity: 1.0;\n\n    }\n\n  </style>\n</custom-style>\n"]);_templateObject11_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject11_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject10_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n  <style include=\"paper-material-styles\">\n    /* Need to specify the same specificity as the styles imported from paper-material. */\n    :host {\n      @apply --layout-inline;\n      @apply --layout-center-center;\n      position: relative;\n      box-sizing: border-box;\n      min-width: 5.14em;\n      margin: 0 0.29em;\n      background: transparent;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      -webkit-tap-highlight-color: transparent;\n      font: inherit;\n      text-transform: uppercase;\n      outline-width: 0;\n      border-radius: 3px;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n      cursor: pointer;\n      z-index: 0;\n      padding: 0.7em 0.57em;\n\n      @apply --paper-font-common-base;\n      @apply --paper-button;\n    }\n\n    :host([elevation=\"1\"]) {\n      @apply --paper-material-elevation-1;\n    }\n\n    :host([elevation=\"2\"]) {\n      @apply --paper-material-elevation-2;\n    }\n\n    :host([elevation=\"3\"]) {\n      @apply --paper-material-elevation-3;\n    }\n\n    :host([elevation=\"4\"]) {\n      @apply --paper-material-elevation-4;\n    }\n\n    :host([elevation=\"5\"]) {\n      @apply --paper-material-elevation-5;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    :host([raised].keyboard-focus) {\n      font-weight: bold;\n      @apply --paper-button-raised-keyboard-focus;\n    }\n\n    :host(:not([raised]).keyboard-focus) {\n      font-weight: bold;\n      @apply --paper-button-flat-keyboard-focus;\n    }\n\n    :host([disabled]) {\n      background: none;\n      color: #a8a8a8;\n      cursor: auto;\n      pointer-events: none;\n\n      @apply --paper-button-disabled;\n    }\n\n    :host([disabled][raised]) {\n      background: #eaeaea;\n    }\n\n\n    :host([animated]) {\n      @apply --shadow-transition;\n    }\n\n    paper-ripple {\n      color: var(--paper-button-ink-color);\n    }\n  </style>\n\n  <slot></slot>"]);_templateObject10_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject10_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject9_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<dom-module id=\"paper-material-styles\">\n  <template>\n    <style>\n      html {\n        --paper-material: {\n          display: block;\n          position: relative;\n        };\n        --paper-material-elevation-1: {\n          @apply --shadow-elevation-2dp;\n        };\n        --paper-material-elevation-2: {\n          @apply --shadow-elevation-4dp;\n        };\n        --paper-material-elevation-3: {\n          @apply --shadow-elevation-6dp;\n        };\n        --paper-material-elevation-4: {\n          @apply --shadow-elevation-8dp;\n        };\n        --paper-material-elevation-5: {\n          @apply --shadow-elevation-16dp;\n        };\n      }\n      .paper-material {\n        @apply --paper-material;\n      }\n      .paper-material[elevation=\"1\"] {\n        @apply --paper-material-elevation-1;\n      }\n      .paper-material[elevation=\"2\"] {\n        @apply --paper-material-elevation-2;\n      }\n      .paper-material[elevation=\"3\"] {\n        @apply --paper-material-elevation-3;\n      }\n      .paper-material[elevation=\"4\"] {\n        @apply --paper-material-elevation-4;\n      }\n      .paper-material[elevation=\"5\"] {\n        @apply --paper-material-elevation-5;\n      }\n\n      /* Duplicate the styles because of https://github.com/webcomponents/shadycss/issues/193 */\n      :host {\n        --paper-material: {\n          display: block;\n          position: relative;\n        };\n        --paper-material-elevation-1: {\n          @apply --shadow-elevation-2dp;\n        };\n        --paper-material-elevation-2: {\n          @apply --shadow-elevation-4dp;\n        };\n        --paper-material-elevation-3: {\n          @apply --shadow-elevation-6dp;\n        };\n        --paper-material-elevation-4: {\n          @apply --shadow-elevation-8dp;\n        };\n        --paper-material-elevation-5: {\n          @apply --shadow-elevation-16dp;\n        };\n      }\n      :host(.paper-material) {\n        @apply --paper-material;\n      }\n      :host(.paper-material[elevation=\"1\"]) {\n        @apply --paper-material-elevation-1;\n      }\n      :host(.paper-material[elevation=\"2\"]) {\n        @apply --paper-material-elevation-2;\n      }\n      :host(.paper-material[elevation=\"3\"]) {\n        @apply --paper-material-elevation-3;\n      }\n      :host(.paper-material[elevation=\"4\"]) {\n        @apply --paper-material-elevation-4;\n      }\n      :host(.paper-material[elevation=\"5\"]) {\n        @apply --paper-material-elevation-5;\n      }\n    </style>\n  </template>\n</dom-module>"]);_templateObject9_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject9_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject8_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n\n      --shadow-transition: {\n        transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n      };\n\n      --shadow-none: {\n        box-shadow: none;\n      };\n\n      /* from http://codepen.io/shyndman/pen/c5394ddf2e8b2a5c9185904b57421cdb */\n\n      --shadow-elevation-2dp: {\n        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n                    0 1px 5px 0 rgba(0, 0, 0, 0.12),\n                    0 3px 1px -2px rgba(0, 0, 0, 0.2);\n      };\n\n      --shadow-elevation-3dp: {\n        box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14),\n                    0 1px 8px 0 rgba(0, 0, 0, 0.12),\n                    0 3px 3px -2px rgba(0, 0, 0, 0.4);\n      };\n\n      --shadow-elevation-4dp: {\n        box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),\n                    0 1px 10px 0 rgba(0, 0, 0, 0.12),\n                    0 2px 4px -1px rgba(0, 0, 0, 0.4);\n      };\n\n      --shadow-elevation-6dp: {\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14),\n                    0 1px 18px 0 rgba(0, 0, 0, 0.12),\n                    0 3px 5px -1px rgba(0, 0, 0, 0.4);\n      };\n\n      --shadow-elevation-8dp: {\n        box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\n                    0 3px 14px 2px rgba(0, 0, 0, 0.12),\n                    0 5px 5px -3px rgba(0, 0, 0, 0.4);\n      };\n\n      --shadow-elevation-12dp: {\n        box-shadow: 0 12px 16px 1px rgba(0, 0, 0, 0.14),\n                    0 4px 22px 3px rgba(0, 0, 0, 0.12),\n                    0 6px 7px -4px rgba(0, 0, 0, 0.4);\n      };\n\n      --shadow-elevation-16dp: {\n        box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14),\n                    0  6px 30px 5px rgba(0, 0, 0, 0.12),\n                    0  8px 10px -5px rgba(0, 0, 0, 0.4);\n      };\n\n      --shadow-elevation-24dp: {\n        box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14),\n                    0 9px 46px 8px rgba(0, 0, 0, 0.12),\n                    0 11px 15px -7px rgba(0, 0, 0, 0.4);\n      };\n    }\n  </style>\n</custom-style>"]);_templateObject8_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject8_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject7_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        position: absolute;\n        border-radius: inherit;\n        overflow: hidden;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        /* See PolymerElements/paper-behaviors/issues/34. On non-Chrome browsers,\n         * creating a node (with a position:absolute) in the middle of an event\n         * handler \"interrupts\" that event handler (which happens when the\n         * ripple is created on demand) */\n        pointer-events: none;\n      }\n\n      :host([animating]) {\n        /* This resolves a rendering issue in Chrome (as of 40) where the\n           ripple is not properly clipped by its parent (which may have\n           rounded corners). See: http://jsbin.com/temexa/4\n\n           Note: We only apply this style conditionally. Otherwise, the browser\n           will create a new compositing layer for every ripple element on the\n           page, and that would be bad. */\n        -webkit-transform: translate(0, 0);\n        transform: translate3d(0, 0, 0);\n      }\n\n      #background,\n      #waves,\n      .wave-container,\n      .wave {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n\n      #background,\n      .wave {\n        opacity: 0;\n      }\n\n      #waves,\n      .wave {\n        overflow: hidden;\n      }\n\n      .wave-container,\n      .wave {\n        border-radius: 50%;\n      }\n\n      :host(.circle) #background,\n      :host(.circle) #waves {\n        border-radius: 50%;\n      }\n\n      :host(.circle) .wave-container {\n        overflow: hidden;\n      }\n    </style>\n\n    <div id=\"background\"></div>\n    <div id=\"waves\"></div>\n"]);_templateObject7_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject7_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject6_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: var(--iron-overlay-backdrop-background-color, #000);\n        opacity: 0;\n        transition: opacity 0.2s;\n        pointer-events: none;\n        @apply --iron-overlay-backdrop;\n      }\n\n      :host(.opened) {\n        opacity: var(--iron-overlay-backdrop-opacity, 0.6);\n        pointer-events: auto;\n        @apply --iron-overlay-backdrop-opened;\n      }\n    </style>\n\n    <slot></slot>\n"]);_templateObject6_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject6_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject5_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n      }\n    </style>\n    <slot id=\"content\"></slot>\n"]);_templateObject5_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject5_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject4_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n"]);_templateObject4_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject4_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject3_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n<custom-style>\n  <style is=\"custom-style\">\n    [hidden] {\n      display: none !important;\n    }\n  </style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n\n      --layout: {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      };\n\n      --layout-inline: {\n        display: -ms-inline-flexbox;\n        display: -webkit-inline-flex;\n        display: inline-flex;\n      };\n\n      --layout-horizontal: {\n        @apply --layout;\n\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n      };\n\n      --layout-horizontal-reverse: {\n        @apply --layout;\n\n        -ms-flex-direction: row-reverse;\n        -webkit-flex-direction: row-reverse;\n        flex-direction: row-reverse;\n      };\n\n      --layout-vertical: {\n        @apply --layout;\n\n        -ms-flex-direction: column;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n      };\n\n      --layout-vertical-reverse: {\n        @apply --layout;\n\n        -ms-flex-direction: column-reverse;\n        -webkit-flex-direction: column-reverse;\n        flex-direction: column-reverse;\n      };\n\n      --layout-wrap: {\n        -ms-flex-wrap: wrap;\n        -webkit-flex-wrap: wrap;\n        flex-wrap: wrap;\n      };\n\n      --layout-wrap-reverse: {\n        -ms-flex-wrap: wrap-reverse;\n        -webkit-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n      };\n\n      --layout-flex-auto: {\n        -ms-flex: 1 1 auto;\n        -webkit-flex: 1 1 auto;\n        flex: 1 1 auto;\n      };\n\n      --layout-flex-none: {\n        -ms-flex: none;\n        -webkit-flex: none;\n        flex: none;\n      };\n\n      --layout-flex: {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      };\n\n      --layout-flex-2: {\n        -ms-flex: 2;\n        -webkit-flex: 2;\n        flex: 2;\n      };\n\n      --layout-flex-3: {\n        -ms-flex: 3;\n        -webkit-flex: 3;\n        flex: 3;\n      };\n\n      --layout-flex-4: {\n        -ms-flex: 4;\n        -webkit-flex: 4;\n        flex: 4;\n      };\n\n      --layout-flex-5: {\n        -ms-flex: 5;\n        -webkit-flex: 5;\n        flex: 5;\n      };\n\n      --layout-flex-6: {\n        -ms-flex: 6;\n        -webkit-flex: 6;\n        flex: 6;\n      };\n\n      --layout-flex-7: {\n        -ms-flex: 7;\n        -webkit-flex: 7;\n        flex: 7;\n      };\n\n      --layout-flex-8: {\n        -ms-flex: 8;\n        -webkit-flex: 8;\n        flex: 8;\n      };\n\n      --layout-flex-9: {\n        -ms-flex: 9;\n        -webkit-flex: 9;\n        flex: 9;\n      };\n\n      --layout-flex-10: {\n        -ms-flex: 10;\n        -webkit-flex: 10;\n        flex: 10;\n      };\n\n      --layout-flex-11: {\n        -ms-flex: 11;\n        -webkit-flex: 11;\n        flex: 11;\n      };\n\n      --layout-flex-12: {\n        -ms-flex: 12;\n        -webkit-flex: 12;\n        flex: 12;\n      };\n\n      /* alignment in cross axis */\n\n      --layout-start: {\n        -ms-flex-align: start;\n        -webkit-align-items: flex-start;\n        align-items: flex-start;\n      };\n\n      --layout-center: {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      };\n\n      --layout-end: {\n        -ms-flex-align: end;\n        -webkit-align-items: flex-end;\n        align-items: flex-end;\n      };\n\n      --layout-baseline: {\n        -ms-flex-align: baseline;\n        -webkit-align-items: baseline;\n        align-items: baseline;\n      };\n\n      /* alignment in main axis */\n\n      --layout-start-justified: {\n        -ms-flex-pack: start;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n      };\n\n      --layout-center-justified: {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      };\n\n      --layout-end-justified: {\n        -ms-flex-pack: end;\n        -webkit-justify-content: flex-end;\n        justify-content: flex-end;\n      };\n\n      --layout-around-justified: {\n        -ms-flex-pack: distribute;\n        -webkit-justify-content: space-around;\n        justify-content: space-around;\n      };\n\n      --layout-justified: {\n        -ms-flex-pack: justify;\n        -webkit-justify-content: space-between;\n        justify-content: space-between;\n      };\n\n      --layout-center-center: {\n        @apply --layout-center;\n        @apply --layout-center-justified;\n      };\n\n      /* self alignment */\n\n      --layout-self-start: {\n        -ms-align-self: flex-start;\n        -webkit-align-self: flex-start;\n        align-self: flex-start;\n      };\n\n      --layout-self-center: {\n        -ms-align-self: center;\n        -webkit-align-self: center;\n        align-self: center;\n      };\n\n      --layout-self-end: {\n        -ms-align-self: flex-end;\n        -webkit-align-self: flex-end;\n        align-self: flex-end;\n      };\n\n      --layout-self-stretch: {\n        -ms-align-self: stretch;\n        -webkit-align-self: stretch;\n        align-self: stretch;\n      };\n\n      --layout-self-baseline: {\n        -ms-align-self: baseline;\n        -webkit-align-self: baseline;\n        align-self: baseline;\n      };\n\n      /* multi-line alignment in main axis */\n\n      --layout-start-aligned: {\n        -ms-flex-line-pack: start;  /* IE10 */\n        -ms-align-content: flex-start;\n        -webkit-align-content: flex-start;\n        align-content: flex-start;\n      };\n\n      --layout-end-aligned: {\n        -ms-flex-line-pack: end;  /* IE10 */\n        -ms-align-content: flex-end;\n        -webkit-align-content: flex-end;\n        align-content: flex-end;\n      };\n\n      --layout-center-aligned: {\n        -ms-flex-line-pack: center;  /* IE10 */\n        -ms-align-content: center;\n        -webkit-align-content: center;\n        align-content: center;\n      };\n\n      --layout-between-aligned: {\n        -ms-flex-line-pack: justify;  /* IE10 */\n        -ms-align-content: space-between;\n        -webkit-align-content: space-between;\n        align-content: space-between;\n      };\n\n      --layout-around-aligned: {\n        -ms-flex-line-pack: distribute;  /* IE10 */\n        -ms-align-content: space-around;\n        -webkit-align-content: space-around;\n        align-content: space-around;\n      };\n\n      /*******************************\n                Other Layout\n      *******************************/\n\n      --layout-block: {\n        display: block;\n      };\n\n      --layout-invisible: {\n        visibility: hidden !important;\n      };\n\n      --layout-relative: {\n        position: relative;\n      };\n\n      --layout-fit: {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n      --layout-scroll: {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n      };\n\n      --layout-fullbleed: {\n        margin: 0;\n        height: 100vh;\n      };\n\n      /* fixed position */\n\n      --layout-fixed-top: {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n      };\n\n      --layout-fixed-right: {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n      };\n\n      --layout-fixed-bottom: {\n        position: fixed;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n      --layout-fixed-left: {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n    }\n  </style>\n</custom-style>"]);_templateObject3_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject3_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject2_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n/* Most common used flex styles*/\n<dom-module id=\"iron-flex\">\n  <template>\n    <style>\n      .layout.horizontal,\n      .layout.vertical {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      }\n\n      .layout.inline {\n        display: -ms-inline-flexbox;\n        display: -webkit-inline-flex;\n        display: inline-flex;\n      }\n\n      .layout.horizontal {\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n      }\n\n      .layout.vertical {\n        -ms-flex-direction: column;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n      }\n\n      .layout.wrap {\n        -ms-flex-wrap: wrap;\n        -webkit-flex-wrap: wrap;\n        flex-wrap: wrap;\n      }\n\n      .layout.no-wrap {\n        -ms-flex-wrap: nowrap;\n        -webkit-flex-wrap: nowrap;\n        flex-wrap: nowrap;\n      }\n\n      .layout.center,\n      .layout.center-center {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      }\n\n      .layout.center-justified,\n      .layout.center-center {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      }\n\n      .flex {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      }\n\n      .flex-auto {\n        -ms-flex: 1 1 auto;\n        -webkit-flex: 1 1 auto;\n        flex: 1 1 auto;\n      }\n\n      .flex-none {\n        -ms-flex: none;\n        -webkit-flex: none;\n        flex: none;\n      }\n    </style>\n  </template>\n</dom-module>\n/* Basic flexbox reverse styles */\n<dom-module id=\"iron-flex-reverse\">\n  <template>\n    <style>\n      .layout.horizontal-reverse,\n      .layout.vertical-reverse {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      }\n\n      .layout.horizontal-reverse {\n        -ms-flex-direction: row-reverse;\n        -webkit-flex-direction: row-reverse;\n        flex-direction: row-reverse;\n      }\n\n      .layout.vertical-reverse {\n        -ms-flex-direction: column-reverse;\n        -webkit-flex-direction: column-reverse;\n        flex-direction: column-reverse;\n      }\n\n      .layout.wrap-reverse {\n        -ms-flex-wrap: wrap-reverse;\n        -webkit-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n      }\n    </style>\n  </template>\n</dom-module>\n/* Flexbox alignment */\n<dom-module id=\"iron-flex-alignment\">\n  <template>\n    <style>\n      /**\n       * Alignment in cross axis.\n       */\n      .layout.start {\n        -ms-flex-align: start;\n        -webkit-align-items: flex-start;\n        align-items: flex-start;\n      }\n\n      .layout.center,\n      .layout.center-center {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      }\n\n      .layout.end {\n        -ms-flex-align: end;\n        -webkit-align-items: flex-end;\n        align-items: flex-end;\n      }\n\n      .layout.baseline {\n        -ms-flex-align: baseline;\n        -webkit-align-items: baseline;\n        align-items: baseline;\n      }\n\n      /**\n       * Alignment in main axis.\n       */\n      .layout.start-justified {\n        -ms-flex-pack: start;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n      }\n\n      .layout.center-justified,\n      .layout.center-center {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      }\n\n      .layout.end-justified {\n        -ms-flex-pack: end;\n        -webkit-justify-content: flex-end;\n        justify-content: flex-end;\n      }\n\n      .layout.around-justified {\n        -ms-flex-pack: distribute;\n        -webkit-justify-content: space-around;\n        justify-content: space-around;\n      }\n\n      .layout.justified {\n        -ms-flex-pack: justify;\n        -webkit-justify-content: space-between;\n        justify-content: space-between;\n      }\n\n      /**\n       * Self alignment.\n       */\n      .self-start {\n        -ms-align-self: flex-start;\n        -webkit-align-self: flex-start;\n        align-self: flex-start;\n      }\n\n      .self-center {\n        -ms-align-self: center;\n        -webkit-align-self: center;\n        align-self: center;\n      }\n\n      .self-end {\n        -ms-align-self: flex-end;\n        -webkit-align-self: flex-end;\n        align-self: flex-end;\n      }\n\n      .self-stretch {\n        -ms-align-self: stretch;\n        -webkit-align-self: stretch;\n        align-self: stretch;\n      }\n\n      .self-baseline {\n        -ms-align-self: baseline;\n        -webkit-align-self: baseline;\n        align-self: baseline;\n      }\n\n      /**\n       * multi-line alignment in main axis.\n       */\n      .layout.start-aligned {\n        -ms-flex-line-pack: start;  /* IE10 */\n        -ms-align-content: flex-start;\n        -webkit-align-content: flex-start;\n        align-content: flex-start;\n      }\n\n      .layout.end-aligned {\n        -ms-flex-line-pack: end;  /* IE10 */\n        -ms-align-content: flex-end;\n        -webkit-align-content: flex-end;\n        align-content: flex-end;\n      }\n\n      .layout.center-aligned {\n        -ms-flex-line-pack: center;  /* IE10 */\n        -ms-align-content: center;\n        -webkit-align-content: center;\n        align-content: center;\n      }\n\n      .layout.between-aligned {\n        -ms-flex-line-pack: justify;  /* IE10 */\n        -ms-align-content: space-between;\n        -webkit-align-content: space-between;\n        align-content: space-between;\n      }\n\n      .layout.around-aligned {\n        -ms-flex-line-pack: distribute;  /* IE10 */\n        -ms-align-content: space-around;\n        -webkit-align-content: space-around;\n        align-content: space-around;\n      }\n    </style>\n  </template>\n</dom-module>\n/* Non-flexbox positioning helper styles */\n<dom-module id=\"iron-flex-factors\">\n  <template>\n    <style>\n      .flex,\n      .flex-1 {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      }\n\n      .flex-2 {\n        -ms-flex: 2;\n        -webkit-flex: 2;\n        flex: 2;\n      }\n\n      .flex-3 {\n        -ms-flex: 3;\n        -webkit-flex: 3;\n        flex: 3;\n      }\n\n      .flex-4 {\n        -ms-flex: 4;\n        -webkit-flex: 4;\n        flex: 4;\n      }\n\n      .flex-5 {\n        -ms-flex: 5;\n        -webkit-flex: 5;\n        flex: 5;\n      }\n\n      .flex-6 {\n        -ms-flex: 6;\n        -webkit-flex: 6;\n        flex: 6;\n      }\n\n      .flex-7 {\n        -ms-flex: 7;\n        -webkit-flex: 7;\n        flex: 7;\n      }\n\n      .flex-8 {\n        -ms-flex: 8;\n        -webkit-flex: 8;\n        flex: 8;\n      }\n\n      .flex-9 {\n        -ms-flex: 9;\n        -webkit-flex: 9;\n        flex: 9;\n      }\n\n      .flex-10 {\n        -ms-flex: 10;\n        -webkit-flex: 10;\n        flex: 10;\n      }\n\n      .flex-11 {\n        -ms-flex: 11;\n        -webkit-flex: 11;\n        flex: 11;\n      }\n\n      .flex-12 {\n        -ms-flex: 12;\n        -webkit-flex: 12;\n        flex: 12;\n      }\n    </style>\n  </template>\n</dom-module>\n<dom-module id=\"iron-positioning\">\n  <template>\n    <style>\n      .block {\n        display: block;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      .invisible {\n        visibility: hidden !important;\n      }\n\n      .relative {\n        position: relative;\n      }\n\n      .fit {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      body.fullbleed {\n        margin: 0;\n        height: 100vh;\n      }\n\n      .scroll {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n      }\n\n      /* fixed position */\n      .fixed-bottom,\n      .fixed-left,\n      .fixed-right,\n      .fixed-top {\n        position: fixed;\n      }\n\n      .fixed-top {\n        top: 0;\n        left: 0;\n        right: 0;\n      }\n\n      .fixed-right {\n        top: 0;\n        right: 0;\n        bottom: 0;\n      }\n\n      .fixed-bottom {\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      .fixed-left {\n        top: 0;\n        bottom: 0;\n        left: 0;\n      }\n    </style>\n  </template>\n</dom-module>\n"]);_templateObject2_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject2_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function _templateObject_d98ac2c0a07c11eaa53fe90f40c8b4df(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live$=\"[[mode]]\">[[_text]]</div>\n"]);_templateObject_d98ac2c0a07c11eaa53fe90f40c8b4df=function _templateObject_d98ac2c0a07c11eaa53fe90f40c8b4df(){return data;};return data;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){babelHelpers.defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}// Give the user the choice to opt out of font loading.
if(!window.polymerSkipLoadingFontRoboto){var link=document.createElement('link');link.rel='stylesheet';link.type='text/css';link.crossOrigin='anonymous';link.href='https://fonts.googleapis.com/css?family=Roboto+Mono:400,700|Roboto:400,300,300italic,400italic,500,500italic,700,700italic';document.head.appendChild(link);}/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */'use strict';var nativeShadow=!(window['ShadyDOM']&&window['ShadyDOM']['inUse']);_exports.nativeShadow=nativeShadow;var nativeCssVariables_;/**
                          * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings
                          */function calcCssVariables(settings){if(settings&&settings['shimcssproperties']){nativeCssVariables_=false;}else{// chrome 49 has semi-working css vars, check if box-shadow works
// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782
// However, shim css custom properties are only supported with ShadyDOM enabled,
// so fall back on native if we do not detect ShadyDOM
// Edge 15: custom properties used in ::before and ::after will also be used in the parent element
// https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/
nativeCssVariables_=nativeShadow||Boolean(!navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/)&&window.CSS&&CSS.supports&&CSS.supports('box-shadow','0 0 0 var(--foo)'));}}/** @type {string | undefined} */var cssBuild;_exports.cssBuild=cssBuild;if(window.ShadyCSS&&window.ShadyCSS.cssBuild!==undefined){_exports.cssBuild=cssBuild=window.ShadyCSS.cssBuild;}/** @type {boolean} */var disableRuntime=Boolean(window.ShadyCSS&&window.ShadyCSS.disableRuntime);_exports.disableRuntime=disableRuntime;if(window.ShadyCSS&&window.ShadyCSS.nativeCss!==undefined){nativeCssVariables_=window.ShadyCSS.nativeCss;}else if(window.ShadyCSS){calcCssVariables(window.ShadyCSS);// reset window variable to let ShadyCSS API take its place
window.ShadyCSS=undefined;}else{calcCssVariables(window['WebComponents']&&window['WebComponents']['flags']);}// Hack for type error under new type inference which doesn't like that
// nativeCssVariables is updated in a function and assigns the type
// `function(): ?` instead of `boolean`.
var nativeCssVariables=/** @type {boolean} */nativeCssVariables_;_exports.nativeCssVariables=nativeCssVariables;var styleSettings={__proto__:null,nativeShadow:nativeShadow,get cssBuild(){return cssBuild;},disableRuntime:disableRuntime,nativeCssVariables:nativeCssVariables};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */ /*
      Extremely simple css parser. Intended to be not more than what we need
      and definitely not necessarily correct =).
      */_exports.$styleSettings=styleSettings;'use strict';/** @unrestricted */var StyleNode=function StyleNode(){babelHelpers.classCallCheck(this,StyleNode);/** @type {number} */this['start']=0;/** @type {number} */this['end']=0;/** @type {StyleNode} */this['previous']=null;/** @type {StyleNode} */this['parent']=null;/** @type {Array<StyleNode>} */this['rules']=null;/** @type {string} */this['parsedCssText']='';/** @type {string} */this['cssText']='';/** @type {boolean} */this['atRule']=false;/** @type {number} */this['type']=0;/** @type {string} */this['keyframesName']='';/** @type {string} */this['selector']='';/** @type {string} */this['parsedSelector']='';};/**
   * @param {string} text
   * @return {StyleNode}
   */_exports.StyleNode=StyleNode;function parse(text){text=clean(text);return parseCss(lex(text),text);}// remove stuff we don't care about that may hinder parsing
/**
 * @param {string} cssText
 * @return {string}
 */function clean(cssText){return cssText.replace(RX.comments,'').replace(RX.port,'');}// super simple {...} lexer that returns a node tree
/**
 * @param {string} text
 * @return {StyleNode}
 */function lex(text){var root=new StyleNode();root['start']=0;root['end']=text.length;var n=root;for(var i=0,l=text.length;i<l;i++){if(text[i]===OPEN_BRACE){if(!n['rules']){n['rules']=[];}var _p=n;var previous=_p['rules'][_p['rules'].length-1]||null;n=new StyleNode();n['start']=i+1;n['parent']=_p;n['previous']=previous;_p['rules'].push(n);}else if(text[i]===CLOSE_BRACE){n['end']=i+1;n=n['parent']||root;}}return root;}// add selectors/cssText to node tree
/**
 * @param {StyleNode} node
 * @param {string} text
 * @return {StyleNode}
 */function parseCss(node,text){var t=text.substring(node['start'],node['end']-1);node['parsedCssText']=node['cssText']=t.trim();if(node['parent']){var ss=node['previous']?node['previous']['end']:node['parent']['start'];t=text.substring(ss,node['start']-1);t=_expandUnicodeEscapes(t);t=t.replace(RX.multipleSpaces,' ');// TODO(sorvell): ad hoc; make selector include only after last ;
// helps with mixin syntax
t=t.substring(t.lastIndexOf(';')+1);var s=node['parsedSelector']=node['selector']=t.trim();node['atRule']=s.indexOf(AT_START)===0;// note, support a subset of rule types...
if(node['atRule']){if(s.indexOf(MEDIA_START)===0){node['type']=types.MEDIA_RULE;}else if(s.match(RX.keyframesRule)){node['type']=types.KEYFRAMES_RULE;node['keyframesName']=node['selector'].split(RX.multipleSpaces).pop();}}else{if(s.indexOf(VAR_START)===0){node['type']=types.MIXIN_RULE;}else{node['type']=types.STYLE_RULE;}}}var r$=node['rules'];if(r$){for(var i=0,l=r$.length,r;i<l&&(r=r$[i]);i++){parseCss(r,text);}}return node;}/**
   * conversion of sort unicode escapes with spaces like `\33 ` (and longer) into
   * expanded form that doesn't require trailing space `\000033`
   * @param {string} s
   * @return {string}
   */function _expandUnicodeEscapes(s){return s.replace(/\\([0-9a-f]{1,6})\s/gi,function(){var code=arguments[1],repeat=6-code.length;while(repeat--){code='0'+code;}return'\\'+code;});}/**
   * stringify parsed css.
   * @param {StyleNode} node
   * @param {boolean=} preserveProperties
   * @param {string=} text
   * @return {string}
   */function stringify(node,preserveProperties){var text=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';// calc rule cssText
var cssText='';if(node['cssText']||node['rules']){var r$=node['rules'];if(r$&&!_hasMixinRules(r$)){for(var i=0,l=r$.length,r;i<l&&(r=r$[i]);i++){cssText=stringify(r,preserveProperties,cssText);}}else{cssText=preserveProperties?node['cssText']:removeCustomProps(node['cssText']);cssText=cssText.trim();if(cssText){cssText='  '+cssText+'\n';}}}// emit rule if there is cssText
if(cssText){if(node['selector']){text+=node['selector']+' '+OPEN_BRACE+'\n';}text+=cssText;if(node['selector']){text+=CLOSE_BRACE+'\n\n';}}return text;}/**
   * @param {Array<StyleNode>} rules
   * @return {boolean}
   */function _hasMixinRules(rules){var r=rules[0];return Boolean(r)&&Boolean(r['selector'])&&r['selector'].indexOf(VAR_START)===0;}/**
   * @param {string} cssText
   * @return {string}
   */function removeCustomProps(cssText){cssText=removeCustomPropAssignment(cssText);return removeCustomPropApply(cssText);}/**
   * @param {string} cssText
   * @return {string}
   */function removeCustomPropAssignment(cssText){return cssText.replace(RX.customProp,'').replace(RX.mixinProp,'');}/**
   * @param {string} cssText
   * @return {string}
   */function removeCustomPropApply(cssText){return cssText.replace(RX.mixinApply,'').replace(RX.varApply,'');}/** @enum {number} */var types={STYLE_RULE:1,KEYFRAMES_RULE:7,MEDIA_RULE:4,MIXIN_RULE:1000};_exports.types=types;var OPEN_BRACE='{';var CLOSE_BRACE='}';// helper regexp's
var RX={comments:/\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,port:/@import[^;]*;/gim,customProp:/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,mixinProp:/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,mixinApply:/@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,varApply:/[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,keyframesRule:/^@[^\s]*keyframes/,multipleSpaces:/\s+/g};var VAR_START='--';var MEDIA_START='@media';var AT_START='@';var cssParse={__proto__:null,StyleNode:StyleNode,parse:parse,stringify:stringify,removeCustomPropAssignment:removeCustomPropAssignment,types:types};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$cssParse=cssParse;var VAR_ASSIGN=/(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi;_exports.VAR_ASSIGN=VAR_ASSIGN;var MIXIN_MATCH=/(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi;_exports.MIXIN_MATCH=MIXIN_MATCH;var VAR_CONSUMED=/(--[\w-]+)\s*([:,;)]|$)/gi;_exports.VAR_CONSUMED=VAR_CONSUMED;var ANIMATION_MATCH=/(animation\s*:)|(animation-name\s*:)/;_exports.ANIMATION_MATCH=ANIMATION_MATCH;var MEDIA_MATCH=/@media\s(.*)/;_exports.MEDIA_MATCH=MEDIA_MATCH;var IS_VAR=/^--/;_exports.IS_VAR=IS_VAR;var BRACKETED=/\{[^}]*\}/g;_exports.BRACKETED=BRACKETED;var HOST_PREFIX='(?:^|[^.#[:])';_exports.HOST_PREFIX=HOST_PREFIX;var HOST_SUFFIX='($|[.:[\\s>+~])';_exports.HOST_SUFFIX=HOST_SUFFIX;var commonRegex={__proto__:null,VAR_ASSIGN:VAR_ASSIGN,MIXIN_MATCH:MIXIN_MATCH,VAR_CONSUMED:VAR_CONSUMED,ANIMATION_MATCH:ANIMATION_MATCH,MEDIA_MATCH:MEDIA_MATCH,IS_VAR:IS_VAR,BRACKETED:BRACKETED,HOST_PREFIX:HOST_PREFIX,HOST_SUFFIX:HOST_SUFFIX};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$commonRegex=commonRegex;'use strict';/** @type {!Set<string>} */var styleTextSet=new Set();var scopingAttribute='shady-unscoped';/**
                                                   * Add a specifically-marked style to the document directly, and only one copy of that style.
                                                   *
                                                   * @param {!HTMLStyleElement} style
                                                   * @return {undefined}
                                                   */_exports.scopingAttribute=scopingAttribute;function processUnscopedStyle(style){var text=style.textContent;if(!styleTextSet.has(text)){styleTextSet.add(text);var newStyle=style.cloneNode(true);document.head.appendChild(newStyle);}}/**
   * Check if a style is supposed to be unscoped
   * @param {!HTMLStyleElement} style
   * @return {boolean} true if the style has the unscoping attribute
   */function isUnscopedStyle(style){return style.hasAttribute(scopingAttribute);}var unscopedStyleHandler={__proto__:null,scopingAttribute:scopingAttribute,processUnscopedStyle:processUnscopedStyle,isUnscopedStyle:isUnscopedStyle};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$unscopedStyleHandler=unscopedStyleHandler;'use strict';function toCssText(rules,callback){if(!rules){return'';}if(typeof rules==='string'){rules=parse(rules);}if(callback){forEachRule(rules,callback);}return stringify(rules,nativeCssVariables);}/**
   * @param {HTMLStyleElement} style
   * @return {StyleNode}
   */function rulesForStyle(style){if(!style['__cssRules']&&style.textContent){style['__cssRules']=parse(style.textContent);}return style['__cssRules']||null;}// Tests if a rule is a keyframes selector, which looks almost exactly
// like a normal selector but is not (it has nothing to do with scoping
// for example).
/**
 * @param {StyleNode} rule
 * @return {boolean}
 */function isKeyframesSelector(rule){return Boolean(rule['parent'])&&rule['parent']['type']===types.KEYFRAMES_RULE;}/**
   * @param {StyleNode} node
   * @param {Function=} styleRuleCallback
   * @param {Function=} keyframesRuleCallback
   * @param {boolean=} onlyActiveRules
   */function forEachRule(node,styleRuleCallback,keyframesRuleCallback,onlyActiveRules){if(!node){return;}var skipRules=false;var type=node['type'];if(onlyActiveRules){if(type===types.MEDIA_RULE){var matchMedia=node['selector'].match(MEDIA_MATCH);if(matchMedia){// if rule is a non matching @media rule, skip subrules
if(!window.matchMedia(matchMedia[1]).matches){skipRules=true;}}}}if(type===types.STYLE_RULE){styleRuleCallback(node);}else if(keyframesRuleCallback&&type===types.KEYFRAMES_RULE){keyframesRuleCallback(node);}else if(type===types.MIXIN_RULE){skipRules=true;}var r$=node['rules'];if(r$&&!skipRules){for(var i=0,l=r$.length,r;i<l&&(r=r$[i]);i++){forEachRule(r,styleRuleCallback,keyframesRuleCallback,onlyActiveRules);}}}// add a string of cssText to the document.
/**
 * @param {string} cssText
 * @param {string} moniker
 * @param {Node} target
 * @param {Node} contextNode
 * @return {HTMLStyleElement}
 */function applyCss(cssText,moniker,target,contextNode){var style=createScopeStyle(cssText,moniker);applyStyle(style,target,contextNode);return style;}/**
   * @param {string} cssText
   * @param {string} moniker
   * @return {HTMLStyleElement}
   */function createScopeStyle(cssText,moniker){var style=/** @type {HTMLStyleElement} */document.createElement('style');if(moniker){style.setAttribute('scope',moniker);}style.textContent=cssText;return style;}/**
   * Track the position of the last added style for placing placeholders
   * @type {Node}
   */var lastHeadApplyNode=null;// insert a comment node as a styling position placeholder.
/**
 * @param {string} moniker
 * @return {!Comment}
 */function applyStylePlaceHolder(moniker){var placeHolder=document.createComment(' Shady DOM styles for '+moniker+' ');var after=lastHeadApplyNode?lastHeadApplyNode['nextSibling']:null;var scope=document.head;scope.insertBefore(placeHolder,after||scope.firstChild);lastHeadApplyNode=placeHolder;return placeHolder;}/**
   * @param {HTMLStyleElement} style
   * @param {?Node} target
   * @param {?Node} contextNode
   */function applyStyle(style,target,contextNode){target=target||document.head;var after=contextNode&&contextNode.nextSibling||target.firstChild;target.insertBefore(style,after);if(!lastHeadApplyNode){lastHeadApplyNode=style;}else{// only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode
var position=style.compareDocumentPosition(lastHeadApplyNode);if(position===Node.DOCUMENT_POSITION_PRECEDING){lastHeadApplyNode=style;}}}/**
   * @param {string} buildType
   * @return {boolean}
   */function isTargetedBuild(buildType){return nativeShadow?buildType==='shadow':buildType==='shady';}/**
   * Walk from text[start] matching parens and
   * returns position of the outer end paren
   * @param {string} text
   * @param {number} start
   * @return {number}
   */function findMatchingParen(text,start){var level=0;for(var i=start,l=text.length;i<l;i++){if(text[i]==='('){level++;}else if(text[i]===')'){if(--level===0){return i;}}}return-1;}/**
   * @param {string} str
   * @param {function(string, string, string, string)} callback
   */function processVariableAndFallback(str,callback){// find 'var('
var start=str.indexOf('var(');if(start===-1){// no var?, everything is prefix
return callback(str,'','','');}//${prefix}var(${inner})${suffix}
var end=findMatchingParen(str,start+3);var inner=str.substring(start+4,end);var prefix=str.substring(0,start);// suffix may have other variables
var suffix=processVariableAndFallback(str.substring(end+1),callback);var comma=inner.indexOf(',');// value and fallback args should be trimmed to match in property lookup
if(comma===-1){// variable, no fallback
return callback(prefix,inner.trim(),'',suffix);}// var(${value},${fallback})
var value=inner.substring(0,comma).trim();var fallback=inner.substring(comma+1).trim();return callback(prefix,value,fallback,suffix);}/**
   * @param {Element} element
   * @param {string} value
   */function setElementClassRaw(element,value){// use native setAttribute provided by ShadyDOM when setAttribute is patched
if(nativeShadow){element.setAttribute('class',value);}else{window['ShadyDOM']['nativeMethods']['setAttribute'].call(element,'class',value);}}/**
   * @type {function(*):*}
   */var wrap=window['ShadyDOM']&&window['ShadyDOM']['wrap']||function(node){return node;};/**
                                                                                         * @param {Element | {is: string, extends: string}} element
                                                                                         * @return {{is: string, typeExtension: string}}
                                                                                         */_exports.wrap$1=wrap;function getIsExtends(element){var localName=element['localName'];var is='',typeExtension='';/*
                          NOTE: technically, this can be wrong for certain svg elements
                          with `-` in the name like `<font-face>`
                          */if(localName){if(localName.indexOf('-')>-1){is=localName;}else{typeExtension=localName;is=element.getAttribute&&element.getAttribute('is')||'';}}else{is=/** @type {?} */element.is;typeExtension=/** @type {?} */element.extends;}return{is:is,typeExtension:typeExtension};}/**
   * @param {Element|DocumentFragment} element
   * @return {string}
   */function gatherStyleText(element){/** @type {!Array<string>} */var styleTextParts=[];var styles=/** @type {!NodeList<!HTMLStyleElement>} */element.querySelectorAll('style');for(var i=0;i<styles.length;i++){var _style=styles[i];if(isUnscopedStyle(_style)){if(!nativeShadow){processUnscopedStyle(_style);_style.parentNode.removeChild(_style);}}else{styleTextParts.push(_style.textContent);_style.parentNode.removeChild(_style);}}return styleTextParts.join('').trim();}/**
   * Split a selector separated by commas into an array in a smart way
   * @param {string} selector
   * @return {!Array<string>}
   */function splitSelectorList(selector){var parts=[];var part='';for(var i=0;i>=0&&i<selector.length;i++){// A selector with parentheses will be one complete part
if(selector[i]==='('){// find the matching paren
var end=findMatchingParen(selector,i);// push the paren block into the part
part+=selector.slice(i,end+1);// move the index to after the paren block
i=end;}else if(selector[i]===','){parts.push(part);part='';}else{part+=selector[i];}}// catch any pieces after the last comma
if(part){parts.push(part);}return parts;}var CSS_BUILD_ATTR='css-build';/**
                                     * Return the polymer-css-build "build type" applied to this element
                                     *
                                     * @param {!HTMLElement} element
                                     * @return {string} Can be "", "shady", or "shadow"
                                     */function getCssBuild(element){if(cssBuild!==undefined){return(/** @type {string} */cssBuild);}if(element.__cssBuild===undefined){// try attribute first, as it is the common case
var attrValue=element.getAttribute(CSS_BUILD_ATTR);if(attrValue){element.__cssBuild=attrValue;}else{var buildComment=getBuildComment(element);if(buildComment!==''){// remove build comment so it is not needlessly copied into every element instance
removeBuildComment(element);}element.__cssBuild=buildComment;}}return element.__cssBuild||'';}/**
   * Check if the given element, either a <template> or <style>, has been processed
   * by polymer-css-build.
   *
   * If so, then we can make a number of optimizations:
   * - polymer-css-build will decompose mixins into individual CSS Custom Properties,
   * so the ApplyShim can be skipped entirely.
   * - Under native ShadowDOM, the style text can just be copied into each instance
   * without modification
   * - If the build is "shady" and ShadyDOM is in use, the styling does not need
   * scoping beyond the shimming of CSS Custom Properties
   *
   * @param {!HTMLElement} element
   * @return {boolean}
   */function elementHasBuiltCss(element){return getCssBuild(element)!=='';}/**
   * For templates made with tagged template literals, polymer-css-build will
   * insert a comment of the form `<!--css-build:shadow-->`
   *
   * @param {!HTMLElement} element
   * @return {string}
   */function getBuildComment(element){var buildComment=element.localName==='template'?/** @type {!HTMLTemplateElement} */element.content.firstChild:element.firstChild;if(babelHelpers.instanceof(buildComment,Comment)){var commentParts=buildComment.textContent.trim().split(':');if(commentParts[0]===CSS_BUILD_ATTR){return commentParts[1];}}return'';}/**
   * Check if the css build status is optimal, and do no unneeded work.
   *
   * @param {string=} cssBuild CSS build status
   * @return {boolean} css build is optimal or not
   */function isOptimalCssBuild(){var cssBuild=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';// CSS custom property shim always requires work
if(cssBuild===''||!nativeCssVariables){return false;}return nativeShadow?cssBuild==='shadow':cssBuild==='shady';}/**
   * @param {!HTMLElement} element
   */function removeBuildComment(element){var buildComment=element.localName==='template'?/** @type {!HTMLTemplateElement} */element.content.firstChild:element.firstChild;buildComment.parentNode.removeChild(buildComment);}var styleUtil={__proto__:null,toCssText:toCssText,rulesForStyle:rulesForStyle,isKeyframesSelector:isKeyframesSelector,forEachRule:forEachRule,applyCss:applyCss,createScopeStyle:createScopeStyle,applyStylePlaceHolder:applyStylePlaceHolder,applyStyle:applyStyle,isTargetedBuild:isTargetedBuild,findMatchingParen:findMatchingParen,processVariableAndFallback:processVariableAndFallback,setElementClassRaw:setElementClassRaw,wrap:wrap,getIsExtends:getIsExtends,gatherStyleText:gatherStyleText,splitSelectorList:splitSelectorList,getCssBuild:getCssBuild,elementHasBuiltCss:elementHasBuiltCss,getBuildComment:getBuildComment,isOptimalCssBuild:isOptimalCssBuild};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$styleUtil=styleUtil;'use strict';function updateNativeProperties(element,properties){// remove previous properties
for(var _p2 in properties){// NOTE: for bc with shim, don't apply null values.
if(_p2===null){element.style.removeProperty(_p2);}else{element.style.setProperty(_p2,properties[_p2]);}}}/**
   * @param {Element} element
   * @param {string} property
   * @return {string}
   */function _getComputedStyleValue(element,property){/**
   * @const {string}
   */var value=window.getComputedStyle(element).getPropertyValue(property);if(!value){return'';}else{return value.trim();}}/**
   * return true if `cssText` contains a mixin definition or consumption
   * @param {string} cssText
   * @return {boolean}
   */function _detectMixin(cssText){var has=MIXIN_MATCH.test(cssText)||VAR_ASSIGN.test(cssText);// reset state of the regexes
MIXIN_MATCH.lastIndex=0;VAR_ASSIGN.lastIndex=0;return has;}var commonUtils={__proto__:null,updateNativeProperties:updateNativeProperties,getComputedStyleValue:_getComputedStyleValue,detectMixin:_detectMixin};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */ /*
       * The apply shim simulates the behavior of `@apply` proposed at
       * https://tabatkins.github.io/specs/css-apply-rule/.
       * The approach is to convert a property like this:
       *
       *    --foo: {color: red; background: blue;}
       *
       * to this:
       *
       *    --foo_-_color: red;
       *    --foo_-_background: blue;
       *
       * Then where `@apply --foo` is used, that is converted to:
       *
       *    color: var(--foo_-_color);
       *    background: var(--foo_-_background);
       *
       * This approach generally works but there are some issues and limitations.
       * Consider, for example, that somewhere *between* where `--foo` is set and used,
       * another element sets it to:
       *
       *    --foo: { border: 2px solid red; }
       *
       * We must now ensure that the color and background from the previous setting
       * do not apply. This is accomplished by changing the property set to this:
       *
       *    --foo_-_border: 2px solid red;
       *    --foo_-_color: initial;
       *    --foo_-_background: initial;
       *
       * This works but introduces one new issue.
       * Consider this setup at the point where the `@apply` is used:
       *
       *    background: orange;
       *    `@apply` --foo;
       *
       * In this case the background will be unset (initial) rather than the desired
       * `orange`. We address this by altering the property set to use a fallback
       * value like this:
       *
       *    color: var(--foo_-_color);
       *    background: var(--foo_-_background, orange);
       *    border: var(--foo_-_border);
       *
       * Note that the default is retained in the property set and the `background` is
       * the desired `orange`. This leads us to a limitation.
       *
       * Limitation 1:
      
       * Only properties in the rule where the `@apply`
       * is used are considered as default values.
       * If another rule matches the element and sets `background` with
       * less specificity than the rule in which `@apply` appears,
       * the `background` will not be set.
       *
       * Limitation 2:
       *
       * When using Polymer's `updateStyles` api, new properties may not be set for
       * `@apply` properties.
      
      */_exports.$commonUtils=commonUtils;'use strict';var APPLY_NAME_CLEAN=/;\s*/m;var INITIAL_INHERIT=/^\s*(initial)|(inherit)\s*$/;var IMPORTANT=/\s*!important/;// separator used between mixin-name and mixin-property-name when producing properties
// NOTE: plain '-' may cause collisions in user styles
var MIXIN_VAR_SEP='_-_';/**
                              * @typedef {!Object<string, string>}
                              */var PropertyEntry;// eslint-disable-line no-unused-vars
/**
 * @typedef {!Object<string, boolean>}
 */var DependantsEntry;// eslint-disable-line no-unused-vars
/** @typedef {{
 *    properties: PropertyEntry,
 *    dependants: DependantsEntry
 * }}
 */var MixinMapEntry;// eslint-disable-line no-unused-vars
// map of mixin to property names
// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}
var MixinMap=/*#__PURE__*/function(){function MixinMap(){babelHelpers.classCallCheck(this,MixinMap);/** @type {!Object<string, !MixinMapEntry>} */this._map={};}/**
     * @param {string} name
     * @param {!PropertyEntry} props
     */babelHelpers.createClass(MixinMap,[{key:"set",value:function set(name,props){name=name.trim();this._map[name]={properties:props,dependants:{}};}/**
     * @param {string} name
     * @return {MixinMapEntry}
     */},{key:"get",value:function get(name){name=name.trim();return this._map[name]||null;}}]);return MixinMap;}();/**
   * Callback for when an element is marked invalid
   * @type {?function(string)}
   */var invalidCallback=null;/** @unrestricted */var ApplyShim=/*#__PURE__*/function(){function ApplyShim(){babelHelpers.classCallCheck(this,ApplyShim);/** @type {?string} */this._currentElement=null;/** @type {HTMLMetaElement} */this._measureElement=null;this._map=new MixinMap();}/**
     * return true if `cssText` contains a mixin definition or consumption
     * @param {string} cssText
     * @return {boolean}
     */babelHelpers.createClass(ApplyShim,[{key:"detectMixin",value:function detectMixin(cssText){return _detectMixin(cssText);}/**
     * Gather styles into one style for easier processing
     * @param {!HTMLTemplateElement} template
     * @return {HTMLStyleElement}
     */},{key:"gatherStyles",value:function gatherStyles(template){var styleText=gatherStyleText(template.content);if(styleText){var _style2=/** @type {!HTMLStyleElement} */document.createElement('style');_style2.textContent=styleText;template.content.insertBefore(_style2,template.content.firstChild);return _style2;}return null;}/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @return {StyleNode}
     */},{key:"transformTemplate",value:function transformTemplate(template,elementName){if(template._gatheredStyle===undefined){template._gatheredStyle=this.gatherStyles(template);}/** @type {HTMLStyleElement} */var style=template._gatheredStyle;return style?this.transformStyle(style,elementName):null;}/**
     * @param {!HTMLStyleElement} style
     * @param {string} elementName
     * @return {StyleNode}
     */},{key:"transformStyle",value:function transformStyle(style){var elementName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var ast=rulesForStyle(style);this.transformRules(ast,elementName);style.textContent=toCssText(ast);return ast;}/**
     * @param {!HTMLStyleElement} style
     * @return {StyleNode}
     */},{key:"transformCustomStyle",value:function transformCustomStyle(style){var _this=this;var ast=rulesForStyle(style);forEachRule(ast,function(rule){if(rule['selector']===':root'){rule['selector']='html';}_this.transformRule(rule);});style.textContent=toCssText(ast);return ast;}/**
     * @param {StyleNode} rules
     * @param {string} elementName
     */},{key:"transformRules",value:function transformRules(rules,elementName){var _this2=this;this._currentElement=elementName;forEachRule(rules,function(r){_this2.transformRule(r);});this._currentElement=null;}/**
     * @param {!StyleNode} rule
     */},{key:"transformRule",value:function transformRule(rule){rule['cssText']=this.transformCssText(rule['parsedCssText'],rule);// :root was only used for variable assignment in property shim,
// but generates invalid selectors with real properties.
// replace with `:host > *`, which serves the same effect
if(rule['selector']===':root'){rule['selector']=':host > *';}}/**
     * @param {string} cssText
     * @param {!StyleNode} rule
     * @return {string}
     */},{key:"transformCssText",value:function transformCssText(cssText,rule){var _this3=this;// produce variables
cssText=cssText.replace(VAR_ASSIGN,function(matchText,propertyName,valueProperty,valueMixin){return _this3._produceCssProperties(matchText,propertyName,valueProperty,valueMixin,rule);});// consume mixins
return this._consumeCssProperties(cssText,rule);}/**
     * @param {string} property
     * @return {string}
     */},{key:"_getInitialValueForProperty",value:function _getInitialValueForProperty(property){if(!this._measureElement){this._measureElement=/** @type {HTMLMetaElement} */document.createElement('meta');this._measureElement.setAttribute('apply-shim-measure','');this._measureElement.style.all='initial';document.head.appendChild(this._measureElement);}return window.getComputedStyle(this._measureElement).getPropertyValue(property);}/**
     * Walk over all rules before this rule to find fallbacks for mixins
     *
     * @param {!StyleNode} startRule
     * @return {!Object}
     */},{key:"_fallbacksFromPreviousRules",value:function _fallbacksFromPreviousRules(startRule){var _this4=this;// find the "top" rule
var topRule=startRule;while(topRule['parent']){topRule=topRule['parent'];}var fallbacks={};var seenStartRule=false;forEachRule(topRule,function(r){// stop when we hit the input rule
seenStartRule=seenStartRule||r===startRule;if(seenStartRule){return;}// NOTE: Only matching selectors are "safe" for this fallback processing
// It would be prohibitive to run `matchesSelector()` on each selector,
// so we cheat and only check if the same selector string is used, which
// guarantees things like specificity matching
if(r['selector']===startRule['selector']){Object.assign(fallbacks,_this4._cssTextToMap(r['parsedCssText']));}});return fallbacks;}/**
     * replace mixin consumption with variable consumption
     * @param {string} text
     * @param {!StyleNode=} rule
     * @return {string}
     */},{key:"_consumeCssProperties",value:function _consumeCssProperties(text,rule){/** @type {Array} */var m=null;// loop over text until all mixins with defintions have been applied
while(m=MIXIN_MATCH.exec(text)){var matchText=m[0];var mixinName=m[1];var idx=m.index;// collect properties before apply to be "defaults" if mixin might override them
// match includes a "prefix", so find the start and end positions of @apply
var applyPos=idx+matchText.indexOf('@apply');var afterApplyPos=idx+matchText.length;// find props defined before this @apply
var textBeforeApply=text.slice(0,applyPos);var textAfterApply=text.slice(afterApplyPos);var defaults=rule?this._fallbacksFromPreviousRules(rule):{};Object.assign(defaults,this._cssTextToMap(textBeforeApply));var replacement=this._atApplyToCssProperties(mixinName,defaults);// use regex match position to replace mixin, keep linear processing time
text="".concat(textBeforeApply).concat(replacement).concat(textAfterApply);// move regex search to _after_ replacement
MIXIN_MATCH.lastIndex=idx+replacement.length;}return text;}/**
     * produce variable consumption at the site of mixin consumption
     * `@apply` --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))
     * Example:
     *  border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)
     *
     * @param {string} mixinName
     * @param {Object} fallbacks
     * @return {string}
     */},{key:"_atApplyToCssProperties",value:function _atApplyToCssProperties(mixinName,fallbacks){mixinName=mixinName.replace(APPLY_NAME_CLEAN,'');var vars=[];var mixinEntry=this._map.get(mixinName);// if we depend on a mixin before it is created
// make a sentinel entry in the map to add this element as a dependency for when it is defined.
if(!mixinEntry){this._map.set(mixinName,{});mixinEntry=this._map.get(mixinName);}if(mixinEntry){if(this._currentElement){mixinEntry.dependants[this._currentElement]=true;}var _p3,parts,f;var properties=mixinEntry.properties;for(_p3 in properties){f=fallbacks&&fallbacks[_p3];parts=[_p3,': var(',mixinName,MIXIN_VAR_SEP,_p3];if(f){parts.push(',',f.replace(IMPORTANT,''));}parts.push(')');if(IMPORTANT.test(properties[_p3])){parts.push(' !important');}vars.push(parts.join(''));}}return vars.join('; ');}/**
     * @param {string} property
     * @param {string} value
     * @return {string}
     */},{key:"_replaceInitialOrInherit",value:function _replaceInitialOrInherit(property,value){var match=INITIAL_INHERIT.exec(value);if(match){if(match[1]){// initial
// replace `initial` with the concrete initial value for this property
value=this._getInitialValueForProperty(property);}else{// inherit
// with this purposfully illegal value, the variable will be invalid at
// compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)
// and for inheriting values, will behave similarly
// we cannot support the same behavior for non inheriting values like 'border'
value='apply-shim-inherit';}}return value;}/**
     * "parse" a mixin definition into a map of properties and values
     * cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')
     * @param {string} text
     * @param {boolean=} replaceInitialOrInherit
     * @return {!Object<string, string>}
     */},{key:"_cssTextToMap",value:function _cssTextToMap(text){var replaceInitialOrInherit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var props=text.split(';');var property,value;var out={};for(var i=0,_p4,sp;i<props.length;i++){_p4=props[i];if(_p4){sp=_p4.split(':');// ignore lines that aren't definitions like @media
if(sp.length>1){property=sp[0].trim();// some properties may have ':' in the value, like data urls
value=sp.slice(1).join(':');if(replaceInitialOrInherit){value=this._replaceInitialOrInherit(property,value);}out[property]=value;}}}return out;}/**
     * @param {MixinMapEntry} mixinEntry
     */},{key:"_invalidateMixinEntry",value:function _invalidateMixinEntry(mixinEntry){if(!invalidCallback){return;}for(var elementName in mixinEntry.dependants){if(elementName!==this._currentElement){invalidCallback(elementName);}}}/**
     * @param {string} matchText
     * @param {string} propertyName
     * @param {?string} valueProperty
     * @param {?string} valueMixin
     * @param {!StyleNode} rule
     * @return {string}
     */},{key:"_produceCssProperties",value:function _produceCssProperties(matchText,propertyName,valueProperty,valueMixin,rule){var _this5=this;// handle case where property value is a mixin
if(valueProperty){// form: --mixin2: var(--mixin1), where --mixin1 is in the map
processVariableAndFallback(valueProperty,function(prefix,value){if(value&&_this5._map.get(value)){valueMixin="@apply ".concat(value,";");}});}if(!valueMixin){return matchText;}var mixinAsProperties=this._consumeCssProperties(''+valueMixin,rule);var prefix=matchText.slice(0,matchText.indexOf('--'));// `initial` and `inherit` as properties in a map should be replaced because
// these keywords are eagerly evaluated when the mixin becomes CSS Custom Properties,
// and would set the variable value, rather than carry the keyword to the `var()` usage.
var mixinValues=this._cssTextToMap(mixinAsProperties,true);var combinedProps=mixinValues;var mixinEntry=this._map.get(propertyName);var oldProps=mixinEntry&&mixinEntry.properties;if(oldProps){// NOTE: since we use mixin, the map of properties is updated here
// and this is what we want.
combinedProps=Object.assign(Object.create(oldProps),mixinValues);}else{this._map.set(propertyName,combinedProps);}var out=[];var p,v;// set variables defined by current mixin
var needToInvalidate=false;for(p in combinedProps){v=mixinValues[p];// if property not defined by current mixin, set initial
if(v===undefined){v='initial';}if(oldProps&&!(p in oldProps)){needToInvalidate=true;}out.push("".concat(propertyName).concat(MIXIN_VAR_SEP).concat(p,": ").concat(v));}if(needToInvalidate){this._invalidateMixinEntry(mixinEntry);}if(mixinEntry){mixinEntry.properties=combinedProps;}// because the mixinMap is global, the mixin might conflict with
// a different scope's simple variable definition:
// Example:
// some style somewhere:
// --mixin1:{ ... }
// --mixin2: var(--mixin1);
// some other element:
// --mixin1: 10px solid red;
// --foo: var(--mixin1);
// In this case, we leave the original variable definition in place.
if(valueProperty){prefix="".concat(matchText,";").concat(prefix);}return"".concat(prefix).concat(out.join('; '),";");}}]);return ApplyShim;}();/* exports */ /* eslint-disable no-self-assign */_exports.$applyShimDefault=ApplyShim;ApplyShim.prototype['detectMixin']=ApplyShim.prototype.detectMixin;ApplyShim.prototype['transformStyle']=ApplyShim.prototype.transformStyle;ApplyShim.prototype['transformCustomStyle']=ApplyShim.prototype.transformCustomStyle;ApplyShim.prototype['transformRules']=ApplyShim.prototype.transformRules;ApplyShim.prototype['transformRule']=ApplyShim.prototype.transformRule;ApplyShim.prototype['transformTemplate']=ApplyShim.prototype.transformTemplate;ApplyShim.prototype['_separator']=MIXIN_VAR_SEP;/* eslint-enable no-self-assign */Object.defineProperty(ApplyShim.prototype,'invalidCallback',{/** @return {?function(string)} */get:function get(){return invalidCallback;},/** @param {?function(string)} cb */set:function set(cb){invalidCallback=cb;}});var applyShim={__proto__:null,'default':ApplyShim};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$applyShim$1=applyShim;'use strict';/**
               * @const {!Object<string, !HTMLTemplateElement>}
               */var templateMap={};_exports.$templateMapDefault=templateMap;var templateMap$1={__proto__:null,'default':templateMap};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$templateMap=templateMap$1;'use strict';/*
               * Utilities for handling invalidating apply-shim mixins for a given template.
               *
               * The invalidation strategy involves keeping track of the "current" version of a template's mixins, and updating that count when a mixin is invalidated.
               * The template
               */ /** @const {string} */var CURRENT_VERSION='_applyShimCurrentVersion';/** @const {string} */var NEXT_VERSION='_applyShimNextVersion';/** @const {string} */var VALIDATING_VERSION='_applyShimValidatingVersion';/**
                                                           * @const {Promise<void>}
                                                           */var promise=Promise.resolve();/**
                                    * @param {string} elementName
                                    */function invalidate(elementName){var template=templateMap[elementName];if(template){invalidateTemplate(template);}}/**
   * This function can be called multiple times to mark a template invalid
   * and signal that the style inside must be regenerated.
   *
   * Use `startValidatingTemplate` to begin an asynchronous validation cycle.
   * During that cycle, call `templateIsValidating` to see if the template must
   * be revalidated
   * @param {HTMLTemplateElement} template
   */function invalidateTemplate(template){// default the current version to 0
template[CURRENT_VERSION]=template[CURRENT_VERSION]||0;// ensure the "validating for" flag exists
template[VALIDATING_VERSION]=template[VALIDATING_VERSION]||0;// increment the next version
template[NEXT_VERSION]=(template[NEXT_VERSION]||0)+1;}/**
   * @param {string} elementName
   * @return {boolean}
   */function isValid(elementName){var template=templateMap[elementName];if(template){return templateIsValid(template);}return true;}/**
   * @param {HTMLTemplateElement} template
   * @return {boolean}
   */function templateIsValid(template){return template[CURRENT_VERSION]===template[NEXT_VERSION];}/**
   * @param {string} elementName
   * @return {boolean}
   */function isValidating(elementName){var template=templateMap[elementName];if(template){return templateIsValidating(template);}return false;}/**
   * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.
   * If false, the template must be validated.
   * @param {HTMLTemplateElement} template
   * @return {boolean}
   */function templateIsValidating(template){return!templateIsValid(template)&&template[VALIDATING_VERSION]===template[NEXT_VERSION];}/**
   * the template is marked as `validating` for one microtask so that all instances
   * found in the tree crawl of `applyStyle` will update themselves,
   * but the template will only be updated once.
   * @param {string} elementName
  */function startValidating(elementName){var template=templateMap[elementName];startValidatingTemplate(template);}/**
   * Begin an asynchronous invalidation cycle.
   * This should be called after every validation of a template
   *
   * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`
   * @param {HTMLTemplateElement} template
   */function startValidatingTemplate(template){// remember that the current "next version" is the reason for this validation cycle
template[VALIDATING_VERSION]=template[NEXT_VERSION];// however, there only needs to be one async task to clear the counters
if(!template._validating){template._validating=true;promise.then(function(){// sync the current version to let future invalidations cause a refresh cycle
template[CURRENT_VERSION]=template[NEXT_VERSION];template._validating=false;});}}/**
   * @return {boolean}
   */function elementsAreInvalid(){for(var elementName in templateMap){var _template=templateMap[elementName];if(!templateIsValid(_template)){return true;}}return false;}var applyShimUtils={__proto__:null,invalidate:invalidate,invalidateTemplate:invalidateTemplate,isValid:isValid,templateIsValid:templateIsValid,isValidating:isValidating,templateIsValidating:templateIsValidating,startValidating:startValidating,startValidatingTemplate:startValidatingTemplate,elementsAreInvalid:elementsAreInvalid};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$applyShimUtils=applyShimUtils;'use strict';/** @type {Promise<void>} */var readyPromise=null;/** @type {?function(?function())} */var whenReady=window['HTMLImports']&&window['HTMLImports']['whenReady']||null;/** @type {function()} */var resolveFn;/**
                * @param {?function()} callback
                */function documentWait(callback){requestAnimationFrame(function(){if(whenReady){whenReady(callback);}else{if(!readyPromise){readyPromise=new Promise(function(resolve){resolveFn=resolve;});if(document.readyState==='complete'){resolveFn();}else{document.addEventListener('readystatechange',function(){if(document.readyState==='complete'){resolveFn();}});}}readyPromise.then(function(){callback&&callback();});}});}var documentWait$1={__proto__:null,'default':documentWait};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$documentWait=documentWait$1;'use strict';var CustomStyleProvider;_exports.CustomStyleProvider=CustomStyleProvider;var SEEN_MARKER='__seenByShadyCSS';var CACHED_STYLE='__shadyCSSCachedStyle';/** @type {?function(!HTMLStyleElement)} */var transformFn=null;/** @type {?function()} */var validateFn=null;/**
                       This interface is provided to add document-level <style> elements to ShadyCSS for processing.
                       These styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles
                       In addition, these styles may also need to be processed for @apply rules and CSS Custom Properties
                       
                       To add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`
                       
                       In addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.
                       This function will be called when calculating styles.
                       
                       An example usage of the document-level styling api can be found in `examples/document-style-lib.js`
                       
                       @unrestricted
                       */var CustomStyleInterface=/*#__PURE__*/function(){function CustomStyleInterface(){babelHelpers.classCallCheck(this,CustomStyleInterface);/** @type {!Array<!CustomStyleProvider>} */this['customStyles']=[];this['enqueued']=false;// NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;
documentWait(function(){if(window['ShadyCSS']['flushCustomStyles']){window['ShadyCSS']['flushCustomStyles']();}});}/**
     * Queue a validation for new custom styles to batch style recalculations
     */babelHelpers.createClass(CustomStyleInterface,[{key:"enqueueDocumentValidation",value:function enqueueDocumentValidation(){if(this['enqueued']||!validateFn){return;}this['enqueued']=true;documentWait(validateFn);}/**
     * @param {!HTMLStyleElement} style
     */},{key:"addCustomStyle",value:function addCustomStyle(style){if(!style[SEEN_MARKER]){style[SEEN_MARKER]=true;this['customStyles'].push(style);this.enqueueDocumentValidation();}}/**
     * @param {!CustomStyleProvider} customStyle
     * @return {HTMLStyleElement}
     */},{key:"getStyleForCustomStyle",value:function getStyleForCustomStyle(customStyle){if(customStyle[CACHED_STYLE]){return customStyle[CACHED_STYLE];}var style;if(customStyle['getStyle']){style=customStyle['getStyle']();}else{style=customStyle;}return style;}/**
     * @return {!Array<!CustomStyleProvider>}
     */},{key:"processStyles",value:function processStyles(){var cs=this['customStyles'];for(var i=0;i<cs.length;i++){var _customStyle=cs[i];if(_customStyle[CACHED_STYLE]){continue;}var _style3=this.getStyleForCustomStyle(_customStyle);if(_style3){// HTMLImports polyfill may have cloned the style into the main document,
// which is referenced with __appliedElement.
var styleToTransform=/** @type {!HTMLStyleElement} */_style3['__appliedElement']||_style3;if(transformFn){transformFn(styleToTransform);}_customStyle[CACHED_STYLE]=styleToTransform;}}return cs;}}]);return CustomStyleInterface;}();/* eslint-disable no-self-assign */_exports.$customStyleInterfaceDefault=CustomStyleInterface;CustomStyleInterface.prototype['addCustomStyle']=CustomStyleInterface.prototype.addCustomStyle;CustomStyleInterface.prototype['getStyleForCustomStyle']=CustomStyleInterface.prototype.getStyleForCustomStyle;CustomStyleInterface.prototype['processStyles']=CustomStyleInterface.prototype.processStyles;/* eslint-enable no-self-assign */Object.defineProperties(CustomStyleInterface.prototype,{'transformCallback':{/** @return {?function(!HTMLStyleElement)} */get:function get(){return transformFn;},/** @param {?function(!HTMLStyleElement)} fn */set:function set(fn){transformFn=fn;}},'validateCallback':{/** @return {?function()} */get:function get(){return validateFn;},/**
     * @param {?function()} fn
     * @this {CustomStyleInterface}
     */set:function set(fn){var needsEnqueue=false;if(!validateFn){needsEnqueue=true;}validateFn=fn;if(needsEnqueue){this.enqueueDocumentValidation();}}}});/** @typedef {{
     * customStyles: !Array<!CustomStyleProvider>,
     * addCustomStyle: function(!CustomStyleProvider),
     * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,
     * findStyles: function(),
     * transformCallback: ?function(!HTMLStyleElement),
     * validateCallback: ?function()
     * }}
     */var CustomStyleInterfaceInterface={};_exports.CustomStyleInterfaceInterface=CustomStyleInterfaceInterface;var customStyleInterface={__proto__:null,CustomStyleProvider:CustomStyleProvider,'default':CustomStyleInterface,CustomStyleInterfaceInterface:CustomStyleInterfaceInterface};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$customStyleInterface$1=customStyleInterface;'use strict';var applyShim$1=new ApplyShim();var ApplyShimInterface=/*#__PURE__*/function(){function ApplyShimInterface(){babelHelpers.classCallCheck(this,ApplyShimInterface);/** @type {?CustomStyleInterfaceInterface} */this.customStyleInterface=null;applyShim$1['invalidCallback']=invalidate;}babelHelpers.createClass(ApplyShimInterface,[{key:"ensure",value:function ensure(){var _this6=this;if(this.customStyleInterface){return;}if(window.ShadyCSS.CustomStyleInterface){this.customStyleInterface=/** @type {!CustomStyleInterfaceInterface} */window.ShadyCSS.CustomStyleInterface;this.customStyleInterface['transformCallback']=function(style){applyShim$1.transformCustomStyle(style);};this.customStyleInterface['validateCallback']=function(){requestAnimationFrame(function(){if(_this6.customStyleInterface['enqueued']){_this6.flushCustomStyles();}});};}}/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     */},{key:"prepareTemplate",value:function prepareTemplate(template,elementName){this.ensure();if(elementHasBuiltCss(template)){return;}templateMap[elementName]=template;var ast=applyShim$1.transformTemplate(template,elementName);// save original style ast to use for revalidating instances
template['_styleAst']=ast;}},{key:"flushCustomStyles",value:function flushCustomStyles(){this.ensure();if(!this.customStyleInterface){return;}var styles=this.customStyleInterface['processStyles']();if(!this.customStyleInterface['enqueued']){return;}for(var i=0;i<styles.length;i++){var cs=styles[i];var _style4=this.customStyleInterface['getStyleForCustomStyle'](cs);if(_style4){applyShim$1.transformCustomStyle(_style4);}}this.customStyleInterface['enqueued']=false;}/**
     * @param {HTMLElement} element
     * @param {Object=} properties
     */},{key:"styleSubtree",value:function styleSubtree(element,properties){this.ensure();if(properties){updateNativeProperties(element,properties);}if(element.shadowRoot){this.styleElement(element);var shadowChildren=/** @type {!ParentNode} */element.shadowRoot.children||element.shadowRoot.childNodes;for(var i=0;i<shadowChildren.length;i++){this.styleSubtree(/** @type {HTMLElement} */shadowChildren[i]);}}else{var children=element.children||element.childNodes;for(var _i=0;_i<children.length;_i++){this.styleSubtree(/** @type {HTMLElement} */children[_i]);}}}/**
     * @param {HTMLElement} element
     */},{key:"styleElement",value:function styleElement(element){this.ensure();var _getIsExtends=getIsExtends(element),is=_getIsExtends.is;var template=templateMap[is];if(template&&elementHasBuiltCss(template)){return;}if(template&&!templateIsValid(template)){// only revalidate template once
if(!templateIsValidating(template)){this.prepareTemplate(template,is);startValidatingTemplate(template);}// update this element instance
var _root=element.shadowRoot;if(_root){var _style5=/** @type {HTMLStyleElement} */_root.querySelector('style');if(_style5){// reuse the template's style ast, it has all the original css text
_style5['__cssRules']=template['_styleAst'];_style5.textContent=toCssText(template['_styleAst']);}}}}/**
     * @param {Object=} properties
     */},{key:"styleDocument",value:function styleDocument(properties){this.ensure();this.styleSubtree(document.body,properties);}}]);return ApplyShimInterface;}();if(!window.ShadyCSS||!window.ShadyCSS.ScopingShim){var applyShimInterface=new ApplyShimInterface();var _CustomStyleInterface=window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface;/** @suppress {duplicate} */window.ShadyCSS={/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */prepareTemplate:function prepareTemplate(template,elementName,elementExtends){// eslint-disable-line no-unused-vars
applyShimInterface.flushCustomStyles();applyShimInterface.prepareTemplate(template,elementName);},/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */prepareTemplateStyles:function prepareTemplateStyles(template,elementName,elementExtends){window.ShadyCSS.prepareTemplate(template,elementName,elementExtends);},/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     */prepareTemplateDom:function prepareTemplateDom(template,elementName){},// eslint-disable-line no-unused-vars
/**
     * @param {!HTMLElement} element
     * @param {Object=} properties
     */styleSubtree:function styleSubtree(element,properties){applyShimInterface.flushCustomStyles();applyShimInterface.styleSubtree(element,properties);},/**
     * @param {!HTMLElement} element
     */styleElement:function styleElement(element){applyShimInterface.flushCustomStyles();applyShimInterface.styleElement(element);},/**
     * @param {Object=} properties
     */styleDocument:function styleDocument(properties){applyShimInterface.flushCustomStyles();applyShimInterface.styleDocument(properties);},/**
     * @param {Element} element
     * @param {string} property
     * @return {string}
     */getComputedStyleValue:function getComputedStyleValue(element,property){return _getComputedStyleValue(element,property);},flushCustomStyles:function flushCustomStyles(){applyShimInterface.flushCustomStyles();},nativeCss:nativeCssVariables,nativeShadow:nativeShadow,cssBuild:cssBuild,disableRuntime:disableRuntime};if(_CustomStyleInterface){window.ShadyCSS.CustomStyleInterface=_CustomStyleInterface;}}window.ShadyCSS.ApplyShim=applyShim$1;/**
                                         @license
                                         Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
                                         This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
                                         The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
                                         The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
                                         Code distributed by Google as part of the polymer project is also
                                         subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
                                         */ /* eslint-disable no-unused-vars */ /**
                                                                                 * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]
                                                                                 * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.
                                                                                 *
                                                                                 * @param {string} prop Property name
                                                                                 * @param {?Object} obj Reference object
                                                                                 * @return {string} Potentially renamed property name
                                                                                 */window.JSCompiler_renameProperty=function(prop,obj){return prop;};/* eslint-enable */var CSS_URL_RX=/(url\()([^)]*)(\))/g;var ABS_URL=/(^\/[^\/])|(^#)|(^[\w-\d]*:)/;var workingURL;var resolveDoc;/**
                 * Resolves the given URL against the provided `baseUri'.
                 *
                 * Note that this function performs no resolution for URLs that start
                 * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose
                 * URL resolution, use `window.URL`.
                 *
                 * @param {string} url Input URL to resolve
                 * @param {?string=} baseURI Base URI to resolve the URL against
                 * @return {string} resolved URL
                 */function _resolveUrl(url,baseURI){if(url&&ABS_URL.test(url)){return url;}if(url==='//'){return url;}// Lazy feature detection.
if(workingURL===undefined){workingURL=false;try{var u=new URL('b','http://a');u.pathname='c%20d';workingURL=u.href==='http://a/c%20d';}catch(e){// silently fail
}}if(!baseURI){baseURI=document.baseURI||window.location.href;}if(workingURL){try{return new URL(url,baseURI).href;}catch(e){// Bad url or baseURI structure. Do not attempt to resolve.
return url;}}// Fallback to creating an anchor into a disconnected document.
if(!resolveDoc){resolveDoc=document.implementation.createHTMLDocument('temp');resolveDoc.base=resolveDoc.createElement('base');resolveDoc.head.appendChild(resolveDoc.base);resolveDoc.anchor=resolveDoc.createElement('a');resolveDoc.body.appendChild(resolveDoc.anchor);}resolveDoc.base.href=baseURI;resolveDoc.anchor.href=url;return resolveDoc.anchor.href||url;}/**
   * Resolves any relative URL's in the given CSS text against the provided
   * `ownerDocument`'s `baseURI`.
   *
   * @param {string} cssText CSS text to process
   * @param {string} baseURI Base URI to resolve the URL against
   * @return {string} Processed CSS text with resolved URL's
   */function resolveCss(cssText,baseURI){return cssText.replace(CSS_URL_RX,function(m,pre,url,post){return pre+'\''+_resolveUrl(url.replace(/["']/g,''),baseURI)+'\''+post;});}/**
   * Returns a path from a given `url`. The path includes the trailing
   * `/` from the url.
   *
   * @param {string} url Input URL to transform
   * @return {string} resolved path
   */function pathFromUrl(url){return url.substring(0,url.lastIndexOf('/')+1);}var resolveUrl$1={__proto__:null,resolveUrl:_resolveUrl,resolveCss:resolveCss,pathFromUrl:pathFromUrl};_exports.$resolveUrl=resolveUrl$1;var useShadow=!window.ShadyDOM;_exports.useShadow=useShadow;var useNativeCSSProperties=Boolean(!window.ShadyCSS||window.ShadyCSS.nativeCss);_exports.useNativeCSSProperties=useNativeCSSProperties;var useNativeCustomElements=!window.customElements.polyfillWrapFlushCallback;/**
                                                                                          * Globally settable property that is automatically assigned to
                                                                                          * `ElementMixin` instances, useful for binding in templates to
                                                                                          * make URL's relative to an application's root.  Defaults to the main
                                                                                          * document URL, but can be overridden by users.  It may be useful to set
                                                                                          * `rootPath` to provide a stable application mount path when
                                                                                          * using client side routing.
                                                                                          */_exports.useNativeCustomElements=useNativeCustomElements;var rootPath=pathFromUrl(document.baseURI||window.location.href);/**
                                                                              * Sets the global rootPath property used by `ElementMixin` and
                                                                              * available via `rootPath`.
                                                                              *
                                                                              * @param {string} path The new root path
                                                                              * @return {void}
                                                                              */_exports.rootPath=rootPath;var setRootPath=function setRootPath(path){_exports.rootPath=rootPath=path;};/**
    * A global callback used to sanitize any value before inserting it into the DOM.
    * The callback signature is:
    *
    *  function sanitizeDOMValue(value, name, type, node) { ... }
    *
    * Where:
    *
    * `value` is the value to sanitize.
    * `name` is the name of an attribute or property (for example, href).
    * `type` indicates where the value is being inserted: one of property, attribute, or text.
    * `node` is the node where the value is being inserted.
    *
    * @type {(function(*,string,string,Node):*)|undefined}
    */_exports.setRootPath=setRootPath;var sanitizeDOMValue=window.Polymer&&window.Polymer.sanitizeDOMValue||undefined;/**
                                                                                               * Sets the global sanitizeDOMValue available via this module's exported
                                                                                               * `sanitizeDOMValue` variable.
                                                                                               *
                                                                                               * @param {(function(*,string,string,Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback
                                                                                               * @return {void}
                                                                                               */_exports.sanitizeDOMValue=sanitizeDOMValue;var setSanitizeDOMValue=function setSanitizeDOMValue(newSanitizeDOMValue){_exports.sanitizeDOMValue=sanitizeDOMValue=newSanitizeDOMValue;};/**
    * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.
    * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother
    * scrolling performance.
    * Defaults to `false` for backwards compatibility.
    */_exports.setSanitizeDOMValue=setSanitizeDOMValue;var passiveTouchGestures=false;/**
                                          * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.
                                          *
                                          * @param {boolean} usePassive enable or disable passive touch gestures globally
                                          * @return {void}
                                          */_exports.passiveTouchGestures=passiveTouchGestures;var setPassiveTouchGestures=function setPassiveTouchGestures(usePassive){_exports.passiveTouchGestures=passiveTouchGestures=usePassive;};/**
    * Setting to ensure Polymer template evaluation only occurs based on tempates
    * defined in trusted script.  When true, `<dom-module>` re-registration is
    * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`
    * templates will only evaluate in the context of a trusted element template.
    */_exports.setPassiveTouchGestures=setPassiveTouchGestures;var strictTemplatePolicy=false;/**
                                          * Sets `strictTemplatePolicy` globally for all elements
                                          *
                                          * @param {boolean} useStrictPolicy enable or disable strict template policy
                                          *   globally
                                          * @return {void}
                                          */_exports.strictTemplatePolicy=strictTemplatePolicy;var setStrictTemplatePolicy=function setStrictTemplatePolicy(useStrictPolicy){_exports.strictTemplatePolicy=strictTemplatePolicy=useStrictPolicy;};/**
    * Setting to enable dom-module lookup from Polymer.Element.  By default,
    * templates must be defined in script using the `static get template()`
    * getter and the `html` tag function.  To enable legacy loading of templates
    * via dom-module, set this flag to true.
    */_exports.setStrictTemplatePolicy=setStrictTemplatePolicy;var allowTemplateFromDomModule=false;/**
                                                * Sets `lookupTemplateFromDomModule` globally for all elements
                                                *
                                                * @param {boolean} allowDomModule enable or disable template lookup
                                                *   globally
                                                * @return {void}
                                                */_exports.allowTemplateFromDomModule=allowTemplateFromDomModule;var setAllowTemplateFromDomModule=function setAllowTemplateFromDomModule(allowDomModule){_exports.allowTemplateFromDomModule=allowTemplateFromDomModule=allowDomModule;};/**
    * Setting to skip processing style includes and re-writing urls in css styles.
    * Normally "included" styles are pulled into the element and all urls in styles
    * are re-written to be relative to the containing script url.
    * If no includes or relative urls are used in styles, these steps can be
    * skipped as an optimization.
    */_exports.setAllowTemplateFromDomModule=setAllowTemplateFromDomModule;var legacyOptimizations=false;/**
                                         * Sets `legacyOptimizations` globally for all elements to enable optimizations
                                         * when only legacy based elements are used.
                                         *
                                         * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations
                                         * includes and url rewriting
                                         * @return {void}
                                         */_exports.legacyOptimizations=legacyOptimizations;var setLegacyOptimizations=function setLegacyOptimizations(useLegacyOptimizations){_exports.legacyOptimizations=legacyOptimizations=useLegacyOptimizations;};/**
    * Setting to perform initial rendering synchronously when running under ShadyDOM.
    * This matches the behavior of Polymer 1.
    */_exports.setLegacyOptimizations=setLegacyOptimizations;var syncInitialRender=false;/**
                                       * Sets `syncInitialRender` globally for all elements to enable synchronous
                                       * initial rendering.
                                       *
                                       * @param {boolean} useSyncInitialRender enable or disable synchronous initial
                                       * rendering globally.
                                       * @return {void}
                                       */_exports.syncInitialRender=syncInitialRender;var setSyncInitialRender=function setSyncInitialRender(useSyncInitialRender){_exports.syncInitialRender=syncInitialRender=useSyncInitialRender;};/**
    * Setting to cancel synthetic click events fired by older mobile browsers. Modern browsers
    * no longer fire synthetic click events, and the cancellation behavior can interfere
    * when programmatically clicking on elements.
    */_exports.setSyncInitialRender=setSyncInitialRender;var cancelSyntheticClickEvents=true;/**
                                               * Sets `setCancelSyntheticEvents` globally for all elements to cancel synthetic click events.
                                               *
                                               * @param {boolean} useCancelSyntheticClickEvents enable or disable cancelling synthetic
                                               * events
                                               * @return {void}
                                               */_exports.cancelSyntheticClickEvents=cancelSyntheticClickEvents;var setCancelSyntheticClickEvents=function setCancelSyntheticClickEvents(useCancelSyntheticClickEvents){_exports.cancelSyntheticClickEvents=cancelSyntheticClickEvents=useCancelSyntheticClickEvents;};_exports.setCancelSyntheticClickEvents=setCancelSyntheticClickEvents;var settings={__proto__:null,useShadow:useShadow,useNativeCSSProperties:useNativeCSSProperties,useNativeCustomElements:useNativeCustomElements,get rootPath(){return rootPath;},setRootPath:setRootPath,get sanitizeDOMValue(){return sanitizeDOMValue;},setSanitizeDOMValue:setSanitizeDOMValue,get passiveTouchGestures(){return passiveTouchGestures;},setPassiveTouchGestures:setPassiveTouchGestures,get strictTemplatePolicy(){return strictTemplatePolicy;},setStrictTemplatePolicy:setStrictTemplatePolicy,get allowTemplateFromDomModule(){return allowTemplateFromDomModule;},setAllowTemplateFromDomModule:setAllowTemplateFromDomModule,get legacyOptimizations(){return legacyOptimizations;},setLegacyOptimizations:setLegacyOptimizations,get syncInitialRender(){return syncInitialRender;},setSyncInitialRender:setSyncInitialRender,get cancelSyntheticClickEvents(){return cancelSyntheticClickEvents;},setCancelSyntheticClickEvents:setCancelSyntheticClickEvents};_exports.$settings=settings;var dedupeId=0;/**
                   * @constructor
                   * @extends {Function}
                   * @private
                   */function MixinFunction(){}/** @type {(WeakMap | undefined)} */MixinFunction.prototype.__mixinApplications;/** @type {(Object | undefined)} */MixinFunction.prototype.__mixinSet;/* eslint-disable valid-jsdoc */ /**
                                                                      * Wraps an ES6 class expression mixin such that the mixin is only applied
                                                                      * if it has not already been applied its base argument. Also memoizes mixin
                                                                      * applications.
                                                                      *
                                                                      * @template T
                                                                      * @param {T} mixin ES6 class expression mixin to wrap
                                                                      * @return {T}
                                                                      * @suppress {invalidCasts}
                                                                      */var dedupingMixin=function dedupingMixin(mixin){var mixinApplications=/** @type {!MixinFunction} */mixin.__mixinApplications;if(!mixinApplications){mixinApplications=new WeakMap();/** @type {!MixinFunction} */mixin.__mixinApplications=mixinApplications;}// maintain a unique id for each mixin
var mixinDedupeId=dedupeId++;function dedupingMixin(base){var baseSet=/** @type {!MixinFunction} */base.__mixinSet;if(baseSet&&baseSet[mixinDedupeId]){return base;}var map=mixinApplications;var extended=map.get(base);if(!extended){extended=/** @type {!Function} */mixin(base);map.set(base,extended);}// copy inherited mixin set from the extended class, or the base class
// NOTE: we avoid use of Set here because some browser (IE11)
// cannot extend a base Set via the constructor.
var mixinSet=Object.create(/** @type {!MixinFunction} */extended.__mixinSet||baseSet||null);mixinSet[mixinDedupeId]=true;/** @type {!MixinFunction} */extended.__mixinSet=mixinSet;return extended;}return dedupingMixin;};/* eslint-enable valid-jsdoc */_exports.dedupingMixin=dedupingMixin;var mixin={__proto__:null,dedupingMixin:dedupingMixin};_exports.$mixin=mixin;var modules={};var lcModules={};/**
                     * Sets a dom-module into the global registry by id.
                     *
                     * @param {string} id dom-module id
                     * @param {DomModule} module dom-module instance
                     * @return {void}
                     */function setModule(id,module){// store id separate from lowercased id so that
// in all cases mixedCase id will stored distinctly
// and lowercase version is a fallback
modules[id]=lcModules[id.toLowerCase()]=module;}/**
   * Retrieves a dom-module from the global registry by id.
   *
   * @param {string} id dom-module id
   * @return {DomModule!} dom-module instance
   */function findModule(id){return modules[id]||lcModules[id.toLowerCase()];}function styleOutsideTemplateCheck(inst){if(inst.querySelector('style')){console.warn('dom-module %s has style outside template',inst.id);}}/**
   * The `dom-module` element registers the dom it contains to the name given
   * by the module's id attribute. It provides a unified database of dom
   * accessible via its static `import` API.
   *
   * A key use case of `dom-module` is for providing custom element `<template>`s
   * via HTML imports that are parsed by the native HTML parser, that can be
   * relocated during a bundling pass and still looked up by `id`.
   *
   * Example:
   *
   *     <dom-module id="foo">
   *       <img src="stuff.png">
   *     </dom-module>
   *
   * Then in code in some other location that cannot access the dom-module above
   *
   *     let img = customElements.get('dom-module').import('foo', 'img');
   *
   * @customElement
   * @extends HTMLElement
   * @summary Custom element that provides a registry of relocatable DOM content
   *   by `id` that is agnostic to bundling.
   * @unrestricted
   */var DomModule=/*#__PURE__*/function(_HTMLElement){babelHelpers.inherits(DomModule,_HTMLElement);function DomModule(){babelHelpers.classCallCheck(this,DomModule);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(DomModule).apply(this,arguments));}babelHelpers.createClass(DomModule,[{key:"attributeChangedCallback",/* eslint-disable no-unused-vars */ /**
                                         * @param {string} name Name of attribute.
                                         * @param {?string} old Old value of attribute.
                                         * @param {?string} value Current value of attribute.
                                         * @param {?string} namespace Attribute namespace.
                                         * @return {void}
                                         * @override
                                         */value:function attributeChangedCallback(name,old,value,namespace){if(old!==value){this.register();}}/* eslint-enable no-unused-args */ /**
                                        * The absolute URL of the original location of this `dom-module`.
                                        *
                                        * This value will differ from this element's `ownerDocument` in the
                                        * following ways:
                                        * - Takes into account any `assetpath` attribute added during bundling
                                        *   to indicate the original location relative to the bundled location
                                        * - Uses the HTMLImports polyfill's `importForElement` API to ensure
                                        *   the path is relative to the import document's location since
                                        *   `ownerDocument` is not currently polyfilled
                                        */},{key:"register",/**
     * Registers the dom-module at a given id. This method should only be called
     * when a dom-module is imperatively created. For
     * example, `document.createElement('dom-module').register('foo')`.
     * @param {string=} id The id at which to register the dom-module.
     * @return {void}
     */value:function register(id){id=id||this.id;if(id){// Under strictTemplatePolicy, reject and null out any re-registered
// dom-module since it is ambiguous whether first-in or last-in is trusted
if(strictTemplatePolicy&&findModule(id)!==undefined){setModule(id,null);throw new Error("strictTemplatePolicy: dom-module ".concat(id," re-registered"));}this.id=id;setModule(id,this);styleOutsideTemplateCheck(this);}}},{key:"assetpath",get:function get(){// Don't override existing assetpath.
if(!this.__assetpath){// note: assetpath set via an attribute must be relative to this
// element's location; accomodate polyfilled HTMLImports
var owner=window.HTMLImports&&HTMLImports.importForElement?HTMLImports.importForElement(this)||document:this.ownerDocument;var url=_resolveUrl(this.getAttribute('assetpath')||'',owner.baseURI);this.__assetpath=pathFromUrl(url);}return this.__assetpath;}}],[{key:"import",/**
     * Retrieves the element specified by the css `selector` in the module
     * registered by `id`. For example, this.import('foo', 'img');
     * @param {string} id The id of the dom-module in which to search.
     * @param {string=} selector The css selector by which to find the element.
     * @return {Element} Returns the element which matches `selector` in the
     * module registered at the specified `id`.
     *
     * @export
     * @nocollapse Referred to indirectly in style-gather.js
     */value:function _import(id,selector){if(id){var m=findModule(id);if(m&&selector){return m.querySelector(selector);}return m;}return null;}},{key:"observedAttributes",/** @override */get:function get(){return['id'];}}]);return DomModule;}(babelHelpers.wrapNativeSuper(HTMLElement));_exports.DomModule=DomModule;DomModule.prototype['modules']=modules;customElements.define('dom-module',DomModule);var domModule={__proto__:null,DomModule:DomModule};_exports.$domModule=domModule;var MODULE_STYLE_LINK_SELECTOR='link[rel=import][type~=css]';var INCLUDE_ATTR='include';var SHADY_UNSCOPED_ATTR='shady-unscoped';/**
                                               * @param {string} moduleId .
                                               * @return {?DomModule} .
                                               */function importModule(moduleId){return(/** @type {?DomModule} */DomModule.import(moduleId));}function styleForImport(importDoc){// NOTE: polyfill affordance.
// under the HTMLImports polyfill, there will be no 'body',
// but the import pseudo-doc can be used directly.
var container=importDoc.body?importDoc.body:importDoc;var importCss=resolveCss(container.textContent,importDoc.baseURI);var style=document.createElement('style');style.textContent=importCss;return style;}/** @typedef {{assetpath: string}} */var templateWithAssetPath;// eslint-disable-line no-unused-vars
/**
 * Returns a list of <style> elements in a space-separated list of `dom-module`s.
 *
 * @function
 * @param {string} moduleIds List of dom-module id's within which to
 * search for css.
 * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements
 */function stylesFromModules(moduleIds){var modules=moduleIds.trim().split(/\s+/);var styles=[];for(var i=0;i<modules.length;i++){styles.push.apply(styles,babelHelpers.toConsumableArray(stylesFromModule(modules[i])));}return styles;}/**
   * Returns a list of <style> elements in a given `dom-module`.
   * Styles in a `dom-module` can come either from `<style>`s within the
   * first `<template>`, or else from one or more
   * `<link rel="import" type="css">` links outside the template.
   *
   * @param {string} moduleId dom-module id to gather styles from
   * @return {!Array<!HTMLStyleElement>} Array of contained styles.
   */function stylesFromModule(moduleId){var m=importModule(moduleId);if(!m){console.warn('Could not find style data in module named',moduleId);return[];}if(m._styles===undefined){var styles=[];// module imports: <link rel="import" type="css">
styles.push.apply(styles,babelHelpers.toConsumableArray(_stylesFromModuleImports(m)));// include css from the first template in the module
var _template2=/** @type {?HTMLTemplateElement} */m.querySelector('template');if(_template2){styles.push.apply(styles,babelHelpers.toConsumableArray(stylesFromTemplate(_template2,/** @type {templateWithAssetPath} */m.assetpath)));}m._styles=styles;}return m._styles;}/**
   * Returns the `<style>` elements within a given template.
   *
   * @param {!HTMLTemplateElement} template Template to gather styles from
   * @param {string=} baseURI baseURI for style content
   * @return {!Array<!HTMLStyleElement>} Array of styles
   */function stylesFromTemplate(template,baseURI){if(!template._styles){var styles=[];// if element is a template, get content from its .content
var e$=template.content.querySelectorAll('style');for(var i=0;i<e$.length;i++){var e=e$[i];// support style sharing by allowing styles to "include"
// other dom-modules that contain styling
var include=e.getAttribute(INCLUDE_ATTR);if(include){styles.push.apply(styles,babelHelpers.toConsumableArray(stylesFromModules(include).filter(function(item,index,self){return self.indexOf(item)===index;})));}if(baseURI){e.textContent=resolveCss(e.textContent,/** @type {string} */baseURI);}styles.push(e);}template._styles=styles;}return template._styles;}/**
   * Returns a list of <style> elements  from stylesheets loaded via `<link rel="import" type="css">` links within the specified `dom-module`.
   *
   * @param {string} moduleId Id of `dom-module` to gather CSS from
   * @return {!Array<!HTMLStyleElement>} Array of contained styles.
   */function stylesFromModuleImports(moduleId){var m=importModule(moduleId);return m?_stylesFromModuleImports(m):[];}/**
   * @param {!HTMLElement} module dom-module element that could contain `<link rel="import" type="css">` styles
   * @return {!Array<!HTMLStyleElement>} Array of contained styles
   */function _stylesFromModuleImports(module){var styles=[];var p$=module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);for(var i=0;i<p$.length;i++){var _p5=p$[i];if(_p5.import){var importDoc=_p5.import;var unscoped=_p5.hasAttribute(SHADY_UNSCOPED_ATTR);if(unscoped&&!importDoc._unscopedStyle){var _style6=styleForImport(importDoc);_style6.setAttribute(SHADY_UNSCOPED_ATTR,'');importDoc._unscopedStyle=_style6;}else if(!importDoc._style){importDoc._style=styleForImport(importDoc);}styles.push(unscoped?importDoc._unscopedStyle:importDoc._style);}}return styles;}/**
   *
   * Returns CSS text of styles in a space-separated list of `dom-module`s.
   * Note: This method is deprecated, use `stylesFromModules` instead.
   *
   * @deprecated
   * @param {string} moduleIds List of dom-module id's within which to
   * search for css.
   * @return {string} Concatenated CSS content from specified `dom-module`s
   */function cssFromModules(moduleIds){var modules=moduleIds.trim().split(/\s+/);var cssText='';for(var i=0;i<modules.length;i++){cssText+=cssFromModule(modules[i]);}return cssText;}/**
   * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`
   * can come either from `<style>`s within the first `<template>`, or else
   * from one or more `<link rel="import" type="css">` links outside the
   * template.
   *
   * Any `<styles>` processed are removed from their original location.
   * Note: This method is deprecated, use `styleFromModule` instead.
   *
   * @deprecated
   * @param {string} moduleId dom-module id to gather styles from
   * @return {string} Concatenated CSS content from specified `dom-module`
   */function cssFromModule(moduleId){var m=importModule(moduleId);if(m&&m._cssText===undefined){// module imports: <link rel="import" type="css">
var cssText=_cssFromModuleImports(m);// include css from the first template in the module
var t=/** @type {?HTMLTemplateElement} */m.querySelector('template');if(t){cssText+=cssFromTemplate(t,/** @type {templateWithAssetPath} */m.assetpath);}m._cssText=cssText||null;}if(!m){console.warn('Could not find style data in module named',moduleId);}return m&&m._cssText||'';}/**
   * Returns CSS text of `<styles>` within a given template.
   *
   * Any `<styles>` processed are removed from their original location.
   * Note: This method is deprecated, use `styleFromTemplate` instead.
   *
   * @deprecated
   * @param {!HTMLTemplateElement} template Template to gather styles from
   * @param {string} baseURI Base URI to resolve the URL against
   * @return {string} Concatenated CSS content from specified template
   */function cssFromTemplate(template,baseURI){var cssText='';var e$=stylesFromTemplate(template,baseURI);// if element is a template, get content from its .content
for(var i=0;i<e$.length;i++){var e=e$[i];if(e.parentNode){e.parentNode.removeChild(e);}cssText+=e.textContent;}return cssText;}/**
   * Returns CSS text from stylesheets loaded via `<link rel="import" type="css">`
   * links within the specified `dom-module`.
   *
   * Note: This method is deprecated, use `stylesFromModuleImports` instead.
   *
   * @deprecated
   *
   * @param {string} moduleId Id of `dom-module` to gather CSS from
   * @return {string} Concatenated CSS content from links in specified `dom-module`
   */function cssFromModuleImports(moduleId){var m=importModule(moduleId);return m?_cssFromModuleImports(m):'';}/**
   * @deprecated
   * @param {!HTMLElement} module dom-module element that could contain `<link rel="import" type="css">` styles
   * @return {string} Concatenated CSS content from links in the dom-module
   */function _cssFromModuleImports(module){var cssText='';var styles=_stylesFromModuleImports(module);for(var i=0;i<styles.length;i++){cssText+=styles[i].textContent;}return cssText;}var styleGather={__proto__:null,stylesFromModules:stylesFromModules,stylesFromModule:stylesFromModule,stylesFromTemplate:stylesFromTemplate,stylesFromModuleImports:stylesFromModuleImports,cssFromModules:cssFromModules,cssFromModule:cssFromModule,cssFromTemplate:cssFromTemplate,cssFromModuleImports:cssFromModuleImports};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */ /* eslint-disable valid-jsdoc */ /**
                                        * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill
                                        * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,
                                        * a node wrapper must be used to access ShadowDOM API.
                                        * This is similar to using `Polymer.dom` but relies exclusively
                                        * on the presence of the ShadyDOM polyfill rather than requiring the loading
                                        * of legacy (Polymer.dom) API.
                                        * @type {function(Node):Node}
                                        */_exports.$styleGather=styleGather;var wrap$1=window['ShadyDOM']&&window['ShadyDOM']['noPatch']&&window['ShadyDOM']['wrap']?window['ShadyDOM']['wrap']:window['ShadyDOM']?function(n){return ShadyDOM['patch'](n);}:function(n){return n;};_exports.wrap=wrap$1;var wrap$2={__proto__:null,wrap:wrap$1};_exports.$wrap=wrap$2;function isPath(path){return path.indexOf('.')>=0;}/**
   * Returns the root property name for the given path.
   *
   * Example:
   *
   * ```
   * root('foo.bar.baz') // 'foo'
   * root('foo')         // 'foo'
   * ```
   *
   * @param {string} path Path string
   * @return {string} Root property name
   */function root(path){var dotIndex=path.indexOf('.');if(dotIndex===-1){return path;}return path.slice(0,dotIndex);}/**
   * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not
   * Returns true if the given path is an ancestor of the base path.
   *
   * Example:
   *
   * ```
   * isAncestor('foo.bar', 'foo')         // true
   * isAncestor('foo.bar', 'foo.bar')     // false
   * isAncestor('foo.bar', 'foo.bar.baz') // false
   * ```
   *
   * @param {string} base Path string to test against.
   * @param {string} path Path string to test.
   * @return {boolean} True if `path` is an ancestor of `base`.
   */function isAncestor(base,path){//     base.startsWith(path + '.');
return base.indexOf(path+'.')===0;}/**
   * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant
   *
   * Example:
   *
   * ```
   * isDescendant('foo.bar', 'foo.bar.baz') // true
   * isDescendant('foo.bar', 'foo.bar')     // false
   * isDescendant('foo.bar', 'foo')         // false
   * ```
   *
   * @param {string} base Path string to test against.
   * @param {string} path Path string to test.
   * @return {boolean} True if `path` is a descendant of `base`.
   */function isDescendant(base,path){//     path.startsWith(base + '.');
return path.indexOf(base+'.')===0;}/**
   * Replaces a previous base path with a new base path, preserving the
   * remainder of the path.
   *
   * User must ensure `path` has a prefix of `base`.
   *
   * Example:
   *
   * ```
   * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'
   * ```
   *
   * @param {string} base Current base string to remove
   * @param {string} newBase New base string to replace with
   * @param {string} path Path to translate
   * @return {string} Translated string
   */function translate(base,newBase,path){return newBase+path.slice(base.length);}/**
   * @param {string} base Path string to test against
   * @param {string} path Path string to test
   * @return {boolean} True if `path` is equal to `base`
   */function matches(base,path){return base===path||isAncestor(base,path)||isDescendant(base,path);}/**
   * Converts array-based paths to flattened path.  String-based paths
   * are returned as-is.
   *
   * Example:
   *
   * ```
   * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'
   * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'
   * ```
   *
   * @param {string | !Array<string|number>} path Input path
   * @return {string} Flattened path
   */function normalize(path){if(Array.isArray(path)){var parts=[];for(var i=0;i<path.length;i++){var args=path[i].toString().split('.');for(var j=0;j<args.length;j++){parts.push(args[j]);}}return parts.join('.');}else{return path;}}/**
   * Splits a path into an array of property names. Accepts either arrays
   * of path parts or strings.
   *
   * Example:
   *
   * ```
   * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']
   * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']
   * ```
   *
   * @param {string | !Array<string|number>} path Input path
   * @return {!Array<string>} Array of path parts
   * @suppress {checkTypes}
   */function split(path){if(Array.isArray(path)){return normalize(path).split('.');}return path.toString().split('.');}/**
   * Reads a value from a path.  If any sub-property in the path is `undefined`,
   * this method returns `undefined` (will never throw.
   *
   * @param {Object} root Object from which to dereference path from
   * @param {string | !Array<string|number>} path Path to read
   * @param {Object=} info If an object is provided to `info`, the normalized
   *  (flattened) path will be set to `info.path`.
   * @return {*} Value at path, or `undefined` if the path could not be
   *  fully dereferenced.
   */function _get(root,path,info){var prop=root;var parts=split(path);// Loop over path parts[0..n-1] and dereference
for(var i=0;i<parts.length;i++){if(!prop){return;}var part=parts[i];prop=prop[part];}if(info){info.path=parts.join('.');}return prop;}/**
   * Sets a value to a path.  If any sub-property in the path is `undefined`,
   * this method will no-op.
   *
   * @param {Object} root Object from which to dereference path from
   * @param {string | !Array<string|number>} path Path to set
   * @param {*} value Value to set to path
   * @return {string | undefined} The normalized version of the input path
   */function _set(root,path,value){var prop=root;var parts=split(path);var last=parts[parts.length-1];if(parts.length>1){// Loop over path parts[0..n-2] and dereference
for(var i=0;i<parts.length-1;i++){var part=parts[i];prop=prop[part];if(!prop){return;}}// Set value to object at end of path
prop[last]=value;}else{// Simple property set
prop[path]=value;}return parts.join('.');}/**
   * Returns true if the given string is a structured data path (has dots).
   *
   * This function is deprecated.  Use `isPath` instead.
   *
   * Example:
   *
   * ```
   * isDeep('foo.bar.baz') // true
   * isDeep('foo')         // false
   * ```
   *
   * @deprecated
   * @param {string} path Path string
   * @return {boolean} True if the string contained one or more dots
   */var isDeep=isPath;_exports.isDeep=isDeep;var path={__proto__:null,isPath:isPath,root:root,isAncestor:isAncestor,isDescendant:isDescendant,translate:translate,matches:matches,normalize:normalize,split:split,get:_get,set:_set,isDeep:isDeep};_exports.$path=path;var caseMap={};var DASH_TO_CAMEL=/-[a-z]/g;var CAMEL_TO_DASH=/([A-Z])/g;/**
                                   * @fileoverview Module with utilities for converting between "dash-case" and
                                   * "camelCase" identifiers.
                                   */ /**
                                       * Converts "dash-case" identifier (e.g. `foo-bar-baz`) to "camelCase"
                                       * (e.g. `fooBarBaz`).
                                       *
                                       * @param {string} dash Dash-case identifier
                                       * @return {string} Camel-case representation of the identifier
                                       */function dashToCamelCase(dash){return caseMap[dash]||(caseMap[dash]=dash.indexOf('-')<0?dash:dash.replace(DASH_TO_CAMEL,function(m){return m[1].toUpperCase();}));}/**
   * Converts "camelCase" identifier (e.g. `fooBarBaz`) to "dash-case"
   * (e.g. `foo-bar-baz`).
   *
   * @param {string} camel Camel-case identifier
   * @return {string} Dash-case representation of the identifier
   */function camelToDashCase(camel){return caseMap[camel]||(caseMap[camel]=camel.replace(CAMEL_TO_DASH,'-$1').toLowerCase());}var caseMap$1={__proto__:null,dashToCamelCase:dashToCamelCase,camelToDashCase:camelToDashCase};_exports.$caseMap=caseMap$1;var microtaskCurrHandle=0;var microtaskLastHandle=0;var microtaskCallbacks=[];var microtaskNodeContent=0;var microtaskNode=document.createTextNode('');new window.MutationObserver(microtaskFlush).observe(microtaskNode,{characterData:true});function microtaskFlush(){var len=microtaskCallbacks.length;for(var i=0;i<len;i++){var cb=microtaskCallbacks[i];if(cb){try{cb();}catch(e){setTimeout(function(){throw e;});}}}microtaskCallbacks.splice(0,len);microtaskLastHandle+=len;}/**
   * Async interface wrapper around `setTimeout`.
   *
   * @namespace
   * @summary Async interface wrapper around `setTimeout`.
   */var timeOut={/**
   * Returns a sub-module with the async interface providing the provided
   * delay.
   *
   * @memberof timeOut
   * @param {number=} delay Time to wait before calling callbacks in ms
   * @return {!AsyncInterface} An async timeout interface
   */after:function after(delay){return{run:function run(fn){return window.setTimeout(fn,delay);},cancel:function cancel(handle){window.clearTimeout(handle);}};},/**
   * Enqueues a function called in the next task.
   *
   * @memberof timeOut
   * @param {!Function} fn Callback to run
   * @param {number=} delay Delay in milliseconds
   * @return {number} Handle used for canceling task
   */run:function run(fn,delay){return window.setTimeout(fn,delay);},/**
   * Cancels a previously enqueued `timeOut` callback.
   *
   * @memberof timeOut
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */cancel:function cancel(handle){window.clearTimeout(handle);}};_exports.timeOut=timeOut;var animationFrame={/**
   * Enqueues a function called at `requestAnimationFrame` timing.
   *
   * @memberof animationFrame
   * @param {function(number):void} fn Callback to run
   * @return {number} Handle used for canceling task
   */run:function run(fn){return window.requestAnimationFrame(fn);},/**
   * Cancels a previously enqueued `animationFrame` callback.
   *
   * @memberof animationFrame
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */cancel:function cancel(handle){window.cancelAnimationFrame(handle);}};_exports.animationFrame=animationFrame;var idlePeriod={/**
   * Enqueues a function called at `requestIdleCallback` timing.
   *
   * @memberof idlePeriod
   * @param {function(!IdleDeadline):void} fn Callback to run
   * @return {number} Handle used for canceling task
   */run:function run(fn){return window.requestIdleCallback?window.requestIdleCallback(fn):window.setTimeout(fn,16);},/**
   * Cancels a previously enqueued `idlePeriod` callback.
   *
   * @memberof idlePeriod
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */cancel:function cancel(handle){window.cancelIdleCallback?window.cancelIdleCallback(handle):window.clearTimeout(handle);}};_exports.idlePeriod=idlePeriod;var microTask={/**
   * Enqueues a function called at microtask timing.
   *
   * @memberof microTask
   * @param {!Function=} callback Callback to run
   * @return {number} Handle used for canceling task
   */run:function run(callback){microtaskNode.textContent=microtaskNodeContent++;microtaskCallbacks.push(callback);return microtaskCurrHandle++;},/**
   * Cancels a previously enqueued `microTask` callback.
   *
   * @memberof microTask
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */cancel:function cancel(handle){var idx=handle-microtaskLastHandle;if(idx>=0){if(!microtaskCallbacks[idx]){throw new Error('invalid async handle: '+handle);}microtaskCallbacks[idx]=null;}}};_exports.microTask=microTask;var async={__proto__:null,timeOut:timeOut,animationFrame:animationFrame,idlePeriod:idlePeriod,microTask:microTask};_exports.$async=async;var microtask=microTask;/**
                              * Element class mixin that provides basic meta-programming for creating one
                              * or more property accessors (getter/setter pair) that enqueue an async
                              * (batched) `_propertiesChanged` callback.
                              *
                              * For basic usage of this mixin, call `MyClass.createProperties(props)`
                              * once at class definition time to create property accessors for properties
                              * named in props, implement `_propertiesChanged` to react as desired to
                              * property changes, and implement `static get observedAttributes()` and
                              * include lowercase versions of any property names that should be set from
                              * attributes. Last, call `this._enableProperties()` in the element's
                              * `connectedCallback` to enable the accessors.
                              *
                              * @mixinFunction
                              * @polymer
                              * @summary Element class mixin for reacting to property changes from
                              *   generated property accessors.
                              * @template T
                              * @param {function(new:T)} superClass Class to apply mixin to.
                              * @return {function(new:T)} superClass with mixin applied.
                              */var PropertiesChanged=dedupingMixin(/**
                                                 * @template T
                                                 * @param {function(new:T)} superClass Class to apply mixin to.
                                                 * @return {function(new:T)} superClass with mixin applied.
                                                 */function(superClass){/**
   * @polymer
   * @mixinClass
   * @implements {Polymer_PropertiesChanged}
   * @unrestricted
   */var PropertiesChanged=/*#__PURE__*/function(_superClass){babelHelpers.inherits(PropertiesChanged,_superClass);babelHelpers.createClass(PropertiesChanged,[{key:"_createPropertyAccessor",//eslint-disable-line no-unused-vars
/**
     * Creates a setter/getter pair for the named property with its own
     * local storage.  The getter returns the value in the local storage,
     * and the setter calls `_setProperty`, which updates the local storage
     * for the property and enqueues a `_propertiesChanged` callback.
     *
     * This method may be called on a prototype or an instance.  Calling
     * this method may overwrite a property value that already exists on
     * the prototype/instance by creating the accessor.
     *
     * @param {string} property Name of the property
     * @param {boolean=} readOnly When true, no setter is created; the
     *   protected `_setProperty` function must be used to set the property
     * @return {void}
     * @protected
     * @override
     */value:function _createPropertyAccessor(property,readOnly){this._addPropertyToAttributeMap(property);if(!this.hasOwnProperty('__dataHasAccessor')){this.__dataHasAccessor=Object.assign({},this.__dataHasAccessor);}if(!this.__dataHasAccessor[property]){this.__dataHasAccessor[property]=true;this._definePropertyAccessor(property,readOnly);}}/**
       * Adds the given `property` to a map matching attribute names
       * to property names, using `attributeNameForProperty`. This map is
       * used when deserializing attribute values to properties.
       *
       * @param {string} property Name of the property
       * @override
       */},{key:"_addPropertyToAttributeMap",value:function _addPropertyToAttributeMap(property){if(!this.hasOwnProperty('__dataAttributes')){this.__dataAttributes=Object.assign({},this.__dataAttributes);}if(!this.__dataAttributes[property]){var _attr=this.constructor.attributeNameForProperty(property);this.__dataAttributes[_attr]=property;}}/**
       * Defines a property accessor for the given property.
       * @param {string} property Name of the property
       * @param {boolean=} readOnly When true, no setter is created
       * @return {void}
       * @override
       */},{key:"_definePropertyAccessor",value:function _definePropertyAccessor(property,readOnly){Object.defineProperty(this,property,{/* eslint-disable valid-jsdoc */ /** @this {PropertiesChanged} */get:function get(){return this._getProperty(property);},/** @this {PropertiesChanged} */set:readOnly?function(){}:function(value){this._setProperty(property,value);}/* eslint-enable */});}}],[{key:"createProperties",/**
     * Creates property accessors for the given property names.
     * @param {!Object} props Object whose keys are names of accessors.
     * @return {void}
     * @protected
     * @nocollapse
     */value:function createProperties(props){var proto=this.prototype;for(var prop in props){// don't stomp an existing accessor
if(!(prop in proto)){proto._createPropertyAccessor(prop);}}}/**
       * Returns an attribute name that corresponds to the given property.
       * The attribute name is the lowercased property name. Override to
       * customize this mapping.
       * @param {string} property Property to convert
       * @return {string} Attribute name corresponding to the given property.
       *
       * @protected
       * @nocollapse
       */},{key:"attributeNameForProperty",value:function attributeNameForProperty(property){return property.toLowerCase();}/**
       * Override point to provide a type to which to deserialize a value to
       * a given property.
       * @param {string} name Name of property
       *
       * @protected
       * @nocollapse
       */},{key:"typeForProperty",value:function typeForProperty(name){}}]);function PropertiesChanged(){var _this7;babelHelpers.classCallCheck(this,PropertiesChanged);_this7=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PropertiesChanged).call(this));/** @type {boolean} */_this7.__dataEnabled=false;_this7.__dataReady=false;_this7.__dataInvalid=false;_this7.__data={};_this7.__dataPending=null;_this7.__dataOld=null;_this7.__dataInstanceProps=null;_this7.__serializing=false;_this7._initializeProperties();return _this7;}/**
       * Lifecycle callback called when properties are enabled via
       * `_enableProperties`.
       *
       * Users may override this function to implement behavior that is
       * dependent on the element having its property data initialized, e.g.
       * from defaults (initialized from `constructor`, `_initializeProperties`),
       * `attributeChangedCallback`, or values propagated from host e.g. via
       * bindings.  `super.ready()` must be called to ensure the data system
       * becomes enabled.
       *
       * @return {void}
       * @public
       * @override
       */babelHelpers.createClass(PropertiesChanged,[{key:"ready",value:function ready(){this.__dataReady=true;this._flushProperties();}/**
       * Initializes the local storage for property accessors.
       *
       * Provided as an override point for performing any setup work prior
       * to initializing the property accessor system.
       *
       * @return {void}
       * @protected
       * @override
       */},{key:"_initializeProperties",value:function _initializeProperties(){// Capture instance properties; these will be set into accessors
// during first flush. Don't set them here, since we want
// these to overwrite defaults/constructor assignments
for(var _p6 in this.__dataHasAccessor){if(this.hasOwnProperty(_p6)){this.__dataInstanceProps=this.__dataInstanceProps||{};this.__dataInstanceProps[_p6]=this[_p6];delete this[_p6];}}}/**
       * Called at ready time with bag of instance properties that overwrote
       * accessors when the element upgraded.
       *
       * The default implementation sets these properties back into the
       * setter at ready time.  This method is provided as an override
       * point for customizing or providing more efficient initialization.
       *
       * @param {Object} props Bag of property values that were overwritten
       *   when creating property accessors.
       * @return {void}
       * @protected
       * @override
       */},{key:"_initializeInstanceProperties",value:function _initializeInstanceProperties(props){Object.assign(this,props);}/**
       * Updates the local storage for a property (via `_setPendingProperty`)
       * and enqueues a `_proeprtiesChanged` callback.
       *
       * @param {string} property Name of the property
       * @param {*} value Value to set
       * @return {void}
       * @protected
       * @override
       */},{key:"_setProperty",value:function _setProperty(property,value){if(this._setPendingProperty(property,value)){this._invalidateProperties();}}/**
       * Returns the value for the given property.
       * @param {string} property Name of property
       * @return {*} Value for the given property
       * @protected
       * @override
       */},{key:"_getProperty",value:function _getProperty(property){return this.__data[property];}/* eslint-disable no-unused-vars */ /**
                                           * Updates the local storage for a property, records the previous value,
                                           * and adds it to the set of "pending changes" that will be passed to the
                                           * `_propertiesChanged` callback.  This method does not enqueue the
                                           * `_propertiesChanged` callback.
                                           *
                                           * @param {string} property Name of the property
                                           * @param {*} value Value to set
                                           * @param {boolean=} ext Not used here; affordance for closure
                                           * @return {boolean} Returns true if the property changed
                                           * @protected
                                           * @override
                                           */},{key:"_setPendingProperty",value:function _setPendingProperty(property,value,ext){var old=this.__data[property];var changed=this._shouldPropertyChange(property,value,old);if(changed){if(!this.__dataPending){this.__dataPending={};this.__dataOld={};}// Ensure old is captured from the last turn
if(this.__dataOld&&!(property in this.__dataOld)){this.__dataOld[property]=old;}this.__data[property]=value;this.__dataPending[property]=value;}return changed;}/* eslint-enable */ /**
                           * Marks the properties as invalid, and enqueues an async
                           * `_propertiesChanged` callback.
                           *
                           * @return {void}
                           * @protected
                           * @override
                           */},{key:"_invalidateProperties",value:function _invalidateProperties(){var _this8=this;if(!this.__dataInvalid&&this.__dataReady){this.__dataInvalid=true;microtask.run(function(){if(_this8.__dataInvalid){_this8.__dataInvalid=false;_this8._flushProperties();}});}}/**
       * Call to enable property accessor processing. Before this method is
       * called accessor values will be set but side effects are
       * queued. When called, any pending side effects occur immediately.
       * For elements, generally `connectedCallback` is a normal spot to do so.
       * It is safe to call this method multiple times as it only turns on
       * property accessors once.
       *
       * @return {void}
       * @protected
       * @override
       */},{key:"_enableProperties",value:function _enableProperties(){if(!this.__dataEnabled){this.__dataEnabled=true;if(this.__dataInstanceProps){this._initializeInstanceProperties(this.__dataInstanceProps);this.__dataInstanceProps=null;}this.ready();}}/**
       * Calls the `_propertiesChanged` callback with the current set of
       * pending changes (and old values recorded when pending changes were
       * set), and resets the pending set of changes. Generally, this method
       * should not be called in user code.
       *
       * @return {void}
       * @protected
       * @override
       */},{key:"_flushProperties",value:function _flushProperties(){var props=this.__data;var changedProps=this.__dataPending;var old=this.__dataOld;if(this._shouldPropertiesChange(props,changedProps,old)){this.__dataPending=null;this.__dataOld=null;this._propertiesChanged(props,changedProps,old);}}/**
       * Called in `_flushProperties` to determine if `_propertiesChanged`
       * should be called. The default implementation returns true if
       * properties are pending. Override to customize when
       * `_propertiesChanged` is called.
       * @param {!Object} currentProps Bag of all current accessor values
       * @param {?Object} changedProps Bag of properties changed since the last
       *   call to `_propertiesChanged`
       * @param {?Object} oldProps Bag of previous values for each property
       *   in `changedProps`
       * @return {boolean} true if changedProps is truthy
       * @override
       */},{key:"_shouldPropertiesChange",value:function _shouldPropertiesChange(currentProps,changedProps,oldProps){// eslint-disable-line no-unused-vars
return Boolean(changedProps);}/**
       * Callback called when any properties with accessors created via
       * `_createPropertyAccessor` have been set.
       *
       * @param {!Object} currentProps Bag of all current accessor values
       * @param {?Object} changedProps Bag of properties changed since the last
       *   call to `_propertiesChanged`
       * @param {?Object} oldProps Bag of previous values for each property
       *   in `changedProps`
       * @return {void}
       * @protected
       * @override
       */},{key:"_propertiesChanged",value:function _propertiesChanged(currentProps,changedProps,oldProps){}// eslint-disable-line no-unused-vars
/**
     * Method called to determine whether a property value should be
     * considered as a change and cause the `_propertiesChanged` callback
     * to be enqueued.
     *
     * The default implementation returns `true` if a strict equality
     * check fails. The method always returns false for `NaN`.
     *
     * Override this method to e.g. provide stricter checking for
     * Objects/Arrays when using immutable patterns.
     *
     * @param {string} property Property name
     * @param {*} value New property value
     * @param {*} old Previous property value
     * @return {boolean} Whether the property should be considered a change
     *   and enqueue a `_proeprtiesChanged` callback
     * @protected
     * @override
     */},{key:"_shouldPropertyChange",value:function _shouldPropertyChange(property,value,old){return(// Strict equality check
old!==value&&(// This ensures (old==NaN, value==NaN) always returns false
old===old||value===value));}/**
       * Implements native Custom Elements `attributeChangedCallback` to
       * set an attribute value to a property via `_attributeToProperty`.
       *
       * @param {string} name Name of attribute that changed
       * @param {?string} old Old attribute value
       * @param {?string} value New attribute value
       * @param {?string} namespace Attribute namespace.
       * @return {void}
       * @suppress {missingProperties} Super may or may not implement the callback
       * @override
       */},{key:"attributeChangedCallback",value:function attributeChangedCallback(name,old,value,namespace){if(old!==value){this._attributeToProperty(name,value);}if(babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesChanged.prototype),"attributeChangedCallback",this)){babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesChanged.prototype),"attributeChangedCallback",this).call(this,name,old,value,namespace);}}/**
       * Deserializes an attribute to its associated property.
       *
       * This method calls the `_deserializeValue` method to convert the string to
       * a typed value.
       *
       * @param {string} attribute Name of attribute to deserialize.
       * @param {?string} value of the attribute.
       * @param {*=} type type to deserialize to, defaults to the value
       * returned from `typeForProperty`
       * @return {void}
       * @override
       */},{key:"_attributeToProperty",value:function _attributeToProperty(attribute,value,type){if(!this.__serializing){var map=this.__dataAttributes;var property=map&&map[attribute]||attribute;this[property]=this._deserializeValue(value,type||this.constructor.typeForProperty(property));}}/**
       * Serializes a property to its associated attribute.
       *
       * @suppress {invalidCasts} Closure can't figure out `this` is an element.
       *
       * @param {string} property Property name to reflect.
       * @param {string=} attribute Attribute name to reflect to.
       * @param {*=} value Property value to refect.
       * @return {void}
       * @override
       */},{key:"_propertyToAttribute",value:function _propertyToAttribute(property,attribute,value){this.__serializing=true;value=arguments.length<3?this[property]:value;this._valueToNodeAttribute(/** @type {!HTMLElement} */this,value,attribute||this.constructor.attributeNameForProperty(property));this.__serializing=false;}/**
       * Sets a typed value to an HTML attribute on a node.
       *
       * This method calls the `_serializeValue` method to convert the typed
       * value to a string.  If the `_serializeValue` method returns `undefined`,
       * the attribute will be removed (this is the default for boolean
       * type `false`).
       *
       * @param {Element} node Element to set attribute to.
       * @param {*} value Value to serialize.
       * @param {string} attribute Attribute name to serialize to.
       * @return {void}
       * @override
       */},{key:"_valueToNodeAttribute",value:function _valueToNodeAttribute(node,value,attribute){var str=this._serializeValue(value);if(attribute==='class'||attribute==='name'||attribute==='slot'){node=/** @type {?Element} */wrap$1(node);}if(str===undefined){node.removeAttribute(attribute);}else{node.setAttribute(attribute,str);}}/**
       * Converts a typed JavaScript value to a string.
       *
       * This method is called when setting JS property values to
       * HTML attributes.  Users may override this method to provide
       * serialization for custom types.
       *
       * @param {*} value Property value to serialize.
       * @return {string | undefined} String serialized from the provided
       * property  value.
       * @override
       */},{key:"_serializeValue",value:function _serializeValue(value){switch(babelHelpers.typeof(value)){case'boolean':return value?'':undefined;default:return value!=null?value.toString():undefined;}}/**
       * Converts a string to a typed JavaScript value.
       *
       * This method is called when reading HTML attribute values to
       * JS properties.  Users may override this method to provide
       * deserialization for custom `type`s. Types for `Boolean`, `String`,
       * and `Number` convert attributes to the expected types.
       *
       * @param {?string} value Value to deserialize.
       * @param {*=} type Type to deserialize the string to.
       * @return {*} Typed value deserialized from the provided string.
       * @override
       */},{key:"_deserializeValue",value:function _deserializeValue(value,type){switch(type){case Boolean:return value!==null;case Number:return Number(value);default:return value;}}}]);return PropertiesChanged;}(superClass);return PropertiesChanged;});_exports.PropertiesChanged=PropertiesChanged;var propertiesChanged={__proto__:null,PropertiesChanged:PropertiesChanged};// that won't have their values "saved" by `saveAccessorValue`, since
// reading from an HTMLElement accessor from the context of a prototype throws
_exports.$propertiesChanged=propertiesChanged;var nativeProperties={};var proto=HTMLElement.prototype;while(proto){var props=Object.getOwnPropertyNames(proto);for(var i=0;i<props.length;i++){nativeProperties[props[i]]=true;}proto=Object.getPrototypeOf(proto);}/**
   * Used to save the value of a property that will be overridden with
   * an accessor. If the `model` is a prototype, the values will be saved
   * in `__dataProto`, and it's up to the user (or downstream mixin) to
   * decide how/when to set these values back into the accessors.
   * If `model` is already an instance (it has a `__data` property), then
   * the value will be set as a pending property, meaning the user should
   * call `_invalidateProperties` or `_flushProperties` to take effect
   *
   * @param {Object} model Prototype or instance
   * @param {string} property Name of property
   * @return {void}
   * @private
   */function saveAccessorValue(model,property){// Don't read/store value for any native properties since they could throw
if(!nativeProperties[property]){var value=model[property];if(value!==undefined){if(model.__data){// Adding accessor to instance; update the property
// It is the user's responsibility to call _flushProperties
model._setPendingProperty(property,value);}else{// Adding accessor to proto; save proto's value for instance-time use
if(!model.__dataProto){model.__dataProto={};}else if(!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto',model))){model.__dataProto=Object.create(model.__dataProto);}model.__dataProto[property]=value;}}}}/**
   * Element class mixin that provides basic meta-programming for creating one
   * or more property accessors (getter/setter pair) that enqueue an async
   * (batched) `_propertiesChanged` callback.
   *
   * For basic usage of this mixin:
   *
   * -   Declare attributes to observe via the standard `static get
   *     observedAttributes()`. Use `dash-case` attribute names to represent
   *     `camelCase` property names.
   * -   Implement the `_propertiesChanged` callback on the class.
   * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to
   *     generate property accessors for each observed attribute. This must be
   *     called before the first instance is created, for example, by calling it
   *     before calling `customElements.define`. It can also be called lazily from
   *     the element's `constructor`, as long as it's guarded so that the call is
   *     only made once, when the first instance is created.
   * -   Call `this._enableProperties()` in the element's `connectedCallback` to
   *     enable the accessors.
   *
   * Any `observedAttributes` will automatically be
   * deserialized via `attributeChangedCallback` and set to the associated
   * property using `dash-case`-to-`camelCase` convention.
   *
   * @mixinFunction
   * @polymer
   * @appliesMixin PropertiesChanged
   * @summary Element class mixin for reacting to property changes from
   *   generated property accessors.
   * @template T
   * @param {function(new:T)} superClass Class to apply mixin to.
   * @return {function(new:T)} superClass with mixin applied.
   */var PropertyAccessors=dedupingMixin(function(superClass){/**
   * @constructor
   * @implements {Polymer_PropertiesChanged}
   * @unrestricted
   * @private
   */var base=PropertiesChanged(superClass);/**
                                                  * @polymer
                                                  * @mixinClass
                                                  * @implements {Polymer_PropertyAccessors}
                                                  * @extends {base}
                                                  * @unrestricted
                                                  */var PropertyAccessors=/*#__PURE__*/function(_base){babelHelpers.inherits(PropertyAccessors,_base);function PropertyAccessors(){babelHelpers.classCallCheck(this,PropertyAccessors);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PropertyAccessors).apply(this,arguments));}babelHelpers.createClass(PropertyAccessors,[{key:"_initializeProperties",/**
       * Overrides PropertiesChanged implementation to initialize values for
       * accessors created for values that already existed on the element
       * prototype.
       *
       * @return {void}
       * @protected
       * @override
       */value:function _initializeProperties(){if(this.__dataProto){this._initializeProtoProperties(this.__dataProto);this.__dataProto=null;}babelHelpers.get(babelHelpers.getPrototypeOf(PropertyAccessors.prototype),"_initializeProperties",this).call(this);}/**
       * Called at instance time with bag of properties that were overwritten
       * by accessors on the prototype when accessors were created.
       *
       * The default implementation sets these properties back into the
       * setter at instance time.  This method is provided as an override
       * point for customizing or providing more efficient initialization.
       *
       * @param {Object} props Bag of property values that were overwritten
       *   when creating property accessors.
       * @return {void}
       * @protected
       * @override
       */},{key:"_initializeProtoProperties",value:function _initializeProtoProperties(props){for(var _p7 in props){this._setProperty(_p7,props[_p7]);}}/**
       * Ensures the element has the given attribute. If it does not,
       * assigns the given value to the attribute.
       *
       * @suppress {invalidCasts} Closure can't figure out `this` is infact an
       *     element
       *
       * @param {string} attribute Name of attribute to ensure is set.
       * @param {string} value of the attribute.
       * @return {void}
       * @override
       */},{key:"_ensureAttribute",value:function _ensureAttribute(attribute,value){var el=/** @type {!HTMLElement} */this;if(!el.hasAttribute(attribute)){this._valueToNodeAttribute(el,value,attribute);}}/**
       * Overrides PropertiesChanged implemention to serialize objects as JSON.
       *
       * @param {*} value Property value to serialize.
       * @return {string | undefined} String serialized from the provided property
       *     value.
       * @override
       */},{key:"_serializeValue",value:function _serializeValue(value){/* eslint-disable no-fallthrough */switch(babelHelpers.typeof(value)){case'object':if(babelHelpers.instanceof(value,Date)){return value.toString();}else if(value){try{return JSON.stringify(value);}catch(x){return'';}}default:return babelHelpers.get(babelHelpers.getPrototypeOf(PropertyAccessors.prototype),"_serializeValue",this).call(this,value);}}/**
       * Converts a string to a typed JavaScript value.
       *
       * This method is called by Polymer when reading HTML attribute values to
       * JS properties.  Users may override this method on Polymer element
       * prototypes to provide deserialization for custom `type`s.  Note,
       * the `type` argument is the value of the `type` field provided in the
       * `properties` configuration object for a given property, and is
       * by convention the constructor for the type to deserialize.
       *
       *
       * @param {?string} value Attribute value to deserialize.
       * @param {*=} type Type to deserialize the string to.
       * @return {*} Typed value deserialized from the provided string.
       * @override
       */},{key:"_deserializeValue",value:function _deserializeValue(value,type){/**
       * @type {*}
       */var outValue;switch(type){case Object:try{outValue=JSON.parse(/** @type {string} */value);}catch(x){// allow non-JSON literals like Strings and Numbers
outValue=value;}break;case Array:try{outValue=JSON.parse(/** @type {string} */value);}catch(x){outValue=null;console.warn("Polymer::Attributes: couldn't decode Array as JSON: ".concat(value));}break;case Date:outValue=isNaN(value)?String(value):Number(value);outValue=new Date(outValue);break;default:outValue=babelHelpers.get(babelHelpers.getPrototypeOf(PropertyAccessors.prototype),"_deserializeValue",this).call(this,value,type);break;}return outValue;}/* eslint-enable no-fallthrough */ /**
                                          * Overrides PropertiesChanged implementation to save existing prototype
                                          * property value so that it can be reset.
                                          * @param {string} property Name of the property
                                          * @param {boolean=} readOnly When true, no setter is created
                                          *
                                          * When calling on a prototype, any overwritten values are saved in
                                          * `__dataProto`, and it is up to the subclasser to decide how/when
                                          * to set those properties back into the accessor.  When calling on an
                                          * instance, the overwritten value is set via `_setPendingProperty`,
                                          * and the user should call `_invalidateProperties` or `_flushProperties`
                                          * for the values to take effect.
                                          * @protected
                                          * @return {void}
                                          * @override
                                          */},{key:"_definePropertyAccessor",value:function _definePropertyAccessor(property,readOnly){saveAccessorValue(this,property);babelHelpers.get(babelHelpers.getPrototypeOf(PropertyAccessors.prototype),"_definePropertyAccessor",this).call(this,property,readOnly);}/**
       * Returns true if this library created an accessor for the given property.
       *
       * @param {string} property Property name
       * @return {boolean} True if an accessor was created
       * @override
       */},{key:"_hasAccessor",value:function _hasAccessor(property){return this.__dataHasAccessor&&this.__dataHasAccessor[property];}/**
       * Returns true if the specified property has a pending change.
       *
       * @param {string} prop Property name
       * @return {boolean} True if property has a pending change
       * @protected
       * @override
       */},{key:"_isPropertyPending",value:function _isPropertyPending(prop){return Boolean(this.__dataPending&&prop in this.__dataPending);}}],[{key:"createPropertiesForAttributes",/**
     * Generates property accessors for all attributes in the standard
     * static `observedAttributes` array.
     *
     * Attribute names are mapped to property names using the `dash-case` to
     * `camelCase` convention
     *
     * @return {void}
     * @nocollapse
     */value:function createPropertiesForAttributes(){var a$=/** @type {?} */this.observedAttributes;for(var _i2=0;_i2<a$.length;_i2++){this.prototype._createPropertyAccessor(dashToCamelCase(a$[_i2]));}}/**
       * Returns an attribute name that corresponds to the given property.
       * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.
       * @param {string} property Property to convert
       * @return {string} Attribute name corresponding to the given property.
       *
       * @protected
       * @nocollapse
       */},{key:"attributeNameForProperty",value:function attributeNameForProperty(property){return camelToDashCase(property);}}]);return PropertyAccessors;}(base);return PropertyAccessors;});_exports.PropertyAccessors=PropertyAccessors;var propertyAccessors={__proto__:null,PropertyAccessors:PropertyAccessors};// This is a clear layering violation and gives favored-nation status to
// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep
// a.) to ease 1.x backwards-compatibility due to loss of `is`, and
// b.) to maintain if/repeat capability in parser-constrained elements
//     (e.g. table, select) in lieu of native CE type extensions without
//     massive new invention in this space (e.g. directive system)
_exports.$propertyAccessors=propertyAccessors;var templateExtensions={'dom-if':true,'dom-repeat':true};function wrapTemplateExtension(node){var is=node.getAttribute('is');if(is&&templateExtensions[is]){var t=node;t.removeAttribute('is');node=t.ownerDocument.createElement(is);t.parentNode.replaceChild(node,t);node.appendChild(t);while(t.attributes.length){node.setAttribute(t.attributes[0].name,t.attributes[0].value);t.removeAttribute(t.attributes[0].name);}}return node;}function findTemplateNode(root,nodeInfo){// recursively ascend tree until we hit root
var parent=nodeInfo.parentInfo&&findTemplateNode(root,nodeInfo.parentInfo);// unwind the stack, returning the indexed node at each level
if(parent){// note: marginally faster than indexing via childNodes
// (http://jsperf.com/childnodes-lookup)
for(var n=parent.firstChild,_i3=0;n;n=n.nextSibling){if(nodeInfo.parentIndex===_i3++){return n;}}}else{return root;}}// construct `$` map (from id annotations)
function applyIdToMap(inst,map,node,nodeInfo){if(nodeInfo.id){map[nodeInfo.id]=node;}}// install event listeners (from event annotations)
function applyEventListener(inst,node,nodeInfo){if(nodeInfo.events&&nodeInfo.events.length){for(var j=0,e$=nodeInfo.events,e;j<e$.length&&(e=e$[j]);j++){inst._addMethodEventListenerToNode(node,e.name,e.value,inst);}}}// push configuration references at configure time
function applyTemplateContent(inst,node,nodeInfo){if(nodeInfo.templateInfo){node._templateInfo=nodeInfo.templateInfo;}}function createNodeEventHandler(context,eventName,methodName){// Instances can optionally have a _methodHost which allows redirecting where
// to find methods. Currently used by `templatize`.
context=context._methodHost||context;var handler=function handler(e){if(context[methodName]){context[methodName](e,e.detail);}else{console.warn('listener method `'+methodName+'` not defined');}};return handler;}/**
   * Element mixin that provides basic template parsing and stamping, including
   * the following template-related features for stamped templates:
   *
   * - Declarative event listeners (`on-eventname="listener"`)
   * - Map of node id's to stamped node instances (`this.$.id`)
   * - Nested template content caching/removal and re-installation (performance
   *   optimization)
   *
   * @mixinFunction
   * @polymer
   * @summary Element class mixin that provides basic template parsing and stamping
   * @template T
   * @param {function(new:T)} superClass Class to apply mixin to.
   * @return {function(new:T)} superClass with mixin applied.
   */var TemplateStamp=dedupingMixin(/**
                                             * @template T
                                             * @param {function(new:T)} superClass Class to apply mixin to.
                                             * @return {function(new:T)} superClass with mixin applied.
                                             */function(superClass){/**
   * @polymer
   * @mixinClass
   * @implements {Polymer_TemplateStamp}
   */var TemplateStamp=/*#__PURE__*/function(_superClass2){babelHelpers.inherits(TemplateStamp,_superClass2);function TemplateStamp(){babelHelpers.classCallCheck(this,TemplateStamp);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TemplateStamp).apply(this,arguments));}babelHelpers.createClass(TemplateStamp,[{key:"_stampTemplate",/**
       * Clones the provided template content and returns a document fragment
       * containing the cloned dom.
       *
       * The template is parsed (once and memoized) using this library's
       * template parsing features, and provides the following value-added
       * features:
       * * Adds declarative event listeners for `on-event="handler"` attributes
       * * Generates an "id map" for all nodes with id's under `$` on returned
       *   document fragment
       * * Passes template info including `content` back to templates as
       *   `_templateInfo` (a performance optimization to avoid deep template
       *   cloning)
       *
       * Note that the memoized template parsing process is destructive to the
       * template: attributes for bindings and declarative event listeners are
       * removed after being noted in notes, and any nested `<template>.content`
       * is removed and stored in notes as well.
       *
       * @param {!HTMLTemplateElement} template Template to stamp
       * @return {!StampedTemplate} Cloned template content
       * @override
       */value:function _stampTemplate(template){// Polyfill support: bootstrap the template if it has not already been
if(template&&!template.content&&window.HTMLTemplateElement&&HTMLTemplateElement.decorate){HTMLTemplateElement.decorate(template);}var templateInfo=this.constructor._parseTemplate(template);var nodeInfo=templateInfo.nodeInfoList;var content=templateInfo.content||template.content;var dom=/** @type {DocumentFragment} */document.importNode(content,true);// NOTE: ShadyDom optimization indicating there is an insertion point
dom.__noInsertionPoint=!templateInfo.hasInsertionPoint;var nodes=dom.nodeList=new Array(nodeInfo.length);dom.$={};for(var _i4=0,l=nodeInfo.length,info;_i4<l&&(info=nodeInfo[_i4]);_i4++){var node=nodes[_i4]=findTemplateNode(dom,info);applyIdToMap(this,dom.$,node,info);applyTemplateContent(this,node,info);applyEventListener(this,node,info);}dom=/** @type {!StampedTemplate} */dom;// eslint-disable-line no-self-assign
return dom;}/**
       * Adds an event listener by method name for the event provided.
       *
       * This method generates a handler function that looks up the method
       * name at handling time.
       *
       * @param {!EventTarget} node Node to add listener on
       * @param {string} eventName Name of event
       * @param {string} methodName Name of method
       * @param {*=} context Context the method will be called on (defaults
       *   to `node`)
       * @return {Function} Generated handler function
       * @override
       */},{key:"_addMethodEventListenerToNode",value:function _addMethodEventListenerToNode(node,eventName,methodName,context){context=context||node;var handler=createNodeEventHandler(context,eventName,methodName);this._addEventListenerToNode(node,eventName,handler);return handler;}/**
       * Override point for adding custom or simulated event handling.
       *
       * @param {!EventTarget} node Node to add event listener to
       * @param {string} eventName Name of event
       * @param {function(!Event):void} handler Listener function to add
       * @return {void}
       * @override
       */},{key:"_addEventListenerToNode",value:function _addEventListenerToNode(node,eventName,handler){node.addEventListener(eventName,handler);}/**
       * Override point for adding custom or simulated event handling.
       *
       * @param {!EventTarget} node Node to remove event listener from
       * @param {string} eventName Name of event
       * @param {function(!Event):void} handler Listener function to remove
       * @return {void}
       * @override
       */},{key:"_removeEventListenerFromNode",value:function _removeEventListenerFromNode(node,eventName,handler){node.removeEventListener(eventName,handler);}}],[{key:"_parseTemplate",/**
     * Scans a template to produce template metadata.
     *
     * Template-specific metadata are stored in the object returned, and node-
     * specific metadata are stored in objects in its flattened `nodeInfoList`
     * array.  Only nodes in the template that were parsed as nodes of
     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object
     * contains an `index` (`childNodes` index in parent) and optionally
     * `parent`, which points to node info of its parent (including its index).
     *
     * The template metadata object returned from this method has the following
     * structure (many fields optional):
     *
     * ```js
     *   {
     *     // Flattened list of node metadata (for nodes that generated metadata)
     *     nodeInfoList: [
     *       {
     *         // `id` attribute for any nodes with id's for generating `$` map
     *         id: {string},
     *         // `on-event="handler"` metadata
     *         events: [
     *           {
     *             name: {string},   // event name
     *             value: {string},  // handler method name
     *           }, ...
     *         ],
     *         // Notes when the template contained a `<slot>` for shady DOM
     *         // optimization purposes
     *         hasInsertionPoint: {boolean},
     *         // For nested `<template>`` nodes, nested template metadata
     *         templateInfo: {object}, // nested template metadata
     *         // Metadata to allow efficient retrieval of instanced node
     *         // corresponding to this metadata
     *         parentInfo: {number},   // reference to parent nodeInfo>
     *         parentIndex: {number},  // index in parent's `childNodes` collection
     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`
     *       },
     *       ...
     *     ],
     *     // When true, the template had the `strip-whitespace` attribute
     *     // or was nested in a template with that setting
     *     stripWhitespace: {boolean},
     *     // For nested templates, nested template content is moved into
     *     // a document fragment stored here; this is an optimization to
     *     // avoid the cost of nested template cloning
     *     content: {DocumentFragment}
     *   }
     * ```
     *
     * This method kicks off a recursive treewalk as follows:
     *
     * ```
     *    _parseTemplate <---------------------+
     *      _parseTemplateContent              |
     *        _parseTemplateNode  <------------|--+
     *          _parseTemplateNestedTemplate --+  |
     *          _parseTemplateChildNodes ---------+
     *          _parseTemplateNodeAttributes
     *            _parseTemplateNodeAttribute
     *
     * ```
     *
     * These methods may be overridden to add custom metadata about templates
     * to either `templateInfo` or `nodeInfo`.
     *
     * Note that this method may be destructive to the template, in that
     * e.g. event annotations may be removed after being noted in the
     * template metadata.
     *
     * @param {!HTMLTemplateElement} template Template to parse
     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer
     *   template, for parsing nested templates
     * @return {!TemplateInfo} Parsed template metadata
     * @nocollapse
     */value:function _parseTemplate(template,outerTemplateInfo){// since a template may be re-used, memo-ize metadata
if(!template._templateInfo){// TODO(rictic): fix typing
var/** ? */templateInfo=template._templateInfo={};templateInfo.nodeInfoList=[];templateInfo.stripWhiteSpace=outerTemplateInfo&&outerTemplateInfo.stripWhiteSpace||template.hasAttribute('strip-whitespace');// TODO(rictic): fix typing
this._parseTemplateContent(template,templateInfo,/** @type {?} */{parent:null});}return template._templateInfo;}/**
       * See docs for _parseTemplateNode.
       *
       * @param {!HTMLTemplateElement} template .
       * @param {!TemplateInfo} templateInfo .
       * @param {!NodeInfo} nodeInfo .
       * @return {boolean} .
       * @nocollapse
       */},{key:"_parseTemplateContent",value:function _parseTemplateContent(template,templateInfo,nodeInfo){return this._parseTemplateNode(template.content,templateInfo,nodeInfo);}/**
       * Parses template node and adds template and node metadata based on
       * the current node, and its `childNodes` and `attributes`.
       *
       * This method may be overridden to add custom node or template specific
       * metadata based on this node.
       *
       * @param {Node} node Node to parse
       * @param {!TemplateInfo} templateInfo Template metadata for current template
       * @param {!NodeInfo} nodeInfo Node metadata for current template.
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @nocollapse
       */},{key:"_parseTemplateNode",value:function _parseTemplateNode(node,templateInfo,nodeInfo){var noted=false;var element=/** @type {!HTMLTemplateElement} */node;if(element.localName=='template'&&!element.hasAttribute('preserve-content')){noted=this._parseTemplateNestedTemplate(element,templateInfo,nodeInfo)||noted;}else if(element.localName==='slot'){// For ShadyDom optimization, indicating there is an insertion point
templateInfo.hasInsertionPoint=true;}if(element.firstChild){this._parseTemplateChildNodes(element,templateInfo,nodeInfo);}if(element.hasAttributes&&element.hasAttributes()){noted=this._parseTemplateNodeAttributes(element,templateInfo,nodeInfo)||noted;}return noted;}/**
       * Parses template child nodes for the given root node.
       *
       * This method also wraps whitelisted legacy template extensions
       * (`is="dom-if"` and `is="dom-repeat"`) with their equivalent element
       * wrappers, collapses text nodes, and strips whitespace from the template
       * if the `templateInfo.stripWhitespace` setting was provided.
       *
       * @param {Node} root Root node whose `childNodes` will be parsed
       * @param {!TemplateInfo} templateInfo Template metadata for current template
       * @param {!NodeInfo} nodeInfo Node metadata for current template.
       * @return {void}
       */},{key:"_parseTemplateChildNodes",value:function _parseTemplateChildNodes(root,templateInfo,nodeInfo){if(root.localName==='script'||root.localName==='style'){return;}for(var node=root.firstChild,parentIndex=0,next;node;node=next){// Wrap templates
if(node.localName=='template'){node=wrapTemplateExtension(node);}// collapse adjacent textNodes: fixes an IE issue that can cause
// text nodes to be inexplicably split =(
// note that root.normalize() should work but does not so we do this
// manually.
next=node.nextSibling;if(node.nodeType===Node.TEXT_NODE){var/** Node */n=next;while(n&&n.nodeType===Node.TEXT_NODE){node.textContent+=n.textContent;next=n.nextSibling;root.removeChild(n);n=next;}// optionally strip whitespace
if(templateInfo.stripWhiteSpace&&!node.textContent.trim()){root.removeChild(node);continue;}}var childInfo=/** @type {!NodeInfo} */{parentIndex:parentIndex,parentInfo:nodeInfo};if(this._parseTemplateNode(node,templateInfo,childInfo)){childInfo.infoIndex=templateInfo.nodeInfoList.push(childInfo)-1;}// Increment if not removed
if(node.parentNode){parentIndex++;}}}/**
       * Parses template content for the given nested `<template>`.
       *
       * Nested template info is stored as `templateInfo` in the current node's
       * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.
       * It will then be the responsibility of the host to set it back to the
       * template and for users stamping nested templates to use the
       * `_contentForTemplate` method to retrieve the content for this template
       * (an optimization to avoid the cost of cloning nested template content).
       *
       * @param {HTMLTemplateElement} node Node to parse (a <template>)
       * @param {TemplateInfo} outerTemplateInfo Template metadata for current template
       *   that includes the template `node`
       * @param {!NodeInfo} nodeInfo Node metadata for current template.
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @nocollapse
       */},{key:"_parseTemplateNestedTemplate",value:function _parseTemplateNestedTemplate(node,outerTemplateInfo,nodeInfo){// TODO(rictic): the type of node should be non-null
var element=/** @type {!HTMLTemplateElement} */node;var templateInfo=this._parseTemplate(element,outerTemplateInfo);var content=templateInfo.content=element.content.ownerDocument.createDocumentFragment();content.appendChild(element.content);nodeInfo.templateInfo=templateInfo;return true;}/**
       * Parses template node attributes and adds node metadata to `nodeInfo`
       * for nodes of interest.
       *
       * @param {Element} node Node to parse
       * @param {!TemplateInfo} templateInfo Template metadata for current
       *     template
       * @param {!NodeInfo} nodeInfo Node metadata for current template.
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @nocollapse
       */},{key:"_parseTemplateNodeAttributes",value:function _parseTemplateNodeAttributes(node,templateInfo,nodeInfo){// Make copy of original attribute list, since the order may change
// as attributes are added and removed
var noted=false;var attrs=Array.from(node.attributes);for(var _i5=attrs.length-1,a;a=attrs[_i5];_i5--){noted=this._parseTemplateNodeAttribute(node,templateInfo,nodeInfo,a.name,a.value)||noted;}return noted;}/**
       * Parses a single template node attribute and adds node metadata to
       * `nodeInfo` for attributes of interest.
       *
       * This implementation adds metadata for `on-event="handler"` attributes
       * and `id` attributes.
       *
       * @param {Element} node Node to parse
       * @param {!TemplateInfo} templateInfo Template metadata for current template
       * @param {!NodeInfo} nodeInfo Node metadata for current template.
       * @param {string} name Attribute name
       * @param {string} value Attribute value
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @nocollapse
       */},{key:"_parseTemplateNodeAttribute",value:function _parseTemplateNodeAttribute(node,templateInfo,nodeInfo,name,value){// events (on-*)
if(name.slice(0,3)==='on-'){node.removeAttribute(name);nodeInfo.events=nodeInfo.events||[];nodeInfo.events.push({name:name.slice(3),value:value});return true;}// static id
else if(name==='id'){nodeInfo.id=value;return true;}return false;}/**
       * Returns the `content` document fragment for a given template.
       *
       * For nested templates, Polymer performs an optimization to cache nested
       * template content to avoid the cost of cloning deeply nested templates.
       * This method retrieves the cached content for a given template.
       *
       * @param {HTMLTemplateElement} template Template to retrieve `content` for
       * @return {DocumentFragment} Content fragment
       * @nocollapse
       */},{key:"_contentForTemplate",value:function _contentForTemplate(template){var templateInfo=/** @type {HTMLTemplateElementWithInfo} */template._templateInfo;return templateInfo&&templateInfo.content||template.content;}}]);return TemplateStamp;}(superClass);return TemplateStamp;});_exports.TemplateStamp=TemplateStamp;var templateStamp={__proto__:null,TemplateStamp:TemplateStamp};// from multiple properties in the same turn
_exports.$templateStamp=templateStamp;var dedupeId$1=0;/**
                    * Property effect types; effects are stored on the prototype using these keys
                    * @enum {string}
                    */var TYPES={COMPUTE:'__computeEffects',REFLECT:'__reflectEffects',NOTIFY:'__notifyEffects',PROPAGATE:'__propagateEffects',OBSERVE:'__observeEffects',READ_ONLY:'__readOnly'};/** @const {!RegExp} */var capitalAttributeRegex=/[A-Z]/;/**
                                        * @typedef {{
                                        * name: (string | undefined),
                                        * structured: (boolean | undefined),
                                        * wildcard: (boolean | undefined)
                                        * }}
                                        */var DataTrigger;//eslint-disable-line no-unused-vars
/**
 * @typedef {{
 * info: ?,
 * trigger: (!DataTrigger | undefined),
 * fn: (!Function | undefined)
 * }}
 */var DataEffect;//eslint-disable-line no-unused-vars
/**
 * Ensures that the model has an own-property map of effects for the given type.
 * The model may be a prototype or an instance.
 *
 * Property effects are stored as arrays of effects by property in a map,
 * by named type on the model. e.g.
 *
 *   __computeEffects: {
 *     foo: [ ... ],
 *     bar: [ ... ]
 *   }
 *
 * If the model does not yet have an effect map for the type, one is created
 * and returned.  If it does, but it is not an own property (i.e. the
 * prototype had effects), the the map is deeply cloned and the copy is
 * set on the model and returned, ready for new effects to be added.
 *
 * @param {Object} model Prototype or instance
 * @param {string} type Property effect type
 * @return {Object} The own-property map of effects for the given type
 * @private
 */function ensureOwnEffectMap(model,type){var effects=model[type];if(!effects){effects=model[type]={};}else if(!model.hasOwnProperty(type)){effects=model[type]=Object.create(model[type]);for(var _p8 in effects){var protoFx=effects[_p8];var instFx=effects[_p8]=Array(protoFx.length);for(var _i6=0;_i6<protoFx.length;_i6++){instFx[_i6]=protoFx[_i6];}}}return effects;}// -- effects ----------------------------------------------
/**
 * Runs all effects of a given type for the given set of property changes
 * on an instance.
 *
 * @param {!Polymer_PropertyEffects} inst The instance with effects to run
 * @param {?Object} effects Object map of property-to-Array of effects
 * @param {?Object} props Bag of current property changes
 * @param {?Object=} oldProps Bag of previous values for changed properties
 * @param {boolean=} hasPaths True with `props` contains one or more paths
 * @param {*=} extraArgs Additional metadata to pass to effect function
 * @return {boolean} True if an effect ran for this property
 * @private
 */function runEffects(inst,effects,props,oldProps,hasPaths,extraArgs){if(effects){var ran=false;var id=dedupeId$1++;for(var prop in props){if(runEffectsForProperty(inst,/** @type {!Object} */effects,id,prop,props,oldProps,hasPaths,extraArgs)){ran=true;}}return ran;}return false;}/**
   * Runs a list of effects for a given property.
   *
   * @param {!Polymer_PropertyEffects} inst The instance with effects to run
   * @param {!Object} effects Object map of property-to-Array of effects
   * @param {number} dedupeId Counter used for de-duping effects
   * @param {string} prop Name of changed property
   * @param {*} props Changed properties
   * @param {*} oldProps Old properties
   * @param {boolean=} hasPaths True with `props` contains one or more paths
   * @param {*=} extraArgs Additional metadata to pass to effect function
   * @return {boolean} True if an effect ran for this property
   * @private
   */function runEffectsForProperty(inst,effects,dedupeId,prop,props,oldProps,hasPaths,extraArgs){var ran=false;var rootProperty=hasPaths?root(prop):prop;var fxs=effects[rootProperty];if(fxs){for(var _i7=0,l=fxs.length,fx;_i7<l&&(fx=fxs[_i7]);_i7++){if((!fx.info||fx.info.lastRun!==dedupeId)&&(!hasPaths||pathMatchesTrigger(prop,fx.trigger))){if(fx.info){fx.info.lastRun=dedupeId;}fx.fn(inst,prop,props,oldProps,fx.info,hasPaths,extraArgs);ran=true;}}}return ran;}/**
   * Determines whether a property/path that has changed matches the trigger
   * criteria for an effect.  A trigger is a descriptor with the following
   * structure, which matches the descriptors returned from `parseArg`.
   * e.g. for `foo.bar.*`:
   * ```
   * trigger: {
   *   name: 'a.b',
   *   structured: true,
   *   wildcard: true
   * }
   * ```
   * If no trigger is given, the path is deemed to match.
   *
   * @param {string} path Path or property that changed
   * @param {?DataTrigger} trigger Descriptor
   * @return {boolean} Whether the path matched the trigger
   */function pathMatchesTrigger(path,trigger){if(trigger){var triggerPath=/** @type {string} */trigger.name;return triggerPath==path||!!(trigger.structured&&isAncestor(triggerPath,path))||!!(trigger.wildcard&&isDescendant(triggerPath,path));}else{return true;}}/**
   * Implements the "observer" effect.
   *
   * Calls the method with `info.methodName` on the instance, passing the
   * new and old values.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {string} property Name of property
   * @param {Object} props Bag of current property changes
   * @param {Object} oldProps Bag of previous values for changed properties
   * @param {?} info Effect metadata
   * @return {void}
   * @private
   */function runObserverEffect(inst,property,props,oldProps,info){var fn=typeof info.method==="string"?inst[info.method]:info.method;var changedProp=info.property;if(fn){fn.call(inst,inst.__data[changedProp],oldProps[changedProp]);}else if(!info.dynamicFn){console.warn('observer method `'+info.method+'` not defined');}}/**
   * Runs "notify" effects for a set of changed properties.
   *
   * This method differs from the generic `runEffects` method in that it
   * will dispatch path notification events in the case that the property
   * changed was a path and the root property for that path didn't have a
   * "notify" effect.  This is to maintain 1.0 behavior that did not require
   * `notify: true` to ensure object sub-property notifications were
   * sent.
   *
   * @param {!Polymer_PropertyEffects} inst The instance with effects to run
   * @param {Object} notifyProps Bag of properties to notify
   * @param {Object} props Bag of current property changes
   * @param {Object} oldProps Bag of previous values for changed properties
   * @param {boolean} hasPaths True with `props` contains one or more paths
   * @return {void}
   * @private
   */function runNotifyEffects(inst,notifyProps,props,oldProps,hasPaths){// Notify
var fxs=inst[TYPES.NOTIFY];var notified;var id=dedupeId$1++;// Try normal notify effects; if none, fall back to try path notification
for(var prop in notifyProps){if(notifyProps[prop]){if(fxs&&runEffectsForProperty(inst,fxs,id,prop,props,oldProps,hasPaths)){notified=true;}else if(hasPaths&&notifyPath(inst,prop,props)){notified=true;}}}// Flush host if we actually notified and host was batching
// And the host has already initialized clients; this prevents
// an issue with a host observing data changes before clients are ready.
var host;if(notified&&(host=inst.__dataHost)&&host._invalidateProperties){host._invalidateProperties();}}/**
   * Dispatches {property}-changed events with path information in the detail
   * object to indicate a sub-path of the property was changed.
   *
   * @param {!Polymer_PropertyEffects} inst The element from which to fire the
   *     event
   * @param {string} path The path that was changed
   * @param {Object} props Bag of current property changes
   * @return {boolean} Returns true if the path was notified
   * @private
   */function notifyPath(inst,path,props){var rootProperty=root(path);if(rootProperty!==path){var eventName=camelToDashCase(rootProperty)+'-changed';dispatchNotifyEvent(inst,eventName,props[path],path);return true;}return false;}/**
   * Dispatches {property}-changed events to indicate a property (or path)
   * changed.
   *
   * @param {!Polymer_PropertyEffects} inst The element from which to fire the
   *     event
   * @param {string} eventName The name of the event to send
   *     ('{property}-changed')
   * @param {*} value The value of the changed property
   * @param {string | null | undefined} path If a sub-path of this property
   *     changed, the path that changed (optional).
   * @return {void}
   * @private
   * @suppress {invalidCasts}
   */function dispatchNotifyEvent(inst,eventName,value,path){var detail={value:value,queueProperty:true};if(path){detail.path=path;}wrap$1(/** @type {!HTMLElement} */inst).dispatchEvent(new CustomEvent(eventName,{detail:detail}));}/**
   * Implements the "notify" effect.
   *
   * Dispatches a non-bubbling event named `info.eventName` on the instance
   * with a detail object containing the new `value`.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {string} property Name of property
   * @param {Object} props Bag of current property changes
   * @param {Object} oldProps Bag of previous values for changed properties
   * @param {?} info Effect metadata
   * @param {boolean} hasPaths True with `props` contains one or more paths
   * @return {void}
   * @private
   */function runNotifyEffect(inst,property,props,oldProps,info,hasPaths){var rootProperty=hasPaths?root(property):property;var path=rootProperty!=property?property:null;var value=path?_get(inst,path):inst.__data[property];if(path&&value===undefined){value=props[property];// specifically for .splices
}dispatchNotifyEvent(inst,info.eventName,value,path);}/**
   * Handler function for 2-way notification events. Receives context
   * information captured in the `addNotifyListener` closure from the
   * `__notifyListeners` metadata.
   *
   * Sets the value of the notified property to the host property or path.  If
   * the event contained path information, translate that path to the host
   * scope's name for that path first.
   *
   * @param {CustomEvent} event Notification event (e.g. '<property>-changed')
   * @param {!Polymer_PropertyEffects} inst Host element instance handling the
   *     notification event
   * @param {string} fromProp Child element property that was bound
   * @param {string} toPath Host property/path that was bound
   * @param {boolean} negate Whether the binding was negated
   * @return {void}
   * @private
   */function handleNotification(event,inst,fromProp,toPath,negate){var value;var detail=/** @type {Object} */event.detail;var fromPath=detail&&detail.path;if(fromPath){toPath=translate(fromProp,toPath,fromPath);value=detail&&detail.value;}else{value=event.currentTarget[fromProp];}value=negate?!value:value;if(!inst[TYPES.READ_ONLY]||!inst[TYPES.READ_ONLY][toPath]){if(inst._setPendingPropertyOrPath(toPath,value,true,Boolean(fromPath))&&(!detail||!detail.queueProperty)){inst._invalidateProperties();}}}/**
   * Implements the "reflect" effect.
   *
   * Sets the attribute named `info.attrName` to the given property value.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {string} property Name of property
   * @param {Object} props Bag of current property changes
   * @param {Object} oldProps Bag of previous values for changed properties
   * @param {?} info Effect metadata
   * @return {void}
   * @private
   */function runReflectEffect(inst,property,props,oldProps,info){var value=inst.__data[property];if(sanitizeDOMValue){value=sanitizeDOMValue(value,info.attrName,'attribute',/** @type {Node} */inst);}inst._propertyToAttribute(property,info.attrName,value);}/**
   * Runs "computed" effects for a set of changed properties.
   *
   * This method differs from the generic `runEffects` method in that it
   * continues to run computed effects based on the output of each pass until
   * there are no more newly computed properties.  This ensures that all
   * properties that will be computed by the initial set of changes are
   * computed before other effects (binding propagation, observers, and notify)
   * run.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {?Object} changedProps Bag of changed properties
   * @param {?Object} oldProps Bag of previous values for changed properties
   * @param {boolean} hasPaths True with `props` contains one or more paths
   * @return {void}
   * @private
   */function runComputedEffects(inst,changedProps,oldProps,hasPaths){var computeEffects=inst[TYPES.COMPUTE];if(computeEffects){var inputProps=changedProps;while(runEffects(inst,computeEffects,inputProps,oldProps,hasPaths)){Object.assign(/** @type {!Object} */oldProps,inst.__dataOld);Object.assign(/** @type {!Object} */changedProps,inst.__dataPending);inputProps=inst.__dataPending;inst.__dataPending=null;}}}/**
   * Implements the "computed property" effect by running the method with the
   * values of the arguments specified in the `info` object and setting the
   * return value to the computed property specified.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {string} property Name of property
   * @param {?Object} props Bag of current property changes
   * @param {?Object} oldProps Bag of previous values for changed properties
   * @param {?} info Effect metadata
   * @return {void}
   * @private
   */function runComputedEffect(inst,property,props,oldProps,info){var result=runMethodEffect(inst,property,props,oldProps,info);var computedProp=info.methodInfo;if(inst.__dataHasAccessor&&inst.__dataHasAccessor[computedProp]){inst._setPendingProperty(computedProp,result,true);}else{inst[computedProp]=result;}}/**
   * Computes path changes based on path links set up using the `linkPaths`
   * API.
   *
   * @param {!Polymer_PropertyEffects} inst The instance whose props are changing
   * @param {string} path Path that has changed
   * @param {*} value Value of changed path
   * @return {void}
   * @private
   */function computeLinkedPaths(inst,path,value){var links=inst.__dataLinkedPaths;if(links){var _link;for(var a in links){var b=links[a];if(isDescendant(a,path)){_link=translate(a,b,path);inst._setPendingPropertyOrPath(_link,value,true,true);}else if(isDescendant(b,path)){_link=translate(b,a,path);inst._setPendingPropertyOrPath(_link,value,true,true);}}}}// -- bindings ----------------------------------------------
/**
 * Adds binding metadata to the current `nodeInfo`, and binding effects
 * for all part dependencies to `templateInfo`.
 *
 * @param {Function} constructor Class that `_parseTemplate` is currently
 *   running on
 * @param {TemplateInfo} templateInfo Template metadata for current template
 * @param {NodeInfo} nodeInfo Node metadata for current template node
 * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'
 * @param {string} target Target property name
 * @param {!Array<!BindingPart>} parts Array of binding part metadata
 * @param {string=} literal Literal text surrounding binding parts (specified
 *   only for 'property' bindings, since these must be initialized as part
 *   of boot-up)
 * @return {void}
 * @private
 */function addBinding(constructor,templateInfo,nodeInfo,kind,target,parts,literal){// Create binding metadata and add to nodeInfo
nodeInfo.bindings=nodeInfo.bindings||[];var/** Binding */binding={kind:kind,target:target,parts:parts,literal:literal,isCompound:parts.length!==1};nodeInfo.bindings.push(binding);// Add listener info to binding metadata
if(shouldAddListener(binding)){var _binding$parts$=binding.parts[0],event=_binding$parts$.event,negate=_binding$parts$.negate;binding.listenerEvent=event||camelToDashCase(target)+'-changed';binding.listenerNegate=negate;}// Add "propagate" property effects to templateInfo
var index=templateInfo.nodeInfoList.length;for(var _i8=0;_i8<binding.parts.length;_i8++){var part=binding.parts[_i8];part.compoundIndex=_i8;addEffectForBindingPart(constructor,templateInfo,binding,part,index);}}/**
   * Adds property effects to the given `templateInfo` for the given binding
   * part.
   *
   * @param {Function} constructor Class that `_parseTemplate` is currently
   *   running on
   * @param {TemplateInfo} templateInfo Template metadata for current template
   * @param {!Binding} binding Binding metadata
   * @param {!BindingPart} part Binding part metadata
   * @param {number} index Index into `nodeInfoList` for this node
   * @return {void}
   */function addEffectForBindingPart(constructor,templateInfo,binding,part,index){if(!part.literal){if(binding.kind==='attribute'&&binding.target[0]==='-'){console.warn('Cannot set attribute '+binding.target+' because "-" is not a valid attribute starting character');}else{var dependencies=part.dependencies;var info={index:index,binding:binding,part:part,evaluator:constructor};for(var j=0;j<dependencies.length;j++){var trigger=dependencies[j];if(typeof trigger=='string'){trigger=parseArg(trigger);trigger.wildcard=true;}constructor._addTemplatePropertyEffect(templateInfo,trigger.rootProperty,{fn:runBindingEffect,info:info,trigger:trigger});}}}}/**
   * Implements the "binding" (property/path binding) effect.
   *
   * Note that binding syntax is overridable via `_parseBindings` and
   * `_evaluateBinding`.  This method will call `_evaluateBinding` for any
   * non-literal parts returned from `_parseBindings`.  However,
   * there is no support for _path_ bindings via custom binding parts,
   * as this is specific to Polymer's path binding syntax.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {string} path Name of property
   * @param {Object} props Bag of current property changes
   * @param {Object} oldProps Bag of previous values for changed properties
   * @param {?} info Effect metadata
   * @param {boolean} hasPaths True with `props` contains one or more paths
   * @param {Array} nodeList List of nodes associated with `nodeInfoList` template
   *   metadata
   * @return {void}
   * @private
   */function runBindingEffect(inst,path,props,oldProps,info,hasPaths,nodeList){var node=nodeList[info.index];var binding=info.binding;var part=info.part;// Subpath notification: transform path and set to client
// e.g.: foo="{{obj.sub}}", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop
if(hasPaths&&part.source&&path.length>part.source.length&&binding.kind=='property'&&!binding.isCompound&&node.__isPropertyEffectsClient&&node.__dataHasAccessor&&node.__dataHasAccessor[binding.target]){var value=props[path];path=translate(part.source,binding.target,path);if(node._setPendingPropertyOrPath(path,value,false,true)){inst._enqueueClient(node);}}else{var _value=info.evaluator._evaluateBinding(inst,part,path,props,oldProps,hasPaths);// Propagate value to child
applyBindingValue(inst,node,binding,part,_value);}}/**
   * Sets the value for an "binding" (binding) effect to a node,
   * either as a property or attribute.
   *
   * @param {!Polymer_PropertyEffects} inst The instance owning the binding effect
   * @param {Node} node Target node for binding
   * @param {!Binding} binding Binding metadata
   * @param {!BindingPart} part Binding part metadata
   * @param {*} value Value to set
   * @return {void}
   * @private
   */function applyBindingValue(inst,node,binding,part,value){value=computeBindingValue(node,value,binding,part);if(sanitizeDOMValue){value=sanitizeDOMValue(value,binding.target,binding.kind,node);}if(binding.kind=='attribute'){// Attribute binding
inst._valueToNodeAttribute(/** @type {Element} */node,value,binding.target);}else{// Property binding
var prop=binding.target;if(node.__isPropertyEffectsClient&&node.__dataHasAccessor&&node.__dataHasAccessor[prop]){if(!node[TYPES.READ_ONLY]||!node[TYPES.READ_ONLY][prop]){if(node._setPendingProperty(prop,value)){inst._enqueueClient(node);}}}else{inst._setUnmanagedPropertyToNode(node,prop,value);}}}/**
   * Transforms an "binding" effect value based on compound & negation
   * effect metadata, as well as handling for special-case properties
   *
   * @param {Node} node Node the value will be set to
   * @param {*} value Value to set
   * @param {!Binding} binding Binding metadata
   * @param {!BindingPart} part Binding part metadata
   * @return {*} Transformed value to set
   * @private
   */function computeBindingValue(node,value,binding,part){if(binding.isCompound){var storage=node.__dataCompoundStorage[binding.target];storage[part.compoundIndex]=value;value=storage.join('');}if(binding.kind!=='attribute'){// Some browsers serialize `undefined` to `"undefined"`
if(binding.target==='textContent'||binding.target==='value'&&(node.localName==='input'||node.localName==='textarea')){value=value==undefined?'':value;}}return value;}/**
   * Returns true if a binding's metadata meets all the requirements to allow
   * 2-way binding, and therefore a `<property>-changed` event listener should be
   * added:
   * - used curly braces
   * - is a property (not attribute) binding
   * - is not a textContent binding
   * - is not compound
   *
   * @param {!Binding} binding Binding metadata
   * @return {boolean} True if 2-way listener should be added
   * @private
   */function shouldAddListener(binding){return Boolean(binding.target)&&binding.kind!='attribute'&&binding.kind!='text'&&!binding.isCompound&&binding.parts[0].mode==='{';}/**
   * Setup compound binding storage structures, notify listeners, and dataHost
   * references onto the bound nodeList.
   *
   * @param {!Polymer_PropertyEffects} inst Instance that bas been previously
   *     bound
   * @param {TemplateInfo} templateInfo Template metadata
   * @return {void}
   * @private
   */function setupBindings(inst,templateInfo){// Setup compound storage, dataHost, and notify listeners
var nodeList=templateInfo.nodeList,nodeInfoList=templateInfo.nodeInfoList;if(nodeInfoList.length){for(var _i9=0;_i9<nodeInfoList.length;_i9++){var info=nodeInfoList[_i9];var node=nodeList[_i9];var bindings=info.bindings;if(bindings){for(var _i10=0;_i10<bindings.length;_i10++){var binding=bindings[_i10];setupCompoundStorage(node,binding);addNotifyListener(node,inst,binding);}}node.__dataHost=inst;}}}/**
   * Initializes `__dataCompoundStorage` local storage on a bound node with
   * initial literal data for compound bindings, and sets the joined
   * literal parts to the bound property.
   *
   * When changes to compound parts occur, they are first set into the compound
   * storage array for that property, and then the array is joined to result in
   * the final value set to the property/attribute.
   *
   * @param {Node} node Bound node to initialize
   * @param {Binding} binding Binding metadata
   * @return {void}
   * @private
   */function setupCompoundStorage(node,binding){if(binding.isCompound){// Create compound storage map
var storage=node.__dataCompoundStorage||(node.__dataCompoundStorage={});var parts=binding.parts;// Copy literals from parts into storage for this binding
var literals=new Array(parts.length);for(var j=0;j<parts.length;j++){literals[j]=parts[j].literal;}var target=binding.target;storage[target]=literals;// Configure properties with their literal parts
if(binding.literal&&binding.kind=='property'){// Note, className needs style scoping so this needs wrapping.
// We may also want to consider doing this for `textContent` and
// `innerHTML`.
if(target==='className'){node=wrap$1(node);}node[target]=binding.literal;}}}/**
   * Adds a 2-way binding notification event listener to the node specified
   *
   * @param {Object} node Child element to add listener to
   * @param {!Polymer_PropertyEffects} inst Host element instance to handle
   *     notification event
   * @param {Binding} binding Binding metadata
   * @return {void}
   * @private
   */function addNotifyListener(node,inst,binding){if(binding.listenerEvent){var part=binding.parts[0];node.addEventListener(binding.listenerEvent,function(e){handleNotification(e,inst,binding.target,part.source,part.negate);});}}// -- for method-based effects (complexObserver & computed) --------------
/**
 * Adds property effects for each argument in the method signature (and
 * optionally, for the method name if `dynamic` is true) that calls the
 * provided effect function.
 *
 * @param {Element | Object} model Prototype or instance
 * @param {!MethodSignature} sig Method signature metadata
 * @param {string} type Type of property effect to add
 * @param {Function} effectFn Function to run when arguments change
 * @param {*=} methodInfo Effect-specific information to be included in
 *   method effect metadata
 * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether
 *   method names should be included as a dependency to the effect. Note,
 *   defaults to true if the signature is static (sig.static is true).
 * @return {void}
 * @private
 */function createMethodEffect(model,sig,type,effectFn,methodInfo,dynamicFn){dynamicFn=sig.static||dynamicFn&&(babelHelpers.typeof(dynamicFn)!=='object'||dynamicFn[sig.methodName]);var info={methodName:sig.methodName,args:sig.args,methodInfo:methodInfo,dynamicFn:dynamicFn};for(var _i11=0,arg;_i11<sig.args.length&&(arg=sig.args[_i11]);_i11++){if(!arg.literal){model._addPropertyEffect(arg.rootProperty,type,{fn:effectFn,info:info,trigger:arg});}}if(dynamicFn){model._addPropertyEffect(sig.methodName,type,{fn:effectFn,info:info});}}/**
   * Calls a method with arguments marshaled from properties on the instance
   * based on the method signature contained in the effect metadata.
   *
   * Multi-property observers, computed properties, and inline computing
   * functions call this function to invoke the method, then use the return
   * value accordingly.
   *
   * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
   * @param {string} property Name of property
   * @param {Object} props Bag of current property changes
   * @param {Object} oldProps Bag of previous values for changed properties
   * @param {?} info Effect metadata
   * @return {*} Returns the return value from the method invocation
   * @private
   */function runMethodEffect(inst,property,props,oldProps,info){// Instances can optionally have a _methodHost which allows redirecting where
// to find methods. Currently used by `templatize`.
var context=inst._methodHost||inst;var fn=context[info.methodName];if(fn){var args=inst._marshalArgs(info.args,property,props);return fn.apply(context,args);}else if(!info.dynamicFn){console.warn('method `'+info.methodName+'` not defined');}}var emptyArray=[];// Regular expressions used for binding
var IDENT='(?:'+'[a-zA-Z_$][\\w.:$\\-*]*'+')';var NUMBER='(?:'+'[-+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?'+')';var SQUOTE_STRING='(?:'+'\'(?:[^\'\\\\]|\\\\.)*\''+')';var DQUOTE_STRING='(?:'+'"(?:[^"\\\\]|\\\\.)*"'+')';var STRING='(?:'+SQUOTE_STRING+'|'+DQUOTE_STRING+')';var ARGUMENT='(?:('+IDENT+'|'+NUMBER+'|'+STRING+')\\s*'+')';var ARGUMENTS='(?:'+ARGUMENT+'(?:,\\s*'+ARGUMENT+')*'+')';var ARGUMENT_LIST='(?:'+'\\(\\s*'+'(?:'+ARGUMENTS+'?'+')'+'\\)\\s*'+')';var BINDING='('+IDENT+'\\s*'+ARGUMENT_LIST+'?'+')';// Group 3
var OPEN_BRACKET='(\\[\\[|{{)'+'\\s*';var CLOSE_BRACKET='(?:]]|}})';var NEGATE='(?:(!)\\s*)?';// Group 2
var EXPRESSION=OPEN_BRACKET+NEGATE+BINDING+CLOSE_BRACKET;var bindingRegex=new RegExp(EXPRESSION,"g");/**
                                                   * Create a string from binding parts of all the literal parts
                                                   *
                                                   * @param {!Array<BindingPart>} parts All parts to stringify
                                                   * @return {string} String made from the literal parts
                                                   */function literalFromParts(parts){var s='';for(var _i12=0;_i12<parts.length;_i12++){var literal=parts[_i12].literal;s+=literal||'';}return s;}/**
   * Parses an expression string for a method signature, and returns a metadata
   * describing the method in terms of `methodName`, `static` (whether all the
   * arguments are literals), and an array of `args`
   *
   * @param {string} expression The expression to parse
   * @return {?MethodSignature} The method metadata object if a method expression was
   *   found, otherwise `undefined`
   * @private
   */function parseMethod(expression){// tries to match valid javascript property names
var m=expression.match(/([^\s]+?)\(([\s\S]*)\)/);if(m){var methodName=m[1];var sig={methodName:methodName,static:true,args:emptyArray};if(m[2].trim()){// replace escaped commas with comma entity, split on un-escaped commas
var args=m[2].replace(/\\,/g,'&comma;').split(',');return parseArgs(args,sig);}else{return sig;}}return null;}/**
   * Parses an array of arguments and sets the `args` property of the supplied
   * signature metadata object. Sets the `static` property to false if any
   * argument is a non-literal.
   *
   * @param {!Array<string>} argList Array of argument names
   * @param {!MethodSignature} sig Method signature metadata object
   * @return {!MethodSignature} The updated signature metadata object
   * @private
   */function parseArgs(argList,sig){sig.args=argList.map(function(rawArg){var arg=parseArg(rawArg);if(!arg.literal){sig.static=false;}return arg;},this);return sig;}/**
   * Parses an individual argument, and returns an argument metadata object
   * with the following fields:
   *
   *   {
   *     value: 'prop',        // property/path or literal value
   *     literal: false,       // whether argument is a literal
   *     structured: false,    // whether the property is a path
   *     rootProperty: 'prop', // the root property of the path
   *     wildcard: false       // whether the argument was a wildcard '.*' path
   *   }
   *
   * @param {string} rawArg The string value of the argument
   * @return {!MethodArg} Argument metadata object
   * @private
   */function parseArg(rawArg){// clean up whitespace
var arg=rawArg.trim()// replace comma entity with comma
.replace(/&comma;/g,',')// repair extra escape sequences; note only commas strictly need
// escaping, but we allow any other char to be escaped since its
// likely users will do this
.replace(/\\(.)/g,'\$1');// basic argument descriptor
var a={name:arg,value:'',literal:false};// detect literal value (must be String or Number)
var fc=arg[0];if(fc==='-'){fc=arg[1];}if(fc>='0'&&fc<='9'){fc='#';}switch(fc){case"'":case'"':a.value=arg.slice(1,-1);a.literal=true;break;case'#':a.value=Number(arg);a.literal=true;break;}// if not literal, look for structured path
if(!a.literal){a.rootProperty=root(arg);// detect structured path (has dots)
a.structured=isPath(arg);if(a.structured){a.wildcard=arg.slice(-2)=='.*';if(a.wildcard){a.name=arg.slice(0,-2);}}}return a;}function getArgValue(data,props,path){var value=_get(data,path);// when data is not stored e.g. `splices`, get the value from changedProps
// TODO(kschaaf): Note, this can cause a rare issue where the wildcard
// info.value could pull a stale value out of changedProps during a reentrant
// change that sets the value back to undefined.
// https://github.com/Polymer/polymer/issues/5479
if(value===undefined){value=props[path];}return value;}// data api
/**
 * Sends array splice notifications (`.splices` and `.length`)
 *
 * Note: this implementation only accepts normalized paths
 *
 * @param {!Polymer_PropertyEffects} inst Instance to send notifications to
 * @param {Array} array The array the mutations occurred on
 * @param {string} path The path to the array that was mutated
 * @param {Array} splices Array of splice records
 * @return {void}
 * @private
 */function _notifySplices(inst,array,path,splices){inst.notifyPath(path+'.splices',{indexSplices:splices});inst.notifyPath(path+'.length',array.length);}/**
   * Creates a splice record and sends an array splice notification for
   * the described mutation
   *
   * Note: this implementation only accepts normalized paths
   *
   * @param {!Polymer_PropertyEffects} inst Instance to send notifications to
   * @param {Array} array The array the mutations occurred on
   * @param {string} path The path to the array that was mutated
   * @param {number} index Index at which the array mutation occurred
   * @param {number} addedCount Number of added items
   * @param {Array} removed Array of removed items
   * @return {void}
   * @private
   */function notifySplice(inst,array,path,index,addedCount,removed){_notifySplices(inst,array,path,[{index:index,addedCount:addedCount,removed:removed,object:array,type:'splice'}]);}/**
   * Returns an upper-cased version of the string.
   *
   * @param {string} name String to uppercase
   * @return {string} Uppercased string
   * @private
   */function upper(name){return name[0].toUpperCase()+name.substring(1);}/**
   * Element class mixin that provides meta-programming for Polymer's template
   * binding and data observation (collectively, "property effects") system.
   *
   * This mixin uses provides the following key static methods for adding
   * property effects to an element class:
   * - `addPropertyEffect`
   * - `createPropertyObserver`
   * - `createMethodObserver`
   * - `createNotifyingProperty`
   * - `createReadOnlyProperty`
   * - `createReflectedProperty`
   * - `createComputedProperty`
   * - `bindTemplate`
   *
   * Each method creates one or more property accessors, along with metadata
   * used by this mixin's implementation of `_propertiesChanged` to perform
   * the property effects.
   *
   * Underscored versions of the above methods also exist on the element
   * prototype for adding property effects on instances at runtime.
   *
   * Note that this mixin overrides several `PropertyAccessors` methods, in
   * many cases to maintain guarantees provided by the Polymer 1.x features;
   * notably it changes property accessors to be synchronous by default
   * whereas the default when using `PropertyAccessors` standalone is to be
   * async by default.
   *
   * @mixinFunction
   * @polymer
   * @appliesMixin TemplateStamp
   * @appliesMixin PropertyAccessors
   * @summary Element class mixin that provides meta-programming for Polymer's
   * template binding and data observation system.
   * @template T
   * @param {function(new:T)} superClass Class to apply mixin to.
   * @return {function(new:T)} superClass with mixin applied.
   */var PropertyEffects=dedupingMixin(function(superClass){/**
   * @constructor
   * @implements {Polymer_PropertyAccessors}
   * @implements {Polymer_TemplateStamp}
   * @unrestricted
   * @private
   */var propertyEffectsBase=TemplateStamp(PropertyAccessors(superClass));/**
                                                                                * @polymer
                                                                                * @mixinClass
                                                                                * @implements {Polymer_PropertyEffects}
                                                                                * @extends {propertyEffectsBase}
                                                                                * @unrestricted
                                                                                */var PropertyEffects=/*#__PURE__*/function(_propertyEffectsBase){babelHelpers.inherits(PropertyEffects,_propertyEffectsBase);function PropertyEffects(){var _this9;babelHelpers.classCallCheck(this,PropertyEffects);_this9=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PropertyEffects).call(this));/** @type {boolean} */ // Used to identify users of this mixin, ala instanceof
_this9.__isPropertyEffectsClient=true;/** @type {number} */ // NOTE: used to track re-entrant calls to `_flushProperties`
// path changes dirty check against `__dataTemp` only during one "turn"
// and are cleared when `__dataCounter` returns to 0.
_this9.__dataCounter=0;/** @type {boolean} */_this9.__dataClientsReady;/** @type {Array} */_this9.__dataPendingClients;/** @type {Object} */_this9.__dataToNotify;/** @type {Object} */_this9.__dataLinkedPaths;/** @type {boolean} */_this9.__dataHasPaths;/** @type {Object} */_this9.__dataCompoundStorage;/** @type {Polymer_PropertyEffects} */_this9.__dataHost;/** @type {!Object} */_this9.__dataTemp;/** @type {boolean} */_this9.__dataClientsInitialized;/** @type {!Object} */_this9.__data;/** @type {!Object|null} */_this9.__dataPending;/** @type {!Object} */_this9.__dataOld;/** @type {Object} */_this9.__computeEffects;/** @type {Object} */_this9.__reflectEffects;/** @type {Object} */_this9.__notifyEffects;/** @type {Object} */_this9.__propagateEffects;/** @type {Object} */_this9.__observeEffects;/** @type {Object} */_this9.__readOnly;/** @type {!TemplateInfo} */_this9.__templateInfo;return _this9;}/**
       * @return {!Object<string, string>} Effect prototype property name map.
       */babelHelpers.createClass(PropertyEffects,[{key:"_initializeProperties",/**
       * @override
       * @return {void}
       */value:function _initializeProperties(){babelHelpers.get(babelHelpers.getPrototypeOf(PropertyEffects.prototype),"_initializeProperties",this).call(this);hostStack.registerHost(this);this.__dataClientsReady=false;this.__dataPendingClients=null;this.__dataToNotify=null;this.__dataLinkedPaths=null;this.__dataHasPaths=false;// May be set on instance prior to upgrade
this.__dataCompoundStorage=this.__dataCompoundStorage||null;this.__dataHost=this.__dataHost||null;this.__dataTemp={};this.__dataClientsInitialized=false;}/**
       * Overrides `PropertyAccessors` implementation to provide a
       * more efficient implementation of initializing properties from
       * the prototype on the instance.
       *
       * @override
       * @param {Object} props Properties to initialize on the prototype
       * @return {void}
       */},{key:"_initializeProtoProperties",value:function _initializeProtoProperties(props){this.__data=Object.create(props);this.__dataPending=Object.create(props);this.__dataOld={};}/**
       * Overrides `PropertyAccessors` implementation to avoid setting
       * `_setProperty`'s `shouldNotify: true`.
       *
       * @override
       * @param {Object} props Properties to initialize on the instance
       * @return {void}
       */},{key:"_initializeInstanceProperties",value:function _initializeInstanceProperties(props){var readOnly=this[TYPES.READ_ONLY];for(var prop in props){if(!readOnly||!readOnly[prop]){this.__dataPending=this.__dataPending||{};this.__dataOld=this.__dataOld||{};this.__data[prop]=this.__dataPending[prop]=props[prop];}}}// Prototype setup ----------------------------------------
/**
     * Equivalent to static `addPropertyEffect` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Property that should trigger the effect
     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES
     * @param {Object=} effect Effect metadata object
     * @return {void}
     * @protected
     */},{key:"_addPropertyEffect",value:function _addPropertyEffect(property,type,effect){this._createPropertyAccessor(property,type==TYPES.READ_ONLY);// effects are accumulated into arrays per property based on type
var effects=ensureOwnEffectMap(this,type)[property];if(!effects){effects=this[type][property]=[];}effects.push(effect);}/**
       * Removes the given property effect.
       *
       * @override
       * @param {string} property Property the effect was associated with
       * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES
       * @param {Object=} effect Effect metadata object to remove
       * @return {void}
       */},{key:"_removePropertyEffect",value:function _removePropertyEffect(property,type,effect){var effects=ensureOwnEffectMap(this,type)[property];var idx=effects.indexOf(effect);if(idx>=0){effects.splice(idx,1);}}/**
       * Returns whether the current prototype/instance has a property effect
       * of a certain type.
       *
       * @override
       * @param {string} property Property name
       * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES
       * @return {boolean} True if the prototype/instance has an effect of this
       *     type
       * @protected
       */},{key:"_hasPropertyEffect",value:function _hasPropertyEffect(property,type){var effects=this[type];return Boolean(effects&&effects[property]);}/**
       * Returns whether the current prototype/instance has a "read only"
       * accessor for the given property.
       *
       * @override
       * @param {string} property Property name
       * @return {boolean} True if the prototype/instance has an effect of this
       *     type
       * @protected
       */},{key:"_hasReadOnlyEffect",value:function _hasReadOnlyEffect(property){return this._hasPropertyEffect(property,TYPES.READ_ONLY);}/**
       * Returns whether the current prototype/instance has a "notify"
       * property effect for the given property.
       *
       * @override
       * @param {string} property Property name
       * @return {boolean} True if the prototype/instance has an effect of this
       *     type
       * @protected
       */},{key:"_hasNotifyEffect",value:function _hasNotifyEffect(property){return this._hasPropertyEffect(property,TYPES.NOTIFY);}/**
       * Returns whether the current prototype/instance has a "reflect to
       * attribute" property effect for the given property.
       *
       * @override
       * @param {string} property Property name
       * @return {boolean} True if the prototype/instance has an effect of this
       *     type
       * @protected
       */},{key:"_hasReflectEffect",value:function _hasReflectEffect(property){return this._hasPropertyEffect(property,TYPES.REFLECT);}/**
       * Returns whether the current prototype/instance has a "computed"
       * property effect for the given property.
       *
       * @override
       * @param {string} property Property name
       * @return {boolean} True if the prototype/instance has an effect of this
       *     type
       * @protected
       */},{key:"_hasComputedEffect",value:function _hasComputedEffect(property){return this._hasPropertyEffect(property,TYPES.COMPUTE);}// Runtime ----------------------------------------
/**
     * Sets a pending property or path.  If the root property of the path in
     * question had no accessor, the path is set, otherwise it is enqueued
     * via `_setPendingProperty`.
     *
     * This function isolates relatively expensive functionality necessary
     * for the public API (`set`, `setProperties`, `notifyPath`, and property
     * change listeners via {{...}} bindings), such that it is only done
     * when paths enter the system, and not at every propagation step.  It
     * also sets a `__dataHasPaths` flag on the instance which is used to
     * fast-path slower path-matching code in the property effects host paths.
     *
     * `path` can be a path string or array of path parts as accepted by the
     * public API.
     *
     * @override
     * @param {string | !Array<number|string>} path Path to set
     * @param {*} value Value to set
     * @param {boolean=} shouldNotify Set to true if this change should
     *  cause a property notification event dispatch
     * @param {boolean=} isPathNotification If the path being set is a path
     *   notification of an already changed value, as opposed to a request
     *   to set and notify the change.  In the latter `false` case, a dirty
     *   check is performed and then the value is set to the path before
     *   enqueuing the pending property change.
     * @return {boolean} Returns true if the property/path was enqueued in
     *   the pending changes bag.
     * @protected
     */},{key:"_setPendingPropertyOrPath",value:function _setPendingPropertyOrPath(path,value,shouldNotify,isPathNotification){if(isPathNotification||root(Array.isArray(path)?path[0]:path)!==path){// Dirty check changes being set to a path against the actual object,
// since this is the entry point for paths into the system; from here
// the only dirty checks are against the `__dataTemp` cache to prevent
// duplicate work in the same turn only. Note, if this was a notification
// of a change already set to a path (isPathNotification: true),
// we always let the change through and skip the `set` since it was
// already dirty checked at the point of entry and the underlying
// object has already been updated
if(!isPathNotification){var old=_get(this,path);path=/** @type {string} */_set(this,path,value);// Use property-accessor's simpler dirty check
if(!path||!babelHelpers.get(babelHelpers.getPrototypeOf(PropertyEffects.prototype),"_shouldPropertyChange",this).call(this,path,value,old)){return false;}}this.__dataHasPaths=true;if(this._setPendingProperty(/**@type{string}*/path,value,shouldNotify)){computeLinkedPaths(this,/**@type{string}*/path,value);return true;}}else{if(this.__dataHasAccessor&&this.__dataHasAccessor[path]){return this._setPendingProperty(/**@type{string}*/path,value,shouldNotify);}else{this[path]=value;}}return false;}/**
       * Applies a value to a non-Polymer element/node's property.
       *
       * The implementation makes a best-effort at binding interop:
       * Some native element properties have side-effects when
       * re-setting the same value (e.g. setting `<input>.value` resets the
       * cursor position), so we do a dirty-check before setting the value.
       * However, for better interop with non-Polymer custom elements that
       * accept objects, we explicitly re-set object changes coming from the
       * Polymer world (which may include deep object changes without the
       * top reference changing), erring on the side of providing more
       * information.
       *
       * Users may override this method to provide alternate approaches.
       *
       * @override
       * @param {!Node} node The node to set a property on
       * @param {string} prop The property to set
       * @param {*} value The value to set
       * @return {void}
       * @protected
       */},{key:"_setUnmanagedPropertyToNode",value:function _setUnmanagedPropertyToNode(node,prop,value){// It is a judgment call that resetting primitives is
// "bad" and resettings objects is also "good"; alternatively we could
// implement a whitelist of tag & property values that should never
// be reset (e.g. <input>.value && <select>.value)
if(value!==node[prop]||babelHelpers.typeof(value)=='object'){// Note, className needs style scoping so this needs wrapping.
if(prop==='className'){node=/** @type {!Node} */wrap$1(node);}node[prop]=value;}}/**
       * Overrides the `PropertiesChanged` implementation to introduce special
       * dirty check logic depending on the property & value being set:
       *
       * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})
       *    Stored in `__dataTemp`, dirty checked against `__dataTemp`
       * 2. Object set to simple property (e.g. 'prop': {...})
       *    Stored in `__dataTemp` and `__data`, dirty checked against
       *    `__dataTemp` by default implementation of `_shouldPropertyChange`
       * 3. Primitive value set to simple property (e.g. 'prop': 42)
       *    Stored in `__data`, dirty checked against `__data`
       *
       * The dirty-check is important to prevent cycles due to two-way
       * notification, but paths and objects are only dirty checked against any
       * previous value set during this turn via a "temporary cache" that is
       * cleared when the last `_propertiesChanged` exits. This is so:
       * a. any cached array paths (e.g. 'array.3.prop') may be invalidated
       *    due to array mutations like shift/unshift/splice; this is fine
       *    since path changes are dirty-checked at user entry points like `set`
       * b. dirty-checking for objects only lasts one turn to allow the user
       *    to mutate the object in-place and re-set it with the same identity
       *    and have all sub-properties re-propagated in a subsequent turn.
       *
       * The temp cache is not necessarily sufficient to prevent invalid array
       * paths, since a splice can happen during the same turn (with pathological
       * user code); we could introduce a "fixup" for temporarily cached array
       * paths if needed: https://github.com/Polymer/polymer/issues/4227
       *
       * @override
       * @param {string} property Name of the property
       * @param {*} value Value to set
       * @param {boolean=} shouldNotify True if property should fire notification
       *   event (applies only for `notify: true` properties)
       * @return {boolean} Returns true if the property changed
       */},{key:"_setPendingProperty",value:function _setPendingProperty(property,value,shouldNotify){var propIsPath=this.__dataHasPaths&&isPath(property);var prevProps=propIsPath?this.__dataTemp:this.__data;if(this._shouldPropertyChange(property,value,prevProps[property])){if(!this.__dataPending){this.__dataPending={};this.__dataOld={};}// Ensure old is captured from the last turn
if(!(property in this.__dataOld)){this.__dataOld[property]=this.__data[property];}// Paths are stored in temporary cache (cleared at end of turn),
// which is used for dirty-checking, all others stored in __data
if(propIsPath){this.__dataTemp[property]=value;}else{this.__data[property]=value;}// All changes go into pending property bag, passed to _propertiesChanged
this.__dataPending[property]=value;// Track properties that should notify separately
if(propIsPath||this[TYPES.NOTIFY]&&this[TYPES.NOTIFY][property]){this.__dataToNotify=this.__dataToNotify||{};this.__dataToNotify[property]=shouldNotify;}return true;}return false;}/**
       * Overrides base implementation to ensure all accessors set `shouldNotify`
       * to true, for per-property notification tracking.
       *
       * @override
       * @param {string} property Name of the property
       * @param {*} value Value to set
       * @return {void}
       */},{key:"_setProperty",value:function _setProperty(property,value){if(this._setPendingProperty(property,value,true)){this._invalidateProperties();}}/**
       * Overrides `PropertyAccessor`'s default async queuing of
       * `_propertiesChanged`: if `__dataReady` is false (has not yet been
       * manually flushed), the function no-ops; otherwise flushes
       * `_propertiesChanged` synchronously.
       *
       * @override
       * @return {void}
       */},{key:"_invalidateProperties",value:function _invalidateProperties(){if(this.__dataReady){this._flushProperties();}}/**
       * Enqueues the given client on a list of pending clients, whose
       * pending property changes can later be flushed via a call to
       * `_flushClients`.
       *
       * @override
       * @param {Object} client PropertyEffects client to enqueue
       * @return {void}
       * @protected
       */},{key:"_enqueueClient",value:function _enqueueClient(client){this.__dataPendingClients=this.__dataPendingClients||[];if(client!==this){this.__dataPendingClients.push(client);}}/**
       * Overrides superclass implementation.
       *
       * @override
       * @return {void}
       * @protected
       */},{key:"_flushProperties",value:function _flushProperties(){this.__dataCounter++;babelHelpers.get(babelHelpers.getPrototypeOf(PropertyEffects.prototype),"_flushProperties",this).call(this);this.__dataCounter--;}/**
       * Flushes any clients previously enqueued via `_enqueueClient`, causing
       * their `_flushProperties` method to run.
       *
       * @override
       * @return {void}
       * @protected
       */},{key:"_flushClients",value:function _flushClients(){if(!this.__dataClientsReady){this.__dataClientsReady=true;this._readyClients();// Override point where accessors are turned on; importantly,
// this is after clients have fully readied, providing a guarantee
// that any property effects occur only after all clients are ready.
this.__dataReady=true;}else{this.__enableOrFlushClients();}}// NOTE: We ensure clients either enable or flush as appropriate. This
// handles two corner cases:
// (1) clients flush properly when connected/enabled before the host
// enables; e.g.
//   (a) Templatize stamps with no properties and does not flush and
//   (b) the instance is inserted into dom and
//   (c) then the instance flushes.
// (2) clients enable properly when not connected/enabled when the host
// flushes; e.g.
//   (a) a template is runtime stamped and not yet connected/enabled
//   (b) a host sets a property, causing stamped dom to flush
//   (c) the stamped dom enables.
},{key:"__enableOrFlushClients",value:function __enableOrFlushClients(){var clients=this.__dataPendingClients;if(clients){this.__dataPendingClients=null;for(var _i13=0;_i13<clients.length;_i13++){var client=clients[_i13];if(!client.__dataEnabled){client._enableProperties();}else if(client.__dataPending){client._flushProperties();}}}}/**
       * Perform any initial setup on client dom. Called before the first
       * `_flushProperties` call on client dom and before any element
       * observers are called.
       *
       * @override
       * @return {void}
       * @protected
       */},{key:"_readyClients",value:function _readyClients(){this.__enableOrFlushClients();}/**
       * Sets a bag of property changes to this instance, and
       * synchronously processes all effects of the properties as a batch.
       *
       * Property names must be simple properties, not paths.  Batched
       * path propagation is not supported.
       *
       * @override
       * @param {Object} props Bag of one or more key-value pairs whose key is
       *   a property and value is the new value to set for that property.
       * @param {boolean=} setReadOnly When true, any private values set in
       *   `props` will be set. By default, `setProperties` will not set
       *   `readOnly: true` root properties.
       * @return {void}
       * @public
       */},{key:"setProperties",value:function setProperties(props,setReadOnly){for(var _path in props){if(setReadOnly||!this[TYPES.READ_ONLY]||!this[TYPES.READ_ONLY][_path]){//TODO(kschaaf): explicitly disallow paths in setProperty?
// wildcard observers currently only pass the first changed path
// in the `info` object, and you could do some odd things batching
// paths, e.g. {'foo.bar': {...}, 'foo': null}
this._setPendingPropertyOrPath(_path,props[_path],true);}}this._invalidateProperties();}/**
       * Overrides `PropertyAccessors` so that property accessor
       * side effects are not enabled until after client dom is fully ready.
       * Also calls `_flushClients` callback to ensure client dom is enabled
       * that was not enabled as a result of flushing properties.
       *
       * @override
       * @return {void}
       */},{key:"ready",value:function ready(){// It is important that `super.ready()` is not called here as it
// immediately turns on accessors. Instead, we wait until `readyClients`
// to enable accessors to provide a guarantee that clients are ready
// before processing any accessors side effects.
this._flushProperties();// If no data was pending, `_flushProperties` will not `flushClients`
// so ensure this is done.
if(!this.__dataClientsReady){this._flushClients();}// Before ready, client notifications do not trigger _flushProperties.
// Therefore a flush is necessary here if data has been set.
if(this.__dataPending){this._flushProperties();}}/**
       * Implements `PropertyAccessors`'s properties changed callback.
       *
       * Runs each class of effects for the batch of changed properties in
       * a specific order (compute, propagate, reflect, observe, notify).
       *
       * @override
       * @param {!Object} currentProps Bag of all current accessor values
       * @param {?Object} changedProps Bag of properties changed since the last
       *   call to `_propertiesChanged`
       * @param {?Object} oldProps Bag of previous values for each property
       *   in `changedProps`
       * @return {void}
       */},{key:"_propertiesChanged",value:function _propertiesChanged(currentProps,changedProps,oldProps){// ----------------------------
// let c = Object.getOwnPropertyNames(changedProps || {});
// window.debug && console.group(this.localName + '#' + this.id + ': ' + c);
// if (window.debug) { debugger; }
// ----------------------------
var hasPaths=this.__dataHasPaths;this.__dataHasPaths=false;// Compute properties
runComputedEffects(this,changedProps,oldProps,hasPaths);// Clear notify properties prior to possible reentry (propagate, observe),
// but after computing effects have a chance to add to them
var notifyProps=this.__dataToNotify;this.__dataToNotify=null;// Propagate properties to clients
this._propagatePropertyChanges(changedProps,oldProps,hasPaths);// Flush clients
this._flushClients();// Reflect properties
runEffects(this,this[TYPES.REFLECT],changedProps,oldProps,hasPaths);// Observe properties
runEffects(this,this[TYPES.OBSERVE],changedProps,oldProps,hasPaths);// Notify properties to host
if(notifyProps){runNotifyEffects(this,notifyProps,changedProps,oldProps,hasPaths);}// Clear temporary cache at end of turn
if(this.__dataCounter==1){this.__dataTemp={};}// ----------------------------
// window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);
// ----------------------------
}/**
       * Called to propagate any property changes to stamped template nodes
       * managed by this element.
       *
       * @override
       * @param {Object} changedProps Bag of changed properties
       * @param {Object} oldProps Bag of previous values for changed properties
       * @param {boolean} hasPaths True with `props` contains one or more paths
       * @return {void}
       * @protected
       */},{key:"_propagatePropertyChanges",value:function _propagatePropertyChanges(changedProps,oldProps,hasPaths){if(this[TYPES.PROPAGATE]){runEffects(this,this[TYPES.PROPAGATE],changedProps,oldProps,hasPaths);}var templateInfo=this.__templateInfo;while(templateInfo){runEffects(this,templateInfo.propertyEffects,changedProps,oldProps,hasPaths,templateInfo.nodeList);templateInfo=templateInfo.nextTemplateInfo;}}/**
       * Aliases one data path as another, such that path notifications from one
       * are routed to the other.
       *
       * @override
       * @param {string | !Array<string|number>} to Target path to link.
       * @param {string | !Array<string|number>} from Source path to link.
       * @return {void}
       * @public
       */},{key:"linkPaths",value:function linkPaths(to,from){to=normalize(to);from=normalize(from);this.__dataLinkedPaths=this.__dataLinkedPaths||{};this.__dataLinkedPaths[to]=from;}/**
       * Removes a data path alias previously established with `_linkPaths`.
       *
       * Note, the path to unlink should be the target (`to`) used when
       * linking the paths.
       *
       * @override
       * @param {string | !Array<string|number>} path Target path to unlink.
       * @return {void}
       * @public
       */},{key:"unlinkPaths",value:function unlinkPaths(path){path=normalize(path);if(this.__dataLinkedPaths){delete this.__dataLinkedPaths[path];}}/**
       * Notify that an array has changed.
       *
       * Example:
       *
       *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];
       *     ...
       *     this.items.splice(1, 1, {name: 'Sam'});
       *     this.items.push({name: 'Bob'});
       *     this.notifySplices('items', [
       *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1,
       *         object: this.items, type: 'splice' },
       *       { index: 3, removed: [], addedCount: 1,
       *         object: this.items, type: 'splice'}
       *     ]);
       *
       * @param {string} path Path that should be notified.
       * @param {Array} splices Array of splice records indicating ordered
       *   changes that occurred to the array. Each record should have the
       *   following fields:
       *    * index: index at which the change occurred
       *    * removed: array of items that were removed from this index
       *    * addedCount: number of new items added at this index
       *    * object: a reference to the array in question
       *    * type: the string literal 'splice'
       *
       *   Note that splice records _must_ be normalized such that they are
       *   reported in index order (raw results from `Object.observe` are not
       *   ordered and must be normalized/merged before notifying).
       *
       * @override
       * @return {void}
       * @public
       */},{key:"notifySplices",value:function notifySplices(path,splices){var info={path:''};var array=/** @type {Array} */_get(this,path,info);_notifySplices(this,array,info.path,splices);}/**
       * Convenience method for reading a value from a path.
       *
       * Note, if any part in the path is undefined, this method returns
       * `undefined` (this method does not throw when dereferencing undefined
       * paths).
       *
       * @override
       * @param {(string|!Array<(string|number)>)} path Path to the value
       *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)
       *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that
       *   bracketed expressions are not supported; string-based path parts
       *   *must* be separated by dots.  Note that when dereferencing array
       *   indices, the index may be used as a dotted part directly
       *   (e.g. `users.12.name` or `['users', 12, 'name']`).
       * @param {Object=} root Root object from which the path is evaluated.
       * @return {*} Value at the path, or `undefined` if any part of the path
       *   is undefined.
       * @public
       */},{key:"get",value:function get(path,root){return _get(root||this,path);}/**
       * Convenience method for setting a value to a path and notifying any
       * elements bound to the same path.
       *
       * Note, if any part in the path except for the last is undefined,
       * this method does nothing (this method does not throw when
       * dereferencing undefined paths).
       *
       * @override
       * @param {(string|!Array<(string|number)>)} path Path to the value
       *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)
       *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that
       *   bracketed expressions are not supported; string-based path parts
       *   *must* be separated by dots.  Note that when dereferencing array
       *   indices, the index may be used as a dotted part directly
       *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).
       * @param {*} value Value to set at the specified path.
       * @param {Object=} root Root object from which the path is evaluated.
       *   When specified, no notification will occur.
       * @return {void}
       * @public
       */},{key:"set",value:function set(path,value,root){if(root){_set(root,path,value);}else{if(!this[TYPES.READ_ONLY]||!this[TYPES.READ_ONLY][/** @type {string} */path]){if(this._setPendingPropertyOrPath(path,value,true)){this._invalidateProperties();}}}}/**
       * Adds items onto the end of the array at the path specified.
       *
       * The arguments after `path` and return value match that of
       * `Array.prototype.push`.
       *
       * This method notifies other paths to the same array that a
       * splice occurred to the array.
       *
       * @override
       * @param {string | !Array<string|number>} path Path to array.
       * @param {...*} items Items to push onto array
       * @return {number} New length of the array.
       * @public
       */},{key:"push",value:function push(path){var info={path:''};var array=/** @type {Array}*/_get(this,path,info);var len=array.length;for(var _len=arguments.length,items=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){items[_key-1]=arguments[_key];}var ret=array.push.apply(array,items);if(items.length){notifySplice(this,array,info.path,len,items.length,[]);}return ret;}/**
       * Removes an item from the end of array at the path specified.
       *
       * The arguments after `path` and return value match that of
       * `Array.prototype.pop`.
       *
       * This method notifies other paths to the same array that a
       * splice occurred to the array.
       *
       * @override
       * @param {string | !Array<string|number>} path Path to array.
       * @return {*} Item that was removed.
       * @public
       */},{key:"pop",value:function pop(path){var info={path:''};var array=/** @type {Array} */_get(this,path,info);var hadLength=Boolean(array.length);var ret=array.pop();if(hadLength){notifySplice(this,array,info.path,array.length,0,[ret]);}return ret;}/**
       * Starting from the start index specified, removes 0 or more items
       * from the array and inserts 0 or more new items in their place.
       *
       * The arguments after `path` and return value match that of
       * `Array.prototype.splice`.
       *
       * This method notifies other paths to the same array that a
       * splice occurred to the array.
       *
       * @override
       * @param {string | !Array<string|number>} path Path to array.
       * @param {number} start Index from which to start removing/inserting.
       * @param {number=} deleteCount Number of items to remove.
       * @param {...*} items Items to insert into array.
       * @return {Array} Array of removed items.
       * @public
       */},{key:"splice",value:function splice(path,start,deleteCount){for(var _len2=arguments.length,items=new Array(_len2>3?_len2-3:0),_key2=3;_key2<_len2;_key2++){items[_key2-3]=arguments[_key2];}var info={path:''};var array=/** @type {Array} */_get(this,path,info);// Normalize fancy native splice handling of crazy start values
if(start<0){start=array.length-Math.floor(-start);}else if(start){start=Math.floor(start);}// array.splice does different things based on the number of arguments
// you pass in. Therefore, array.splice(0) and array.splice(0, undefined)
// do different things. In the former, the whole array is cleared. In the
// latter, no items are removed.
// This means that we need to detect whether 1. one of the arguments
// is actually passed in and then 2. determine how many arguments
// we should pass on to the native array.splice
//
var ret;// Omit any additional arguments if they were not passed in
if(arguments.length===2){ret=array.splice(start);// Either start was undefined and the others were defined, but in this
// case we can safely pass on all arguments
//
// Note: this includes the case where none of the arguments were passed in,
// e.g. this.splice('array'). However, if both start and deleteCount
// are undefined, array.splice will not modify the array (as expected)
}else{ret=array.splice.apply(array,[start,deleteCount].concat(items));}// At the end, check whether any items were passed in (e.g. insertions)
// or if the return array contains items (e.g. deletions).
// Only notify if items were added or deleted.
if(items.length||ret.length){notifySplice(this,array,info.path,start,items.length,ret);}return ret;}/**
       * Removes an item from the beginning of array at the path specified.
       *
       * The arguments after `path` and return value match that of
       * `Array.prototype.pop`.
       *
       * This method notifies other paths to the same array that a
       * splice occurred to the array.
       *
       * @override
       * @param {string | !Array<string|number>} path Path to array.
       * @return {*} Item that was removed.
       * @public
       */},{key:"shift",value:function shift(path){var info={path:''};var array=/** @type {Array} */_get(this,path,info);var hadLength=Boolean(array.length);var ret=array.shift();if(hadLength){notifySplice(this,array,info.path,0,0,[ret]);}return ret;}/**
       * Adds items onto the beginning of the array at the path specified.
       *
       * The arguments after `path` and return value match that of
       * `Array.prototype.push`.
       *
       * This method notifies other paths to the same array that a
       * splice occurred to the array.
       *
       * @override
       * @param {string | !Array<string|number>} path Path to array.
       * @param {...*} items Items to insert info array
       * @return {number} New length of the array.
       * @public
       */},{key:"unshift",value:function unshift(path){var info={path:''};var array=/** @type {Array} */_get(this,path,info);for(var _len3=arguments.length,items=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){items[_key3-1]=arguments[_key3];}var ret=array.unshift.apply(array,items);if(items.length){notifySplice(this,array,info.path,0,items.length,[]);}return ret;}/**
       * Notify that a path has changed.
       *
       * Example:
       *
       *     this.item.user.name = 'Bob';
       *     this.notifyPath('item.user.name');
       *
       * @override
       * @param {string} path Path that should be notified.
       * @param {*=} value Value at the path (optional).
       * @return {void}
       * @public
       */},{key:"notifyPath",value:function notifyPath(path,value){/** @type {string} */var propPath;if(arguments.length==1){// Get value if not supplied
var info={path:''};value=_get(this,path,info);propPath=info.path;}else if(Array.isArray(path)){// Normalize path if needed
propPath=normalize(path);}else{propPath=/** @type{string} */path;}if(this._setPendingPropertyOrPath(propPath,value,true,true)){this._invalidateProperties();}}/**
       * Equivalent to static `createReadOnlyProperty` API but can be called on
       * an instance to add effects at runtime.  See that method for
       * full API docs.
       *
       * @override
       * @param {string} property Property name
       * @param {boolean=} protectedSetter Creates a custom protected setter
       *   when `true`.
       * @return {void}
       * @protected
       */},{key:"_createReadOnlyProperty",value:function _createReadOnlyProperty(property,protectedSetter){this._addPropertyEffect(property,TYPES.READ_ONLY);if(protectedSetter){this['_set'+upper(property)]=/** @this {PropertyEffects} */function(value){this._setProperty(property,value);};}}/**
       * Equivalent to static `createPropertyObserver` API but can be called on
       * an instance to add effects at runtime.  See that method for
       * full API docs.
       *
       * @override
       * @param {string} property Property name
       * @param {string|function(*,*)} method Function or name of observer method
       *     to call
       * @param {boolean=} dynamicFn Whether the method name should be included as
       *   a dependency to the effect.
       * @return {void}
       * @protected
       */},{key:"_createPropertyObserver",value:function _createPropertyObserver(property,method,dynamicFn){var info={property:property,method:method,dynamicFn:Boolean(dynamicFn)};this._addPropertyEffect(property,TYPES.OBSERVE,{fn:runObserverEffect,info:info,trigger:{name:property}});if(dynamicFn){this._addPropertyEffect(/** @type {string} */method,TYPES.OBSERVE,{fn:runObserverEffect,info:info,trigger:{name:method}});}}/**
       * Equivalent to static `createMethodObserver` API but can be called on
       * an instance to add effects at runtime.  See that method for
       * full API docs.
       *
       * @override
       * @param {string} expression Method expression
       * @param {boolean|Object=} dynamicFn Boolean or object map indicating
       *   whether method names should be included as a dependency to the effect.
       * @return {void}
       * @protected
       */},{key:"_createMethodObserver",value:function _createMethodObserver(expression,dynamicFn){var sig=parseMethod(expression);if(!sig){throw new Error("Malformed observer expression '"+expression+"'");}createMethodEffect(this,sig,TYPES.OBSERVE,runMethodEffect,null,dynamicFn);}/**
       * Equivalent to static `createNotifyingProperty` API but can be called on
       * an instance to add effects at runtime.  See that method for
       * full API docs.
       *
       * @override
       * @param {string} property Property name
       * @return {void}
       * @protected
       */},{key:"_createNotifyingProperty",value:function _createNotifyingProperty(property){this._addPropertyEffect(property,TYPES.NOTIFY,{fn:runNotifyEffect,info:{eventName:camelToDashCase(property)+'-changed',property:property}});}/**
       * Equivalent to static `createReflectedProperty` API but can be called on
       * an instance to add effects at runtime.  See that method for
       * full API docs.
       *
       * @override
       * @param {string} property Property name
       * @return {void}
       * @protected
       * @suppress {missingProperties} go/missingfnprops
       */},{key:"_createReflectedProperty",value:function _createReflectedProperty(property){var attr=this.constructor.attributeNameForProperty(property);if(attr[0]==='-'){console.warn('Property '+property+' cannot be reflected to attribute '+attr+' because "-" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');}else{this._addPropertyEffect(property,TYPES.REFLECT,{fn:runReflectEffect,info:{attrName:attr}});}}/**
       * Equivalent to static `createComputedProperty` API but can be called on
       * an instance to add effects at runtime.  See that method for
       * full API docs.
       *
       * @override
       * @param {string} property Name of computed property to set
       * @param {string} expression Method expression
       * @param {boolean|Object=} dynamicFn Boolean or object map indicating
       *   whether method names should be included as a dependency to the effect.
       * @return {void}
       * @protected
       */},{key:"_createComputedProperty",value:function _createComputedProperty(property,expression,dynamicFn){var sig=parseMethod(expression);if(!sig){throw new Error("Malformed computed expression '"+expression+"'");}createMethodEffect(this,sig,TYPES.COMPUTE,runComputedEffect,property,dynamicFn);}/**
       * Gather the argument values for a method specified in the provided array
       * of argument metadata.
       *
       * The `path` and `value` arguments are used to fill in wildcard descriptor
       * when the method is being called as a result of a path notification.
       *
       * @param {!Array<!MethodArg>} args Array of argument metadata
       * @param {string} path Property/path name that triggered the method effect
       * @param {Object} props Bag of current property changes
       * @return {Array<*>} Array of argument values
       * @private
       */},{key:"_marshalArgs",value:function _marshalArgs(args,path,props){var data=this.__data;var values=[];for(var _i14=0,l=args.length;_i14<l;_i14++){var _args$_i=args[_i14],name=_args$_i.name,structured=_args$_i.structured,wildcard=_args$_i.wildcard,value=_args$_i.value,literal=_args$_i.literal;if(!literal){if(wildcard){var _matches=isDescendant(name,path);var pathValue=getArgValue(data,props,_matches?path:name);value={path:_matches?path:name,value:pathValue,base:_matches?_get(data,name):pathValue};}else{value=structured?getArgValue(data,props,name):data[name];}}values[_i14]=value;}return values;}// -- static class methods ------------
/**
     * Ensures an accessor exists for the specified property, and adds
     * to a list of "property effects" that will run when the accessor for
     * the specified property is set.  Effects are grouped by "type", which
     * roughly corresponds to a phase in effect processing.  The effect
     * metadata should be in the following form:
     *
     *     {
     *       fn: effectFunction, // Reference to function to call to perform effect
     *       info: { ... }       // Effect metadata passed to function
     *       trigger: {          // Optional triggering metadata; if not provided
     *         name: string      // the property is treated as a wildcard
     *         structured: boolean
     *         wildcard: boolean
     *       }
     *     }
     *
     * Effects are called from `_propertiesChanged` in the following order by
     * type:
     *
     * 1. COMPUTE
     * 2. PROPAGATE
     * 3. REFLECT
     * 4. OBSERVE
     * 5. NOTIFY
     *
     * Effect functions are called with the following signature:
     *
     *     effectFunction(inst, path, props, oldProps, info, hasPaths)
     *
     * @param {string} property Property that should trigger the effect
     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES
     * @param {Object=} effect Effect metadata object
     * @return {void}
     * @protected
     * @nocollapse
     */},{key:"_bindTemplate",// -- binding ----------------------------------------------
/**
     * Equivalent to static `bindTemplate` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * This method may be called on the prototype (for prototypical template
     * binding, to avoid creating accessors every instance) once per prototype,
     * and will be called with `runtimeBinding: true` by `_stampTemplate` to
     * create and link an instance of the template metadata associated with a
     * particular stamping.
     *
     * @override
     * @param {!HTMLTemplateElement} template Template containing binding
     *   bindings
     * @param {boolean=} instanceBinding When false (default), performs
     *   "prototypical" binding of the template and overwrites any previously
     *   bound template for the class. When true (as passed from
     *   `_stampTemplate`), the template info is instanced and linked into
     *   the list of bound templates.
     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,
     *   this is an instance of the prototypical template info
     * @protected
     * @suppress {missingProperties} go/missingfnprops
     */value:function _bindTemplate(template,instanceBinding){var templateInfo=this.constructor._parseTemplate(template);var wasPreBound=this.__templateInfo==templateInfo;// Optimization: since this is called twice for proto-bound templates,
// don't attempt to recreate accessors if this template was pre-bound
if(!wasPreBound){for(var prop in templateInfo.propertyEffects){this._createPropertyAccessor(prop);}}if(instanceBinding){// For instance-time binding, create instance of template metadata
// and link into list of templates if necessary
templateInfo=/** @type {!TemplateInfo} */Object.create(templateInfo);templateInfo.wasPreBound=wasPreBound;if(!wasPreBound&&this.__templateInfo){var last=this.__templateInfoLast||this.__templateInfo;this.__templateInfoLast=last.nextTemplateInfo=templateInfo;templateInfo.previousTemplateInfo=last;return templateInfo;}}return this.__templateInfo=templateInfo;}/**
       * Adds a property effect to the given template metadata, which is run
       * at the "propagate" stage of `_propertiesChanged` when the template
       * has been bound to the element via `_bindTemplate`.
       *
       * The `effect` object should match the format in `_addPropertyEffect`.
       *
       * @param {Object} templateInfo Template metadata to add effect to
       * @param {string} prop Property that should trigger the effect
       * @param {Object=} effect Effect metadata object
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"_stampTemplate",/**
       * Stamps the provided template and performs instance-time setup for
       * Polymer template features, including data bindings, declarative event
       * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment
       * is returned containing the stamped DOM, ready for insertion into the
       * DOM.
       *
       * This method may be called more than once; however note that due to
       * `shadycss` polyfill limitations, only styles from templates prepared
       * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped
       * to the shadow root and support CSS custom properties), and note that
       * `ShadyCSS.prepareTemplate` may only be called once per element. As such,
       * any styles required by in runtime-stamped templates must be included
       * in the main element template.
       *
       * @param {!HTMLTemplateElement} template Template to stamp
       * @return {!StampedTemplate} Cloned template content
       * @override
       * @protected
       */value:function _stampTemplate(template){// Ensures that created dom is `_enqueueClient`'d to this element so
// that it can be flushed on next call to `_flushProperties`
hostStack.beginHosting(this);var dom=babelHelpers.get(babelHelpers.getPrototypeOf(PropertyEffects.prototype),"_stampTemplate",this).call(this,template);hostStack.endHosting(this);var templateInfo=/** @type {!TemplateInfo} */this._bindTemplate(template,true);// Add template-instance-specific data to instanced templateInfo
templateInfo.nodeList=dom.nodeList;// Capture child nodes to allow unstamping of non-prototypical templates
if(!templateInfo.wasPreBound){var nodes=templateInfo.childNodes=[];for(var n=dom.firstChild;n;n=n.nextSibling){nodes.push(n);}}dom.templateInfo=templateInfo;// Setup compound storage, 2-way listeners, and dataHost for bindings
setupBindings(this,templateInfo);// Flush properties into template nodes if already booted
if(this.__dataReady){runEffects(this,templateInfo.propertyEffects,this.__data,null,false,templateInfo.nodeList);}return dom;}/**
       * Removes and unbinds the nodes previously contained in the provided
       * DocumentFragment returned from `_stampTemplate`.
       *
       * @override
       * @param {!StampedTemplate} dom DocumentFragment previously returned
       *   from `_stampTemplate` associated with the nodes to be removed
       * @return {void}
       * @protected
       */},{key:"_removeBoundDom",value:function _removeBoundDom(dom){// Unlink template info
var templateInfo=dom.templateInfo;if(templateInfo.previousTemplateInfo){templateInfo.previousTemplateInfo.nextTemplateInfo=templateInfo.nextTemplateInfo;}if(templateInfo.nextTemplateInfo){templateInfo.nextTemplateInfo.previousTemplateInfo=templateInfo.previousTemplateInfo;}if(this.__templateInfoLast==templateInfo){this.__templateInfoLast=templateInfo.previousTemplateInfo;}templateInfo.previousTemplateInfo=templateInfo.nextTemplateInfo=null;// Remove stamped nodes
var nodes=templateInfo.childNodes;for(var _i15=0;_i15<nodes.length;_i15++){var node=nodes[_i15];node.parentNode.removeChild(node);}}/**
       * Overrides default `TemplateStamp` implementation to add support for
       * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`
       * array is added to `nodeInfo` and populated with binding metadata
       * with information capturing the binding target, and a `parts` array
       * with one or more metadata objects capturing the source(s) of the
       * binding.
       *
       * @param {Node} node Node to parse
       * @param {TemplateInfo} templateInfo Template metadata for current template
       * @param {NodeInfo} nodeInfo Node metadata for current template node
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @protected
       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
       * @nocollapse
       */},{key:"PROPERTY_EFFECT_TYPES",get:function get(){return TYPES;}}],[{key:"addPropertyEffect",value:function addPropertyEffect(property,type,effect){this.prototype._addPropertyEffect(property,type,effect);}/**
       * Creates a single-property observer for the given property.
       *
       * @param {string} property Property name
       * @param {string|function(*,*)} method Function or name of observer method to call
       * @param {boolean=} dynamicFn Whether the method name should be included as
       *   a dependency to the effect.
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createPropertyObserver",value:function createPropertyObserver(property,method,dynamicFn){this.prototype._createPropertyObserver(property,method,dynamicFn);}/**
       * Creates a multi-property "method observer" based on the provided
       * expression, which should be a string in the form of a normal JavaScript
       * function signature: `'methodName(arg1, [..., argn])'`.  Each argument
       * should correspond to a property or path in the context of this
       * prototype (or instance), or may be a literal string or number.
       *
       * @param {string} expression Method expression
       * @param {boolean|Object=} dynamicFn Boolean or object map indicating
       * @return {void}
       *   whether method names should be included as a dependency to the effect.
       * @protected
       * @nocollapse
       */},{key:"createMethodObserver",value:function createMethodObserver(expression,dynamicFn){this.prototype._createMethodObserver(expression,dynamicFn);}/**
       * Causes the setter for the given property to dispatch `<property>-changed`
       * events to notify of changes to the property.
       *
       * @param {string} property Property name
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createNotifyingProperty",value:function createNotifyingProperty(property){this.prototype._createNotifyingProperty(property);}/**
       * Creates a read-only accessor for the given property.
       *
       * To set the property, use the protected `_setProperty` API.
       * To create a custom protected setter (e.g. `_setMyProp()` for
       * property `myProp`), pass `true` for `protectedSetter`.
       *
       * Note, if the property will have other property effects, this method
       * should be called first, before adding other effects.
       *
       * @param {string} property Property name
       * @param {boolean=} protectedSetter Creates a custom protected setter
       *   when `true`.
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createReadOnlyProperty",value:function createReadOnlyProperty(property,protectedSetter){this.prototype._createReadOnlyProperty(property,protectedSetter);}/**
       * Causes the setter for the given property to reflect the property value
       * to a (dash-cased) attribute of the same name.
       *
       * @param {string} property Property name
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createReflectedProperty",value:function createReflectedProperty(property){this.prototype._createReflectedProperty(property);}/**
       * Creates a computed property whose value is set to the result of the
       * method described by the given `expression` each time one or more
       * arguments to the method changes.  The expression should be a string
       * in the form of a normal JavaScript function signature:
       * `'methodName(arg1, [..., argn])'`
       *
       * @param {string} property Name of computed property to set
       * @param {string} expression Method expression
       * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether
       *   method names should be included as a dependency to the effect.
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createComputedProperty",value:function createComputedProperty(property,expression,dynamicFn){this.prototype._createComputedProperty(property,expression,dynamicFn);}/**
       * Parses the provided template to ensure binding effects are created
       * for them, and then ensures property accessors are created for any
       * dependent properties in the template.  Binding effects for bound
       * templates are stored in a linked list on the instance so that
       * templates can be efficiently stamped and unstamped.
       *
       * @param {!HTMLTemplateElement} template Template containing binding
       *   bindings
       * @return {!TemplateInfo} Template metadata object
       * @protected
       * @nocollapse
       */},{key:"bindTemplate",value:function bindTemplate(template){return this.prototype._bindTemplate(template);}},{key:"_addTemplatePropertyEffect",value:function _addTemplatePropertyEffect(templateInfo,prop,effect){var hostProps=templateInfo.hostProps=templateInfo.hostProps||{};hostProps[prop]=true;var effects=templateInfo.propertyEffects=templateInfo.propertyEffects||{};var propEffects=effects[prop]=effects[prop]||[];propEffects.push(effect);}},{key:"_parseTemplateNode",value:function _parseTemplateNode(node,templateInfo,nodeInfo){// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
var noted=propertyEffectsBase._parseTemplateNode.call(this,node,templateInfo,nodeInfo);if(node.nodeType===Node.TEXT_NODE){var parts=this._parseBindings(node.textContent,templateInfo);if(parts){// Initialize the textContent with any literal parts
// NOTE: default to a space here so the textNode remains; some browsers
// (IE) omit an empty textNode following cloneNode/importNode.
node.textContent=literalFromParts(parts)||' ';addBinding(this,templateInfo,nodeInfo,'text','textContent',parts);noted=true;}}return noted;}/**
       * Overrides default `TemplateStamp` implementation to add support for
       * parsing bindings from attributes.  A `bindings`
       * array is added to `nodeInfo` and populated with binding metadata
       * with information capturing the binding target, and a `parts` array
       * with one or more metadata objects capturing the source(s) of the
       * binding.
       *
       * @param {Element} node Node to parse
       * @param {TemplateInfo} templateInfo Template metadata for current template
       * @param {NodeInfo} nodeInfo Node metadata for current template node
       * @param {string} name Attribute name
       * @param {string} value Attribute value
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @protected
       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
       * @nocollapse
       */},{key:"_parseTemplateNodeAttribute",value:function _parseTemplateNodeAttribute(node,templateInfo,nodeInfo,name,value){var parts=this._parseBindings(value,templateInfo);if(parts){// Attribute or property
var origName=name;var kind='property';// The only way we see a capital letter here is if the attr has
// a capital letter in it per spec. In this case, to make sure
// this binding works, we go ahead and make the binding to the attribute.
if(capitalAttributeRegex.test(name)){kind='attribute';}else if(name[name.length-1]=='$'){name=name.slice(0,-1);kind='attribute';}// Initialize attribute bindings with any literal parts
var literal=literalFromParts(parts);if(literal&&kind=='attribute'){// Ensure a ShadyCSS template scoped style is not removed
// when a class$ binding's initial literal value is set.
if(name=='class'&&node.hasAttribute('class')){literal+=' '+node.getAttribute(name);}node.setAttribute(name,literal);}// Clear attribute before removing, since IE won't allow removing
// `value` attribute if it previously had a value (can't
// unconditionally set '' before removing since attributes with `$`
// can't be set using setAttribute)
if(node.localName==='input'&&origName==='value'){node.setAttribute(origName,'');}// Remove annotation
node.removeAttribute(origName);// Case hackery: attributes are lower-case, but bind targets
// (properties) are case sensitive. Gambit is to map dash-case to
// camel-case: `foo-bar` becomes `fooBar`.
// Attribute bindings are excepted.
if(kind==='property'){name=dashToCamelCase(name);}addBinding(this,templateInfo,nodeInfo,kind,name,parts,literal);return true;}else{// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
return propertyEffectsBase._parseTemplateNodeAttribute.call(this,node,templateInfo,nodeInfo,name,value);}}/**
       * Overrides default `TemplateStamp` implementation to add support for
       * binding the properties that a nested template depends on to the template
       * as `_host_<property>`.
       *
       * @param {Node} node Node to parse
       * @param {TemplateInfo} templateInfo Template metadata for current template
       * @param {NodeInfo} nodeInfo Node metadata for current template node
       * @return {boolean} `true` if the visited node added node-specific
       *   metadata to `nodeInfo`
       * @protected
       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
       * @nocollapse
       */},{key:"_parseTemplateNestedTemplate",value:function _parseTemplateNestedTemplate(node,templateInfo,nodeInfo){// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
var noted=propertyEffectsBase._parseTemplateNestedTemplate.call(this,node,templateInfo,nodeInfo);// Merge host props into outer template and add bindings
var hostProps=nodeInfo.templateInfo.hostProps;var mode='{';for(var source in hostProps){var parts=[{mode:mode,source:source,dependencies:[source]}];addBinding(this,templateInfo,nodeInfo,'property','_host_'+source,parts);}return noted;}/**
       * Called to parse text in a template (either attribute values or
       * textContent) into binding metadata.
       *
       * Any overrides of this method should return an array of binding part
       * metadata  representing one or more bindings found in the provided text
       * and any "literal" text in between.  Any non-literal parts will be passed
       * to `_evaluateBinding` when any dependencies change.  The only required
       * fields of each "part" in the returned array are as follows:
       *
       * - `dependencies` - Array containing trigger metadata for each property
       *   that should trigger the binding to update
       * - `literal` - String containing text if the part represents a literal;
       *   in this case no `dependencies` are needed
       *
       * Additional metadata for use by `_evaluateBinding` may be provided in
       * each part object as needed.
       *
       * The default implementation handles the following types of bindings
       * (one or more may be intermixed with literal strings):
       * - Property binding: `[[prop]]`
       * - Path binding: `[[object.prop]]`
       * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`
       * - Two-way property or path bindings (supports negation):
       *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`
       * - Inline computed method (supports negation):
       *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`
       *
       * The default implementation uses a regular expression for best
       * performance. However, the regular expression uses a white-list of
       * allowed characters in a data-binding, which causes problems for
       * data-bindings that do use characters not in this white-list.
       *
       * Instead of updating the white-list with all allowed characters,
       * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)
       * that uses a state machine instead. This state machine is able to handle
       * all characters. However, it is slightly less performant, therefore we
       * extracted it into a separate optional mixin.
       *
       * @param {string} text Text to parse from attribute or textContent
       * @param {Object} templateInfo Current template metadata
       * @return {Array<!BindingPart>} Array of binding part metadata
       * @protected
       * @nocollapse
       */},{key:"_parseBindings",value:function _parseBindings(text,templateInfo){var parts=[];var lastIndex=0;var m;// Example: "literal1{{prop}}literal2[[!compute(foo,bar)]]final"
// Regex matches:
//        Iteration 1:  Iteration 2:
// m[1]: '{{'          '[['
// m[2]: ''            '!'
// m[3]: 'prop'        'compute(foo,bar)'
while((m=bindingRegex.exec(text))!==null){// Add literal part
if(m.index>lastIndex){parts.push({literal:text.slice(lastIndex,m.index)});}// Add binding part
var mode=m[1][0];var negate=Boolean(m[2]);var source=m[3].trim();var customEvent=false,notifyEvent='',colon=-1;if(mode=='{'&&(colon=source.indexOf('::'))>0){notifyEvent=source.substring(colon+2);source=source.substring(0,colon);customEvent=true;}var signature=parseMethod(source);var dependencies=[];if(signature){// Inline computed function
var args=signature.args,methodName=signature.methodName;for(var _i16=0;_i16<args.length;_i16++){var arg=args[_i16];if(!arg.literal){dependencies.push(arg);}}var dynamicFns=templateInfo.dynamicFns;if(dynamicFns&&dynamicFns[methodName]||signature.static){dependencies.push(methodName);signature.dynamicFn=true;}}else{// Property or path
dependencies.push(source);}parts.push({source:source,mode:mode,negate:negate,customEvent:customEvent,signature:signature,dependencies:dependencies,event:notifyEvent});lastIndex=bindingRegex.lastIndex;}// Add a final literal part
if(lastIndex&&lastIndex<text.length){var literal=text.substring(lastIndex);if(literal){parts.push({literal:literal});}}if(parts.length){return parts;}else{return null;}}/**
       * Called to evaluate a previously parsed binding part based on a set of
       * one or more changed dependencies.
       *
       * @param {!Polymer_PropertyEffects} inst Element that should be used as
       *     scope for binding dependencies
       * @param {BindingPart} part Binding part metadata
       * @param {string} path Property/path that triggered this effect
       * @param {Object} props Bag of current property changes
       * @param {Object} oldProps Bag of previous values for changed properties
       * @param {boolean} hasPaths True with `props` contains one or more paths
       * @return {*} Value the binding part evaluated to
       * @protected
       * @nocollapse
       */},{key:"_evaluateBinding",value:function _evaluateBinding(inst,part,path,props,oldProps,hasPaths){var value;if(part.signature){value=runMethodEffect(inst,path,props,oldProps,part.signature);}else if(path!=part.source){value=_get(inst,part.source);}else{if(hasPaths&&isPath(path)){value=_get(inst,path);}else{value=inst.__data[path];}}if(part.negate){value=!value;}return value;}}]);return PropertyEffects;}(propertyEffectsBase);return PropertyEffects;});/**
     * Helper api for enqueuing client dom created by a host element.
     *
     * By default elements are flushed via `_flushProperties` when
     * `connectedCallback` is called. Elements attach their client dom to
     * themselves at `ready` time which results from this first flush.
     * This provides an ordering guarantee that the client dom an element
     * creates is flushed before the element itself (i.e. client `ready`
     * fires before host `ready`).
     *
     * However, if `_flushProperties` is called *before* an element is connected,
     * as for example `Templatize` does, this ordering guarantee cannot be
     * satisfied because no elements are connected. (Note: Bound elements that
     * receive data do become enqueued clients and are properly ordered but
     * unbound elements are not.)
     *
     * To maintain the desired "client before host" ordering guarantee for this
     * case we rely on the "host stack. Client nodes registers themselves with
     * the creating host element when created. This ensures that all client dom
     * is readied in the proper order, maintaining the desired guarantee.
     *
     * @private
     */_exports.PropertyEffects=PropertyEffects;var HostStack=/*#__PURE__*/function(){function HostStack(){babelHelpers.classCallCheck(this,HostStack);this.stack=[];}/**
     * @param {*} inst Instance to add to hostStack
     * @return {void}
     */babelHelpers.createClass(HostStack,[{key:"registerHost",value:function registerHost(inst){if(this.stack.length){var host=this.stack[this.stack.length-1];host._enqueueClient(inst);}}/**
     * @param {*} inst Instance to begin hosting
     * @return {void}
     */},{key:"beginHosting",value:function beginHosting(inst){this.stack.push(inst);}/**
     * @param {*} inst Instance to end hosting
     * @return {void}
     */},{key:"endHosting",value:function endHosting(inst){var stackLen=this.stack.length;if(stackLen&&this.stack[stackLen-1]==inst){this.stack.pop();}}}]);return HostStack;}();var hostStack=new HostStack();var propertyEffects={__proto__:null,PropertyEffects:PropertyEffects};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */ /**
       * Total number of Polymer element instances created.
       * @type {number}
       */_exports.$propertyEffects=propertyEffects;var instanceCount=0;_exports.instanceCount=instanceCount;function incrementInstanceCount(){_exports.instanceCount=instanceCount=instanceCount+1;}/**
   * Array of Polymer element classes that have been finalized.
   * @type {!Array<!PolymerElementConstructor>}
   */var registrations=[];/**
                                  * @param {!PolymerElementConstructor} prototype Element prototype to log
                                  * @private
                                  */_exports.registrations=registrations;function _regLog(prototype){console.log('['+/** @type {?} */prototype.is+']: registered');}/**
   * Registers a class prototype for telemetry purposes.
   * @param {!PolymerElementConstructor} prototype Element prototype to register
   * @protected
   */function register(prototype){registrations.push(prototype);}/**
   * Logs all elements registered with an `is` to the console.
   * @public
   */function dumpRegistrations(){registrations.forEach(_regLog);}var telemetry={__proto__:null,get instanceCount(){return instanceCount;},incrementInstanceCount:incrementInstanceCount,registrations:registrations,register:register,dumpRegistrations:dumpRegistrations};_exports.$telemetry=telemetry;function normalizeProperties(props){var output={};for(var _p9 in props){var o=props[_p9];output[_p9]=typeof o==='function'?{type:o}:o;}return output;}/**
   * Mixin that provides a minimal starting point to using the PropertiesChanged
   * mixin by providing a mechanism to declare properties in a static
   * getter (e.g. static get properties() { return { foo: String } }). Changes
   * are reported via the `_propertiesChanged` method.
   *
   * This mixin provides no specific support for rendering. Users are expected
   * to create a ShadowRoot and put content into it and update it in whatever
   * way makes sense. This can be done in reaction to properties changing by
   * implementing `_propertiesChanged`.
   *
   * @mixinFunction
   * @polymer
   * @appliesMixin PropertiesChanged
   * @summary Mixin that provides a minimal starting point for using
   * the PropertiesChanged mixin by providing a declarative `properties` object.
   * @template T
   * @param {function(new:T)} superClass Class to apply mixin to.
   * @return {function(new:T)} superClass with mixin applied.
   */var PropertiesMixin=dedupingMixin(function(superClass){/**
   * @constructor
   * @implements {Polymer_PropertiesChanged}
   * @private
   */var base=PropertiesChanged(superClass);/**
                                                  * Returns the super class constructor for the given class, if it is an
                                                  * instance of the PropertiesMixin.
                                                  *
                                                  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor
                                                  * @return {?PropertiesMixinConstructor} Super class constructor
                                                  */function superPropertiesClass(constructor){var superCtor=Object.getPrototypeOf(constructor);// Note, the `PropertiesMixin` class below only refers to the class
// generated by this call to the mixin; the instanceof test only works
// because the mixin is deduped and guaranteed only to apply once, hence
// all constructors in a proto chain will see the same `PropertiesMixin`
return babelHelpers.instanceof(superCtor.prototype,PropertiesMixin)?/** @type {!PropertiesMixinConstructor} */superCtor:null;}/**
     * Returns a memoized version of the `properties` object for the
     * given class. Properties not in object format are converted to at
     * least {type}.
     *
     * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor
     * @return {Object} Memoized properties object
     */function ownProperties(constructor){if(!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties',constructor))){var _props=null;if(constructor.hasOwnProperty(JSCompiler_renameProperty('properties',constructor))){var properties=constructor.properties;if(properties){_props=normalizeProperties(properties);}}constructor.__ownProperties=_props;}return constructor.__ownProperties;}/**
     * @polymer
     * @mixinClass
     * @extends {base}
     * @implements {Polymer_PropertiesMixin}
     * @unrestricted
     */var PropertiesMixin=/*#__PURE__*/function(_base2){babelHelpers.inherits(PropertiesMixin,_base2);function PropertiesMixin(){babelHelpers.classCallCheck(this,PropertiesMixin);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PropertiesMixin).apply(this,arguments));}babelHelpers.createClass(PropertiesMixin,[{key:"_initializeProperties",/**
       * Overrides `PropertiesChanged` method and adds a call to
       * `finalize` which lazily configures the element's property accessors.
       * @override
       * @return {void}
       */value:function _initializeProperties(){incrementInstanceCount();this.constructor.finalize();babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesMixin.prototype),"_initializeProperties",this).call(this);}/**
       * Called when the element is added to a document.
       * Calls `_enableProperties` to turn on property system from
       * `PropertiesChanged`.
       * @suppress {missingProperties} Super may or may not implement the callback
       * @return {void}
       * @override
       */},{key:"connectedCallback",value:function connectedCallback(){if(babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesMixin.prototype),"connectedCallback",this)){babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesMixin.prototype),"connectedCallback",this).call(this);}this._enableProperties();}/**
       * Called when the element is removed from a document
       * @suppress {missingProperties} Super may or may not implement the callback
       * @return {void}
       * @override
       */},{key:"disconnectedCallback",value:function disconnectedCallback(){if(babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesMixin.prototype),"disconnectedCallback",this)){babelHelpers.get(babelHelpers.getPrototypeOf(PropertiesMixin.prototype),"disconnectedCallback",this).call(this);}}}],[{key:"finalize",/**
       * Finalizes an element definition, including ensuring any super classes
       * are also finalized. This includes ensuring property
       * accessors exist on the element prototype. This method calls
       * `_finalizeClass` to finalize each constructor in the prototype chain.
       * @return {void}
       * @nocollapse
       */value:function finalize(){if(!this.hasOwnProperty(JSCompiler_renameProperty('__finalized',this))){var superCtor=superPropertiesClass(/** @type {!PropertiesMixinConstructor} */this);if(superCtor){superCtor.finalize();}this.__finalized=true;this._finalizeClass();}}/**
       * Finalize an element class. This includes ensuring property
       * accessors exist on the element prototype. This method is called by
       * `finalize` and finalizes the class constructor.
       *
       * @protected
       * @nocollapse
       */},{key:"_finalizeClass",value:function _finalizeClass(){var props=ownProperties(/** @type {!PropertiesMixinConstructor} */this);if(props){/** @type {?} */this.createProperties(props);}}/**
       * Returns a memoized version of all properties, including those inherited
       * from super classes. Properties not in object format are converted to
       * at least {type}.
       *
       * @return {Object} Object containing properties for this class
       * @protected
       * @nocollapse
       */},{key:"typeForProperty",/**
       * Overrides `PropertiesChanged` method to return type specified in the
       * static `properties` object for the given property.
       * @param {string} name Name of property
       * @return {*} Type to which to deserialize attribute
       *
       * @protected
       * @nocollapse
       */value:function typeForProperty(name){var info=this._properties[name];return info&&info.type;}},{key:"observedAttributes",/**
     * Implements standard custom elements getter to observes the attributes
     * listed in `properties`.
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */get:function get(){var _this10=this;if(!this.hasOwnProperty('__observedAttributes')){register(this.prototype);var _props2=this._properties;this.__observedAttributes=_props2?Object.keys(_props2).map(function(p){return _this10.attributeNameForProperty(p);}):[];}return this.__observedAttributes;}},{key:"_properties",get:function get(){if(!this.hasOwnProperty(JSCompiler_renameProperty('__properties',this))){var superCtor=superPropertiesClass(/** @type {!PropertiesMixinConstructor} */this);this.__properties=Object.assign({},superCtor&&superCtor._properties,ownProperties(/** @type {PropertiesMixinConstructor} */this));}return this.__properties;}}]);return PropertiesMixin;}(base);return PropertiesMixin;});_exports.PropertiesMixin=PropertiesMixin;var propertiesMixin={__proto__:null,PropertiesMixin:PropertiesMixin};_exports.$propertiesMixin=propertiesMixin;var bundledImportMeta=_objectSpread({},meta,{url:new URL('../%40polymer/polymer/lib/mixins/element-mixin.js',meta.url).href});var version='3.3.0';_exports.version$1=_exports.version=version;var builtCSS=window.ShadyCSS&&window.ShadyCSS['cssBuild'];/**
                                                                  * Element class mixin that provides the core API for Polymer's meta-programming
                                                                  * features including template stamping, data-binding, attribute deserialization,
                                                                  * and property change observation.
                                                                  *
                                                                  * Subclassers may provide the following static getters to return metadata
                                                                  * used to configure Polymer's features for the class:
                                                                  *
                                                                  * - `static get is()`: When the template is provided via a `dom-module`,
                                                                  *   users should return the `dom-module` id from a static `is` getter.  If
                                                                  *   no template is needed or the template is provided directly via the
                                                                  *   `template` getter, there is no need to define `is` for the element.
                                                                  *
                                                                  * - `static get template()`: Users may provide the template directly (as
                                                                  *   opposed to via `dom-module`) by implementing a static `template` getter.
                                                                  *   The getter must return an `HTMLTemplateElement`.
                                                                  *
                                                                  * - `static get properties()`: Should return an object describing
                                                                  *   property-related metadata used by Polymer features (key: property name
                                                                  *   value: object containing property metadata). Valid keys in per-property
                                                                  *   metadata include:
                                                                  *   - `type` (String|Number|Object|Array|...): Used by
                                                                  *     `attributeChangedCallback` to determine how string-based attributes
                                                                  *     are deserialized to JavaScript property values.
                                                                  *   - `notify` (boolean): Causes a change in the property to fire a
                                                                  *     non-bubbling event called `<property>-changed`. Elements that have
                                                                  *     enabled two-way binding to the property use this event to observe changes.
                                                                  *   - `readOnly` (boolean): Creates a getter for the property, but no setter.
                                                                  *     To set a read-only property, use the private setter method
                                                                  *     `_setProperty(property, value)`.
                                                                  *   - `observer` (string): Observer method name that will be called when
                                                                  *     the property changes. The arguments of the method are
                                                                  *     `(value, previousValue)`.
                                                                  *   - `computed` (string): String describing method and dependent properties
                                                                  *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).
                                                                  *     Computed properties are read-only by default and can only be changed
                                                                  *     via the return value of the computing method.
                                                                  *
                                                                  * - `static get observers()`: Array of strings describing multi-property
                                                                  *   observer methods and their dependent properties (e.g.
                                                                  *   `'observeABC(a, b, c)'`).
                                                                  *
                                                                  * The base class provides default implementations for the following standard
                                                                  * custom element lifecycle callbacks; users may override these, but should
                                                                  * call the super method to ensure
                                                                  * - `constructor`: Run when the element is created or upgraded
                                                                  * - `connectedCallback`: Run each time the element is connected to the
                                                                  *   document
                                                                  * - `disconnectedCallback`: Run each time the element is disconnected from
                                                                  *   the document
                                                                  * - `attributeChangedCallback`: Run each time an attribute in
                                                                  *   `observedAttributes` is set or removed (note: this element's default
                                                                  *   `observedAttributes` implementation will automatically return an array
                                                                  *   of dash-cased attributes based on `properties`)
                                                                  *
                                                                  * @mixinFunction
                                                                  * @polymer
                                                                  * @appliesMixin PropertyEffects
                                                                  * @appliesMixin PropertiesMixin
                                                                  * @property rootPath {string} Set to the value of `rootPath`,
                                                                  *   which defaults to the main document path
                                                                  * @property importPath {string} Set to the value of the class's static
                                                                  *   `importPath` property, which defaults to the path of this element's
                                                                  *   `dom-module` (when `is` is used), but can be overridden for other
                                                                  *   import strategies.
                                                                  * @summary Element class mixin that provides the core API for Polymer's
                                                                  * meta-programming features.
                                                                  * @template T
                                                                  * @param {function(new:T)} superClass Class to apply mixin to.
                                                                  * @return {function(new:T)} superClass with mixin applied.
                                                                  */var ElementMixin=dedupingMixin(function(base){/**
   * @constructor
   * @implements {Polymer_PropertyEffects}
   * @implements {Polymer_PropertiesMixin}
   * @extends {HTMLElement}
   * @private
   */var polymerElementBase=PropertiesMixin(PropertyEffects(base));/**
                                                                         * Returns a list of properties with default values.
                                                                         * This list is created as an optimization since it is a subset of
                                                                         * the list returned from `_properties`.
                                                                         * This list is used in `_initializeProperties` to set property defaults.
                                                                         *
                                                                         * @param {PolymerElementConstructor} constructor Element class
                                                                         * @return {PolymerElementProperties} Flattened properties for this class
                                                                         *   that have default values
                                                                         * @private
                                                                         */function propertyDefaults(constructor){if(!constructor.hasOwnProperty(JSCompiler_renameProperty('__propertyDefaults',constructor))){constructor.__propertyDefaults=null;var _props3=constructor._properties;for(var _p10 in _props3){var info=_props3[_p10];if('value'in info){constructor.__propertyDefaults=constructor.__propertyDefaults||{};constructor.__propertyDefaults[_p10]=info;}}}return constructor.__propertyDefaults;}/**
     * Returns a memoized version of the `observers` array.
     * @param {PolymerElementConstructor} constructor Element class
     * @return {Array} Array containing own observers for the given class
     * @protected
     */function ownObservers(constructor){if(!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownObservers',constructor))){constructor.__ownObservers=constructor.hasOwnProperty(JSCompiler_renameProperty('observers',constructor))?/** @type {PolymerElementConstructor} */constructor.observers:null;}return constructor.__ownObservers;}/**
     * Creates effects for a property.
     *
     * Note, once a property has been set to
     * `readOnly`, `computed`, `reflectToAttribute`, or `notify`
     * these values may not be changed. For example, a subclass cannot
     * alter these settings. However, additional `observers` may be added
     * by subclasses.
     *
     * The info object should contain property metadata as follows:
     *
     * * `type`: {function} type to which an attribute matching the property
     * is deserialized. Note the property is camel-cased from a dash-cased
     * attribute. For example, 'foo-bar' attribute is deserialized to a
     * property named 'fooBar'.
     *
     * * `readOnly`: {boolean} creates a readOnly property and
     * makes a private setter for the private of the form '_setFoo' for a
     * property 'foo',
     *
     * * `computed`: {string} creates a computed property. A computed property
     * is also automatically set to `readOnly: true`. The value is calculated
     * by running a method and arguments parsed from the given string. For
     * example 'compute(foo)' will compute a given property when the
     * 'foo' property changes by executing the 'compute' method. This method
     * must return the computed value.
     *
     * * `reflectToAttribute`: {boolean} If true, the property value is reflected
     * to an attribute of the same name. Note, the attribute is dash-cased
     * so a property named 'fooBar' is reflected as 'foo-bar'.
     *
     * * `notify`: {boolean} sends a non-bubbling notification event when
     * the property changes. For example, a property named 'foo' sends an
     * event named 'foo-changed' with `event.detail` set to the value of
     * the property.
     *
     * * observer: {string} name of a method that runs when the property
     * changes. The arguments of the method are (value, previousValue).
     *
     * Note: Users may want control over modifying property
     * effects via subclassing. For example, a user might want to make a
     * reflectToAttribute property not do so in a subclass. We've chosen to
     * disable this because it leads to additional complication.
     * For example, a readOnly effect generates a special setter. If a subclass
     * disables the effect, the setter would fail unexpectedly.
     * Based on feedback, we may want to try to make effects more malleable
     * and/or provide an advanced api for manipulating them.
     *
     * @param {!PolymerElement} proto Element class prototype to add accessors
     *   and effects to
     * @param {string} name Name of the property.
     * @param {Object} info Info object from which to create property effects.
     * Supported keys:
     * @param {Object} allProps Flattened map of all properties defined in this
     *   element (including inherited properties)
     * @return {void}
     * @private
     */function createPropertyFromConfig(proto,name,info,allProps){// computed forces readOnly...
if(info.computed){info.readOnly=true;}// Note, since all computed properties are readOnly, this prevents
// adding additional computed property effects (which leads to a confusing
// setup where multiple triggers for setting a property)
// While we do have `hasComputedEffect` this is set on the property's
// dependencies rather than itself.
if(info.computed){if(proto._hasReadOnlyEffect(name)){console.warn("Cannot redefine computed property '".concat(name,"'."));}else{proto._createComputedProperty(name,info.computed,allProps);}}if(info.readOnly&&!proto._hasReadOnlyEffect(name)){proto._createReadOnlyProperty(name,!info.computed);}else if(info.readOnly===false&&proto._hasReadOnlyEffect(name)){console.warn("Cannot make readOnly property '".concat(name,"' non-readOnly."));}if(info.reflectToAttribute&&!proto._hasReflectEffect(name)){proto._createReflectedProperty(name);}else if(info.reflectToAttribute===false&&proto._hasReflectEffect(name)){console.warn("Cannot make reflected property '".concat(name,"' non-reflected."));}if(info.notify&&!proto._hasNotifyEffect(name)){proto._createNotifyingProperty(name);}else if(info.notify===false&&proto._hasNotifyEffect(name)){console.warn("Cannot make notify property '".concat(name,"' non-notify."));}// always add observer
if(info.observer){proto._createPropertyObserver(name,info.observer,allProps[info.observer]);}// always create the mapping from attribute back to property for deserialization.
proto._addPropertyToAttributeMap(name);}/**
     * Process all style elements in the element template. Styles with the
     * `include` attribute are processed such that any styles in
     * the associated "style modules" are included in the element template.
     * @param {PolymerElementConstructor} klass Element class
     * @param {!HTMLTemplateElement} template Template to process
     * @param {string} is Name of element
     * @param {string} baseURI Base URI for element
     * @private
     */function processElementStyles(klass,template,is,baseURI){if(!builtCSS){var templateStyles=template.content.querySelectorAll('style');var stylesWithImports=stylesFromTemplate(template);// insert styles from <link rel="import" type="css"> at the top of the template
var linkedStyles=stylesFromModuleImports(is);var firstTemplateChild=template.content.firstElementChild;for(var idx=0;idx<linkedStyles.length;idx++){var s=linkedStyles[idx];s.textContent=klass._processStyleText(s.textContent,baseURI);template.content.insertBefore(s,firstTemplateChild);}// keep track of the last "concrete" style in the template we have encountered
var templateStyleIndex=0;// ensure all gathered styles are actually in this template.
for(var _i17=0;_i17<stylesWithImports.length;_i17++){var _s=stylesWithImports[_i17];var templateStyle=templateStyles[templateStyleIndex];// if the style is not in this template, it's been "included" and
// we put a clone of it in the template before the style that included it
if(templateStyle!==_s){_s=_s.cloneNode(true);templateStyle.parentNode.insertBefore(_s,templateStyle);}else{templateStyleIndex++;}_s.textContent=klass._processStyleText(_s.textContent,baseURI);}}if(window.ShadyCSS){window.ShadyCSS.prepareTemplate(template,is);}}/**
     * Look up template from dom-module for element
     *
     * @param {string} is Element name to look up
     * @return {?HTMLTemplateElement|undefined} Template found in dom module, or
     *   undefined if not found
     * @protected
     */function getTemplateFromDomModule(is){var template=null;// Under strictTemplatePolicy in 3.x+, dom-module lookup is only allowed
// when opted-in via allowTemplateFromDomModule
if(is&&(!strictTemplatePolicy||allowTemplateFromDomModule)){template=/** @type {?HTMLTemplateElement} */DomModule.import(is,'template');// Under strictTemplatePolicy, require any element with an `is`
// specified to have a dom-module
if(strictTemplatePolicy&&!template){throw new Error("strictTemplatePolicy: expecting dom-module or null template for ".concat(is));}}return template;}/**
     * @polymer
     * @mixinClass
     * @unrestricted
     * @implements {Polymer_ElementMixin}
     * @extends {polymerElementBase}
     */var PolymerElement=/*#__PURE__*/function(_polymerElementBase){babelHelpers.inherits(PolymerElement,_polymerElementBase);babelHelpers.createClass(PolymerElement,null,[{key:"_finalizeClass",/**
       * Override of PropertiesMixin _finalizeClass to create observers and
       * find the template.
       * @return {void}
       * @protected
       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
       * @nocollapse
       */value:function _finalizeClass(){// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
polymerElementBase._finalizeClass.call(this);var observers=ownObservers(this);if(observers){this.createObservers(observers,this._properties);}this._prepareTemplate();}/** @nocollapse */},{key:"_prepareTemplate",value:function _prepareTemplate(){// note: create "working" template that is finalized at instance time
var template=/** @type {PolymerElementConstructor} */this.template;if(template){if(typeof template==='string'){console.error('template getter must return HTMLTemplateElement');template=null;}else if(!legacyOptimizations){template=template.cloneNode(true);}}/** @override */this.prototype._template=template;}/**
       * Override of PropertiesChanged createProperties to create accessors
       * and property effects for all of the properties.
       * @param {!Object} props .
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createProperties",value:function createProperties(props){for(var _p11 in props){createPropertyFromConfig(/** @type {?} */this.prototype,_p11,props[_p11],props);}}/**
       * Creates observers for the given `observers` array.
       * Leverages `PropertyEffects` to create observers.
       * @param {Object} observers Array of observer descriptors for
       *   this class
       * @param {Object} dynamicFns Object containing keys for any properties
       *   that are functions and should trigger the effect when the function
       *   reference is changed
       * @return {void}
       * @protected
       * @nocollapse
       */},{key:"createObservers",value:function createObservers(observers,dynamicFns){var proto=this.prototype;for(var _i18=0;_i18<observers.length;_i18++){proto._createMethodObserver(observers[_i18],dynamicFns);}}/**
       * Returns the template that will be stamped into this element's shadow root.
       *
       * If a `static get is()` getter is defined, the default implementation
       * will return the first `<template>` in a `dom-module` whose `id`
       * matches this element's `is`.
       *
       * Users may override this getter to return an arbitrary template
       * (in which case the `is` getter is unnecessary). The template returned
       * must be an `HTMLTemplateElement`.
       *
       * Note that when subclassing, if the super class overrode the default
       * implementation and the subclass would like to provide an alternate
       * template via a `dom-module`, it should override this getter and
       * return `DomModule.import(this.is, 'template')`.
       *
       * If a subclass would like to modify the super class template, it should
       * clone it rather than modify it in place.  If the getter does expensive
       * work such as cloning/modifying a template, it should memoize the
       * template for maximum performance:
       *
       *   let memoizedTemplate;
       *   class MySubClass extends MySuperClass {
       *     static get template() {
       *       if (!memoizedTemplate) {
       *         memoizedTemplate = super.template.cloneNode(true);
       *         let subContent = document.createElement('div');
       *         subContent.textContent = 'This came from MySubClass';
       *         memoizedTemplate.content.appendChild(subContent);
       *       }
       *       return memoizedTemplate;
       *     }
       *   }
       *
       * @return {!HTMLTemplateElement|string} Template to be stamped
       * @nocollapse
       */},{key:"polymerElementVersion",/**
     * Current Polymer version in Semver notation.
     * @type {string} Semver notation of the current version of Polymer.
     * @nocollapse
     */get:function get(){return version;}},{key:"template",get:function get(){// Explanation of template-related properties:
// - constructor.template (this getter): the template for the class.
//     This can come from the prototype (for legacy elements), from a
//     dom-module, or from the super class's template (or can be overridden
//     altogether by the user)
// - constructor._template: memoized version of constructor.template
// - prototype._template: working template for the element, which will be
//     parsed and modified in place. It is a cloned version of
//     constructor.template, saved in _finalizeClass(). Note that before
//     this getter is called, for legacy elements this could be from a
//     _template field on the info object passed to Polymer(), a behavior,
//     or set in registered(); once the static getter runs, a clone of it
//     will overwrite it on the prototype as the working template.
if(!this.hasOwnProperty(JSCompiler_renameProperty('_template',this))){this._template=// If user has put template on prototype (e.g. in legacy via registered
// callback or info object), prefer that first
this.prototype.hasOwnProperty(JSCompiler_renameProperty('_template',this.prototype))?this.prototype._template:// Look in dom-module associated with this element's is
getTemplateFromDomModule(/** @type {PolymerElementConstructor}*/this.is)||// Next look for superclass template (call the super impl this
// way so that `this` points to the superclass)
Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/this.prototype).constructor.template;}return this._template;}/**
       * Set the template.
       *
       * @param {!HTMLTemplateElement|string} value Template to set.
       * @nocollapse
       */,set:function set(value){this._template=value;}/**
       * Path matching the url from which the element was imported.
       *
       * This path is used to resolve url's in template style cssText.
       * The `importPath` property is also set on element instances and can be
       * used to create bindings relative to the import path.
       *
       * For elements defined in ES modules, users should implement
       * `static get importMeta() { return import.meta; }`, and the default
       * implementation of `importPath` will  return `import.meta.url`'s path.
       * For elements defined in HTML imports, this getter will return the path
       * to the document containing a `dom-module` element matching this
       * element's static `is` property.
       *
       * Note, this path should contain a trailing `/`.
       *
       * @return {string} The import path for this element class
       * @suppress {missingProperties}
       * @nocollapse
       */},{key:"importPath",get:function get(){if(!this.hasOwnProperty(JSCompiler_renameProperty('_importPath',this))){var meta=this.importMeta;if(meta){this._importPath=pathFromUrl(meta.url);}else{var module=DomModule.import(/** @type {PolymerElementConstructor} */this.is);this._importPath=module&&module.assetpath||Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/this.prototype).constructor.importPath;}}return this._importPath;}}]);function PolymerElement(){var _this11;babelHelpers.classCallCheck(this,PolymerElement);_this11=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PolymerElement).call(this));/** @type {HTMLTemplateElement} */_this11._template;/** @type {string} */_this11._importPath;/** @type {string} */_this11.rootPath;/** @type {string} */_this11.importPath;/** @type {StampedTemplate | HTMLElement | ShadowRoot} */_this11.root;/** @type {!Object<string, !Element>} */_this11.$;return _this11;}/**
       * Overrides the default `PropertyAccessors` to ensure class
       * metaprogramming related to property accessors and effects has
       * completed (calls `finalize`).
       *
       * It also initializes any property defaults provided via `value` in
       * `properties` metadata.
       *
       * @return {void}
       * @override
       * @suppress {invalidCasts,missingProperties} go/missingfnprops
       */babelHelpers.createClass(PolymerElement,[{key:"_initializeProperties",value:function _initializeProperties(){this.constructor.finalize();// note: finalize template when we have access to `localName` to
// avoid dependence on `is` for polyfilling styling.
this.constructor._finalizeTemplate(/** @type {!HTMLElement} */this.localName);babelHelpers.get(babelHelpers.getPrototypeOf(PolymerElement.prototype),"_initializeProperties",this).call(this);// set path defaults
this.rootPath=rootPath;this.importPath=this.constructor.importPath;// apply property defaults...
var p$=propertyDefaults(this.constructor);if(!p$){return;}for(var _p12 in p$){var info=p$[_p12];// Don't set default value if there is already an own property, which
// happens when a `properties` property with default but no effects had
// a property set (e.g. bound) by its host before upgrade
if(!this.hasOwnProperty(_p12)){var value=typeof info.value=='function'?info.value.call(this):info.value;// Set via `_setProperty` if there is an accessor, to enable
// initializing readOnly property defaults
if(this._hasAccessor(_p12)){this._setPendingProperty(_p12,value,true);}else{this[_p12]=value;}}}}/**
       * Gather style text for a style element in the template.
       *
       * @param {string} cssText Text containing styling to process
       * @param {string} baseURI Base URI to rebase CSS paths against
       * @return {string} The processed CSS text
       * @protected
       * @nocollapse
       */},{key:"connectedCallback",/**
       * Provides a default implementation of the standard Custom Elements
       * `connectedCallback`.
       *
       * The default implementation enables the property effects system and
       * flushes any pending properties, and updates shimmed CSS properties
       * when using the ShadyCSS scoping/custom properties polyfill.
       *
       * @override
       * @suppress {missingProperties, invalidCasts} Super may or may not
       *     implement the callback
       * @return {void}
       */value:function connectedCallback(){if(window.ShadyCSS&&this._template){window.ShadyCSS.styleElement(/** @type {!HTMLElement} */this);}babelHelpers.get(babelHelpers.getPrototypeOf(PolymerElement.prototype),"connectedCallback",this).call(this);}/**
       * Stamps the element template.
       *
       * @return {void}
       * @override
       */},{key:"ready",value:function ready(){if(this._template){this.root=this._stampTemplate(this._template);this.$=this.root.$;}babelHelpers.get(babelHelpers.getPrototypeOf(PolymerElement.prototype),"ready",this).call(this);}/**
       * Implements `PropertyEffects`'s `_readyClients` call. Attaches
       * element dom by calling `_attachDom` with the dom stamped from the
       * element's template via `_stampTemplate`. Note that this allows
       * client dom to be attached to the element prior to any observers
       * running.
       *
       * @return {void}
       * @override
       */},{key:"_readyClients",value:function _readyClients(){if(this._template){this.root=this._attachDom(/** @type {StampedTemplate} */this.root);}// The super._readyClients here sets the clients initialized flag.
// We must wait to do this until after client dom is created/attached
// so that this flag can be checked to prevent notifications fired
// during this process from being handled before clients are ready.
babelHelpers.get(babelHelpers.getPrototypeOf(PolymerElement.prototype),"_readyClients",this).call(this);}/**
       * Attaches an element's stamped dom to itself. By default,
       * this method creates a `shadowRoot` and adds the dom to it.
       * However, this method may be overridden to allow an element
       * to put its dom in another location.
       *
       * @override
       * @throws {Error}
       * @suppress {missingReturn}
       * @param {StampedTemplate} dom to attach to the element.
       * @return {ShadowRoot} node to which the dom has been attached.
       */},{key:"_attachDom",value:function _attachDom(dom){var n=wrap$1(this);if(n.attachShadow){if(dom){if(!n.shadowRoot){n.attachShadow({mode:'open',shadyUpgradeFragment:dom});n.shadowRoot.appendChild(dom);}if(syncInitialRender&&window.ShadyDOM){ShadyDOM.flushInitial(n.shadowRoot);}return n.shadowRoot;}return null;}else{throw new Error('ShadowDOM not available. '+// TODO(sorvell): move to compile-time conditional when supported
'PolymerElement can create dom as children instead of in '+'ShadowDOM by setting `this.root = this;\` before \`ready\`.');}}/**
       * When using the ShadyCSS scoping and custom property shim, causes all
       * shimmed styles in this element (and its subtree) to be updated
       * based on current custom property values.
       *
       * The optional parameter overrides inline custom property styles with an
       * object of properties where the keys are CSS properties, and the values
       * are strings.
       *
       * Example: `this.updateStyles({'--color': 'blue'})`
       *
       * These properties are retained unless a value of `null` is set.
       *
       * Note: This function does not support updating CSS mixins.
       * You can not dynamically change the value of an `@apply`.
       *
       * @override
       * @param {Object=} properties Bag of custom property key/values to
       *   apply to this element.
       * @return {void}
       * @suppress {invalidCasts}
       */},{key:"updateStyles",value:function updateStyles(properties){if(window.ShadyCSS){window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */this,properties);}}/**
       * Rewrites a given URL relative to a base URL. The base URL defaults to
       * the original location of the document containing the `dom-module` for
       * this element. This method will return the same URL before and after
       * bundling.
       *
       * Note that this function performs no resolution for URLs that start
       * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose
       * URL resolution, use `window.URL`.
       *
       * @override
       * @param {string} url URL to resolve.
       * @param {string=} base Optional base URL to resolve against, defaults
       * to the element's `importPath`
       * @return {string} Rewritten URL relative to base
       */},{key:"resolveUrl",value:function resolveUrl(url,base){if(!base&&this.importPath){base=_resolveUrl(this.importPath);}return _resolveUrl(url,base);}/**
       * Overrides `PropertyEffects` to add map of dynamic functions on
       * template info, for consumption by `PropertyEffects` template binding
       * code. This map determines which method templates should have accessors
       * created for them.
       *
       * @param {!HTMLTemplateElement} template Template
       * @param {!TemplateInfo} templateInfo Template metadata for current template
       * @param {!NodeInfo} nodeInfo Node metadata for current template.
       * @return {boolean} .
       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
       * @nocollapse
       */}],[{key:"_processStyleText",value:function _processStyleText(cssText,baseURI){return resolveCss(cssText,baseURI);}/**
      * Configures an element `proto` to function with a given `template`.
      * The element name `is` and extends `ext` must be specified for ShadyCSS
      * style scoping.
      *
      * @param {string} is Tag name (or type extension name) for this element
      * @return {void}
      * @protected
      * @nocollapse
      */},{key:"_finalizeTemplate",value:function _finalizeTemplate(is){/** @const {HTMLTemplateElement} */var template=this.prototype._template;if(template&&!template.__polymerFinalized){template.__polymerFinalized=true;var importPath=this.importPath;var baseURI=importPath?_resolveUrl(importPath):'';// e.g. support `include="module-name"`, and ShadyCSS
processElementStyles(this,template,is,baseURI);this.prototype._bindTemplate(template);}}},{key:"_parseTemplateContent",value:function _parseTemplateContent(template,templateInfo,nodeInfo){templateInfo.dynamicFns=templateInfo.dynamicFns||this._properties;// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
return polymerElementBase._parseTemplateContent.call(this,template,templateInfo,nodeInfo);}/**
       * Overrides `PropertyEffects` to warn on use of undeclared properties in
       * template.
       *
       * @param {Object} templateInfo Template metadata to add effect to
       * @param {string} prop Property that should trigger the effect
       * @param {Object=} effect Effect metadata object
       * @return {void}
       * @protected
       * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
       * @nocollapse
       */},{key:"_addTemplatePropertyEffect",value:function _addTemplatePropertyEffect(templateInfo,prop,effect){// Warn if properties are used in template without being declared.
// Properties must be listed in `properties` to be included in
// `observedAttributes` since CE V1 reads that at registration time, and
// since we want to keep template parsing lazy, we can't automatically
// add undeclared properties used in templates to `observedAttributes`.
// The warning is only enabled in `legacyOptimizations` mode, since
// we don't want to spam existing users who might have adopted the
// shorthand when attribute deserialization is not important.
if(legacyOptimizations&&!(prop in this._properties)){console.warn("Property '".concat(prop,"' used in template but not declared in 'properties'; ")+"attribute will not be observed.");}// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
return polymerElementBase._addTemplatePropertyEffect.call(this,templateInfo,prop,effect);}}]);return PolymerElement;}(polymerElementBase);return PolymerElement;});/**
     * When using the ShadyCSS scoping and custom property shim, causes all
     * shimmed `styles` (via `custom-style`) in the document (and its subtree)
     * to be updated based on current custom property values.
     *
     * The optional parameter overrides inline custom property styles with an
     * object of properties where the keys are CSS properties, and the values
     * are strings.
     *
     * Example: `updateStyles({'--color': 'blue'})`
     *
     * These properties are retained unless a value of `null` is set.
     *
     * @param {Object=} props Bag of custom property key/values to
     *   apply to the document.
     * @return {void}
     */_exports.ElementMixin=ElementMixin;var updateStyles=function updateStyles(props){if(window.ShadyCSS){window.ShadyCSS.styleDocument(props);}};_exports.updateStyles=updateStyles;var elementMixin={__proto__:null,version:version,ElementMixin:ElementMixin,updateStyles:updateStyles};_exports.$elementMixin=elementMixin;var Debouncer=/*#__PURE__*/function(){function Debouncer(){babelHelpers.classCallCheck(this,Debouncer);this._asyncModule=null;this._callback=null;this._timer=null;}/**
     * Sets the scheduler; that is, a module with the Async interface,
     * a callback and optional arguments to be passed to the run function
     * from the async module.
     *
     * @param {!AsyncInterface} asyncModule Object with Async interface.
     * @param {function()} callback Callback to run.
     * @return {void}
     */babelHelpers.createClass(Debouncer,[{key:"setConfig",value:function setConfig(asyncModule,callback){var _this12=this;this._asyncModule=asyncModule;this._callback=callback;this._timer=this._asyncModule.run(function(){_this12._timer=null;debouncerQueue.delete(_this12);_this12._callback();});}/**
     * Cancels an active debouncer and returns a reference to itself.
     *
     * @return {void}
     */},{key:"cancel",value:function cancel(){if(this.isActive()){this._cancelAsync();// Canceling a debouncer removes its spot from the flush queue,
// so if a debouncer is manually canceled and re-debounced, it
// will reset its flush order (this is a very minor difference from 1.x)
// Re-debouncing via the `debounce` API retains the 1.x FIFO flush order
debouncerQueue.delete(this);}}/**
     * Cancels a debouncer's async callback.
     *
     * @return {void}
     */},{key:"_cancelAsync",value:function _cancelAsync(){if(this.isActive()){this._asyncModule.cancel(/** @type {number} */this._timer);this._timer=null;}}/**
     * Flushes an active debouncer and returns a reference to itself.
     *
     * @return {void}
     */},{key:"flush",value:function flush(){if(this.isActive()){this.cancel();this._callback();}}/**
     * Returns true if the debouncer is active.
     *
     * @return {boolean} True if active.
     */},{key:"isActive",value:function isActive(){return this._timer!=null;}/**
     * Creates a debouncer if no debouncer is passed as a parameter
     * or it cancels an active debouncer otherwise. The following
     * example shows how a debouncer can be called multiple times within a
     * microtask and "debounced" such that the provided callback function is
     * called once. Add this method to a custom element:
     *
     * ```js
     * import {microTask} from '../../../../@polymer/polymer/lib/utils/async.js';
     * import {Debouncer} from '../../../../@polymer/polymer/lib/utils/debounce.js';
     * // ...
     *
     * _debounceWork() {
     *   this._debounceJob = Debouncer.debounce(this._debounceJob,
     *       microTask, () => this._doWork());
     * }
     * ```
     *
     * If the `_debounceWork` method is called multiple times within the same
     * microtask, the `_doWork` function will be called only once at the next
     * microtask checkpoint.
     *
     * Note: In testing it is often convenient to avoid asynchrony. To accomplish
     * this with a debouncer, you can use `enqueueDebouncer` and
     * `flush`. For example, extend the above example by adding
     * `enqueueDebouncer(this._debounceJob)` at the end of the
     * `_debounceWork` method. Then in a test, call `flush` to ensure
     * the debouncer has completed.
     *
     * @param {Debouncer?} debouncer Debouncer object.
     * @param {!AsyncInterface} asyncModule Object with Async interface
     * @param {function()} callback Callback to run.
     * @return {!Debouncer} Returns a debouncer object.
     */}],[{key:"debounce",value:function debounce(debouncer,asyncModule,callback){if(babelHelpers.instanceof(debouncer,Debouncer)){// Cancel the async callback, but leave in debouncerQueue if it was
// enqueued, to maintain 1.x flush order
debouncer._cancelAsync();}else{debouncer=new Debouncer();}debouncer.setConfig(asyncModule,callback);return debouncer;}}]);return Debouncer;}();_exports.Debouncer=Debouncer;var debouncerQueue=new Set();/**
                                 * Adds a `Debouncer` to a list of globally flushable tasks.
                                 *
                                 * @param {!Debouncer} debouncer Debouncer to enqueue
                                 * @return {void}
                                 */var enqueueDebouncer=function enqueueDebouncer(debouncer){debouncerQueue.add(debouncer);};/**
    * Flushes any enqueued debouncers
    *
    * @return {boolean} Returns whether any debouncers were flushed
    */_exports.enqueueDebouncer$1=_exports.enqueueDebouncer=_exports.addDebouncer=enqueueDebouncer;var flushDebouncers=function flushDebouncers(){var didFlush=Boolean(debouncerQueue.size);// If new debouncers are added while flushing, Set.forEach will ensure
// newly added ones are also flushed
debouncerQueue.forEach(function(debouncer){try{debouncer.flush();}catch(e){setTimeout(function(){throw e;});}});return didFlush;};_exports.flushDebouncers=flushDebouncers;var debounce={__proto__:null,Debouncer:Debouncer,enqueueDebouncer:enqueueDebouncer,flushDebouncers:flushDebouncers};_exports.$debounce=debounce;var HAS_NATIVE_TA=typeof document.head.style.touchAction==='string';var GESTURE_KEY='__polymerGestures';var HANDLED_OBJ='__polymerGesturesHandled';var TOUCH_ACTION='__polymerGesturesTouchAction';// radius for tap and track
var TAP_DISTANCE=25;var TRACK_DISTANCE=5;// number of last N track positions to keep
var TRACK_LENGTH=2;// Disabling "mouse" handlers for 2500ms is enough
var MOUSE_TIMEOUT=2500;var MOUSE_EVENTS=['mousedown','mousemove','mouseup','click'];// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons
var MOUSE_WHICH_TO_BUTTONS=[0,1,4,2];var MOUSE_HAS_BUTTONS=function(){try{return new MouseEvent('test',{buttons:1}).buttons===1;}catch(e){return false;}}();/**
      * @param {string} name Possible mouse event name
      * @return {boolean} true if mouse event, false if not
      */function isMouseEvent(name){return MOUSE_EVENTS.indexOf(name)>-1;}/* eslint no-empty: ["error", { "allowEmptyCatch": true }] */ // check for passive event listeners
var SUPPORTS_PASSIVE=false;(function(){try{var opts=Object.defineProperty({},'passive',{get:function get(){SUPPORTS_PASSIVE=true;}});window.addEventListener('test',null,opts);window.removeEventListener('test',null,opts);}catch(e){}})();/**
       * Generate settings for event listeners, dependant on `passiveTouchGestures`
       *
       * @param {string} eventName Event name to determine if `{passive}` option is
       *   needed
       * @return {{passive: boolean} | undefined} Options to use for addEventListener
       *   and removeEventListener
       */function PASSIVE_TOUCH(eventName){if(isMouseEvent(eventName)||eventName==='touchend'){return;}if(HAS_NATIVE_TA&&SUPPORTS_PASSIVE&&passiveTouchGestures){return{passive:true};}else{return;}}// Check for touch-only devices
var IS_TOUCH_ONLY=navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);// keep track of any labels hit by the mouseCanceller
/** @type {!Array<!HTMLLabelElement>} */var clickedLabels=[];/** @type {!Object<boolean>} */var labellable={'button':true,'input':true,'keygen':true,'meter':true,'output':true,'textarea':true,'progress':true,'select':true};// Defined at https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#enabling-and-disabling-form-controls:-the-disabled-attribute
/** @type {!Object<boolean>} */var canBeDisabled={'button':true,'command':true,'fieldset':true,'input':true,'keygen':true,'optgroup':true,'option':true,'select':true,'textarea':true};/**
    * @param {HTMLElement} el Element to check labelling status
    * @return {boolean} element can have labels
    */function canBeLabelled(el){return labellable[el.localName]||false;}/**
   * @param {HTMLElement} el Element that may be labelled.
   * @return {!Array<!HTMLLabelElement>} Relevant label for `el`
   */function matchingLabels(el){var labels=Array.prototype.slice.call(/** @type {HTMLInputElement} */el.labels||[]);// IE doesn't have `labels` and Safari doesn't populate `labels`
// if element is in a shadowroot.
// In this instance, finding the non-ancestor labels is enough,
// as the mouseCancellor code will handle ancstor labels
if(!labels.length){labels=[];var _root2=el.getRootNode();// if there is an id on `el`, check for all labels with a matching `for` attribute
if(el.id){var matching=_root2.querySelectorAll("label[for = ".concat(el.id,"]"));for(var _i19=0;_i19<matching.length;_i19++){labels.push(/** @type {!HTMLLabelElement} */matching[_i19]);}}}return labels;}// touch will make synthetic mouse events
// `preventDefault` on touchend will cancel them,
// but this breaks `<input>` focus and link clicks
// disable mouse handlers for MOUSE_TIMEOUT ms after
// a touchend to ignore synthetic mouse events
var mouseCanceller=function mouseCanceller(mouseEvent){// Check for sourceCapabilities, used to distinguish synthetic events
// if mouseEvent did not come from a device that fires touch events,
// it was made by a real mouse and should be counted
// http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents
var sc=mouseEvent.sourceCapabilities;if(sc&&!sc.firesTouchEvents){return;}// skip synthetic mouse events
mouseEvent[HANDLED_OBJ]={skip:true};// disable "ghost clicks"
if(mouseEvent.type==='click'){var clickFromLabel=false;var _path2=getComposedPath(mouseEvent);for(var _i20=0;_i20<_path2.length;_i20++){if(_path2[_i20].nodeType===Node.ELEMENT_NODE){if(_path2[_i20].localName==='label'){clickedLabels.push(/** @type {!HTMLLabelElement} */_path2[_i20]);}else if(canBeLabelled(/** @type {!HTMLElement} */_path2[_i20])){var ownerLabels=matchingLabels(/** @type {!HTMLElement} */_path2[_i20]);// check if one of the clicked labels is labelling this element
for(var j=0;j<ownerLabels.length;j++){clickFromLabel=clickFromLabel||clickedLabels.indexOf(ownerLabels[j])>-1;}}}if(_path2[_i20]===POINTERSTATE.mouse.target){return;}}// if one of the clicked labels was labelling the target element,
// this is not a ghost click
if(clickFromLabel){return;}mouseEvent.preventDefault();mouseEvent.stopPropagation();}};/**
    * @param {boolean=} setup True to add, false to remove.
    * @return {void}
    */function setupTeardownMouseCanceller(setup){var events=IS_TOUCH_ONLY?['click']:MOUSE_EVENTS;for(var _i21=0,en;_i21<events.length;_i21++){en=events[_i21];if(setup){// reset clickLabels array
clickedLabels.length=0;document.addEventListener(en,mouseCanceller,true);}else{document.removeEventListener(en,mouseCanceller,true);}}}function ignoreMouse(e){if(!cancelSyntheticClickEvents){return;}if(!POINTERSTATE.mouse.mouseIgnoreJob){setupTeardownMouseCanceller(true);}var unset=function unset(){setupTeardownMouseCanceller();POINTERSTATE.mouse.target=null;POINTERSTATE.mouse.mouseIgnoreJob=null;};POINTERSTATE.mouse.target=getComposedPath(e)[0];POINTERSTATE.mouse.mouseIgnoreJob=Debouncer.debounce(POINTERSTATE.mouse.mouseIgnoreJob,timeOut.after(MOUSE_TIMEOUT),unset);}/**
   * @param {MouseEvent} ev event to test for left mouse button down
   * @return {boolean} has left mouse button down
   */function hasLeftMouseButton(ev){var type=ev.type;// exit early if the event is not a mouse event
if(!isMouseEvent(type)){return false;}// ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)
// instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)
if(type==='mousemove'){// allow undefined for testing events
var buttons=ev.buttons===undefined?1:ev.buttons;if(babelHelpers.instanceof(ev,window.MouseEvent)&&!MOUSE_HAS_BUTTONS){buttons=MOUSE_WHICH_TO_BUTTONS[ev.which]||0;}// buttons is a bitmask, check that the left button bit is set (1)
return Boolean(buttons&1);}else{// allow undefined for testing events
var button=ev.button===undefined?0:ev.button;// ev.button is 0 in mousedown/mouseup/click for left button activation
return button===0;}}function isSyntheticClick(ev){if(ev.type==='click'){// ev.detail is 0 for HTMLElement.click in most browsers
if(ev.detail===0){return true;}// in the worst case, check that the x/y position of the click is within
// the bounding box of the target of the event
// Thanks IE 10 >:(
var t=_findOriginalTarget(ev);// make sure the target of the event is an element so we can use getBoundingClientRect,
// if not, just assume it is a synthetic click
if(!t.nodeType||/** @type {Element} */t.nodeType!==Node.ELEMENT_NODE){return true;}var bcr=/** @type {Element} */t.getBoundingClientRect();// use page x/y to account for scrolling
var x=ev.pageX,y=ev.pageY;// ev is a synthetic click if the position is outside the bounding box of the target
return!(x>=bcr.left&&x<=bcr.right&&y>=bcr.top&&y<=bcr.bottom);}return false;}var POINTERSTATE={mouse:{target:null,mouseIgnoreJob:null},touch:{x:0,y:0,id:-1,scrollDecided:false}};function firstTouchAction(ev){var ta='auto';var path=getComposedPath(ev);for(var _i22=0,n;_i22<path.length;_i22++){n=path[_i22];if(n[TOUCH_ACTION]){ta=n[TOUCH_ACTION];break;}}return ta;}function trackDocument(stateObj,movefn,upfn){stateObj.movefn=movefn;stateObj.upfn=upfn;document.addEventListener('mousemove',movefn);document.addEventListener('mouseup',upfn);}function untrackDocument(stateObj){document.removeEventListener('mousemove',stateObj.movefn);document.removeEventListener('mouseup',stateObj.upfn);stateObj.movefn=null;stateObj.upfn=null;}if(cancelSyntheticClickEvents){// use a document-wide touchend listener to start the ghost-click prevention mechanism
// Use passive event listeners, if supported, to not affect scrolling performance
document.addEventListener('touchend',ignoreMouse,SUPPORTS_PASSIVE?{passive:true}:false);}/**
   * Returns the composedPath for the given event.
   * @param {Event} event to process
   * @return {!Array<!EventTarget>} Path of the event
   */var getComposedPath=window.ShadyDOM&&window.ShadyDOM.noPatch?window.ShadyDOM.composedPath:function(event){return event.composedPath&&event.composedPath()||[];};/** @type {!Object<string, !GestureRecognizer>} */var gestures={};/** @type {!Array<!GestureRecognizer>} */_exports.gestures=gestures;var recognizers=[];/**
                                * Finds the element rendered on the screen at the provided coordinates.
                                *
                                * Similar to `document.elementFromPoint`, but pierces through
                                * shadow roots.
                                *
                                * @param {number} x Horizontal pixel coordinate
                                * @param {number} y Vertical pixel coordinate
                                * @return {Element} Returns the deepest shadowRoot inclusive element
                                * found at the screen position given.
                                */_exports.recognizers=recognizers;function deepTargetFind(x,y){var node=document.elementFromPoint(x,y);var next=node;// this code path is only taken when native ShadowDOM is used
// if there is a shadowroot, it may have a node at x/y
// if there is not a shadowroot, exit the loop
while(next&&next.shadowRoot&&!window.ShadyDOM){// if there is a node at x/y in the shadowroot, look deeper
var oldNext=next;next=next.shadowRoot.elementFromPoint(x,y);// on Safari, elementFromPoint may return the shadowRoot host
if(oldNext===next){break;}if(next){node=next;}}return node;}/**
   * a cheaper check than ev.composedPath()[0];
   *
   * @private
   * @param {Event|Touch} ev Event.
   * @return {EventTarget} Returns the event target.
   */function _findOriginalTarget(ev){var path=getComposedPath(/** @type {?Event} */ev);// It shouldn't be, but sometimes path is empty (window on Safari).
return path.length>0?path[0]:ev.target;}/**
   * @private
   * @param {Event} ev Event.
   * @return {void}
   */function _handleNative(ev){var handled;var type=ev.type;var node=ev.currentTarget;var gobj=node[GESTURE_KEY];if(!gobj){return;}var gs=gobj[type];if(!gs){return;}if(!ev[HANDLED_OBJ]){ev[HANDLED_OBJ]={};if(type.slice(0,5)==='touch'){ev=/** @type {TouchEvent} */ev;// eslint-disable-line no-self-assign
var t=ev.changedTouches[0];if(type==='touchstart'){// only handle the first finger
if(ev.touches.length===1){POINTERSTATE.touch.id=t.identifier;}}if(POINTERSTATE.touch.id!==t.identifier){return;}if(!HAS_NATIVE_TA){if(type==='touchstart'||type==='touchmove'){_handleTouchAction(ev);}}}}handled=ev[HANDLED_OBJ];// used to ignore synthetic mouse events
if(handled.skip){return;}// reset recognizer state
for(var _i23=0,r;_i23<recognizers.length;_i23++){r=recognizers[_i23];if(gs[r.name]&&!handled[r.name]){if(r.flow&&r.flow.start.indexOf(ev.type)>-1&&r.reset){r.reset();}}}// enforce gesture recognizer order
for(var _i24=0,_r;_i24<recognizers.length;_i24++){_r=recognizers[_i24];if(gs[_r.name]&&!handled[_r.name]){handled[_r.name]=true;_r[type](ev);}}}/**
   * @private
   * @param {TouchEvent} ev Event.
   * @return {void}
   */function _handleTouchAction(ev){var t=ev.changedTouches[0];var type=ev.type;if(type==='touchstart'){POINTERSTATE.touch.x=t.clientX;POINTERSTATE.touch.y=t.clientY;POINTERSTATE.touch.scrollDecided=false;}else if(type==='touchmove'){if(POINTERSTATE.touch.scrollDecided){return;}POINTERSTATE.touch.scrollDecided=true;var ta=firstTouchAction(ev);var shouldPrevent=false;var dx=Math.abs(POINTERSTATE.touch.x-t.clientX);var dy=Math.abs(POINTERSTATE.touch.y-t.clientY);if(!ev.cancelable){// scrolling is happening
}else if(ta==='none'){shouldPrevent=true;}else if(ta==='pan-x'){shouldPrevent=dy>dx;}else if(ta==='pan-y'){shouldPrevent=dx>dy;}if(shouldPrevent){ev.preventDefault();}else{_prevent('track');}}}/**
   * Adds an event listener to a node for the given gesture type.
   *
   * @param {!EventTarget} node Node to add listener on
   * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`
   * @param {!function(!Event):void} handler Event listener function to call
   * @return {boolean} Returns true if a gesture event listener was added.
   */function addListener(node,evType,handler){if(gestures[evType]){_add(node,evType,handler);return true;}return false;}/**
   * Removes an event listener from a node for the given gesture type.
   *
   * @param {!EventTarget} node Node to remove listener from
   * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`
   * @param {!function(!Event):void} handler Event listener function previously passed to
   *  `addListener`.
   * @return {boolean} Returns true if a gesture event listener was removed.
   */function removeListener(node,evType,handler){if(gestures[evType]){_remove(node,evType,handler);return true;}return false;}/**
   * automate the event listeners for the native events
   *
   * @private
   * @param {!EventTarget} node Node on which to add the event.
   * @param {string} evType Event type to add.
   * @param {function(!Event)} handler Event handler function.
   * @return {void}
   */function _add(node,evType,handler){var recognizer=gestures[evType];var deps=recognizer.deps;var name=recognizer.name;var gobj=node[GESTURE_KEY];if(!gobj){node[GESTURE_KEY]=gobj={};}for(var _i25=0,dep,gd;_i25<deps.length;_i25++){dep=deps[_i25];// don't add mouse handlers on iOS because they cause gray selection overlays
if(IS_TOUCH_ONLY&&isMouseEvent(dep)&&dep!=='click'){continue;}gd=gobj[dep];if(!gd){gobj[dep]=gd={_count:0};}if(gd._count===0){node.addEventListener(dep,_handleNative,PASSIVE_TOUCH(dep));}gd[name]=(gd[name]||0)+1;gd._count=(gd._count||0)+1;}node.addEventListener(evType,handler);if(recognizer.touchAction){setTouchAction(node,recognizer.touchAction);}}/**
   * automate event listener removal for native events
   *
   * @private
   * @param {!EventTarget} node Node on which to remove the event.
   * @param {string} evType Event type to remove.
   * @param {function(!Event): void} handler Event handler function.
   * @return {void}
   */function _remove(node,evType,handler){var recognizer=gestures[evType];var deps=recognizer.deps;var name=recognizer.name;var gobj=node[GESTURE_KEY];if(gobj){for(var _i26=0,dep,gd;_i26<deps.length;_i26++){dep=deps[_i26];gd=gobj[dep];if(gd&&gd[name]){gd[name]=(gd[name]||1)-1;gd._count=(gd._count||1)-1;if(gd._count===0){node.removeEventListener(dep,_handleNative,PASSIVE_TOUCH(dep));}}}}node.removeEventListener(evType,handler);}/**
   * Registers a new gesture event recognizer for adding new custom
   * gesture event types.
   *
   * @param {!GestureRecognizer} recog Gesture recognizer descriptor
   * @return {void}
   */function register$1(recog){recognizers.push(recog);for(var _i27=0;_i27<recog.emits.length;_i27++){gestures[recog.emits[_i27]]=recog;}}/**
   * @private
   * @param {string} evName Event name.
   * @return {Object} Returns the gesture for the given event name.
   */function _findRecognizerByEvent(evName){for(var _i28=0,r;_i28<recognizers.length;_i28++){r=recognizers[_i28];for(var j=0,n;j<r.emits.length;j++){n=r.emits[j];if(n===evName){return r;}}}return null;}/**
   * Sets scrolling direction on node.
   *
   * This value is checked on first move, thus it should be called prior to
   * adding event listeners.
   *
   * @param {!EventTarget} node Node to set touch action setting on
   * @param {string} value Touch action value
   * @return {void}
   */function setTouchAction(node,value){if(HAS_NATIVE_TA&&babelHelpers.instanceof(node,HTMLElement)){// NOTE: add touchAction async so that events can be added in
// custom element constructors. Otherwise we run afoul of custom
// elements restriction against settings attributes (style) in the
// constructor.
microTask.run(function(){node.style.touchAction=value;});}node[TOUCH_ACTION]=value;}/**
   * Dispatches an event on the `target` element of `type` with the given
   * `detail`.
   * @private
   * @param {!EventTarget} target The element on which to fire an event.
   * @param {string} type The type of event to fire.
   * @param {!Object=} detail The detail object to populate on the event.
   * @return {void}
   */function _fire(target,type,detail){var ev=new Event(type,{bubbles:true,cancelable:true,composed:true});ev.detail=detail;wrap$1(/** @type {!Node} */target).dispatchEvent(ev);// forward `preventDefault` in a clean way
if(ev.defaultPrevented){var preventer=detail.preventer||detail.sourceEvent;if(preventer&&preventer.preventDefault){preventer.preventDefault();}}}/**
   * Prevents the dispatch and default action of the given event name.
   *
   * @param {string} evName Event name.
   * @return {void}
   */function _prevent(evName){var recognizer=_findRecognizerByEvent(evName);if(recognizer.info){recognizer.info.prevent=true;}}/**
   * Reset the 2500ms timeout on processing mouse input after detecting touch input.
   *
   * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.
   * This method should only be called during testing with simulated touch inputs.
   * Calling this method in production may cause duplicate taps or other Gestures.
   *
   * @return {void}
   */function resetMouseCanceller(){if(POINTERSTATE.mouse.mouseIgnoreJob){POINTERSTATE.mouse.mouseIgnoreJob.flush();}}/* eslint-disable valid-jsdoc */register$1({name:'downup',deps:['mousedown','touchstart','touchend'],flow:{start:['mousedown','touchstart'],end:['mouseup','touchend']},emits:['down','up'],info:{movefn:null,upfn:null},/**
   * @this {GestureRecognizer}
   * @return {void}
   */reset:function reset(){untrackDocument(this.info);},/**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */mousedown:function mousedown(e){if(!hasLeftMouseButton(e)){return;}var t=_findOriginalTarget(e);var self=this;var movefn=function movefn(e){if(!hasLeftMouseButton(e)){downupFire('up',t,e);untrackDocument(self.info);}};var upfn=function upfn(e){if(hasLeftMouseButton(e)){downupFire('up',t,e);}untrackDocument(self.info);};trackDocument(this.info,movefn,upfn);downupFire('down',t,e);},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchstart:function touchstart(e){downupFire('down',_findOriginalTarget(e),e.changedTouches[0],e);},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchend:function touchend(e){downupFire('up',_findOriginalTarget(e),e.changedTouches[0],e);}});/**
     * @param {string} type
     * @param {EventTarget} target
     * @param {Event|Touch} event
     * @param {Event=} preventer
     * @return {void}
     */function downupFire(type,target,event,preventer){if(!target){return;}_fire(target,type,{x:event.clientX,y:event.clientY,sourceEvent:event,preventer:preventer,prevent:function prevent(e){return _prevent(e);}});}register$1({name:'track',touchAction:'none',deps:['mousedown','touchstart','touchmove','touchend'],flow:{start:['mousedown','touchstart'],end:['mouseup','touchend']},emits:['track'],info:{x:0,y:0,state:'start',started:false,moves:[],/** @this {GestureInfo} */addMove:function addMove(move){if(this.moves.length>TRACK_LENGTH){this.moves.shift();}this.moves.push(move);},movefn:null,upfn:null,prevent:false},/**
   * @this {GestureRecognizer}
   * @return {void}
   */reset:function reset(){this.info.state='start';this.info.started=false;this.info.moves=[];this.info.x=0;this.info.y=0;this.info.prevent=false;untrackDocument(this.info);},/**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */mousedown:function mousedown(e){if(!hasLeftMouseButton(e)){return;}var t=_findOriginalTarget(e);var self=this;var movefn=function movefn(e){var x=e.clientX,y=e.clientY;if(trackHasMovedEnough(self.info,x,y)){// first move is 'start', subsequent moves are 'move', mouseup is 'end'
self.info.state=self.info.started?e.type==='mouseup'?'end':'track':'start';if(self.info.state==='start'){// if and only if tracking, always prevent tap
_prevent('tap');}self.info.addMove({x:x,y:y});if(!hasLeftMouseButton(e)){// always fire "end"
self.info.state='end';untrackDocument(self.info);}if(t){trackFire(self.info,t,e);}self.info.started=true;}};var upfn=function upfn(e){if(self.info.started){movefn(e);}// remove the temporary listeners
untrackDocument(self.info);};// add temporary document listeners as mouse retargets
trackDocument(this.info,movefn,upfn);this.info.x=e.clientX;this.info.y=e.clientY;},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchstart:function touchstart(e){var ct=e.changedTouches[0];this.info.x=ct.clientX;this.info.y=ct.clientY;},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchmove:function touchmove(e){var t=_findOriginalTarget(e);var ct=e.changedTouches[0];var x=ct.clientX,y=ct.clientY;if(trackHasMovedEnough(this.info,x,y)){if(this.info.state==='start'){// if and only if tracking, always prevent tap
_prevent('tap');}this.info.addMove({x:x,y:y});trackFire(this.info,t,ct);this.info.state='track';this.info.started=true;}},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchend:function touchend(e){var t=_findOriginalTarget(e);var ct=e.changedTouches[0];// only trackend if track was started and not aborted
if(this.info.started){// reset started state on up
this.info.state='end';this.info.addMove({x:ct.clientX,y:ct.clientY});trackFire(this.info,t,ct);}}});/**
     * @param {!GestureInfo} info
     * @param {number} x
     * @param {number} y
     * @return {boolean}
     */function trackHasMovedEnough(info,x,y){if(info.prevent){return false;}if(info.started){return true;}var dx=Math.abs(info.x-x);var dy=Math.abs(info.y-y);return dx>=TRACK_DISTANCE||dy>=TRACK_DISTANCE;}/**
   * @param {!GestureInfo} info
   * @param {?EventTarget} target
   * @param {Touch} touch
   * @return {void}
   */function trackFire(info,target,touch){if(!target){return;}var secondlast=info.moves[info.moves.length-2];var lastmove=info.moves[info.moves.length-1];var dx=lastmove.x-info.x;var dy=lastmove.y-info.y;var ddx,ddy=0;if(secondlast){ddx=lastmove.x-secondlast.x;ddy=lastmove.y-secondlast.y;}_fire(target,'track',{state:info.state,x:touch.clientX,y:touch.clientY,dx:dx,dy:dy,ddx:ddx,ddy:ddy,sourceEvent:touch,hover:function hover(){return deepTargetFind(touch.clientX,touch.clientY);}});}register$1({name:'tap',deps:['mousedown','click','touchstart','touchend'],flow:{start:['mousedown','touchstart'],end:['click','touchend']},emits:['tap'],info:{x:NaN,y:NaN,prevent:false},/**
   * @this {GestureRecognizer}
   * @return {void}
   */reset:function reset(){this.info.x=NaN;this.info.y=NaN;this.info.prevent=false;},/**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */mousedown:function mousedown(e){if(hasLeftMouseButton(e)){this.info.x=e.clientX;this.info.y=e.clientY;}},/**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */click:function click(e){if(hasLeftMouseButton(e)){trackForward(this.info,e);}},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchstart:function touchstart(e){var touch=e.changedTouches[0];this.info.x=touch.clientX;this.info.y=touch.clientY;},/**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */touchend:function touchend(e){trackForward(this.info,e.changedTouches[0],e);}});/**
     * @param {!GestureInfo} info
     * @param {Event | Touch} e
     * @param {Event=} preventer
     * @return {void}
     */function trackForward(info,e,preventer){var dx=Math.abs(e.clientX-info.x);var dy=Math.abs(e.clientY-info.y);// find original target from `preventer` for TouchEvents, or `e` for MouseEvents
var t=_findOriginalTarget(preventer||e);if(!t||canBeDisabled[/** @type {!HTMLElement} */t.localName]&&t.hasAttribute('disabled')){return;}// dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`
if(isNaN(dx)||isNaN(dy)||dx<=TAP_DISTANCE&&dy<=TAP_DISTANCE||isSyntheticClick(e)){// prevent taps from being generated if an event has canceled them
if(!info.prevent){_fire(t,'tap',{x:e.clientX,y:e.clientY,sourceEvent:e,preventer:preventer});}}}/* eslint-enable valid-jsdoc */ /** @deprecated */var findOriginalTarget=_findOriginalTarget;/** @deprecated */_exports.findOriginalTarget=findOriginalTarget;var add=addListener;/** @deprecated */_exports.add=add;var remove=removeListener;_exports.remove=remove;var gestures$1={__proto__:null,gestures:gestures,recognizers:recognizers,deepTargetFind:deepTargetFind,addListener:addListener,removeListener:removeListener,register:register$1,setTouchAction:setTouchAction,prevent:_prevent,resetMouseCanceller:resetMouseCanceller,findOriginalTarget:findOriginalTarget,add:add,remove:remove};_exports.$gestures=gestures$1;var GestureEventListeners=dedupingMixin(function(superClass){/**
   * @polymer
   * @mixinClass
   * @implements {Polymer_GestureEventListeners}
   */var GestureEventListeners=/*#__PURE__*/function(_superClass3){babelHelpers.inherits(GestureEventListeners,_superClass3);function GestureEventListeners(){babelHelpers.classCallCheck(this,GestureEventListeners);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(GestureEventListeners).apply(this,arguments));}babelHelpers.createClass(GestureEventListeners,[{key:"_addEventListenerToNode",/**
     * Add the event listener to the node if it is a gestures event.
     *
     * @param {!EventTarget} node Node to add event listener to
     * @param {string} eventName Name of event
     * @param {function(!Event):void} handler Listener function to add
     * @return {void}
     * @override
     */value:function _addEventListenerToNode(node,eventName,handler){if(!addListener(node,eventName,handler)){babelHelpers.get(babelHelpers.getPrototypeOf(GestureEventListeners.prototype),"_addEventListenerToNode",this).call(this,node,eventName,handler);}}/**
       * Remove the event listener to the node if it is a gestures event.
       *
       * @param {!EventTarget} node Node to remove event listener from
       * @param {string} eventName Name of event
       * @param {function(!Event):void} handler Listener function to remove
       * @return {void}
       * @override
       */},{key:"_removeEventListenerFromNode",value:function _removeEventListenerFromNode(node,eventName,handler){if(!removeListener(node,eventName,handler)){babelHelpers.get(babelHelpers.getPrototypeOf(GestureEventListeners.prototype),"_removeEventListenerFromNode",this).call(this,node,eventName,handler);}}}]);return GestureEventListeners;}(superClass);return GestureEventListeners;});_exports.GestureEventListeners=GestureEventListeners;var gestureEventListeners={__proto__:null,GestureEventListeners:GestureEventListeners};_exports.$gestureEventListeners=gestureEventListeners;var HOST_DIR=/:host\(:dir\((ltr|rtl)\)\)/g;var HOST_DIR_REPLACMENT=':host([dir="$1"])';var EL_DIR=/([\s\w-#\.\[\]\*]*):dir\((ltr|rtl)\)/g;var EL_DIR_REPLACMENT=':host([dir="$2"]) $1';var DIR_CHECK=/:dir\((?:ltr|rtl)\)/;var SHIM_SHADOW=Boolean(window['ShadyDOM']&&window['ShadyDOM']['inUse']);/**
                                                                                 * @type {!Array<!Polymer_DirMixin>}
                                                                                 */var DIR_INSTANCES=[];/** @type {?MutationObserver} */var observer=null;var DOCUMENT_DIR='';function getRTL(){DOCUMENT_DIR=document.documentElement.getAttribute('dir');}/**
   * @param {!Polymer_DirMixin} instance Instance to set RTL status on
   */function setRTL(instance){if(!instance.__autoDirOptOut){var el=/** @type {!HTMLElement} */instance;el.setAttribute('dir',DOCUMENT_DIR);}}function updateDirection(){getRTL();DOCUMENT_DIR=document.documentElement.getAttribute('dir');for(var _i29=0;_i29<DIR_INSTANCES.length;_i29++){setRTL(DIR_INSTANCES[_i29]);}}function takeRecords(){if(observer&&observer.takeRecords().length){updateDirection();}}/**
   * Element class mixin that allows elements to use the `:dir` CSS Selector to
   * have text direction specific styling.
   *
   * With this mixin, any stylesheet provided in the template will transform
   * `:dir` into `:host([dir])` and sync direction with the page via the
   * element's `dir` attribute.
   *
   * Elements can opt out of the global page text direction by setting the `dir`
   * attribute directly in `ready()` or in HTML.
   *
   * Caveats:
   * - Applications must set `<html dir="ltr">` or `<html dir="rtl">` to sync
   *   direction
   * - Automatic left-to-right or right-to-left styling is sync'd with the
   *   `<html>` element only.
   * - Changing `dir` at runtime is supported.
   * - Opting out of the global direction styling is permanent
   *
   * @mixinFunction
   * @polymer
   * @appliesMixin PropertyAccessors
   * @template T
   * @param {function(new:T)} superClass Class to apply mixin to.
   * @return {function(new:T)} superClass with mixin applied.
   */var DirMixin=dedupingMixin(function(base){if(!SHIM_SHADOW){if(!observer){getRTL();observer=new MutationObserver(updateDirection);observer.observe(document.documentElement,{attributes:true,attributeFilter:['dir']});}}/**
     * @constructor
     * @implements {Polymer_PropertyAccessors}
     * @private
     */var elementBase=PropertyAccessors(base);/**
                                                * @polymer
                                                * @mixinClass
                                                * @implements {Polymer_DirMixin}
                                                */var Dir=/*#__PURE__*/function(_elementBase){babelHelpers.inherits(Dir,_elementBase);babelHelpers.createClass(Dir,null,[{key:"_processStyleText",/**
     * @param {string} cssText .
     * @param {string} baseURI .
     * @return {string} .
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */value:function _processStyleText(cssText,baseURI){// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
cssText=elementBase._processStyleText.call(this,cssText,baseURI);if(!SHIM_SHADOW&&DIR_CHECK.test(cssText)){cssText=this._replaceDirInCssText(cssText);this.__activateDir=true;}return cssText;}/**
       * Replace `:dir` in the given CSS text
       *
       * @param {string} text CSS text to replace DIR
       * @return {string} Modified CSS
       * @nocollapse
       */},{key:"_replaceDirInCssText",value:function _replaceDirInCssText(text){var replacedText=text;replacedText=replacedText.replace(HOST_DIR,HOST_DIR_REPLACMENT);replacedText=replacedText.replace(EL_DIR,EL_DIR_REPLACMENT);return replacedText;}}]);function Dir(){var _this13;babelHelpers.classCallCheck(this,Dir);_this13=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(Dir).call(this));/** @type {boolean} */_this13.__autoDirOptOut=false;return _this13;}/**
       * @override
       * @suppress {invalidCasts} Closure doesn't understand that `this` is an
       *     HTMLElement
       * @return {void}
       */babelHelpers.createClass(Dir,[{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(Dir.prototype),"ready",this).call(this);this.__autoDirOptOut=/** @type {!HTMLElement} */this.hasAttribute('dir');}/**
       * @override
       * @suppress {missingProperties} If it exists on elementBase, it can be
       *   super'd
       * @return {void}
       */},{key:"connectedCallback",value:function connectedCallback(){if(elementBase.prototype.connectedCallback){babelHelpers.get(babelHelpers.getPrototypeOf(Dir.prototype),"connectedCallback",this).call(this);}if(this.constructor.__activateDir){takeRecords();DIR_INSTANCES.push(this);setRTL(this);}}/**
       * @override
       * @suppress {missingProperties} If it exists on elementBase, it can be
       *   super'd
       * @return {void}
       */},{key:"disconnectedCallback",value:function disconnectedCallback(){if(elementBase.prototype.disconnectedCallback){babelHelpers.get(babelHelpers.getPrototypeOf(Dir.prototype),"disconnectedCallback",this).call(this);}if(this.constructor.__activateDir){var idx=DIR_INSTANCES.indexOf(this);if(idx>-1){DIR_INSTANCES.splice(idx,1);}}}}]);return Dir;}(elementBase);Dir.__activateDir=false;return Dir;});_exports.DirMixin=DirMixin;var dirMixin={__proto__:null,DirMixin:DirMixin};_exports.$dirMixin=dirMixin;var scheduled=false;var beforeRenderQueue=[];var afterRenderQueue=[];function schedule(){scheduled=true;// before next render
requestAnimationFrame(function(){scheduled=false;flushQueue(beforeRenderQueue);// after the render
setTimeout(function(){runQueue(afterRenderQueue);});});}function flushQueue(queue){while(queue.length){callMethod(queue.shift());}}function runQueue(queue){for(var _i30=0,l=queue.length;_i30<l;_i30++){callMethod(queue.shift());}}function callMethod(info){var context=info[0];var callback=info[1];var args=info[2];try{callback.apply(context,args);}catch(e){setTimeout(function(){throw e;});}}/**
   * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`
   * tasks.
   *
   * @return {void}
   */function flush(){while(beforeRenderQueue.length||afterRenderQueue.length){flushQueue(beforeRenderQueue);flushQueue(afterRenderQueue);}scheduled=false;}/**
   * Enqueues a callback which will be run before the next render, at
   * `requestAnimationFrame` timing.
   *
   * This method is useful for enqueuing work that requires DOM measurement,
   * since measurement may not be reliable in custom element callbacks before
   * the first render, as well as for batching measurement tasks in general.
   *
   * Tasks in this queue may be flushed by calling `flush()`.
   *
   * @param {*} context Context object the callback function will be bound to
   * @param {function(...*):void} callback Callback function
   * @param {!Array=} args An array of arguments to call the callback function with
   * @return {void}
   */function beforeNextRender(context,callback,args){if(!scheduled){schedule();}beforeRenderQueue.push([context,callback,args]);}/**
   * Enqueues a callback which will be run after the next render, equivalent
   * to one task (`setTimeout`) after the next `requestAnimationFrame`.
   *
   * This method is useful for tuning the first-render performance of an
   * element or application by deferring non-critical work until after the
   * first paint.  Typical non-render-critical work may include adding UI
   * event listeners and aria attributes.
   *
   * @param {*} context Context object the callback function will be bound to
   * @param {function(...*):void} callback Callback function
   * @param {!Array=} args An array of arguments to call the callback function with
   * @return {void}
   */function afterNextRender(context,callback,args){if(!scheduled){schedule();}afterRenderQueue.push([context,callback,args]);}var renderStatus={__proto__:null,flush:flush,beforeNextRender:beforeNextRender,afterNextRender:afterNextRender};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$renderStatus=renderStatus;function resolve(){document.body.removeAttribute('unresolved');}if(document.readyState==='interactive'||document.readyState==='complete'){resolve();}else{window.addEventListener('DOMContentLoaded',resolve);}function newSplice(index,removed,addedCount){return{index:index,removed:removed,addedCount:addedCount};}var EDIT_LEAVE=0;var EDIT_UPDATE=1;var EDIT_ADD=2;var EDIT_DELETE=3;// Note: This function is *based* on the computation of the Levenshtein
// "edit" distance. The one change is that "updates" are treated as two
// edits - not one. With Array splices, an update is really a delete
// followed by an add. By retaining this, we optimize for "keeping" the
// maximum array items in the original array. For example:
//
//   'xxxx123' -> '123yyyy'
//
// With 1-edit updates, the shortest path would be just to update all seven
// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This
// leaves the substring '123' intact.
function calcEditDistances(current,currentStart,currentEnd,old,oldStart,oldEnd){// "Deletion" columns
var rowCount=oldEnd-oldStart+1;var columnCount=currentEnd-currentStart+1;var distances=new Array(rowCount);// "Addition" rows. Initialize null column.
for(var _i31=0;_i31<rowCount;_i31++){distances[_i31]=new Array(columnCount);distances[_i31][0]=_i31;}// Initialize null row
for(var j=0;j<columnCount;j++){distances[0][j]=j;}for(var _i32=1;_i32<rowCount;_i32++){for(var _j=1;_j<columnCount;_j++){if(equals(current[currentStart+_j-1],old[oldStart+_i32-1]))distances[_i32][_j]=distances[_i32-1][_j-1];else{var north=distances[_i32-1][_j]+1;var west=distances[_i32][_j-1]+1;distances[_i32][_j]=north<west?north:west;}}}return distances;}// This starts at the final weight, and walks "backward" by finding
// the minimum previous weight recursively until the origin of the weight
// matrix.
function spliceOperationsFromEditDistances(distances){var i=distances.length-1;var j=distances[0].length-1;var current=distances[i][j];var edits=[];while(i>0||j>0){if(i==0){edits.push(EDIT_ADD);j--;continue;}if(j==0){edits.push(EDIT_DELETE);i--;continue;}var northWest=distances[i-1][j-1];var west=distances[i-1][j];var north=distances[i][j-1];var min=void 0;if(west<north)min=west<northWest?west:northWest;else min=north<northWest?north:northWest;if(min==northWest){if(northWest==current){edits.push(EDIT_LEAVE);}else{edits.push(EDIT_UPDATE);current=northWest;}i--;j--;}else if(min==west){edits.push(EDIT_DELETE);i--;current=west;}else{edits.push(EDIT_ADD);j--;current=north;}}edits.reverse();return edits;}/**
   * Splice Projection functions:
   *
   * A splice map is a representation of how a previous array of items
   * was transformed into a new array of items. Conceptually it is a list of
   * tuples of
   *
   *   <index, removed, addedCount>
   *
   * which are kept in ascending index order of. The tuple represents that at
   * the |index|, |removed| sequence of items were removed, and counting forward
   * from |index|, |addedCount| items were added.
   */ /**
       * Lacking individual splice mutation information, the minimal set of
       * splices can be synthesized given the previous state and final state of an
       * array. The basic approach is to calculate the edit distance matrix and
       * choose the shortest path through it.
       *
       * Complexity: O(l * p)
       *   l: The length of the current array
       *   p: The length of the old array
       *
       * @param {!Array} current The current "changed" array for which to
       * calculate splices.
       * @param {number} currentStart Starting index in the `current` array for
       * which splices are calculated.
       * @param {number} currentEnd Ending index in the `current` array for
       * which splices are calculated.
       * @param {!Array} old The original "unchanged" array to compare `current`
       * against to determine splices.
       * @param {number} oldStart Starting index in the `old` array for
       * which splices are calculated.
       * @param {number} oldEnd Ending index in the `old` array for
       * which splices are calculated.
       * @return {!Array} Returns an array of splice record objects. Each of these
       * contains: `index` the location where the splice occurred; `removed`
       * the array of removed items from this location; `addedCount` the number
       * of items added at this location.
       */function calcSplices(current,currentStart,currentEnd,old,oldStart,oldEnd){var prefixCount=0;var suffixCount=0;var splice;var minLength=Math.min(currentEnd-currentStart,oldEnd-oldStart);if(currentStart==0&&oldStart==0)prefixCount=sharedPrefix(current,old,minLength);if(currentEnd==current.length&&oldEnd==old.length)suffixCount=sharedSuffix(current,old,minLength-prefixCount);currentStart+=prefixCount;oldStart+=prefixCount;currentEnd-=suffixCount;oldEnd-=suffixCount;if(currentEnd-currentStart==0&&oldEnd-oldStart==0)return[];if(currentStart==currentEnd){splice=newSplice(currentStart,[],0);while(oldStart<oldEnd){splice.removed.push(old[oldStart++]);}return[splice];}else if(oldStart==oldEnd)return[newSplice(currentStart,[],currentEnd-currentStart)];var ops=spliceOperationsFromEditDistances(calcEditDistances(current,currentStart,currentEnd,old,oldStart,oldEnd));splice=undefined;var splices=[];var index=currentStart;var oldIndex=oldStart;for(var _i33=0;_i33<ops.length;_i33++){switch(ops[_i33]){case EDIT_LEAVE:if(splice){splices.push(splice);splice=undefined;}index++;oldIndex++;break;case EDIT_UPDATE:if(!splice)splice=newSplice(index,[],0);splice.addedCount++;index++;splice.removed.push(old[oldIndex]);oldIndex++;break;case EDIT_ADD:if(!splice)splice=newSplice(index,[],0);splice.addedCount++;index++;break;case EDIT_DELETE:if(!splice)splice=newSplice(index,[],0);splice.removed.push(old[oldIndex]);oldIndex++;break;}}if(splice){splices.push(splice);}return splices;}function sharedPrefix(current,old,searchLength){for(var _i34=0;_i34<searchLength;_i34++){if(!equals(current[_i34],old[_i34]))return _i34;}return searchLength;}function sharedSuffix(current,old,searchLength){var index1=current.length;var index2=old.length;var count=0;while(count<searchLength&&equals(current[--index1],old[--index2])){count++;}return count;}/**
   * Returns an array of splice records indicating the minimum edits required
   * to transform the `previous` array into the `current` array.
   *
   * Splice records are ordered by index and contain the following fields:
   * - `index`: index where edit started
   * - `removed`: array of removed items from this index
   * - `addedCount`: number of items added at this index
   *
   * This function is based on the Levenshtein "minimum edit distance"
   * algorithm. Note that updates are treated as removal followed by addition.
   *
   * The worst-case time complexity of this algorithm is `O(l * p)`
   *   l: The length of the current array
   *   p: The length of the previous array
   *
   * However, the worst-case complexity is reduced by an `O(n)` optimization
   * to detect any shared prefix & suffix between the two arrays and only
   * perform the more expensive minimum edit distance calculation over the
   * non-shared portions of the arrays.
   *
   * @function
   * @param {!Array} current The "changed" array for which splices will be
   * calculated.
   * @param {!Array} previous The "unchanged" original array to compare
   * `current` against to determine the splices.
   * @return {!Array} Returns an array of splice record objects. Each of these
   * contains: `index` the location where the splice occurred; `removed`
   * the array of removed items from this location; `addedCount` the number
   * of items added at this location.
   */function calculateSplices(current,previous){return calcSplices(current,0,current.length,previous,0,previous.length);}function equals(currentValue,previousValue){return currentValue===previousValue;}var arraySplice={__proto__:null,calculateSplices:calculateSplices};_exports.$arraySplice=arraySplice;function isSlot(node){return node.localName==='slot';}/**
   * Class that listens for changes (additions or removals) to
   * "flattened nodes" on a given `node`. The list of flattened nodes consists
   * of a node's children and, for any children that are `<slot>` elements,
   * the expanded flattened list of `assignedNodes`.
   * For example, if the observed node has children `<a></a><slot></slot><b></b>`
   * and the `<slot>` has one `<div>` assigned to it, then the flattened
   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other
   * `<slot>` elements assigned to it, these are flattened as well.
   *
   * The provided `callback` is called whenever any change to this list
   * of flattened nodes occurs, where an addition or removal of a node is
   * considered a change. The `callback` is called with one argument, an object
   * containing an array of any `addedNodes` and `removedNodes`.
   *
   * Note: the callback is called asynchronous to any changes
   * at a microtask checkpoint. This is because observation is performed using
   * `MutationObserver` and the `<slot>` element's `slotchange` event which
   * are asynchronous.
   *
   * An example:
   * ```js
   * class TestSelfObserve extends PolymerElement {
   *   static get is() { return 'test-self-observe';}
   *   connectedCallback() {
   *     super.connectedCallback();
   *     this._observer = new FlattenedNodesObserver(this, (info) => {
   *       this.info = info;
   *     });
   *   }
   *   disconnectedCallback() {
   *     super.disconnectedCallback();
   *     this._observer.disconnect();
   *   }
   * }
   * customElements.define(TestSelfObserve.is, TestSelfObserve);
   * ```
   *
   * @summary Class that listens for changes (additions or removals) to
   * "flattened nodes" on a given `node`.
   * @implements {PolymerDomApi.ObserveHandle}
   */var FlattenedNodesObserver=/*#__PURE__*/function(){babelHelpers.createClass(FlattenedNodesObserver,null,[{key:"getFlattenedNodes",/**
   * Returns the list of flattened nodes for the given `node`.
   * This list consists of a node's children and, for any children
   * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.
   * For example, if the observed node has children `<a></a><slot></slot><b></b>`
   * and the `<slot>` has one `<div>` assigned to it, then the flattened
   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other
   * `<slot>` elements assigned to it, these are flattened as well.
   *
   * @param {!HTMLElement|!HTMLSlotElement} node The node for which to
   *      return the list of flattened nodes.
   * @return {!Array<!Node>} The list of flattened nodes for the given `node`.
   * @nocollapse See https://github.com/google/closure-compiler/issues/2763
   */ // eslint-disable-next-line
value:function getFlattenedNodes(node){var wrapped=wrap$1(node);if(isSlot(node)){node=/** @type {!HTMLSlotElement} */node;// eslint-disable-line no-self-assign
return wrapped.assignedNodes({flatten:true});}else{return Array.from(wrapped.childNodes).map(function(node){if(isSlot(node)){node=/** @type {!HTMLSlotElement} */node;// eslint-disable-line no-self-assign
return wrap$1(node).assignedNodes({flatten:true});}else{return[node];}}).reduce(function(a,b){return a.concat(b);},[]);}}/**
     * @param {!HTMLElement} target Node on which to listen for changes.
     * @param {?function(this: Element, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Function called when there are additions
     * or removals from the target's list of flattened nodes.
     */ // eslint-disable-next-line
}]);function FlattenedNodesObserver(target,callback){var _this14=this;babelHelpers.classCallCheck(this,FlattenedNodesObserver);/**
     * @type {MutationObserver}
     * @private
     */this._shadyChildrenObserver=null;/**
                                            * @type {MutationObserver}
                                            * @private
                                            */this._nativeChildrenObserver=null;this._connected=false;/**
                              * @type {!HTMLElement}
                              * @private
                              */this._target=target;this.callback=callback;this._effectiveNodes=[];this._observer=null;this._scheduled=false;/**
                              * @type {function()}
                              * @private
                              */this._boundSchedule=function(){_this14._schedule();};this.connect();this._schedule();}/**
     * Activates an observer. This method is automatically called when
     * a `FlattenedNodesObserver` is created. It should only be called to
     * re-activate an observer that has been deactivated via the `disconnect` method.
     *
     * @return {void}
     */babelHelpers.createClass(FlattenedNodesObserver,[{key:"connect",value:function connect(){var _this15=this;if(isSlot(this._target)){this._listenSlots([this._target]);}else if(wrap$1(this._target).children){this._listenSlots(/** @type {!NodeList<!Node>} */wrap$1(this._target).children);if(window.ShadyDOM){this._shadyChildrenObserver=ShadyDOM.observeChildren(this._target,function(mutations){_this15._processMutations(mutations);});}else{this._nativeChildrenObserver=new MutationObserver(function(mutations){_this15._processMutations(mutations);});this._nativeChildrenObserver.observe(this._target,{childList:true});}}this._connected=true;}/**
     * Deactivates the flattened nodes observer. After calling this method
     * the observer callback will not be called when changes to flattened nodes
     * occur. The `connect` method may be subsequently called to reactivate
     * the observer.
     *
     * @return {void}
     * @override
     */},{key:"disconnect",value:function disconnect(){if(isSlot(this._target)){this._unlistenSlots([this._target]);}else if(wrap$1(this._target).children){this._unlistenSlots(/** @type {!NodeList<!Node>} */wrap$1(this._target).children);if(window.ShadyDOM&&this._shadyChildrenObserver){ShadyDOM.unobserveChildren(this._shadyChildrenObserver);this._shadyChildrenObserver=null;}else if(this._nativeChildrenObserver){this._nativeChildrenObserver.disconnect();this._nativeChildrenObserver=null;}}this._connected=false;}/**
     * @return {void}
     * @private
     */},{key:"_schedule",value:function _schedule(){var _this16=this;if(!this._scheduled){this._scheduled=true;microTask.run(function(){return _this16.flush();});}}/**
     * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer
     * @return {void}
     * @private
     */},{key:"_processMutations",value:function _processMutations(mutations){this._processSlotMutations(mutations);this.flush();}/**
     * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer
     * @return {void}
     * @private
     */},{key:"_processSlotMutations",value:function _processSlotMutations(mutations){if(mutations){for(var _i35=0;_i35<mutations.length;_i35++){var mutation=mutations[_i35];if(mutation.addedNodes){this._listenSlots(mutation.addedNodes);}if(mutation.removedNodes){this._unlistenSlots(mutation.removedNodes);}}}}/**
     * Flushes the observer causing any pending changes to be immediately
     * delivered the observer callback. By default these changes are delivered
     * asynchronously at the next microtask checkpoint.
     *
     * @return {boolean} Returns true if any pending changes caused the observer
     * callback to run.
     */},{key:"flush",value:function flush(){if(!this._connected){return false;}if(window.ShadyDOM){ShadyDOM.flush();}if(this._nativeChildrenObserver){this._processSlotMutations(this._nativeChildrenObserver.takeRecords());}else if(this._shadyChildrenObserver){this._processSlotMutations(this._shadyChildrenObserver.takeRecords());}this._scheduled=false;var info={target:this._target,addedNodes:[],removedNodes:[]};var newNodes=this.constructor.getFlattenedNodes(this._target);var splices=calculateSplices(newNodes,this._effectiveNodes);// process removals
for(var _i36=0,s;_i36<splices.length&&(s=splices[_i36]);_i36++){for(var j=0,n;j<s.removed.length&&(n=s.removed[j]);j++){info.removedNodes.push(n);}}// process adds
for(var _i37=0,_s2;_i37<splices.length&&(_s2=splices[_i37]);_i37++){for(var _j2=_s2.index;_j2<_s2.index+_s2.addedCount;_j2++){info.addedNodes.push(newNodes[_j2]);}}// update cache
this._effectiveNodes=newNodes;var didFlush=false;if(info.addedNodes.length||info.removedNodes.length){didFlush=true;this.callback.call(this._target,info);}return didFlush;}/**
     * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change
     * @return {void}
     * @private
     */},{key:"_listenSlots",value:function _listenSlots(nodeList){for(var _i38=0;_i38<nodeList.length;_i38++){var n=nodeList[_i38];if(isSlot(n)){n.addEventListener('slotchange',this._boundSchedule);}}}/**
     * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change
     * @return {void}
     * @private
     */},{key:"_unlistenSlots",value:function _unlistenSlots(nodeList){for(var _i39=0;_i39<nodeList.length;_i39++){var n=nodeList[_i39];if(isSlot(n)){n.removeEventListener('slotchange',this._boundSchedule);}}}}]);return FlattenedNodesObserver;}();_exports.FlattenedNodesObserver=FlattenedNodesObserver;var flattenedNodesObserver={__proto__:null,FlattenedNodesObserver:FlattenedNodesObserver};_exports.$flattenedNodesObserver=flattenedNodesObserver;var flush$1=function flush$1(){var shadyDOM,debouncers;do{shadyDOM=window.ShadyDOM&&ShadyDOM.flush();if(window.ShadyCSS&&window.ShadyCSS.ScopingShim){window.ShadyCSS.ScopingShim.flush();}debouncers=flushDebouncers();}while(shadyDOM||debouncers);};_exports.flush$1=_exports.flush=flush$1;var flush$2={__proto__:null,enqueueDebouncer:enqueueDebouncer,flush:flush$1};/* eslint-enable no-unused-vars */_exports.$flush=flush$2;var p=Element.prototype;/**
                              * @const {function(this:Node, string): boolean}
                              */var normalizedMatchesSelector=p.matches||p.matchesSelector||p.mozMatchesSelector||p.msMatchesSelector||p.oMatchesSelector||p.webkitMatchesSelector;/**
                                                                                                                                                                   * Cross-platform `element.matches` shim.
                                                                                                                                                                   *
                                                                                                                                                                   * @function matchesSelector
                                                                                                                                                                   * @param {!Node} node Node to check selector against
                                                                                                                                                                   * @param {string} selector Selector to match
                                                                                                                                                                   * @return {boolean} True if node matched selector
                                                                                                                                                                   */var matchesSelector=function matchesSelector(node,selector){return normalizedMatchesSelector.call(node,selector);};/**
    * Node API wrapper class returned from `Polymer.dom.(target)` when
    * `target` is a `Node`.
    * @implements {PolymerDomApi}
    * @unrestricted
    */_exports.matchesSelector=matchesSelector;var DomApiNative=/*#__PURE__*/function(){/**
   * @param {Node} node Node for which to create a Polymer.dom helper object.
   */function DomApiNative(node){babelHelpers.classCallCheck(this,DomApiNative);if(window['ShadyDOM']&&window['ShadyDOM']['inUse']){window['ShadyDOM']['patch'](node);}this.node=node;}/**
     * Returns an instance of `FlattenedNodesObserver` that
     * listens for node changes on this element.
     *
     * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children
     *   of this element changes
     * @return {!PolymerDomApi.ObserveHandle} Observer instance
     * @override
     */babelHelpers.createClass(DomApiNative,[{key:"observeNodes",value:function observeNodes(callback){return new FlattenedNodesObserver(/** @type {!HTMLElement} */this.node,callback);}/**
     * Disconnects an observer previously created via `observeNodes`
     *
     * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance
     *   to disconnect.
     * @return {void}
     * @override
     */},{key:"unobserveNodes",value:function unobserveNodes(observerHandle){observerHandle.disconnect();}/**
     * Provided as a backwards-compatible API only.  This method does nothing.
     * @return {void}
     */},{key:"notifyObserver",value:function notifyObserver(){}/**
                       * Returns true if the provided node is contained with this element's
                       * light-DOM children or shadow root, including any nested shadow roots
                       * of children therein.
                       *
                       * @param {Node} node Node to test
                       * @return {boolean} Returns true if the given `node` is contained within
                       *   this element's light or shadow DOM.
                       * @override
                       */},{key:"deepContains",value:function deepContains(node){if(wrap$1(this.node).contains(node)){return true;}var n=node;var doc=node.ownerDocument;// walk from node to `this` or `document`
while(n&&n!==doc&&n!==this.node){// use logical parentnode, or native ShadowRoot host
n=wrap$1(n).parentNode||wrap$1(n).host;}return n===this.node;}/**
     * Returns the root node of this node.  Equivalent to `getRootNode()`.
     *
     * @return {Node} Top most element in the dom tree in which the node
     * exists. If the node is connected to a document this is either a
     * shadowRoot or the document; otherwise, it may be the node
     * itself or a node or document fragment containing it.
     * @override
     */},{key:"getOwnerRoot",value:function getOwnerRoot(){return wrap$1(this.node).getRootNode();}/**
     * For slot elements, returns the nodes assigned to the slot; otherwise
     * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.
     *
     * @return {!Array<!Node>} Array of assigned nodes
     * @override
     */},{key:"getDistributedNodes",value:function getDistributedNodes(){return this.node.localName==='slot'?wrap$1(this.node).assignedNodes({flatten:true}):[];}/**
     * Returns an array of all slots this element was distributed to.
     *
     * @return {!Array<!HTMLSlotElement>} Description
     * @override
     */},{key:"getDestinationInsertionPoints",value:function getDestinationInsertionPoints(){var ip$=[];var n=wrap$1(this.node).assignedSlot;while(n){ip$.push(n);n=wrap$1(n).assignedSlot;}return ip$;}/**
     * Calls `importNode` on the `ownerDocument` for this node.
     *
     * @param {!Node} node Node to import
     * @param {boolean} deep True if the node should be cloned deeply during
     *   import
     * @return {Node} Clone of given node imported to this owner document
     */},{key:"importNode",value:function importNode(node,deep){var doc=babelHelpers.instanceof(this.node,Document)?this.node:this.node.ownerDocument;return wrap$1(doc).importNode(node,deep);}/**
     * @return {!Array<!Node>} Returns a flattened list of all child nodes and
     * nodes assigned to child slots.
     * @override
     */},{key:"getEffectiveChildNodes",value:function getEffectiveChildNodes(){return FlattenedNodesObserver.getFlattenedNodes(/** @type {!HTMLElement} */this.node);}/**
     * Returns a filtered list of flattened child elements for this element based
     * on the given selector.
     *
     * @param {string} selector Selector to filter nodes against
     * @return {!Array<!HTMLElement>} List of flattened child elements
     * @override
     */},{key:"queryDistributedElements",value:function queryDistributedElements(selector){var c$=this.getEffectiveChildNodes();var list=[];for(var _i40=0,l=c$.length,c;_i40<l&&(c=c$[_i40]);_i40++){if(c.nodeType===Node.ELEMENT_NODE&&matchesSelector(c,selector)){list.push(c);}}return list;}/**
     * For shadow roots, returns the currently focused element within this
     * shadow root.
     *
     * return {Node|undefined} Currently focused element
     * @override
     */},{key:"activeElement",get:function get(){var node=this.node;return node._activeElement!==undefined?node._activeElement:node.activeElement;}}]);return DomApiNative;}();function forwardMethods(proto,methods){var _loop=function _loop(_i41){var method=methods[_i41];/* eslint-disable valid-jsdoc */proto[method]=/** @this {DomApiNative} */function(){return this.node[method].apply(this.node,arguments);};/* eslint-enable */};for(var _i41=0;_i41<methods.length;_i41++){_loop(_i41);}}function forwardReadOnlyProperties(proto,properties){var _loop2=function _loop2(_i42){var name=properties[_i42];Object.defineProperty(proto,name,{get:function get(){var domApi=/** @type {DomApiNative} */this;return domApi.node[name];},configurable:true});};for(var _i42=0;_i42<properties.length;_i42++){_loop2(_i42);}}function forwardProperties(proto,properties){var _loop3=function _loop3(_i43){var name=properties[_i43];Object.defineProperty(proto,name,{/**
       * @this {DomApiNative}
       * @return {*} .
       */get:function get(){return this.node[name];},/**
       * @this {DomApiNative}
       * @param {*} value .
       */set:function set(value){this.node[name]=value;},configurable:true});};for(var _i43=0;_i43<properties.length;_i43++){_loop3(_i43);}}/**
   * Event API wrapper class returned from `dom.(target)` when
   * `target` is an `Event`.
   */var EventApi=/*#__PURE__*/function(){function EventApi(event){babelHelpers.classCallCheck(this,EventApi);this.event=event;}/**
     * Returns the first node on the `composedPath` of this event.
     *
     * @return {!EventTarget} The node this event was dispatched to
     */babelHelpers.createClass(EventApi,[{key:"rootTarget",get:function get(){return this.path[0];}/**
     * Returns the local (re-targeted) target for this event.
     *
     * @return {!EventTarget} The local (re-targeted) target for this event.
     */},{key:"localTarget",get:function get(){return this.event.target;}/**
     * Returns the `composedPath` for this event.
     * @return {!Array<!EventTarget>} The nodes this event propagated through
     */},{key:"path",get:function get(){return this.event.composedPath();}}]);return EventApi;}();/**
   * @function
   * @param {boolean=} deep
   * @return {!Node}
   */_exports.EventApi=EventApi;DomApiNative.prototype.cloneNode;/**
                                   * @function
                                   * @param {!Node} node
                                   * @return {!Node}
                                   */DomApiNative.prototype.appendChild;/**
                                     * @function
                                     * @param {!Node} newChild
                                     * @param {Node} refChild
                                     * @return {!Node}
                                     */DomApiNative.prototype.insertBefore;/**
                                      * @function
                                      * @param {!Node} node
                                      * @return {!Node}
                                      */DomApiNative.prototype.removeChild;/**
                                     * @function
                                     * @param {!Node} oldChild
                                     * @param {!Node} newChild
                                     * @return {!Node}
                                     */DomApiNative.prototype.replaceChild;/**
                                      * @function
                                      * @param {string} name
                                      * @param {string} value
                                      * @return {void}
                                      */DomApiNative.prototype.setAttribute;/**
                                      * @function
                                      * @param {string} name
                                      * @return {void}
                                      */DomApiNative.prototype.removeAttribute;/**
                                         * @function
                                         * @param {string} selector
                                         * @return {?Element}
                                         */DomApiNative.prototype.querySelector;/**
                                       * @function
                                       * @param {string} selector
                                       * @return {!NodeList<!Element>}
                                       */DomApiNative.prototype.querySelectorAll;/** @type {?Node} */DomApiNative.prototype.parentNode;/** @type {?Node} */DomApiNative.prototype.firstChild;/** @type {?Node} */DomApiNative.prototype.lastChild;/** @type {?Node} */DomApiNative.prototype.nextSibling;/** @type {?Node} */DomApiNative.prototype.previousSibling;/** @type {?HTMLElement} */DomApiNative.prototype.firstElementChild;/** @type {?HTMLElement} */DomApiNative.prototype.lastElementChild;/** @type {?HTMLElement} */DomApiNative.prototype.nextElementSibling;/** @type {?HTMLElement} */DomApiNative.prototype.previousElementSibling;/** @type {!Array<!Node>} */DomApiNative.prototype.childNodes;/** @type {!Array<!HTMLElement>} */DomApiNative.prototype.children;/** @type {?DOMTokenList} */DomApiNative.prototype.classList;/** @type {string} */DomApiNative.prototype.textContent;/** @type {string} */DomApiNative.prototype.innerHTML;var DomApiImpl=DomApiNative;if(window['ShadyDOM']&&window['ShadyDOM']['inUse']&&window['ShadyDOM']['noPatch']&&window['ShadyDOM']['Wrapper']){/**
   * @private
   * @extends {HTMLElement}
   */var Wrapper=/*#__PURE__*/function(_window$ShadyDOM$Wrap){babelHelpers.inherits(Wrapper,_window$ShadyDOM$Wrap);function Wrapper(){babelHelpers.classCallCheck(this,Wrapper);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(Wrapper).apply(this,arguments));}return Wrapper;}(window['ShadyDOM']['Wrapper']);// copy bespoke API onto wrapper
Object.getOwnPropertyNames(DomApiNative.prototype).forEach(function(prop){if(prop!='activeElement'){Wrapper.prototype[prop]=DomApiNative.prototype[prop];}});// Note, `classList` is here only for legacy compatibility since it does not
// trigger distribution in v1 Shadow DOM.
forwardReadOnlyProperties(Wrapper.prototype,['classList']);DomApiImpl=Wrapper;Object.defineProperties(EventApi.prototype,{// Returns the "lowest" node in the same root as the event's currentTarget.
// When in `noPatch` mode, this must be calculated by walking the event's
// path.
localTarget:{get:function get(){var current=this.event.currentTarget;var currentRoot=current&&dom(current).getOwnerRoot();var p$=this.path;for(var _i44=0;_i44<p$.length;_i44++){var e=p$[_i44];if(dom(e).getOwnerRoot()===currentRoot){return e;}}},configurable:true},path:{get:function get(){return window['ShadyDOM']['composedPath'](this.event);},configurable:true}});}else{// Methods that can provoke distribution or must return the logical, not
// composed tree.
forwardMethods(DomApiNative.prototype,['cloneNode','appendChild','insertBefore','removeChild','replaceChild','setAttribute','removeAttribute','querySelector','querySelectorAll']);// Properties that should return the logical, not composed tree. Note, `classList`
// is here only for legacy compatibility since it does not trigger distribution
// in v1 Shadow DOM.
forwardReadOnlyProperties(DomApiNative.prototype,['parentNode','firstChild','lastChild','nextSibling','previousSibling','firstElementChild','lastElementChild','nextElementSibling','previousElementSibling','childNodes','children','classList']);forwardProperties(DomApiNative.prototype,['textContent','innerHTML','className']);}var DomApi=DomApiImpl;/**
                                   * Legacy DOM and Event manipulation API wrapper factory used to abstract
                                   * differences between native Shadow DOM and "Shady DOM" when polyfilling on
                                   * older browsers.
                                   *
                                   * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and
                                   * in the majority of cases simply facades directly to the standard native
                                   * API.
                                   *
                                   * @summary Legacy DOM and Event manipulation API wrapper factory used to
                                   * abstract differences between native Shadow DOM and "Shady DOM."
                                   * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on
                                   * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API
                                   */_exports.DomApi=DomApi;var dom=function dom(obj){obj=obj||document;if(babelHelpers.instanceof(obj,DomApiImpl)){return(/** @type {!DomApi} */obj);}if(babelHelpers.instanceof(obj,EventApi)){return(/** @type {!EventApi} */obj);}var helper=obj['__domApi'];if(!helper){if(babelHelpers.instanceof(obj,Event)){helper=new EventApi(obj);}else{helper=new DomApiImpl(/** @type {Node} */obj);}obj['__domApi']=helper;}return helper;};_exports.dom=dom;var polymer_dom={__proto__:null,matchesSelector:matchesSelector,EventApi:EventApi,DomApi:DomApi,dom:dom,flush:flush$1,addDebouncer:enqueueDebouncer};_exports.$polymerDom=polymer_dom;var ShadyDOM$1=window.ShadyDOM;var ShadyCSS=window.ShadyCSS;/**
                                   * Return true if node scope is correct.
                                   *
                                   * @param {!Element} node Node to check scope
                                   * @param {!Node} scope Scope reference
                                   * @return {boolean} True if node is in scope
                                   */function sameScope(node,scope){return wrap$1(node).getRootNode()===scope;}/**
   * Ensure that elements in a ShadowDOM container are scoped correctly.
   * This function is only needed when ShadyDOM is used and unpatched DOM APIs are used in third party code.
   * This can happen in noPatch mode or when specialized APIs like ranges or tables are used to mutate DOM.
   *
   * @param  {!Element} container Container element to scope
   * @param  {boolean=} shouldObserve if true, start a mutation observer for added nodes to the container
   * @return {?MutationObserver} Returns a new MutationObserver on `container` if `shouldObserve` is true.
   */function _scopeSubtree(container){var shouldObserve=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;// If using native ShadowDOM, abort
if(!ShadyDOM$1||!ShadyCSS){return null;}// ShadyCSS handles DOM mutations when ShadyDOM does not handle scoping itself
if(!ShadyDOM$1['handlesDynamicScoping']){return null;}var ScopingShim=ShadyCSS['ScopingShim'];// if ScopingShim is not available, abort
if(!ScopingShim){return null;}// capture correct scope for container
var containerScope=ScopingShim['scopeForNode'](container);var root=wrap$1(container).getRootNode();var scopify=function scopify(node){if(!sameScope(node,root)){return;}// NOTE: native qSA does not honor scoped DOM, but it is faster, and the same behavior as Polymer v1
var elements=Array.from(ShadyDOM$1['nativeMethods']['querySelectorAll'].call(node,'*'));elements.push(node);for(var _i45=0;_i45<elements.length;_i45++){var el=elements[_i45];if(!sameScope(el,root)){continue;}var currentScope=ScopingShim['currentScopeForNode'](el);if(currentScope!==containerScope){if(currentScope!==''){ScopingShim['unscopeNode'](el,currentScope);}ScopingShim['scopeNode'](el,containerScope);}}};// scope everything in container
scopify(container);if(shouldObserve){var mo=new MutationObserver(function(mxns){for(var _i46=0;_i46<mxns.length;_i46++){var mxn=mxns[_i46];for(var j=0;j<mxn.addedNodes.length;j++){var addedNode=mxn.addedNodes[j];if(addedNode.nodeType===Node.ELEMENT_NODE){scopify(addedNode);}}}});mo.observe(container,{childList:true,subtree:true});return mo;}else{return null;}}var scopeSubtree$1={__proto__:null,scopeSubtree:_scopeSubtree};_exports.$scopeSubtree=scopeSubtree$1;var bundledImportMeta$1=_objectSpread({},meta,{url:new URL('../%40polymer/polymer/lib/legacy/legacy-element-mixin.js',meta.url).href});var styleInterface=window.ShadyCSS;/**
                                       * Element class mixin that provides Polymer's "legacy" API intended to be
                                       * backward-compatible to the greatest extent possible with the API
                                       * found on the Polymer 1.x `Polymer.Base` prototype applied to all elements
                                       * defined using the `Polymer({...})` function.
                                       *
                                       * @mixinFunction
                                       * @polymer
                                       * @appliesMixin ElementMixin
                                       * @appliesMixin GestureEventListeners
                                       * @property isAttached {boolean} Set to `true` in this element's
                                       *   `connectedCallback` and `false` in `disconnectedCallback`
                                       * @summary Element class mixin that provides Polymer's "legacy" API
                                       */var LegacyElementMixin=dedupingMixin(function(base){/**
   * @constructor
   * @implements {Polymer_ElementMixin}
   * @implements {Polymer_GestureEventListeners}
   * @implements {Polymer_DirMixin}
   * @extends {HTMLElement}
   * @private
   */var legacyElementBase=DirMixin(GestureEventListeners(ElementMixin(base)));/**
                                                                                     * Map of simple names to touch action names
                                                                                     * @dict
                                                                                     */var DIRECTION_MAP={'x':'pan-x','y':'pan-y','none':'none','all':'auto'};/**
      * @polymer
      * @mixinClass
      * @extends {legacyElementBase}
      * @implements {Polymer_LegacyElementMixin}
      * @unrestricted
      */var LegacyElement=/*#__PURE__*/function(_legacyElementBase){babelHelpers.inherits(LegacyElement,_legacyElementBase);function LegacyElement(){var _this17;babelHelpers.classCallCheck(this,LegacyElement);_this17=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(LegacyElement).call(this));/** @type {boolean} */_this17.isAttached;/** @type {?WeakMap<!Element, !Object<string, !Function>>} */_this17.__boundListeners;/** @type {?Object<string, ?Function>} */_this17._debouncers;return _this17;}/**
       * Forwards `importMeta` from the prototype (i.e. from the info object
       * passed to `Polymer({...})`) to the static API.
       *
       * @return {!Object} The `import.meta` object set on the prototype
       * @suppress {missingProperties} `this` is always in the instance in
       *  closure for some reason even in a static method, rather than the class
       * @nocollapse
       */babelHelpers.createClass(LegacyElement,[{key:"created",/**
       * Legacy callback called during the `constructor`, for overriding
       * by the user.
       * @override
       * @return {void}
       */value:function created(){}/**
                  * Provides an implementation of `connectedCallback`
                  * which adds Polymer legacy API's `attached` method.
                  * @return {void}
                  * @override
                  */},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(LegacyElement.prototype),"connectedCallback",this).call(this);this.isAttached=true;this.attached();}/**
       * Legacy callback called during `connectedCallback`, for overriding
       * by the user.
       * @override
       * @return {void}
       */},{key:"attached",value:function attached(){}/**
                   * Provides an implementation of `disconnectedCallback`
                   * which adds Polymer legacy API's `detached` method.
                   * @return {void}
                   * @override
                   */},{key:"disconnectedCallback",value:function disconnectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(LegacyElement.prototype),"disconnectedCallback",this).call(this);this.isAttached=false;this.detached();}/**
       * Legacy callback called during `disconnectedCallback`, for overriding
       * by the user.
       * @override
       * @return {void}
       */},{key:"detached",value:function detached(){}/**
                   * Provides an override implementation of `attributeChangedCallback`
                   * which adds the Polymer legacy API's `attributeChanged` method.
                   * @param {string} name Name of attribute.
                   * @param {?string} old Old value of attribute.
                   * @param {?string} value Current value of attribute.
                   * @param {?string} namespace Attribute namespace.
                   * @return {void}
                   * @override
                   */},{key:"attributeChangedCallback",value:function attributeChangedCallback(name,old,value,namespace){if(old!==value){babelHelpers.get(babelHelpers.getPrototypeOf(LegacyElement.prototype),"attributeChangedCallback",this).call(this,name,old,value,namespace);this.attributeChanged(name,old,value);}}/**
       * Legacy callback called during `attributeChangedChallback`, for overriding
       * by the user.
       * @param {string} name Name of attribute.
       * @param {?string} old Old value of attribute.
       * @param {?string} value Current value of attribute.
       * @return {void}
       * @override
       */},{key:"attributeChanged",value:function attributeChanged(name,old,value){}// eslint-disable-line no-unused-vars
/**
     * Overrides the default `Polymer.PropertyEffects` implementation to
     * add support for class initialization via the `_registered` callback.
     * This is called only when the first instance of the element is created.
     *
     * @return {void}
     * @override
     * @suppress {invalidCasts}
     */},{key:"_initializeProperties",value:function _initializeProperties(){var proto=Object.getPrototypeOf(this);if(!proto.hasOwnProperty('__hasRegisterFinished')){this._registered();// backstop in case the `_registered` implementation does not set this
proto.__hasRegisterFinished=true;}babelHelpers.get(babelHelpers.getPrototypeOf(LegacyElement.prototype),"_initializeProperties",this).call(this);this.root=/** @type {HTMLElement} */this;this.created();// Ensure listeners are applied immediately so that they are
// added before declarative event listeners. This allows an element to
// decorate itself via an event prior to any declarative listeners
// seeing the event. Note, this ensures compatibility with 1.x ordering.
this._applyListeners();}/**
       * Called automatically when an element is initializing.
       * Users may override this method to perform class registration time
       * work. The implementation should ensure the work is performed
       * only once for the class.
       * @protected
       * @return {void}
       * @override
       */},{key:"_registered",value:function _registered(){}/**
                      * Overrides the default `Polymer.PropertyEffects` implementation to
                      * add support for installing `hostAttributes` and `listeners`.
                      *
                      * @return {void}
                      * @override
                      */},{key:"ready",value:function ready(){this._ensureAttributes();babelHelpers.get(babelHelpers.getPrototypeOf(LegacyElement.prototype),"ready",this).call(this);}/**
       * Ensures an element has required attributes. Called when the element
       * is being readied via `ready`. Users should override to set the
       * element's required attributes. The implementation should be sure
       * to check and not override existing attributes added by
       * the user of the element. Typically, setting attributes should be left
       * to the element user and not done here; reasonable exceptions include
       * setting aria roles and focusability.
       * @protected
       * @return {void}
       * @override
       */},{key:"_ensureAttributes",value:function _ensureAttributes(){}/**
                            * Adds element event listeners. Called when the element
                            * is being readied via `ready`. Users should override to
                            * add any required element event listeners.
                            * In performance critical elements, the work done here should be kept
                            * to a minimum since it is done before the element is rendered. In
                            * these elements, consider adding listeners asynchronously so as not to
                            * block render.
                            * @protected
                            * @return {void}
                            * @override
                            */},{key:"_applyListeners",value:function _applyListeners(){}/**
                          * Converts a typed JavaScript value to a string.
                          *
                          * Note this method is provided as backward-compatible legacy API
                          * only.  It is not directly called by any Polymer features. To customize
                          * how properties are serialized to attributes for attribute bindings and
                          * `reflectToAttribute: true` properties as well as this method, override
                          * the `_serializeValue` method provided by `Polymer.PropertyAccessors`.
                          *
                          * @param {*} value Value to deserialize
                          * @return {string | undefined} Serialized value
                          * @override
                          */},{key:"serialize",value:function serialize(value){return this._serializeValue(value);}/**
       * Converts a string to a typed JavaScript value.
       *
       * Note this method is provided as backward-compatible legacy API
       * only.  It is not directly called by any Polymer features.  To customize
       * how attributes are deserialized to properties for in
       * `attributeChangedCallback`, override `_deserializeValue` method
       * provided by `Polymer.PropertyAccessors`.
       *
       * @param {string} value String to deserialize
       * @param {*} type Type to deserialize the string to
       * @return {*} Returns the deserialized value in the `type` given.
       * @override
       */},{key:"deserialize",value:function deserialize(value,type){return this._deserializeValue(value,type);}/**
       * Serializes a property to its associated attribute.
       *
       * Note this method is provided as backward-compatible legacy API
       * only.  It is not directly called by any Polymer features.
       *
       * @param {string} property Property name to reflect.
       * @param {string=} attribute Attribute name to reflect.
       * @param {*=} value Property value to reflect.
       * @return {void}
       * @override
       */},{key:"reflectPropertyToAttribute",value:function reflectPropertyToAttribute(property,attribute,value){this._propertyToAttribute(property,attribute,value);}/**
       * Sets a typed value to an HTML attribute on a node.
       *
       * Note this method is provided as backward-compatible legacy API
       * only.  It is not directly called by any Polymer features.
       *
       * @param {*} value Value to serialize.
       * @param {string} attribute Attribute name to serialize to.
       * @param {Element} node Element to set attribute to.
       * @return {void}
       * @override
       */},{key:"serializeValueToAttribute",value:function serializeValueToAttribute(value,attribute,node){this._valueToNodeAttribute(/** @type {Element} */node||this,value,attribute);}/**
       * Copies own properties (including accessor descriptors) from a source
       * object to a target object.
       *
       * @param {Object} prototype Target object to copy properties to.
       * @param {Object} api Source object to copy properties from.
       * @return {Object} prototype object that was passed as first argument.
       * @override
       */},{key:"extend",value:function extend(prototype,api){if(!(prototype&&api)){return prototype||api;}var n$=Object.getOwnPropertyNames(api);for(var _i47=0,n;_i47<n$.length&&(n=n$[_i47]);_i47++){var pd=Object.getOwnPropertyDescriptor(api,n);if(pd){Object.defineProperty(prototype,n,pd);}}return prototype;}/**
       * Copies props from a source object to a target object.
       *
       * Note, this method uses a simple `for...in` strategy for enumerating
       * properties.  To ensure only `ownProperties` are copied from source
       * to target and that accessor implementations are copied, use `extend`.
       *
       * @param {!Object} target Target object to copy properties to.
       * @param {!Object} source Source object to copy properties from.
       * @return {!Object} Target object that was passed as first argument.
       * @override
       */},{key:"mixin",value:function mixin(target,source){for(var _i48 in source){target[_i48]=source[_i48];}return target;}/**
       * Sets the prototype of an object.
       *
       * Note this method is provided as backward-compatible legacy API
       * only.  It is not directly called by any Polymer features.
       * @param {Object} object The object on which to set the prototype.
       * @param {Object} prototype The prototype that will be set on the given
       * `object`.
       * @return {Object} Returns the given `object` with its prototype set
       * to the given `prototype` object.
       * @override
       */},{key:"chainObject",value:function chainObject(object,prototype){if(object&&prototype&&object!==prototype){object.__proto__=prototype;}return object;}/* **** Begin Template **** */ /**
                                      * Calls `importNode` on the `content` of the `template` specified and
                                      * returns a document fragment containing the imported content.
                                      *
                                      * @param {HTMLTemplateElement} template HTML template element to instance.
                                      * @return {!DocumentFragment} Document fragment containing the imported
                                      *   template content.
                                      * @override
                                      * @suppress {missingProperties} go/missingfnprops
                                      */},{key:"instanceTemplate",value:function instanceTemplate(template){var content=this.constructor._contentForTemplate(template);var dom=/** @type {!DocumentFragment} */document.importNode(content,true);return dom;}/* **** Begin Events **** */ /**
                                    * Dispatches a custom event with an optional detail value.
                                    *
                                    * @param {string} type Name of event type.
                                    * @param {*=} detail Detail value containing event-specific
                                    *   payload.
                                    * @param {{ bubbles: (boolean|undefined), cancelable: (boolean|undefined),
                                    *     composed: (boolean|undefined) }=}
                                    *  options Object specifying options.  These may include:
                                    *  `bubbles` (boolean, defaults to `true`),
                                    *  `cancelable` (boolean, defaults to false), and
                                    *  `node` on which to fire the event (HTMLElement, defaults to `this`).
                                    * @return {!Event} The new event that was fired.
                                    * @override
                                    */},{key:"fire",value:function fire(type,detail,options){options=options||{};detail=detail===null||detail===undefined?{}:detail;var event=new Event(type,{bubbles:options.bubbles===undefined?true:options.bubbles,cancelable:Boolean(options.cancelable),composed:options.composed===undefined?true:options.composed});event.detail=detail;var node=options.node||this;wrap$1(node).dispatchEvent(event);return event;}/**
       * Convenience method to add an event listener on a given element,
       * late bound to a named method on this element.
       *
       * @param {?EventTarget} node Element to add event listener to.
       * @param {string} eventName Name of event to listen for.
       * @param {string} methodName Name of handler method on `this` to call.
       * @return {void}
       * @override
       */},{key:"listen",value:function listen(node,eventName,methodName){node=/** @type {!EventTarget} */node||this;var hbl=this.__boundListeners||(this.__boundListeners=new WeakMap());var bl=hbl.get(node);if(!bl){bl={};hbl.set(node,bl);}var key=eventName+methodName;if(!bl[key]){bl[key]=this._addMethodEventListenerToNode(/** @type {!Node} */node,eventName,methodName,this);}}/**
       * Convenience method to remove an event listener from a given element,
       * late bound to a named method on this element.
       *
       * @param {?EventTarget} node Element to remove event listener from.
       * @param {string} eventName Name of event to stop listening to.
       * @param {string} methodName Name of handler method on `this` to not call
       anymore.
       * @return {void}
       * @override
       */},{key:"unlisten",value:function unlisten(node,eventName,methodName){node=/** @type {!EventTarget} */node||this;var bl=this.__boundListeners&&this.__boundListeners.get(/** @type {!Element} */node);var key=eventName+methodName;var handler=bl&&bl[key];if(handler){this._removeEventListenerFromNode(/** @type {!Node} */node,eventName,handler);bl[key]=/** @type {?} */null;}}/**
       * Override scrolling behavior to all direction, one direction, or none.
       *
       * Valid scroll directions:
       *   - 'all': scroll in any direction
       *   - 'x': scroll only in the 'x' direction
       *   - 'y': scroll only in the 'y' direction
       *   - 'none': disable scrolling for this node
       *
       * @param {string=} direction Direction to allow scrolling
       * Defaults to `all`.
       * @param {Element=} node Element to apply scroll direction setting.
       * Defaults to `this`.
       * @return {void}
       * @override
       */},{key:"setScrollDirection",value:function setScrollDirection(direction,node){setTouchAction(/** @type {!Element} */node||this,DIRECTION_MAP[direction]||'auto');}/* **** End Events **** */ /**
                                  * Convenience method to run `querySelector` on this local DOM scope.
                                  *
                                  * This function calls `Polymer.dom(this.root).querySelector(slctr)`.
                                  *
                                  * @param {string} slctr Selector to run on this local DOM scope
                                  * @return {Element} Element found by the selector, or null if not found.
                                  * @override
                                  */},{key:"$$",value:function $$(slctr){// Note, no need to `wrap` this because root is always patched
return this.root.querySelector(slctr);}/**
       * Return the element whose local dom within which this element
       * is contained. This is a shorthand for
       * `this.getRootNode().host`.
       * @this {Element}
       * @return {?Node} The element whose local dom within which this element is
       * contained.
       * @override
       */},{key:"distributeContent",/**
       * Force this element to distribute its children to its local dom.
       * This should not be necessary as of Polymer 2.0.2 and is provided only
       * for backwards compatibility.
       * @return {void}
       * @override
       */value:function distributeContent(){var thisEl=/** @type {Element} */this;var domApi=/** @type {PolymerDomApi} */dom(thisEl);if(window.ShadyDOM&&domApi.shadowRoot){ShadyDOM.flush();}}/**
       * Returns a list of nodes that are the effective childNodes. The effective
       * childNodes list is the same as the element's childNodes except that
       * any `<content>` elements are replaced with the list of nodes distributed
       * to the `<content>`, the result of its `getDistributedNodes` method.
       * @return {!Array<!Node>} List of effective child nodes.
       * @suppress {invalidCasts} LegacyElementMixin must be applied to an
       *     HTMLElement
       * @override
       */},{key:"getEffectiveChildNodes",value:function getEffectiveChildNodes(){var thisEl=/** @type {Element} */this;var domApi=/** @type {PolymerDomApi} */dom(thisEl);return domApi.getEffectiveChildNodes();}/**
       * Returns a list of nodes distributed within this element that match
       * `selector`. These can be dom children or elements distributed to
       * children that are insertion points.
       * @param {string} selector Selector to run.
       * @return {!Array<!Node>} List of distributed elements that match selector.
       * @suppress {invalidCasts} LegacyElementMixin must be applied to an
       * HTMLElement
       * @override
       */},{key:"queryDistributedElements",value:function queryDistributedElements(selector){var thisEl=/** @type {Element} */this;var domApi=/** @type {PolymerDomApi} */dom(thisEl);return domApi.queryDistributedElements(selector);}/**
       * Returns a list of elements that are the effective children. The effective
       * children list is the same as the element's children except that
       * any `<content>` elements are replaced with the list of elements
       * distributed to the `<content>`.
       *
       * @return {!Array<!Node>} List of effective children.
       * @override
       */},{key:"getEffectiveChildren",value:function getEffectiveChildren(){var list=this.getEffectiveChildNodes();return list.filter(function(/** @type {!Node} */n){return n.nodeType===Node.ELEMENT_NODE;});}/**
       * Returns a string of text content that is the concatenation of the
       * text content's of the element's effective childNodes (the elements
       * returned by <a href="#getEffectiveChildNodes>getEffectiveChildNodes</a>.
       *
       * @return {string} List of effective children.
       * @override
       */},{key:"getEffectiveTextContent",value:function getEffectiveTextContent(){var cn=this.getEffectiveChildNodes();var tc=[];for(var _i49=0,c;c=cn[_i49];_i49++){if(c.nodeType!==Node.COMMENT_NODE){tc.push(c.textContent);}}return tc.join('');}/**
       * Returns the first effective childNode within this element that
       * match `selector`. These can be dom child nodes or elements distributed
       * to children that are insertion points.
       * @param {string} selector Selector to run.
       * @return {Node} First effective child node that matches selector.
       * @override
       */},{key:"queryEffectiveChildren",value:function queryEffectiveChildren(selector){var e$=this.queryDistributedElements(selector);return e$&&e$[0];}/**
       * Returns a list of effective childNodes within this element that
       * match `selector`. These can be dom child nodes or elements distributed
       * to children that are insertion points.
       * @param {string} selector Selector to run.
       * @return {!Array<!Node>} List of effective child nodes that match
       *     selector.
       * @override
       */},{key:"queryAllEffectiveChildren",value:function queryAllEffectiveChildren(selector){return this.queryDistributedElements(selector);}/**
       * Returns a list of nodes distributed to this element's `<slot>`.
       *
       * If this element contains more than one `<slot>` in its local DOM,
       * an optional selector may be passed to choose the desired content.
       *
       * @param {string=} slctr CSS selector to choose the desired
       *   `<slot>`.  Defaults to `content`.
       * @return {!Array<!Node>} List of distributed nodes for the `<slot>`.
       * @override
       */},{key:"getContentChildNodes",value:function getContentChildNodes(slctr){// Note, no need to `wrap` this because root is always
var content=this.root.querySelector(slctr||'slot');return content?/** @type {PolymerDomApi} */dom(content).getDistributedNodes():[];}/**
       * Returns a list of element children distributed to this element's
       * `<slot>`.
       *
       * If this element contains more than one `<slot>` in its
       * local DOM, an optional selector may be passed to choose the desired
       * content.  This method differs from `getContentChildNodes` in that only
       * elements are returned.
       *
       * @param {string=} slctr CSS selector to choose the desired
       *   `<content>`.  Defaults to `content`.
       * @return {!Array<!HTMLElement>} List of distributed nodes for the
       *   `<slot>`.
       * @suppress {invalidCasts}
       * @override
       */},{key:"getContentChildren",value:function getContentChildren(slctr){var children=/** @type {!Array<!HTMLElement>} */this.getContentChildNodes(slctr).filter(function(n){return n.nodeType===Node.ELEMENT_NODE;});return children;}/**
       * Checks whether an element is in this element's light DOM tree.
       *
       * @param {?Node} node The element to be checked.
       * @return {boolean} true if node is in this element's light DOM tree.
       * @suppress {invalidCasts} LegacyElementMixin must be applied to an
       * HTMLElement
       * @override
       */},{key:"isLightDescendant",value:function isLightDescendant(node){var thisNode=/** @type {Node} */this;return thisNode!==node&&wrap$1(thisNode).contains(node)&&wrap$1(thisNode).getRootNode()===wrap$1(node).getRootNode();}/**
       * Checks whether an element is in this element's local DOM tree.
       *
       * @param {!Element} node The element to be checked.
       * @return {boolean} true if node is in this element's local DOM tree.
       * @override
       */},{key:"isLocalDescendant",value:function isLocalDescendant(node){return this.root===wrap$1(node).getRootNode();}/**
       * No-op for backwards compatibility. This should now be handled by
       * ShadyCss library.
       * @param  {!Element} container Container element to scope
       * @param  {boolean=} shouldObserve if true, start a mutation observer for added nodes to the container
       * @return {?MutationObserver} Returns a new MutationObserver on `container` if `shouldObserve` is true.
       * @override
       */},{key:"scopeSubtree",value:function scopeSubtree(container){var shouldObserve=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return _scopeSubtree(container,shouldObserve);}/**
       * Returns the computed style value for the given property.
       * @param {string} property The css property name.
       * @return {string} Returns the computed css property value for the given
       * `property`.
       * @suppress {invalidCasts} LegacyElementMixin must be applied to an
       *     HTMLElement
       * @override
       */},{key:"getComputedStyleValue",value:function getComputedStyleValue(property){return styleInterface.getComputedStyleValue(/** @type {!Element} */this,property);}// debounce
/**
     * Call `debounce` to collapse multiple requests for a named task into
     * one invocation which is made after the wait time has elapsed with
     * no new request.  If no wait time is given, the callback will be called
     * at microtask timing (guaranteed before paint).
     *
     *     debouncedClickAction(e) {
     *       // will not call `processClick` more than once per 100ms
     *       this.debounce('click', function() {
     *        this.processClick();
     *       } 100);
     *     }
     *
     * @param {string} jobName String to identify the debounce job.
     * @param {function():void} callback Function that is called (with `this`
     *   context) when the wait time elapses.
     * @param {number=} wait Optional wait time in milliseconds (ms) after the
     *   last signal that must elapse before invoking `callback`
     * @return {!Object} Returns a debouncer object on which exists the
     * following methods: `isActive()` returns true if the debouncer is
     * active; `cancel()` cancels the debouncer if it is active;
     * `flush()` immediately invokes the debounced callback if the debouncer
     * is active.
     * @override
     */},{key:"debounce",value:function debounce(jobName,callback,wait){this._debouncers=this._debouncers||{};return this._debouncers[jobName]=Debouncer.debounce(this._debouncers[jobName],wait>0?timeOut.after(wait):microTask,callback.bind(this));}/**
       * Returns whether a named debouncer is active.
       *
       * @param {string} jobName The name of the debouncer started with `debounce`
       * @return {boolean} Whether the debouncer is active (has not yet fired).
       * @override
       */},{key:"isDebouncerActive",value:function isDebouncerActive(jobName){this._debouncers=this._debouncers||{};var debouncer=this._debouncers[jobName];return!!(debouncer&&debouncer.isActive());}/**
       * Immediately calls the debouncer `callback` and inactivates it.
       *
       * @param {string} jobName The name of the debouncer started with `debounce`
       * @return {void}
       * @override
       */},{key:"flushDebouncer",value:function flushDebouncer(jobName){this._debouncers=this._debouncers||{};var debouncer=this._debouncers[jobName];if(debouncer){debouncer.flush();}}/**
       * Cancels an active debouncer.  The `callback` will not be called.
       *
       * @param {string} jobName The name of the debouncer started with `debounce`
       * @return {void}
       * @override
       */},{key:"cancelDebouncer",value:function cancelDebouncer(jobName){this._debouncers=this._debouncers||{};var debouncer=this._debouncers[jobName];if(debouncer){debouncer.cancel();}}/**
       * Runs a callback function asynchronously.
       *
       * By default (if no waitTime is specified), async callbacks are run at
       * microtask timing, which will occur before paint.
       *
       * @param {!Function} callback The callback function to run, bound to
       *     `this`.
       * @param {number=} waitTime Time to wait before calling the
       *   `callback`.  If unspecified or 0, the callback will be run at microtask
       *   timing (before paint).
       * @return {number} Handle that may be used to cancel the async job.
       * @override
       */},{key:"async",value:function async(callback,waitTime){return waitTime>0?timeOut.run(callback.bind(this),waitTime):~microTask.run(callback.bind(this));}/**
       * Cancels an async operation started with `async`.
       *
       * @param {number} handle Handle returned from original `async` call to
       *   cancel.
       * @return {void}
       * @override
       */},{key:"cancelAsync",value:function cancelAsync(handle){handle<0?microTask.cancel(~handle):timeOut.cancel(handle);}// other
/**
     * Convenience method for creating an element and configuring it.
     *
     * @param {string} tag HTML element tag to create.
     * @param {Object=} props Object of properties to configure on the
     *    instance.
     * @return {!Element} Newly created and configured element.
     * @override
     */},{key:"create",value:function create(tag,props){var elt=document.createElement(tag);if(props){if(elt.setProperties){elt.setProperties(props);}else{for(var n in props){elt[n]=props[n];}}}return elt;}/**
       * Polyfill for Element.prototype.matches, which is sometimes still
       * prefixed.
       *
       * @param {string} selector Selector to test.
       * @param {!Element=} node Element to test the selector against.
       * @return {boolean} Whether the element matches the selector.
       * @override
       */},{key:"elementMatches",value:function elementMatches(selector,node){return matchesSelector(node||this,selector);}/**
       * Toggles an HTML attribute on or off.
       *
       * @param {string} name HTML attribute name
       * @param {boolean=} bool Boolean to force the attribute on or off.
       *    When unspecified, the state of the attribute will be reversed.
       * @return {boolean} true if the attribute now exists
       * @override
       */},{key:"toggleAttribute",value:function toggleAttribute(name,bool){var node=/** @type {Element} */this;if(arguments.length===3){node=/** @type {Element} */arguments[2];}if(arguments.length==1){bool=!node.hasAttribute(name);}if(bool){wrap$1(node).setAttribute(name,'');return true;}else{wrap$1(node).removeAttribute(name);return false;}}/**
       * Toggles a CSS class on or off.
       *
       * @param {string} name CSS class name
       * @param {boolean=} bool Boolean to force the class on or off.
       *    When unspecified, the state of the class will be reversed.
       * @param {Element=} node Node to target.  Defaults to `this`.
       * @return {void}
       * @override
       */},{key:"toggleClass",value:function toggleClass(name,bool,node){node=/** @type {Element} */node||this;if(arguments.length==1){bool=!node.classList.contains(name);}if(bool){node.classList.add(name);}else{node.classList.remove(name);}}/**
       * Cross-platform helper for setting an element's CSS `transform` property.
       *
       * @param {string} transformText Transform setting.
       * @param {Element=} node Element to apply the transform to.
       * Defaults to `this`
       * @return {void}
       * @override
       */},{key:"transform",value:function transform(transformText,node){node=/** @type {Element} */node||this;node.style.webkitTransform=transformText;node.style.transform=transformText;}/**
       * Cross-platform helper for setting an element's CSS `translate3d`
       * property.
       *
       * @param {number|string} x X offset.
       * @param {number|string} y Y offset.
       * @param {number|string} z Z offset.
       * @param {Element=} node Element to apply the transform to.
       * Defaults to `this`.
       * @return {void}
       * @override
       */},{key:"translate3d",value:function translate3d(x,y,z,node){node=/** @type {Element} */node||this;this.transform('translate3d('+x+','+y+','+z+')',node);}/**
       * Removes an item from an array, if it exists.
       *
       * If the array is specified by path, a change notification is
       * generated, so that observers, data bindings and computed
       * properties watching that path can update.
       *
       * If the array is passed directly, **no change
       * notification is generated**.
       *
       * @param {string | !Array<number|string>} arrayOrPath Path to array from
       *     which to remove the item
       *   (or the array itself).
       * @param {*} item Item to remove.
       * @return {Array} Array containing item removed.
       * @override
       */},{key:"arrayDelete",value:function arrayDelete(arrayOrPath,item){var index;if(Array.isArray(arrayOrPath)){index=arrayOrPath.indexOf(item);if(index>=0){return arrayOrPath.splice(index,1);}}else{var arr=_get(this,arrayOrPath);index=arr.indexOf(item);if(index>=0){return this.splice(arrayOrPath,index,1);}}return null;}// logging
/**
     * Facades `console.log`/`warn`/`error` as override point.
     *
     * @param {string} level One of 'log', 'warn', 'error'
     * @param {Array} args Array of strings or objects to log
     * @return {void}
     * @override
     */},{key:"_logger",value:function _logger(level,args){var _console;// accept ['foo', 'bar'] and [['foo', 'bar']]
if(Array.isArray(args)&&args.length===1&&Array.isArray(args[0])){args=args[0];}switch(level){case'log':case'warn':case'error':(_console=console)[level].apply(_console,babelHelpers.toConsumableArray(args));}}/**
       * Facades `console.log` as an override point.
       *
       * @param {...*} args Array of strings or objects to log
       * @return {void}
       * @override
       */},{key:"_log",value:function _log(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}this._logger('log',args);}/**
       * Facades `console.warn` as an override point.
       *
       * @param {...*} args Array of strings or objects to log
       * @return {void}
       * @override
       */},{key:"_warn",value:function _warn(){for(var _len5=arguments.length,args=new Array(_len5),_key5=0;_key5<_len5;_key5++){args[_key5]=arguments[_key5];}this._logger('warn',args);}/**
       * Facades `console.error` as an override point.
       *
       * @param {...*} args Array of strings or objects to log
       * @return {void}
       * @override
       */},{key:"_error",value:function _error(){for(var _len6=arguments.length,args=new Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}this._logger('error',args);}/**
       * Formats a message using the element type an a method name.
       *
       * @param {string} methodName Method name to associate with message
       * @param {...*} args Array of strings or objects to log
       * @return {Array} Array with formatting information for `console`
       *   logging.
       * @override
       */},{key:"_logf",value:function _logf(methodName){for(var _len7=arguments.length,args=new Array(_len7>1?_len7-1:0),_key7=1;_key7<_len7;_key7++){args[_key7-1]=arguments[_key7];}return['[%s::%s]',this.is,methodName].concat(args);}},{key:"domHost",get:function get(){var root=wrap$1(this).getRootNode();return babelHelpers.instanceof(root,DocumentFragment)?/** @type {ShadowRoot} */root.host:root;}}],[{key:"importMeta",get:function get(){return this.prototype.importMeta;}}]);return LegacyElement;}(legacyElementBase);LegacyElement.prototype.is='';return LegacyElement;});_exports.LegacyElementMixin=LegacyElementMixin;var legacyElementMixin={__proto__:null,LegacyElementMixin:LegacyElementMixin};_exports.$legacyElementMixin=legacyElementMixin;var lifecycleProps={attached:true,detached:true,ready:true,created:true,beforeRegister:true,registered:true,attributeChanged:true,listeners:true,hostAttributes:true};var excludeOnInfo={attached:true,detached:true,ready:true,created:true,beforeRegister:true,registered:true,attributeChanged:true,behaviors:true,_noAccessors:true};var excludeOnBehaviors=Object.assign({listeners:true,hostAttributes:true,properties:true,observers:true},excludeOnInfo);function copyProperties(source,target,excludeProps){var noAccessors=source._noAccessors;var propertyNames=Object.getOwnPropertyNames(source);for(var _i50=0;_i50<propertyNames.length;_i50++){var _p13=propertyNames[_i50];if(_p13 in excludeProps){continue;}if(noAccessors){target[_p13]=source[_p13];}else{var pd=Object.getOwnPropertyDescriptor(source,_p13);if(pd){// ensure property is configurable so that a later behavior can
// re-configure it.
pd.configurable=true;Object.defineProperty(target,_p13,pd);}}}}/**
   * Applies a "legacy" behavior or array of behaviors to the provided class.
   *
   * Note: this method will automatically also apply the `LegacyElementMixin`
   * to ensure that any legacy behaviors can rely on legacy Polymer API on
   * the underlying element.
   *
   * @function
   * @template T
   * @param {!Object|!Array<!Object>} behaviors Behavior object or array of behaviors.
   * @param {function(new:T)} klass Element class.
   * @return {?} Returns a new Element class extended by the
   * passed in `behaviors` and also by `LegacyElementMixin`.
   * @suppress {invalidCasts, checkTypes}
   */function mixinBehaviors(behaviors,klass){return GenerateClassFromInfo({},LegacyElementMixin(klass),behaviors);}// NOTE:
// 1.x
// Behaviors were mixed in *in reverse order* and de-duped on the fly.
// The rule was that behavior properties were copied onto the element
// prototype if and only if the property did not already exist.
// Given: Polymer{ behaviors: [A, B, C, A, B]}, property copy order was:
// (1), B, (2), A, (3) C. This means prototype properties win over
// B properties win over A win over C. This mirrors what would happen
// with inheritance if element extended B extended A extended C.
//
// Again given, Polymer{ behaviors: [A, B, C, A, B]}, the resulting
// `behaviors` array was [C, A, B].
// Behavior lifecycle methods were called in behavior array order
// followed by the element, e.g. (1) C.created, (2) A.created,
// (3) B.created, (4) element.created. There was no support for
// super, and "super-behavior" methods were callable only by name).
//
// 2.x
// Behaviors are made into proper mixins which live in the
// element's prototype chain. Behaviors are placed in the element prototype
// eldest to youngest and de-duped youngest to oldest:
// So, first [A, B, C, A, B] becomes [C, A, B] then,
// the element prototype becomes (oldest) (1) PolymerElement, (2) class(C),
// (3) class(A), (4) class(B), (5) class(Polymer({...})).
// Result:
// This means element properties win over B properties win over A win
// over C. (same as 1.x)
// If lifecycle is called (super then me), order is
// (1) C.created, (2) A.created, (3) B.created, (4) element.created
// (again same as 1.x)
function applyBehaviors(proto,behaviors,lifecycle){for(var _i51=0;_i51<behaviors.length;_i51++){applyInfo(proto,behaviors[_i51],lifecycle,excludeOnBehaviors);}}function applyInfo(proto,info,lifecycle,excludeProps){copyProperties(info,proto,excludeProps);for(var _p14 in lifecycleProps){if(info[_p14]){lifecycle[_p14]=lifecycle[_p14]||[];lifecycle[_p14].push(info[_p14]);}}}/**
   * @param {Array} behaviors List of behaviors to flatten.
   * @param {Array=} list Target list to flatten behaviors into.
   * @param {Array=} exclude List of behaviors to exclude from the list.
   * @return {!Array} Returns the list of flattened behaviors.
   */function flattenBehaviors(behaviors,list,exclude){list=list||[];for(var _i52=behaviors.length-1;_i52>=0;_i52--){var b=behaviors[_i52];if(b){if(Array.isArray(b)){flattenBehaviors(b,list);}else{// dedup
if(list.indexOf(b)<0&&(!exclude||exclude.indexOf(b)<0)){list.unshift(b);}}}else{console.warn('behavior is null, check for missing or 404 import');}}return list;}/**
   * Copies property descriptors from source to target, overwriting all fields
   * of any previous descriptor for a property *except* for `value`, which is
   * merged in from the target if it does not exist on the source.
   *
   * @param {*} target Target properties object
   * @param {*} source Source properties object
   */function mergeProperties(target,source){for(var _p15 in source){var targetInfo=target[_p15];var sourceInfo=source[_p15];if(!('value'in sourceInfo)&&targetInfo&&'value'in targetInfo){target[_p15]=Object.assign({value:targetInfo.value},sourceInfo);}else{target[_p15]=sourceInfo;}}}/* Note about construction and extension of legacy classes.
    [Changed in Q4 2018 to optimize performance.]
  
    When calling `Polymer` or `mixinBehaviors`, the generated class below is
    made. The list of behaviors was previously made into one generated class per
    behavior, but this is no longer the case as behaviors are now called
    manually. Note, there may *still* be multiple generated classes in the
    element's prototype chain if extension is used with `mixinBehaviors`.
  
    The generated class is directly tied to the info object and behaviors
    used to create it. That list of behaviors is filtered so it's only the
    behaviors not active on the superclass. In order to call through to the
    entire list of lifecycle methods, it's important to call `super`.
  
    The element's `properties` and `observers` are controlled via the finalization
    mechanism provided by `PropertiesMixin`. `Properties` and `observers` are
    collected by manually traversing the prototype chain and merging.
  
    To limit changes, the `_registered` method is called via `_initializeProperties`
    and not `_finalizeClass`.
  
  */ /**
      * @param {!PolymerInit} info Polymer info object
      * @param {function(new:HTMLElement)} Base base class to extend with info object
      * @param {Object=} behaviors behaviors to copy into the element
      * @return {function(new:HTMLElement)} Generated class
      * @suppress {checkTypes}
      * @private
      */function GenerateClassFromInfo(info,Base,behaviors){// manages behavior and lifecycle processing (filled in after class definition)
var behaviorList;var lifecycle={};/** @private */var PolymerGenerated=/*#__PURE__*/function(_Base){babelHelpers.inherits(PolymerGenerated,_Base);function PolymerGenerated(){babelHelpers.classCallCheck(this,PolymerGenerated);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PolymerGenerated).apply(this,arguments));}babelHelpers.createClass(PolymerGenerated,[{key:"created",/**
       * @return {void}
       */value:function created(){babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"created",this).call(this);var list=lifecycle.created;if(list){for(var _i53=0;_i53<list.length;_i53++){list[_i53].call(this);}}}/**
       * @return {void}
       */},{key:"_registered",value:function _registered(){/* NOTE: `beforeRegister` is called here for bc, but the behavior
        is different than in 1.x. In 1.0, the method was called *after*
        mixing prototypes together but *before* processing of meta-objects.
        However, dynamic effects can still be set here and can be done either
        in `beforeRegister` or `registered`. It is no longer possible to set
        `is` in `beforeRegister` as you could in 1.x.
      */ // only proceed if the generated class' prototype has not been registered.
var generatedProto=PolymerGenerated.prototype;if(!generatedProto.hasOwnProperty('__hasRegisterFinished')){generatedProto.__hasRegisterFinished=true;// ensure superclass is registered first.
babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"_registered",this).call(this);// copy properties onto the generated class lazily if we're optimizing,
if(legacyOptimizations){copyPropertiesToProto(generatedProto);}// make sure legacy lifecycle is called on the *element*'s prototype
// and not the generated class prototype; if the element has been
// extended, these are *not* the same.
var _proto=Object.getPrototypeOf(this);var list=lifecycle.beforeRegister;if(list){for(var _i54=0;_i54<list.length;_i54++){list[_i54].call(_proto);}}list=lifecycle.registered;if(list){for(var _i55=0;_i55<list.length;_i55++){list[_i55].call(_proto);}}}}/**
       * @return {void}
       */},{key:"_applyListeners",value:function _applyListeners(){babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"_applyListeners",this).call(this);var list=lifecycle.listeners;if(list){for(var _i56=0;_i56<list.length;_i56++){var listeners=list[_i56];if(listeners){for(var l in listeners){this._addMethodEventListenerToNode(this,l,listeners[l]);}}}}}// note: exception to "super then me" rule;
// do work before calling super so that super attributes
// only apply if not already set.
/**
     * @return {void}
     */},{key:"_ensureAttributes",value:function _ensureAttributes(){var list=lifecycle.hostAttributes;if(list){for(var _i57=list.length-1;_i57>=0;_i57--){var hostAttributes=list[_i57];for(var a in hostAttributes){this._ensureAttribute(a,hostAttributes[a]);}}}babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"_ensureAttributes",this).call(this);}/**
       * @return {void}
       */},{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"ready",this).call(this);var list=lifecycle.ready;if(list){for(var _i58=0;_i58<list.length;_i58++){list[_i58].call(this);}}}/**
       * @return {void}
       */},{key:"attached",value:function attached(){babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"attached",this).call(this);var list=lifecycle.attached;if(list){for(var _i59=0;_i59<list.length;_i59++){list[_i59].call(this);}}}/**
       * @return {void}
       */},{key:"detached",value:function detached(){babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"detached",this).call(this);var list=lifecycle.detached;if(list){for(var _i60=0;_i60<list.length;_i60++){list[_i60].call(this);}}}/**
       * Implements native Custom Elements `attributeChangedCallback` to
       * set an attribute value to a property via `_attributeToProperty`.
       *
       * @param {string} name Name of attribute that changed
       * @param {?string} old Old attribute value
       * @param {?string} value New attribute value
       * @return {void}
       */},{key:"attributeChanged",value:function attributeChanged(name,old,value){babelHelpers.get(babelHelpers.getPrototypeOf(PolymerGenerated.prototype),"attributeChanged",this).call(this);var list=lifecycle.attributeChanged;if(list){for(var _i61=0;_i61<list.length;_i61++){list[_i61].call(this,name,old,value);}}}}],[{key:"_finalizeClass",// explicitly not calling super._finalizeClass
/** @nocollapse */value:function _finalizeClass(){// if calling via a subclass that hasn't been generated, pass through to super
if(!this.hasOwnProperty(JSCompiler_renameProperty('generatedFrom',this))){// TODO(https://github.com/google/closure-compiler/issues/3240):
//     Change back to just super.methodCall()
Base._finalizeClass.call(this);}else{// interleave properties and observers per behavior and `info`
if(behaviorList){for(var _i62=0,b;_i62<behaviorList.length;_i62++){b=behaviorList[_i62];if(b.properties){this.createProperties(b.properties);}if(b.observers){this.createObservers(b.observers,b.properties);}}}if(info.properties){this.createProperties(info.properties);}if(info.observers){this.createObservers(info.observers,info.properties);}// make sure to prepare the element template
this._prepareTemplate();}}/** @nocollapse */},{key:"properties",get:function get(){var properties={};if(behaviorList){for(var _i63=0;_i63<behaviorList.length;_i63++){mergeProperties(properties,behaviorList[_i63].properties);}}mergeProperties(properties,info.properties);return properties;}/** @nocollapse */},{key:"observers",get:function get(){var observers=[];if(behaviorList){for(var _i64=0,b;_i64<behaviorList.length;_i64++){b=behaviorList[_i64];if(b.observers){observers=observers.concat(b.observers);}}}if(info.observers){observers=observers.concat(info.observers);}return observers;}}]);return PolymerGenerated;}(Base);// apply behaviors, note actual copying is done lazily at first instance creation
if(behaviors){// NOTE: ensure the behavior is extending a class with
// legacy element api. This is necessary since behaviors expect to be able
// to access 1.x legacy api.
if(!Array.isArray(behaviors)){behaviors=[behaviors];}var superBehaviors=Base.prototype.behaviors;// get flattened, deduped list of behaviors *not* already on super class
behaviorList=flattenBehaviors(behaviors,null,superBehaviors);PolymerGenerated.prototype.behaviors=superBehaviors?superBehaviors.concat(behaviors):behaviorList;}var copyPropertiesToProto=function copyPropertiesToProto(proto){if(behaviorList){applyBehaviors(proto,behaviorList,lifecycle);}applyInfo(proto,info,lifecycle,excludeOnInfo);};// copy properties if we're not optimizing
if(!legacyOptimizations){copyPropertiesToProto(PolymerGenerated.prototype);}PolymerGenerated.generatedFrom=info;return PolymerGenerated;}/**
   * Generates a class that extends `LegacyElement` based on the
   * provided info object.  Metadata objects on the `info` object
   * (`properties`, `observers`, `listeners`, `behaviors`, `is`) are used
   * for Polymer's meta-programming systems, and any functions are copied
   * to the generated class.
   *
   * Valid "metadata" values are as follows:
   *
   * `is`: String providing the tag name to register the element under. In
   * addition, if a `dom-module` with the same id exists, the first template
   * in that `dom-module` will be stamped into the shadow root of this element,
   * with support for declarative event listeners (`on-...`), Polymer data
   * bindings (`[[...]]` and `{{...}}`), and id-based node finding into
   * `this.$`.
   *
   * `properties`: Object describing property-related metadata used by Polymer
   * features (key: property names, value: object containing property metadata).
   * Valid keys in per-property metadata include:
   * - `type` (String|Number|Object|Array|...): Used by
   *   `attributeChangedCallback` to determine how string-based attributes
   *   are deserialized to JavaScript property values.
   * - `notify` (boolean): Causes a change in the property to fire a
   *   non-bubbling event called `<property>-changed`. Elements that have
   *   enabled two-way binding to the property use this event to observe changes.
   * - `readOnly` (boolean): Creates a getter for the property, but no setter.
   *   To set a read-only property, use the private setter method
   *   `_setProperty(property, value)`.
   * - `observer` (string): Observer method name that will be called when
   *   the property changes. The arguments of the method are
   *   `(value, previousValue)`.
   * - `computed` (string): String describing method and dependent properties
   *   for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).
   *   Computed properties are read-only by default and can only be changed
   *   via the return value of the computing method.
   *
   * `observers`: Array of strings describing multi-property observer methods
   *  and their dependent properties (e.g. `'observeABC(a, b, c)'`).
   *
   * `listeners`: Object describing event listeners to be added to each
   *  instance of this element (key: event name, value: method name).
   *
   * `behaviors`: Array of additional `info` objects containing metadata
   * and callbacks in the same format as the `info` object here which are
   * merged into this element.
   *
   * `hostAttributes`: Object listing attributes to be applied to the host
   *  once created (key: attribute name, value: attribute value).  Values
   *  are serialized based on the type of the value.  Host attributes should
   *  generally be limited to attributes such as `tabIndex` and `aria-...`.
   *  Attributes in `hostAttributes` are only applied if a user-supplied
   *  attribute is not already present (attributes in markup override
   *  `hostAttributes`).
   *
   * In addition, the following Polymer-specific callbacks may be provided:
   * - `registered`: called after first instance of this element,
   * - `created`: called during `constructor`
   * - `attached`: called during `connectedCallback`
   * - `detached`: called during `disconnectedCallback`
   * - `ready`: called before first `attached`, after all properties of
   *   this element have been propagated to its template and all observers
   *   have run
   *
   * @param {!PolymerInit} info Object containing Polymer metadata and functions
   *   to become class methods.
   * @template T
   * @param {function(T):T} mixin Optional mixin to apply to legacy base class
   *   before extending with Polymer metaprogramming.
   * @return {function(new:HTMLElement)} Generated class
   */var Class=function Class(info,mixin){if(!info){console.warn('Polymer.Class requires `info` argument');}var klass=mixin?mixin(LegacyElementMixin(HTMLElement)):LegacyElementMixin(HTMLElement);klass=GenerateClassFromInfo(info,klass,info.behaviors);// decorate klass with registration info
klass.is=klass.prototype.is=info.is;return klass;};_exports.Class=Class;var _class={__proto__:null,mixinBehaviors:mixinBehaviors,Class:Class};_exports.$class=_class;var Polymer=function Polymer(info){// if input is a `class` (aka a function with a prototype), use the prototype
// remember that the `constructor` will never be called
var klass;if(typeof info==='function'){klass=info;}else{klass=Polymer.Class(info);}customElements.define(klass.is,/** @type {!HTMLElement} */klass);return klass;};_exports.Polymer$1=_exports.Polymer=Polymer;Polymer.Class=Class;var polymerFn={__proto__:null,Polymer:Polymer};_exports.$polymerFn=polymerFn;function mutablePropertyChange(inst,property,value,old,mutableData){var isObject;if(mutableData){isObject=babelHelpers.typeof(value)==='object'&&value!==null;// Pull `old` for Objects from temp cache, but treat `null` as a primitive
if(isObject){old=inst.__dataTemp[property];}}// Strict equality check, but return false for NaN===NaN
var shouldChange=old!==value&&(old===old||value===value);// Objects are stored in temporary cache (cleared at end of
// turn), which is used for dirty-checking
if(isObject&&shouldChange){inst.__dataTemp[property]=value;}return shouldChange;}/**
   * Element class mixin to skip strict dirty-checking for objects and arrays
   * (always consider them to be "dirty"), for use on elements utilizing
   * `PropertyEffects`
   *
   * By default, `PropertyEffects` performs strict dirty checking on
   * objects, which means that any deep modifications to an object or array will
   * not be propagated unless "immutable" data patterns are used (i.e. all object
   * references from the root to the mutation were changed).
   *
   * Polymer also provides a proprietary data mutation and path notification API
   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
   * mutation and notification of deep changes in an object graph to all elements
   * bound to the same object graph.
   *
   * In cases where neither immutable patterns nor the data mutation API can be
   * used, applying this mixin will cause Polymer to skip dirty checking for
   * objects and arrays (always consider them to be "dirty").  This allows a
   * user to make a deep modification to a bound object graph, and then either
   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
   * elements that wish to be updated based on deep mutations must apply this
   * mixin or otherwise skip strict dirty checking for objects/arrays.
   * Specifically, any elements in the binding tree between the source of a
   * mutation and the consumption of it must apply this mixin or enable the
   * `OptionalMutableData` mixin.
   *
   * In order to make the dirty check strategy configurable, see
   * `OptionalMutableData`.
   *
   * Note, the performance characteristics of propagating large object graphs
   * will be worse as opposed to using strict dirty checking with immutable
   * patterns or Polymer's path notification API.
   *
   * @mixinFunction
   * @polymer
   * @summary Element class mixin to skip strict dirty-checking for objects
   *   and arrays
   * @template T
   * @param {function(new:T)} superClass Class to apply mixin to.
   * @return {function(new:T)} superClass with mixin applied.
   */var MutableData=dedupingMixin(function(superClass){/**
   * @polymer
   * @mixinClass
   * @implements {Polymer_MutableData}
   */var MutableData=/*#__PURE__*/function(_superClass4){babelHelpers.inherits(MutableData,_superClass4);function MutableData(){babelHelpers.classCallCheck(this,MutableData);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(MutableData).apply(this,arguments));}babelHelpers.createClass(MutableData,[{key:"_shouldPropertyChange",/**
     * Overrides `PropertyEffects` to provide option for skipping
     * strict equality checking for Objects and Arrays.
     *
     * This method pulls the value to dirty check against from the `__dataTemp`
     * cache (rather than the normal `__data` cache) for Objects.  Since the temp
     * cache is cleared at the end of a turn, this implementation allows
     * side-effects of deep object changes to be processed by re-setting the
     * same object (using the temp cache as an in-turn backstop to prevent
     * cycles due to 2-way notification).
     *
     * @param {string} property Property name
     * @param {*} value New property value
     * @param {*} old Previous property value
     * @return {boolean} Whether the property should be considered a change
     * @protected
     */value:function _shouldPropertyChange(property,value,old){return mutablePropertyChange(this,property,value,old,true);}}]);return MutableData;}(superClass);return MutableData;});/**
     * Element class mixin to add the optional ability to skip strict
     * dirty-checking for objects and arrays (always consider them to be
     * "dirty") by setting a `mutable-data` attribute on an element instance.
     *
     * By default, `PropertyEffects` performs strict dirty checking on
     * objects, which means that any deep modifications to an object or array will
     * not be propagated unless "immutable" data patterns are used (i.e. all object
     * references from the root to the mutation were changed).
     *
     * Polymer also provides a proprietary data mutation and path notification API
     * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
     * mutation and notification of deep changes in an object graph to all elements
     * bound to the same object graph.
     *
     * In cases where neither immutable patterns nor the data mutation API can be
     * used, applying this mixin will allow Polymer to skip dirty checking for
     * objects and arrays (always consider them to be "dirty").  This allows a
     * user to make a deep modification to a bound object graph, and then either
     * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
     * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
     * elements that wish to be updated based on deep mutations must apply this
     * mixin or otherwise skip strict dirty checking for objects/arrays.
     * Specifically, any elements in the binding tree between the source of a
     * mutation and the consumption of it must enable this mixin or apply the
     * `MutableData` mixin.
     *
     * While this mixin adds the ability to forgo Object/Array dirty checking,
     * the `mutableData` flag defaults to false and must be set on the instance.
     *
     * Note, the performance characteristics of propagating large object graphs
     * will be worse by relying on `mutableData: true` as opposed to using
     * strict dirty checking with immutable patterns or Polymer's path notification
     * API.
     *
     * @mixinFunction
     * @polymer
     * @summary Element class mixin to optionally skip strict dirty-checking
     *   for objects and arrays
     */_exports.MutableData=MutableData;var OptionalMutableData=dedupingMixin(function(superClass){/**
   * @mixinClass
   * @polymer
   * @implements {Polymer_OptionalMutableData}
   */var OptionalMutableData=/*#__PURE__*/function(_superClass5){babelHelpers.inherits(OptionalMutableData,_superClass5);function OptionalMutableData(){babelHelpers.classCallCheck(this,OptionalMutableData);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(OptionalMutableData).apply(this,arguments));}babelHelpers.createClass(OptionalMutableData,[{key:"_shouldPropertyChange",/**
       * Overrides `PropertyEffects` to provide option for skipping
       * strict equality checking for Objects and Arrays.
       *
       * When `this.mutableData` is true on this instance, this method
       * pulls the value to dirty check against from the `__dataTemp` cache
       * (rather than the normal `__data` cache) for Objects.  Since the temp
       * cache is cleared at the end of a turn, this implementation allows
       * side-effects of deep object changes to be processed by re-setting the
       * same object (using the temp cache as an in-turn backstop to prevent
       * cycles due to 2-way notification).
       *
       * @param {string} property Property name
       * @param {*} value New property value
       * @param {*} old Previous property value
       * @return {boolean} Whether the property should be considered a change
       * @protected
       */value:function _shouldPropertyChange(property,value,old){return mutablePropertyChange(this,property,value,old,this.mutableData);}}],[{key:"properties",/** @nocollapse */get:function get(){return{/**
         * Instance-level flag for configuring the dirty-checking strategy
         * for this element.  When true, Objects and Arrays will skip dirty
         * checking, otherwise strict equality checking will be used.
         */mutableData:Boolean};}}]);return OptionalMutableData;}(superClass);return OptionalMutableData;});// Export for use by legacy behavior
_exports.OptionalMutableData=OptionalMutableData;MutableData._mutablePropertyChange=mutablePropertyChange;var mutableData={__proto__:null,MutableData:MutableData,OptionalMutableData:OptionalMutableData};// machinery for propagating host properties to children. This is an ES5
// class only because Babel (incorrectly) requires super() in the class
// constructor even though no `this` is used and it returns an instance.
_exports.$mutableData=mutableData;var newInstance=null;/**
                         * @constructor
                         * @extends {HTMLTemplateElement}
                         * @private
                         */function HTMLTemplateElementExtension(){return newInstance;}HTMLTemplateElementExtension.prototype=Object.create(HTMLTemplateElement.prototype,{constructor:{value:HTMLTemplateElementExtension,writable:true}});/**
     * @constructor
     * @implements {Polymer_PropertyEffects}
     * @extends {HTMLTemplateElementExtension}
     * @private
     */var DataTemplate=PropertyEffects(HTMLTemplateElementExtension);/**
                                                                     * @constructor
                                                                     * @implements {Polymer_MutableData}
                                                                     * @extends {DataTemplate}
                                                                     * @private
                                                                     */var MutableDataTemplate=MutableData(DataTemplate);// Applies a DataTemplate subclass to a <template> instance
function upgradeTemplate(template,constructor){newInstance=template;Object.setPrototypeOf(template,constructor.prototype);new constructor();newInstance=null;}/**
   * Base class for TemplateInstance.
   * @constructor
   * @extends {HTMLElement}
   * @implements {Polymer_PropertyEffects}
   * @private
   */var templateInstanceBase=PropertyEffects(/*#__PURE__*/ // This cast shouldn't be neccessary, but Closure doesn't understand that
// "class {}" is a constructor function.
/** @type {function(new:Object)} */function(){function _class2(){babelHelpers.classCallCheck(this,_class2);}return _class2;}());/**
                                               * @polymer
                                               * @customElement
                                               * @appliesMixin PropertyEffects
                                               * @unrestricted
                                               */var TemplateInstanceBase=/*#__PURE__*/function(_templateInstanceBase){babelHelpers.inherits(TemplateInstanceBase,_templateInstanceBase);function TemplateInstanceBase(props){var _this18;babelHelpers.classCallCheck(this,TemplateInstanceBase);_this18=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TemplateInstanceBase).call(this));_this18._configureProperties(props);/** @type {!StampedTemplate} */_this18.root=_this18._stampTemplate(_this18.__dataHost);// Save list of stamped children
var children=[];/** @suppress {invalidCasts} */_this18.children=/** @type {!NodeList} */children;// Polymer 1.x did not use `Polymer.dom` here so not bothering.
for(var n=_this18.root.firstChild;n;n=n.nextSibling){children.push(n);n.__templatizeInstance=babelHelpers.assertThisInitialized(_this18);}if(_this18.__templatizeOwner&&_this18.__templatizeOwner.__hideTemplateChildren__){_this18._showHideChildren(true);}// Flush props only when props are passed if instance props exist
// or when there isn't instance props.
var options=_this18.__templatizeOptions;if(props&&options.instanceProps||!options.instanceProps){_this18._enableProperties();}return _this18;}/**
     * Configure the given `props` by calling `_setPendingProperty`. Also
     * sets any properties stored in `__hostProps`.
     * @private
     * @param {Object} props Object of property name-value pairs to set.
     * @return {void}
     */babelHelpers.createClass(TemplateInstanceBase,[{key:"_configureProperties",value:function _configureProperties(props){var options=this.__templatizeOptions;if(options.forwardHostProp){for(var hprop in this.__hostProps){this._setPendingProperty(hprop,this.__dataHost['_host_'+hprop]);}}// Any instance props passed in the constructor will overwrite host props;
// normally this would be a user error but we don't specifically filter them
for(var iprop in props){this._setPendingProperty(iprop,props[iprop]);}}/**
     * Forwards a host property to this instance.  This method should be
     * called on instances from the `options.forwardHostProp` callback
     * to propagate changes of host properties to each instance.
     *
     * Note this method enqueues the change, which are flushed as a batch.
     *
     * @param {string} prop Property or path name
     * @param {*} value Value of the property to forward
     * @return {void}
     */},{key:"forwardHostProp",value:function forwardHostProp(prop,value){if(this._setPendingPropertyOrPath(prop,value,false,true)){this.__dataHost._enqueueClient(this);}}/**
     * Override point for adding custom or simulated event handling.
     *
     * @override
     * @param {!Node} node Node to add event listener to
     * @param {string} eventName Name of event
     * @param {function(!Event):void} handler Listener function to add
     * @return {void}
     */},{key:"_addEventListenerToNode",value:function _addEventListenerToNode(node,eventName,handler){var _this19=this;if(this._methodHost&&this.__templatizeOptions.parentModel){// If this instance should be considered a parent model, decorate
// events this template instance as `model`
this._methodHost._addEventListenerToNode(node,eventName,function(e){e.model=_this19;handler(e);});}else{// Otherwise delegate to the template's host (which could be)
// another template instance
var templateHost=this.__dataHost.__dataHost;if(templateHost){templateHost._addEventListenerToNode(node,eventName,handler);}}}/**
     * Shows or hides the template instance top level child elements. For
     * text nodes, `textContent` is removed while "hidden" and replaced when
     * "shown."
     * @param {boolean} hide Set to true to hide the children;
     * set to false to show them.
     * @return {void}
     * @protected
     */},{key:"_showHideChildren",value:function _showHideChildren(hide){var c=this.children;for(var _i65=0;_i65<c.length;_i65++){var n=c[_i65];// Ignore non-changes
if(Boolean(hide)!=Boolean(n.__hideTemplateChildren__)){if(n.nodeType===Node.TEXT_NODE){if(hide){n.__polymerTextContent__=n.textContent;n.textContent='';}else{n.textContent=n.__polymerTextContent__;}// remove and replace slot
}else if(n.localName==='slot'){if(hide){n.__polymerReplaced__=document.createComment('hidden-slot');wrap$1(wrap$1(n).parentNode).replaceChild(n.__polymerReplaced__,n);}else{var replace=n.__polymerReplaced__;if(replace){wrap$1(wrap$1(replace).parentNode).replaceChild(n,replace);}}}else if(n.style){if(hide){n.__polymerDisplay__=n.style.display;n.style.display='none';}else{n.style.display=n.__polymerDisplay__;}}}n.__hideTemplateChildren__=hide;if(n._showHideChildren){n._showHideChildren(hide);}}}/**
     * Overrides default property-effects implementation to intercept
     * textContent bindings while children are "hidden" and cache in
     * private storage for later retrieval.
     *
     * @override
     * @param {!Node} node The node to set a property on
     * @param {string} prop The property to set
     * @param {*} value The value to set
     * @return {void}
     * @protected
     */},{key:"_setUnmanagedPropertyToNode",value:function _setUnmanagedPropertyToNode(node,prop,value){if(node.__hideTemplateChildren__&&node.nodeType==Node.TEXT_NODE&&prop=='textContent'){node.__polymerTextContent__=value;}else{babelHelpers.get(babelHelpers.getPrototypeOf(TemplateInstanceBase.prototype),"_setUnmanagedPropertyToNode",this).call(this,node,prop,value);}}/**
     * Find the parent model of this template instance.  The parent model
     * is either another templatize instance that had option `parentModel: true`,
     * or else the host element.
     *
     * @return {!Polymer_PropertyEffects} The parent model of this instance
     */},{key:"dispatchEvent",/**
     * Stub of HTMLElement's `dispatchEvent`, so that effects that may
     * dispatch events safely no-op.
     *
     * @param {Event} event Event to dispatch
     * @return {boolean} Always true.
     * @override
     */value:function dispatchEvent(event){// eslint-disable-line no-unused-vars
return true;}},{key:"parentModel",get:function get(){var model=this.__parentModel;if(!model){var options;model=this;do{// A template instance's `__dataHost` is a <template>
// `model.__dataHost.__dataHost` is the template's host
model=model.__dataHost.__dataHost;}while((options=model.__templatizeOptions)&&!options.parentModel);this.__parentModel=model;}return model;}}]);return TemplateInstanceBase;}(templateInstanceBase);/** @type {!DataTemplate} */_exports.TemplateInstanceBase=TemplateInstanceBase;TemplateInstanceBase.prototype.__dataHost;/** @type {!TemplatizeOptions} */TemplateInstanceBase.prototype.__templatizeOptions;/** @type {!Polymer_PropertyEffects} */TemplateInstanceBase.prototype._methodHost;/** @type {!Object} */TemplateInstanceBase.prototype.__templatizeOwner;/** @type {!Object} */TemplateInstanceBase.prototype.__hostProps;/**
                                             * @constructor
                                             * @extends {TemplateInstanceBase}
                                             * @implements {Polymer_MutableData}
                                             * @private
                                             */var MutableTemplateInstanceBase=MutableData(// This cast shouldn't be necessary, but Closure doesn't seem to understand
// this constructor.
/** @type {function(new:TemplateInstanceBase)} */TemplateInstanceBase);function findMethodHost(template){// Technically this should be the owner of the outermost template.
// In shadow dom, this is always getRootNode().host, but we can
// approximate this via cooperation with our dataHost always setting
// `_methodHost` as long as there were bindings (or id's) on this
// instance causing it to get a dataHost.
var templateHost=template.__dataHost;return templateHost&&templateHost._methodHost||templateHost;}/* eslint-disable valid-jsdoc */ /**
                                    * @suppress {missingProperties} class.prototype is not defined for some reason
                                    */function createTemplatizerClass(template,templateInfo,options){/**
   * @constructor
   * @extends {TemplateInstanceBase}
   */var templatizerBase=options.mutableData?MutableTemplateInstanceBase:TemplateInstanceBase;// Affordance for global mixins onto TemplatizeInstance
if(_templatize.mixin){templatizerBase=_templatize.mixin(templatizerBase);}/**
     * Anonymous class created by the templatize
     * @constructor
     * @private
     */var klass=/*#__PURE__*/function(_templatizerBase){babelHelpers.inherits(klass,_templatizerBase);function klass(){babelHelpers.classCallCheck(this,klass);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(klass).apply(this,arguments));}return klass;}(templatizerBase);/** @override */klass.prototype.__templatizeOptions=options;klass.prototype._bindTemplate(template);addNotifyEffects(klass,template,templateInfo,options);return klass;}/**
   * Adds propagate effects from the template to the template instance for
   * properties that the host binds to the template using the `_host_` prefix.
   * 
   * @suppress {missingProperties} class.prototype is not defined for some reason
   */function addPropagateEffects(template,templateInfo,options){var userForwardHostProp=options.forwardHostProp;if(userForwardHostProp&&templateInfo.hasHostProps){// Provide data API and property effects on memoized template class
var klass=templateInfo.templatizeTemplateClass;if(!klass){/**
       * @constructor
       * @extends {DataTemplate}
       */var templatizedBase=options.mutableData?MutableDataTemplate:DataTemplate;/** @private */klass=templateInfo.templatizeTemplateClass=/*#__PURE__*/function(_templatizedBase){babelHelpers.inherits(TemplatizedTemplate,_templatizedBase);function TemplatizedTemplate(){babelHelpers.classCallCheck(this,TemplatizedTemplate);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TemplatizedTemplate).apply(this,arguments));}return TemplatizedTemplate;}(templatizedBase);// Add template - >instances effects
// and host <- template effects
var hostProps=templateInfo.hostProps;for(var prop in hostProps){klass.prototype._addPropertyEffect('_host_'+prop,klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,{fn:createForwardHostPropEffect(prop,userForwardHostProp)});klass.prototype._createNotifyingProperty('_host_'+prop);}}upgradeTemplate(template,klass);// Mix any pre-bound data into __data; no need to flush this to
// instances since they pull from the template at instance-time
if(template.__dataProto){// Note, generally `__dataProto` could be chained, but it's guaranteed
// to not be since this is a vanilla template we just added effects to
Object.assign(template.__data,template.__dataProto);}// Clear any pending data for performance
template.__dataTemp={};template.__dataPending=null;template.__dataOld=null;template._enableProperties();}}/* eslint-enable valid-jsdoc */function createForwardHostPropEffect(hostProp,userForwardHostProp){return function forwardHostProp(template,prop,props){userForwardHostProp.call(template.__templatizeOwner,prop.substring('_host_'.length),props[prop]);};}function addNotifyEffects(klass,template,templateInfo,options){var hostProps=templateInfo.hostProps||{};for(var iprop in options.instanceProps){delete hostProps[iprop];var userNotifyInstanceProp=options.notifyInstanceProp;if(userNotifyInstanceProp){klass.prototype._addPropertyEffect(iprop,klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,{fn:createNotifyInstancePropEffect(iprop,userNotifyInstanceProp)});}}if(options.forwardHostProp&&template.__dataHost){for(var hprop in hostProps){// As we're iterating hostProps in this function, note whether
// there were any, for an optimization in addPropagateEffects
if(!templateInfo.hasHostProps){templateInfo.hasHostProps=true;}klass.prototype._addPropertyEffect(hprop,klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,{fn:createNotifyHostPropEffect()});}}}function createNotifyInstancePropEffect(instProp,userNotifyInstanceProp){return function notifyInstanceProp(inst,prop,props){userNotifyInstanceProp.call(inst.__templatizeOwner,inst,prop,props[prop]);};}function createNotifyHostPropEffect(){return function notifyHostProp(inst,prop,props){inst.__dataHost._setPendingPropertyOrPath('_host_'+prop,props[prop],true,true);};}/**
   * Returns an anonymous `PropertyEffects` class bound to the
   * `<template>` provided.  Instancing the class will result in the
   * template being stamped into a document fragment stored as the instance's
   * `root` property, after which it can be appended to the DOM.
   *
   * Templates may utilize all Polymer data-binding features as well as
   * declarative event listeners.  Event listeners and inline computing
   * functions in the template will be called on the host of the template.
   *
   * The constructor returned takes a single argument dictionary of initial
   * property values to propagate into template bindings.  Additionally
   * host properties can be forwarded in, and instance properties can be
   * notified out by providing optional callbacks in the `options` dictionary.
   *
   * Valid configuration in `options` are as follows:
   *
   * - `forwardHostProp(property, value)`: Called when a property referenced
   *   in the template changed on the template's host. As this library does
   *   not retain references to templates instanced by the user, it is the
   *   templatize owner's responsibility to forward host property changes into
   *   user-stamped instances.  The `instance.forwardHostProp(property, value)`
   *    method on the generated class should be called to forward host
   *   properties into the template to prevent unnecessary property-changed
   *   notifications. Any properties referenced in the template that are not
   *   defined in `instanceProps` will be notified up to the template's host
   *   automatically.
   * - `instanceProps`: Dictionary of property names that will be added
   *   to the instance by the templatize owner.  These properties shadow any
   *   host properties, and changes within the template to these properties
   *   will result in `notifyInstanceProp` being called.
   * - `mutableData`: When `true`, the generated class will skip strict
   *   dirty-checking for objects and arrays (always consider them to be
   *   "dirty").
   * - `notifyInstanceProp(instance, property, value)`: Called when
   *   an instance property changes.  Users may choose to call `notifyPath`
   *   on e.g. the owner to notify the change.
   * - `parentModel`: When `true`, events handled by declarative event listeners
   *   (`on-event="handler"`) will be decorated with a `model` property pointing
   *   to the template instance that stamped it.  It will also be returned
   *   from `instance.parentModel` in cases where template instance nesting
   *   causes an inner model to shadow an outer model.
   *
   * All callbacks are called bound to the `owner`. Any context
   * needed for the callbacks (such as references to `instances` stamped)
   * should be stored on the `owner` such that they can be retrieved via
   * `this`.
   *
   * When `options.forwardHostProp` is declared as an option, any properties
   * referenced in the template will be automatically forwarded from the host of
   * the `<template>` to instances, with the exception of any properties listed in
   * the `options.instanceProps` object.  `instanceProps` are assumed to be
   * managed by the owner of the instances, either passed into the constructor
   * or set after the fact.  Note, any properties passed into the constructor will
   * always be set to the instance (regardless of whether they would normally
   * be forwarded from the host).
   *
   * Note that `templatize()` can be run only once for a given `<template>`.
   * Further calls will result in an error. Also, there is a special
   * behavior if the template was duplicated through a mechanism such as
   * `<dom-repeat>` or `<test-fixture>`. In this case, all calls to
   * `templatize()` return the same class for all duplicates of a template.
   * The class returned from `templatize()` is generated only once using
   * the `options` from the first call. This means that any `options`
   * provided to subsequent calls will be ignored. Therefore, it is very
   * important not to close over any variables inside the callbacks. Also,
   * arrow functions must be avoided because they bind the outer `this`.
   * Inside the callbacks, any contextual information can be accessed
   * through `this`, which points to the `owner`.
   *
   * @param {!HTMLTemplateElement} template Template to templatize
   * @param {Polymer_PropertyEffects=} owner Owner of the template instances;
   *   any optional callbacks will be bound to this owner.
   * @param {Object=} options Options dictionary (see summary for details)
   * @return {function(new:TemplateInstanceBase, Object=)} Generated class bound
   *   to the template provided
   * @suppress {invalidCasts}
   */function _templatize(template,owner,options){// Under strictTemplatePolicy, the templatized element must be owned
// by a (trusted) Polymer element, indicated by existence of _methodHost;
// e.g. for dom-if & dom-repeat in main document, _methodHost is null
if(strictTemplatePolicy&&!findMethodHost(template)){throw new Error('strictTemplatePolicy: template owner not trusted');}options=/** @type {!TemplatizeOptions} */options||{};if(template.__templatizeOwner){throw new Error('A <template> can only be templatized once');}template.__templatizeOwner=owner;var ctor=owner?owner.constructor:TemplateInstanceBase;var templateInfo=ctor._parseTemplate(template);// Get memoized base class for the prototypical template, which
// includes property effects for binding template & forwarding
/**
   * @constructor
   * @extends {TemplateInstanceBase}
   */var baseClass=templateInfo.templatizeInstanceClass;if(!baseClass){baseClass=createTemplatizerClass(template,templateInfo,options);templateInfo.templatizeInstanceClass=baseClass;}// Host property forwarding must be installed onto template instance
addPropagateEffects(template,templateInfo,options);// Subclass base class and add reference for this specific template
/** @private */var klass=/*#__PURE__*/function(_baseClass){babelHelpers.inherits(TemplateInstance,_baseClass);function TemplateInstance(){babelHelpers.classCallCheck(this,TemplateInstance);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TemplateInstance).apply(this,arguments));}return TemplateInstance;}(baseClass);/** @override */klass.prototype._methodHost=findMethodHost(template);/** @override */klass.prototype.__dataHost=/** @type {!DataTemplate} */template;/** @override */klass.prototype.__templatizeOwner=/** @type {!Object} */owner;/** @override */klass.prototype.__hostProps=templateInfo.hostProps;klass=/** @type {function(new:TemplateInstanceBase)} */klass;//eslint-disable-line no-self-assign
return klass;}/**
   * Returns the template "model" associated with a given element, which
   * serves as the binding scope for the template instance the element is
   * contained in. A template model is an instance of
   * `TemplateInstanceBase`, and should be used to manipulate data
   * associated with this template instance.
   *
   * Example:
   *
   *   let model = modelForElement(el);
   *   if (model.index < 10) {
   *     model.set('item.checked', true);
   *   }
   *
   * @param {HTMLTemplateElement} template The model will be returned for
   *   elements stamped from this template
   * @param {Node=} node Node for which to return a template model.
   * @return {TemplateInstanceBase} Template instance representing the
   *   binding scope for the element
   */function _modelForElement(template,node){var model;while(node){// An element with a __templatizeInstance marks the top boundary
// of a scope; walk up until we find one, and then ensure that
// its __dataHost matches `this`, meaning this dom-repeat stamped it
if(model=node.__templatizeInstance){// Found an element stamped by another template; keep walking up
// from its __dataHost
if(model.__dataHost!=template){node=model.__dataHost;}else{return model;}}else{// Still in a template scope, keep going up until
// a __templatizeInstance is found
node=wrap$1(node).parentNode;}}return null;}var templatize$1={__proto__:null,templatize:_templatize,modelForElement:_modelForElement,TemplateInstanceBase:TemplateInstanceBase};/**
    * @typedef {{
    *   _templatizerTemplate: HTMLTemplateElement,
    *   _parentModel: boolean,
    *   _instanceProps: Object,
    *   _forwardHostPropV2: Function,
    *   _notifyInstancePropV2: Function,
    *   ctor: function(new:TemplateInstanceBase, Object=)
    * }}
    */_exports.$templatize=templatize$1;var TemplatizerUser;// eslint-disable-line
/**
 * The `Templatizer` behavior adds methods to generate instances of
 * templates that are each managed by an anonymous `PropertyEffects`
 * instance where data-bindings in the stamped template content are bound to
 * accessors on itself.
 *
 * This behavior is provided in Polymer 2.x-3.x as a hybrid-element convenience
 * only.  For non-hybrid usage, the `Templatize` library
 * should be used instead.
 *
 * Example:
 *
 *     import {dom} from '../../../../@polymer/polymer/lib/legacy/polymer.dom.js';
 *     // Get a template from somewhere, e.g. light DOM
 *     let template = this.querySelector('template');
 *     // Prepare the template
 *     this.templatize(template);
 *     // Instance the template with an initial data model
 *     let instance = this.stamp({myProp: 'initial'});
 *     // Insert the instance's DOM somewhere, e.g. light DOM
 *     dom(this).appendChild(instance.root);
 *     // Changing a property on the instance will propagate to bindings
 *     // in the template
 *     instance.myProp = 'new value';
 *
 * Users of `Templatizer` may need to implement the following abstract
 * API's to determine how properties and paths from the host should be
 * forwarded into to instances:
 *
 *     _forwardHostPropV2: function(prop, value)
 *
 * Likewise, users may implement these additional abstract API's to determine
 * how instance-specific properties that change on the instance should be
 * forwarded out to the host, if necessary.
 *
 *     _notifyInstancePropV2: function(inst, prop, value)
 *
 * In order to determine which properties are instance-specific and require
 * custom notification via `_notifyInstanceProp`, define an `_instanceProps`
 * object containing keys for each instance prop, for example:
 *
 *     _instanceProps: {
 *       item: true,
 *       index: true
 *     }
 *
 * Any properties used in the template that are not defined in _instanceProp
 * will be forwarded out to the Templatize `owner` automatically.
 *
 * Users may also implement the following abstract function to show or
 * hide any DOM generated using `stamp`:
 *
 *     _showHideChildren: function(shouldHide)
 *
 * Note that some callbacks are suffixed with `V2` in the Polymer 2.x behavior
 * as the implementations will need to differ from the callbacks required
 * by the 1.x Templatizer API due to changes in the `TemplateInstance` API
 * between versions 1.x and 2.x.
 *
 * @polymerBehavior
 */var Templatizer={/**
   * Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)
   * for the provided template.  This method should be called once per
   * template to prepare an element for stamping the template, followed
   * by `stamp` to create new instances of the template.
   *
   * @param {!HTMLTemplateElement} template Template to prepare
   * @param {boolean=} mutableData When `true`, the generated class will skip
   *   strict dirty-checking for objects and arrays (always consider them to
   *   be "dirty"). Defaults to false.
   * @return {void}
   * @this {TemplatizerUser}
   */templatize:function templatize(template,mutableData){this._templatizerTemplate=template;this.ctor=_templatize(template,/** @type {!Polymer_PropertyEffects} */this,{mutableData:Boolean(mutableData),parentModel:this._parentModel,instanceProps:this._instanceProps,forwardHostProp:this._forwardHostPropV2,notifyInstanceProp:this._notifyInstancePropV2});},/**
   * Creates an instance of the template prepared by `templatize`.  The object
   * returned is an instance of the anonymous class generated by `templatize`
   * whose `root` property is a document fragment containing newly cloned
   * template content, and which has property accessors corresponding to
   * properties referenced in template bindings.
   *
   * @param {Object=} model Object containing initial property values to
   *   populate into the template bindings.
   * @return {TemplateInstanceBase} Returns the created instance of
   * the template prepared by `templatize`.
   * @this {TemplatizerUser}
   */stamp:function stamp(model){return new this.ctor(model);},/**
   * Returns the template "model" (`TemplateInstance`) associated with
   * a given element, which serves as the binding scope for the template
   * instance the element is contained in.  A template model should be used
   * to manipulate data associated with this template instance.
   *
   * @param {HTMLElement} el Element for which to return a template model.
   * @return {TemplateInstanceBase} Model representing the binding scope for
   *   the element.
   * @this {TemplatizerUser}
   */modelForElement:function modelForElement(el){return _modelForElement(this._templatizerTemplate,el);}};_exports.Templatizer=Templatizer;var templatizerBehavior={__proto__:null,Templatizer:Templatizer};_exports.$templatizerBehavior=templatizerBehavior;var elementsHidden=false;/**
                             * @return {boolean} True if elements will be hidden globally
                             */function hideElementsGlobally(){if(legacyOptimizations&&!useShadow){if(!elementsHidden){elementsHidden=true;var _style7=document.createElement('style');_style7.textContent='dom-bind,dom-if,dom-repeat{display:none;}';document.head.appendChild(_style7);}return true;}return false;}var hideTemplateControls={__proto__:null,hideElementsGlobally:hideElementsGlobally};_exports.$hideTemplateControls=hideTemplateControls;var domBindBase=GestureEventListeners(OptionalMutableData(PropertyEffects(HTMLElement)));/**
                                                                                               * Custom element to allow using Polymer's template features (data binding,
                                                                                               * declarative event listeners, etc.) in the main document without defining
                                                                                               * a new custom element.
                                                                                               *
                                                                                               * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`
                                                                                               * element, which will immediately stamp the wrapped template into the main
                                                                                               * document and bind elements to the `dom-bind` element itself as the
                                                                                               * binding scope.
                                                                                               *
                                                                                               * @polymer
                                                                                               * @customElement
                                                                                               * @appliesMixin PropertyEffects
                                                                                               * @appliesMixin OptionalMutableData
                                                                                               * @appliesMixin GestureEventListeners
                                                                                               * @extends {domBindBase}
                                                                                               * @summary Custom element to allow using Polymer's template features (data
                                                                                               *   binding, declarative event listeners, etc.) in the main document.
                                                                                               */var DomBind=/*#__PURE__*/function(_domBindBase){babelHelpers.inherits(DomBind,_domBindBase);babelHelpers.createClass(DomBind,null,[{key:"observedAttributes",get:function get(){return['mutable-data'];}}]);function DomBind(){var _this20;babelHelpers.classCallCheck(this,DomBind);_this20=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(DomBind).call(this));if(strictTemplatePolicy){throw new Error("strictTemplatePolicy: dom-bind not allowed");}_this20.root=null;_this20.$=null;_this20.__children=null;return _this20;}/* eslint-disable no-unused-vars */ /**
                                         * @override
                                         * @param {string} name Name of attribute that changed
                                         * @param {?string} old Old attribute value
                                         * @param {?string} value New attribute value
                                         * @param {?string} namespace Attribute namespace.
                                         * @return {void}
                                         */babelHelpers.createClass(DomBind,[{key:"attributeChangedCallback",value:function attributeChangedCallback(name,old,value,namespace){// assumes only one observed attribute
this.mutableData=true;}/**
     * @override
     * @return {void}
     */},{key:"connectedCallback",value:function connectedCallback(){if(!hideElementsGlobally()){this.style.display='none';}this.render();}/**
     * @override
     * @return {void}
     */},{key:"disconnectedCallback",value:function disconnectedCallback(){this.__removeChildren();}},{key:"__insertChildren",value:function __insertChildren(){wrap$1(wrap$1(this).parentNode).insertBefore(this.root,this);}},{key:"__removeChildren",value:function __removeChildren(){if(this.__children){for(var _i66=0;_i66<this.__children.length;_i66++){this.root.appendChild(this.__children[_i66]);}}}/**
     * Forces the element to render its content. This is typically only
     * necessary to call if HTMLImports with the async attribute are used.
     * @return {void}
     */},{key:"render",value:function render(){var _this21=this;var template;if(!this.__children){template=/** @type {HTMLTemplateElement} */template||this.querySelector('template');if(!template){// Wait until childList changes and template should be there by then
var _observer=new MutationObserver(function(){template=/** @type {HTMLTemplateElement} */_this21.querySelector('template');if(template){_observer.disconnect();_this21.render();}else{throw new Error('dom-bind requires a <template> child');}});_observer.observe(this,{childList:true});return;}this.root=this._stampTemplate(/** @type {!HTMLTemplateElement} */template);this.$=this.root.$;this.__children=[];for(var n=this.root.firstChild;n;n=n.nextSibling){this.__children[this.__children.length]=n;}this._enableProperties();}this.__insertChildren();this.dispatchEvent(new CustomEvent('dom-change',{bubbles:true,composed:true}));}}]);return DomBind;}(domBindBase);_exports.DomBind=DomBind;customElements.define('dom-bind',DomBind);var domBind={__proto__:null,DomBind:DomBind};_exports.$domBind=domBind;var LiteralString=/*#__PURE__*/function(){function LiteralString(string){babelHelpers.classCallCheck(this,LiteralString);/** @type {string} */this.value=string.toString();}/**
     * @return {string} LiteralString string value
     * @override
     */babelHelpers.createClass(LiteralString,[{key:"toString",value:function toString(){return this.value;}}]);return LiteralString;}();/**
   * @param {*} value Object to stringify into HTML
   * @return {string} HTML stringified form of `obj`
   */function literalValue(value){if(babelHelpers.instanceof(value,LiteralString)){return(/** @type {!LiteralString} */value.value);}else{throw new Error("non-literal value passed to Polymer's htmlLiteral function: ".concat(value));}}/**
   * @param {*} value Object to stringify into HTML
   * @return {string} HTML stringified form of `obj`
   */function htmlValue(value){if(babelHelpers.instanceof(value,HTMLTemplateElement)){return(/** @type {!HTMLTemplateElement } */value.innerHTML);}else if(babelHelpers.instanceof(value,LiteralString)){return literalValue(value);}else{throw new Error("non-template value passed to Polymer's html function: ".concat(value));}}/**
   * A template literal tag that creates an HTML <template> element from the
   * contents of the string.
   *
   * This allows you to write a Polymer Template in JavaScript.
   *
   * Templates can be composed by interpolating `HTMLTemplateElement`s in
   * expressions in the JavaScript template literal. The nested template's
   * `innerHTML` is included in the containing template.  The only other
   * values allowed in expressions are those returned from `htmlLiteral`
   * which ensures only literal values from JS source ever reach the HTML, to
   * guard against XSS risks.
   *
   * All other values are disallowed in expressions to help prevent XSS
   * attacks; however, `htmlLiteral` can be used to compose static
   * string values into templates. This is useful to compose strings into
   * places that do not accept html, like the css text of a `style`
   * element.
   *
   * Example:
   *
   *     static get template() {
   *       return html`
   *         <style>:host{ content:"..." }</style>
   *         <div class="shadowed">${this.partialTemplate}</div>
   *         ${super.template}
   *       `;
   *     }
   *     static get partialTemplate() { return html`<span>Partial!</span>`; }
   *
   * @param {!ITemplateArray} strings Constant parts of tagged template literal
   * @param {...*} values Variable parts of tagged template literal
   * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement
   */var html=function html(strings){var template=/** @type {!HTMLTemplateElement} */document.createElement('template');for(var _len8=arguments.length,values=new Array(_len8>1?_len8-1:0),_key8=1;_key8<_len8;_key8++){values[_key8-1]=arguments[_key8];}template.innerHTML=values.reduce(function(acc,v,idx){return acc+htmlValue(v)+strings[idx+1];},strings[0]);return template;};/**
    * An html literal tag that can be used with `html` to compose.
    * a literal string.
    *
    * Example:
    *
    *     static get template() {
    *       return html`
    *         <style>
    *           :host { display: block; }
    *           ${this.styleTemplate()}
    *         </style>
    *         <div class="shadowed">${staticValue}</div>
    *         ${super.template}
    *       `;
    *     }
    *     static get styleTemplate() {
    *        return htmlLiteral`.shadowed { background: gray; }`;
    *     }
    *
    * @param {!ITemplateArray} strings Constant parts of tagged template literal
    * @param {...*} values Variable parts of tagged template literal
    * @return {!LiteralString} Constructed literal string
    */_exports.html$2=_exports.html$1=_exports.html=html;var htmlLiteral=function htmlLiteral(strings){for(var _len9=arguments.length,values=new Array(_len9>1?_len9-1:0),_key9=1;_key9<_len9;_key9++){values[_key9-1]=arguments[_key9];}return new LiteralString(values.reduce(function(acc,v,idx){return acc+literalValue(v)+strings[idx+1];},strings[0]));};_exports.htmlLiteral=htmlLiteral;var htmlTag={__proto__:null,html:html,htmlLiteral:htmlLiteral};_exports.$htmlTag=htmlTag;var PolymerElement=ElementMixin(HTMLElement);_exports.PolymerElement=PolymerElement;var polymerElement={__proto__:null,version:version,PolymerElement:PolymerElement,html:html};_exports.$polymerElement=polymerElement;var domRepeatBase=OptionalMutableData(PolymerElement);/**
                                                            * The `<dom-repeat>` element will automatically stamp and binds one instance
                                                            * of template content to each object in a user-provided array.
                                                            * `dom-repeat` accepts an `items` property, and one instance of the template
                                                            * is stamped for each item into the DOM at the location of the `dom-repeat`
                                                            * element.  The `item` property will be set on each instance's binding
                                                            * scope, thus templates should bind to sub-properties of `item`.
                                                            *
                                                            * Example:
                                                            *
                                                            * ```html
                                                            * <dom-module id="employee-list">
                                                            *
                                                            *   <template>
                                                            *
                                                            *     <div> Employee list: </div>
                                                            *     <dom-repeat items="{{employees}}">
                                                            *       <template>
                                                            *         <div>First name: <span>{{item.first}}</span></div>
                                                            *         <div>Last name: <span>{{item.last}}</span></div>
                                                            *       </template>
                                                            *     </dom-repeat>
                                                            *
                                                            *   </template>
                                                            *
                                                            * </dom-module>
                                                            * ```
                                                            *
                                                            * With the following custom element definition:
                                                            *
                                                            * ```js
                                                            * class EmployeeList extends PolymerElement {
                                                            *   static get is() { return 'employee-list'; }
                                                            *   static get properties() {
                                                            *     return {
                                                            *       employees: {
                                                            *         value() {
                                                            *           return [
                                                            *             {first: 'Bob', last: 'Smith'},
                                                            *             {first: 'Sally', last: 'Johnson'},
                                                            *             ...
                                                            *           ];
                                                            *         }
                                                            *       }
                                                            *     };
                                                            *   }
                                                            * }
                                                            * ```
                                                            *
                                                            * Notifications for changes to items sub-properties will be forwarded to template
                                                            * instances, which will update via the normal structured data notification system.
                                                            *
                                                            * Mutations to the `items` array itself should be made using the Array
                                                            * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,
                                                            * `shift`, `unshift`), and template instances will be kept in sync with the
                                                            * data in the array.
                                                            *
                                                            * Events caught by event handlers within the `dom-repeat` template will be
                                                            * decorated with a `model` property, which represents the binding scope for
                                                            * each template instance.  The model should be used to manipulate data on the
                                                            * instance, for example `event.model.set('item.checked', true);`.
                                                            *
                                                            * Alternatively, the model for a template instance for an element stamped by
                                                            * a `dom-repeat` can be obtained using the `modelForElement` API on the
                                                            * `dom-repeat` that stamped it, for example
                                                            * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.
                                                            * This may be useful for manipulating instance data of event targets obtained
                                                            * by event handlers on parents of the `dom-repeat` (event delegation).
                                                            *
                                                            * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a
                                                            * `filter` and/or `sort` property.  This may be a string that names a function on
                                                            * the host, or a function may be assigned to the property directly.  The functions
                                                            * should implemented following the standard `Array` filter/sort API.
                                                            *
                                                            * In order to re-run the filter or sort functions based on changes to sub-fields
                                                            * of `items`, the `observe` property may be set as a space-separated list of
                                                            * `item` sub-fields that should cause a re-filter/sort when modified.  If
                                                            * the filter or sort function depends on properties not contained in `items`,
                                                            * the user should observe changes to those properties and call `render` to update
                                                            * the view based on the dependency change.
                                                            *
                                                            * For example, for an `dom-repeat` with a filter of the following:
                                                            *
                                                            * ```js
                                                            * isEngineer(item) {
                                                            *   return item.type == 'engineer' || item.manager.type == 'engineer';
                                                            * }
                                                            * ```
                                                            *
                                                            * Then the `observe` property should be configured as follows:
                                                            *
                                                            * ```html
                                                            * <dom-repeat items="{{employees}}" filter="isEngineer" observe="type manager.type">
                                                            * ```
                                                            *
                                                            * @customElement
                                                            * @polymer
                                                            * @extends {domRepeatBase}
                                                            * @appliesMixin OptionalMutableData
                                                            * @summary Custom element for stamping instance of a template bound to
                                                            *   items in an array.
                                                            */var DomRepeat=/*#__PURE__*/function(_domRepeatBase){babelHelpers.inherits(DomRepeat,_domRepeatBase);babelHelpers.createClass(DomRepeat,null,[{key:"is",// Not needed to find template; can be removed once the analyzer
// can find the tag name from customElements.define call
get:function get(){return'dom-repeat';}},{key:"template",get:function get(){return null;}},{key:"properties",get:function get(){/**
     * Fired whenever DOM is added or removed by this template (by
     * default, rendering occurs lazily).  To force immediate rendering, call
     * `render`.
     *
     * @event dom-change
     */return{/**
       * An array containing items determining how many instances of the template
       * to stamp and that that each template instance should bind to.
       */items:{type:Array},/**
       * The name of the variable to add to the binding scope for the array
       * element associated with a given template instance.
       */as:{type:String,value:'item'},/**
       * The name of the variable to add to the binding scope with the index
       * of the instance in the sorted and filtered list of rendered items.
       * Note, for the index in the `this.items` array, use the value of the
       * `itemsIndexAs` property.
       */indexAs:{type:String,value:'index'},/**
       * The name of the variable to add to the binding scope with the index
       * of the instance in the `this.items` array. Note, for the index of
       * this instance in the sorted and filtered list of rendered items,
       * use the value of the `indexAs` property.
       */itemsIndexAs:{type:String,value:'itemsIndex'},/**
       * A function that should determine the sort order of the items.  This
       * property should either be provided as a string, indicating a method
       * name on the element's host, or else be an actual function.  The
       * function should match the sort function passed to `Array.sort`.
       * Using a sort function has no effect on the underlying `items` array.
       */sort:{type:Function,observer:'__sortChanged'},/**
       * A function that can be used to filter items out of the view.  This
       * property should either be provided as a string, indicating a method
       * name on the element's host, or else be an actual function.  The
       * function should match the sort function passed to `Array.filter`.
       * Using a filter function has no effect on the underlying `items` array.
       */filter:{type:Function,observer:'__filterChanged'},/**
       * When using a `filter` or `sort` function, the `observe` property
       * should be set to a space-separated list of the names of item
       * sub-fields that should trigger a re-sort or re-filter when changed.
       * These should generally be fields of `item` that the sort or filter
       * function depends on.
       */observe:{type:String,observer:'__observeChanged'},/**
       * When using a `filter` or `sort` function, the `delay` property
       * determines a debounce time in ms after a change to observed item
       * properties that must pass before the filter or sort is re-run.
       * This is useful in rate-limiting shuffling of the view when
       * item changes may be frequent.
       */delay:Number,/**
       * Count of currently rendered items after `filter` (if any) has been applied.
       * If "chunking mode" is enabled, `renderedItemCount` is updated each time a
       * set of template instances is rendered.
       *
       */renderedItemCount:{type:Number,notify:true,readOnly:true},/**
       * Defines an initial count of template instances to render after setting
       * the `items` array, before the next paint, and puts the `dom-repeat`
       * into "chunking mode".  The remaining items will be created and rendered
       * incrementally at each animation frame therof until all instances have
       * been rendered.
       */initialCount:{type:Number,observer:'__initializeChunking'},/**
       * When `initialCount` is used, this property defines a frame rate (in
       * fps) to target by throttling the number of instances rendered each
       * frame to not exceed the budget for the target frame rate.  The
       * framerate is effectively the number of `requestAnimationFrame`s that
       * it tries to allow to actually fire in a given second. It does this
       * by measuring the time between `rAF`s and continuously adjusting the
       * number of items created each `rAF` to maintain the target framerate.
       * Setting this to a higher number allows lower latency and higher
       * throughput for event handlers and other tasks, but results in a
       * longer time for the remaining items to complete rendering.
       */targetFramerate:{type:Number,value:20},_targetFrameTime:{type:Number,computed:'__computeFrameTime(targetFramerate)'}};}},{key:"observers",get:function get(){return['__itemsChanged(items.*)'];}}]);function DomRepeat(){var _this22;babelHelpers.classCallCheck(this,DomRepeat);_this22=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(DomRepeat).call(this));_this22.__instances=[];_this22.__limit=Infinity;_this22.__pool=[];_this22.__renderDebouncer=null;_this22.__itemsIdxToInstIdx={};_this22.__chunkCount=null;_this22.__lastChunkTime=null;_this22.__sortFn=null;_this22.__filterFn=null;_this22.__observePaths=null;/** @type {?function(new:TemplateInstanceBase, Object=)} */_this22.__ctor=null;_this22.__isDetached=true;_this22.template=null;return _this22;}/**
     * @override
     * @return {void}
     */babelHelpers.createClass(DomRepeat,[{key:"disconnectedCallback",value:function disconnectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(DomRepeat.prototype),"disconnectedCallback",this).call(this);this.__isDetached=true;for(var _i67=0;_i67<this.__instances.length;_i67++){this.__detachInstance(_i67);}}/**
     * @override
     * @return {void}
     */},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(DomRepeat.prototype),"connectedCallback",this).call(this);if(!hideElementsGlobally()){this.style.display='none';}// only perform attachment if the element was previously detached.
if(this.__isDetached){this.__isDetached=false;var wrappedParent=wrap$1(wrap$1(this).parentNode);for(var _i68=0;_i68<this.__instances.length;_i68++){this.__attachInstance(_i68,wrappedParent);}}}},{key:"__ensureTemplatized",value:function __ensureTemplatized(){var _this23=this;// Templatizing (generating the instance constructor) needs to wait
// until ready, since won't have its template content handed back to
// it until then
if(!this.__ctor){var _template3=this.template=/** @type {HTMLTemplateElement} */this.querySelector('template');if(!_template3){// // Wait until childList changes and template should be there by then
var _observer2=new MutationObserver(function(){if(_this23.querySelector('template')){_observer2.disconnect();_this23.__render();}else{throw new Error('dom-repeat requires a <template> child');}});_observer2.observe(this,{childList:true});return false;}// Template instance props that should be excluded from forwarding
var instanceProps={};instanceProps[this.as]=true;instanceProps[this.indexAs]=true;instanceProps[this.itemsIndexAs]=true;this.__ctor=_templatize(_template3,this,{mutableData:this.mutableData,parentModel:true,instanceProps:instanceProps,/**
         * @this {DomRepeat}
         * @param {string} prop Property to set
         * @param {*} value Value to set property to
         */forwardHostProp:function forwardHostProp(prop,value){var i$=this.__instances;for(var _i69=0,inst;_i69<i$.length&&(inst=i$[_i69]);_i69++){inst.forwardHostProp(prop,value);}},/**
         * @this {DomRepeat}
         * @param {Object} inst Instance to notify
         * @param {string} prop Property to notify
         * @param {*} value Value to notify
         */notifyInstanceProp:function notifyInstanceProp(inst,prop,value){if(matches(this.as,prop)){var idx=inst[this.itemsIndexAs];if(prop==this.as){this.items[idx]=value;}var _path3=translate(this.as,"".concat(JSCompiler_renameProperty('items',this),".").concat(idx),prop);this.notifyPath(_path3,value);}}});}return true;}},{key:"__getMethodHost",value:function __getMethodHost(){// Technically this should be the owner of the outermost template.
// In shadow dom, this is always getRootNode().host, but we can
// approximate this via cooperation with our dataHost always setting
// `_methodHost` as long as there were bindings (or id's) on this
// instance causing it to get a dataHost.
return this.__dataHost._methodHost||this.__dataHost;}},{key:"__functionFromPropertyValue",value:function __functionFromPropertyValue(functionOrMethodName){if(typeof functionOrMethodName==='string'){var methodName=functionOrMethodName;var obj=this.__getMethodHost();return function(){return obj[methodName].apply(obj,arguments);};}return functionOrMethodName;}},{key:"__sortChanged",value:function __sortChanged(sort){this.__sortFn=this.__functionFromPropertyValue(sort);if(this.items){this.__debounceRender(this.__render);}}},{key:"__filterChanged",value:function __filterChanged(filter){this.__filterFn=this.__functionFromPropertyValue(filter);if(this.items){this.__debounceRender(this.__render);}}},{key:"__computeFrameTime",value:function __computeFrameTime(rate){return Math.ceil(1000/rate);}},{key:"__initializeChunking",value:function __initializeChunking(){if(this.initialCount){this.__limit=this.initialCount;this.__chunkCount=this.initialCount;this.__lastChunkTime=performance.now();}}},{key:"__tryRenderChunk",value:function __tryRenderChunk(){// Debounced so that multiple calls through `_render` between animation
// frames only queue one new rAF (e.g. array mutation & chunked render)
if(this.items&&this.__limit<this.items.length){this.__debounceRender(this.__requestRenderChunk);}}},{key:"__requestRenderChunk",value:function __requestRenderChunk(){var _this24=this;requestAnimationFrame(function(){return _this24.__renderChunk();});}},{key:"__renderChunk",value:function __renderChunk(){// Simple auto chunkSize throttling algorithm based on feedback loop:
// measure actual time between frames and scale chunk count by ratio
// of target/actual frame time
var currChunkTime=performance.now();var ratio=this._targetFrameTime/(currChunkTime-this.__lastChunkTime);this.__chunkCount=Math.round(this.__chunkCount*ratio)||1;this.__limit+=this.__chunkCount;this.__lastChunkTime=currChunkTime;this.__debounceRender(this.__render);}},{key:"__observeChanged",value:function __observeChanged(){this.__observePaths=this.observe&&this.observe.replace('.*','.').split(' ');}},{key:"__itemsChanged",value:function __itemsChanged(change){if(this.items&&!Array.isArray(this.items)){console.warn('dom-repeat expected array for `items`, found',this.items);}// If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the
// path to that instance synchronously (returns false for non-item paths)
if(!this.__handleItemPath(change.path,change.value)){// Otherwise, the array was reset ('items') or spliced ('items.splices'),
// so queue a full refresh
this.__initializeChunking();this.__debounceRender(this.__render);}}},{key:"__handleObservedPaths",value:function __handleObservedPaths(path){// Handle cases where path changes should cause a re-sort/filter
if(this.__sortFn||this.__filterFn){if(!path){// Always re-render if the item itself changed
this.__debounceRender(this.__render,this.delay);}else if(this.__observePaths){// Otherwise, re-render if the path changed matches an observed path
var paths=this.__observePaths;for(var _i70=0;_i70<paths.length;_i70++){if(path.indexOf(paths[_i70])===0){this.__debounceRender(this.__render,this.delay);}}}}}/**
     * @param {function(this:DomRepeat)} fn Function to debounce.
     * @param {number=} delay Delay in ms to debounce by.
     */},{key:"__debounceRender",value:function __debounceRender(fn){var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.__renderDebouncer=Debouncer.debounce(this.__renderDebouncer,delay>0?timeOut.after(delay):microTask,fn.bind(this));enqueueDebouncer(this.__renderDebouncer);}/**
     * Forces the element to render its content. Normally rendering is
     * asynchronous to a provoking change. This is done for efficiency so
     * that multiple changes trigger only a single render. The render method
     * should be called if, for example, template rendering is required to
     * validate application state.
     * @return {void}
     */},{key:"render",value:function render(){// Queue this repeater, then flush all in order
this.__debounceRender(this.__render);flush$1();}},{key:"__render",value:function __render(){if(!this.__ensureTemplatized()){// No template found yet
return;}this.__applyFullRefresh();// Reset the pool
// TODO(kschaaf): Reuse pool across turns and nested templates
// Now that objects/arrays are re-evaluated when set, we can safely
// reuse pooled instances across turns, however we still need to decide
// semantics regarding how long to hold, how many to hold, etc.
this.__pool.length=0;// Set rendered item count
this._setRenderedItemCount(this.__instances.length);// Notify users
this.dispatchEvent(new CustomEvent('dom-change',{bubbles:true,composed:true}));// Check to see if we need to render more items
this.__tryRenderChunk();}},{key:"__applyFullRefresh",value:function __applyFullRefresh(){var _this25=this;var items=this.items||[];var isntIdxToItemsIdx=new Array(items.length);for(var _i71=0;_i71<items.length;_i71++){isntIdxToItemsIdx[_i71]=_i71;}// Apply user filter
if(this.__filterFn){isntIdxToItemsIdx=isntIdxToItemsIdx.filter(function(i,idx,array){return _this25.__filterFn(items[i],idx,array);});}// Apply user sort
if(this.__sortFn){isntIdxToItemsIdx.sort(function(a,b){return _this25.__sortFn(items[a],items[b]);});}// items->inst map kept for item path forwarding
var itemsIdxToInstIdx=this.__itemsIdxToInstIdx={};var instIdx=0;// Generate instances and assign items
var limit=Math.min(isntIdxToItemsIdx.length,this.__limit);for(;instIdx<limit;instIdx++){var inst=this.__instances[instIdx];var itemIdx=isntIdxToItemsIdx[instIdx];var _item=items[itemIdx];itemsIdxToInstIdx[itemIdx]=instIdx;if(inst){inst._setPendingProperty(this.as,_item);inst._setPendingProperty(this.indexAs,instIdx);inst._setPendingProperty(this.itemsIndexAs,itemIdx);inst._flushProperties();}else{this.__insertInstance(_item,instIdx,itemIdx);}}// Remove any extra instances from previous state
for(var _i72=this.__instances.length-1;_i72>=instIdx;_i72--){this.__detachAndRemoveInstance(_i72);}}},{key:"__detachInstance",value:function __detachInstance(idx){var inst=this.__instances[idx];var wrappedRoot=wrap$1(inst.root);for(var _i73=0;_i73<inst.children.length;_i73++){var el=inst.children[_i73];wrappedRoot.appendChild(el);}return inst;}},{key:"__attachInstance",value:function __attachInstance(idx,parent){var inst=this.__instances[idx];// Note, this is pre-wrapped as an optimization
parent.insertBefore(inst.root,this);}},{key:"__detachAndRemoveInstance",value:function __detachAndRemoveInstance(idx){var inst=this.__detachInstance(idx);if(inst){this.__pool.push(inst);}this.__instances.splice(idx,1);}},{key:"__stampInstance",value:function __stampInstance(item,instIdx,itemIdx){var model={};model[this.as]=item;model[this.indexAs]=instIdx;model[this.itemsIndexAs]=itemIdx;return new this.__ctor(model);}},{key:"__insertInstance",value:function __insertInstance(item,instIdx,itemIdx){var inst=this.__pool.pop();if(inst){// TODO(kschaaf): If the pool is shared across turns, hostProps
// need to be re-set to reused instances in addition to item
inst._setPendingProperty(this.as,item);inst._setPendingProperty(this.indexAs,instIdx);inst._setPendingProperty(this.itemsIndexAs,itemIdx);inst._flushProperties();}else{inst=this.__stampInstance(item,instIdx,itemIdx);}var beforeRow=this.__instances[instIdx+1];var beforeNode=beforeRow?beforeRow.children[0]:this;wrap$1(wrap$1(this).parentNode).insertBefore(inst.root,beforeNode);this.__instances[instIdx]=inst;return inst;}// Implements extension point from Templatize mixin
/**
   * Shows or hides the template instance top level child elements. For
   * text nodes, `textContent` is removed while "hidden" and replaced when
   * "shown."
   * @param {boolean} hidden Set to true to hide the children;
   * set to false to show them.
   * @return {void}
   * @protected
   */},{key:"_showHideChildren",value:function _showHideChildren(hidden){for(var _i74=0;_i74<this.__instances.length;_i74++){this.__instances[_i74]._showHideChildren(hidden);}}// Called as a side effect of a host items.<key>.<path> path change,
// responsible for notifying item.<path> changes to inst for key
},{key:"__handleItemPath",value:function __handleItemPath(path,value){var itemsPath=path.slice(6);// 'items.'.length == 6
var dot=itemsPath.indexOf('.');var itemsIdx=dot<0?itemsPath:itemsPath.substring(0,dot);// If path was index into array...
if(itemsIdx==parseInt(itemsIdx,10)){var itemSubPath=dot<0?'':itemsPath.substring(dot+1);// If the path is observed, it will trigger a full refresh
this.__handleObservedPaths(itemSubPath);// Note, even if a rull refresh is triggered, always do the path
// notification because unless mutableData is used for dom-repeat
// and all elements in the instance subtree, a full refresh may
// not trigger the proper update.
var instIdx=this.__itemsIdxToInstIdx[itemsIdx];var inst=this.__instances[instIdx];if(inst){var itemPath=this.as+(itemSubPath?'.'+itemSubPath:'');// This is effectively `notifyPath`, but avoids some of the overhead
// of the public API
inst._setPendingPropertyOrPath(itemPath,value,false,true);inst._flushProperties();}return true;}}/**
     * Returns the item associated with a given element stamped by
     * this `dom-repeat`.
     *
     * Note, to modify sub-properties of the item,
     * `modelForElement(el).set('item.<sub-prop>', value)`
     * should be used.
     *
     * @param {!HTMLElement} el Element for which to return the item.
     * @return {*} Item associated with the element.
     */},{key:"itemForElement",value:function itemForElement(el){var instance=this.modelForElement(el);return instance&&instance[this.as];}/**
     * Returns the inst index for a given element stamped by this `dom-repeat`.
     * If `sort` is provided, the index will reflect the sorted order (rather
     * than the original array order).
     *
     * @param {!HTMLElement} el Element for which to return the index.
     * @return {?number} Row index associated with the element (note this may
     *   not correspond to the array index if a user `sort` is applied).
     */},{key:"indexForElement",value:function indexForElement(el){var instance=this.modelForElement(el);return instance&&instance[this.indexAs];}/**
     * Returns the template "model" associated with a given element, which
     * serves as the binding scope for the template instance the element is
     * contained in. A template model
     * should be used to manipulate data associated with this template instance.
     *
     * Example:
     *
     *   let model = modelForElement(el);
     *   if (model.index < 10) {
     *     model.set('item.checked', true);
     *   }
     *
     * @param {!HTMLElement} el Element for which to return a template model.
     * @return {TemplateInstanceBase} Model representing the binding scope for
     *   the element.
     */},{key:"modelForElement",value:function modelForElement(el){return _modelForElement(this.template,el);}}]);return DomRepeat;}(domRepeatBase);_exports.DomRepeat=DomRepeat;customElements.define(DomRepeat.is,DomRepeat);var domRepeat={__proto__:null,DomRepeat:DomRepeat};_exports.$domRepeat=domRepeat;var DomIf=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(DomIf,_PolymerElement);babelHelpers.createClass(DomIf,null,[{key:"is",// Not needed to find template; can be removed once the analyzer
// can find the tag name from customElements.define call
get:function get(){return'dom-if';}},{key:"template",get:function get(){return null;}},{key:"properties",get:function get(){return{/**
       * Fired whenever DOM is added or removed/hidden by this template (by
       * default, rendering occurs lazily).  To force immediate rendering, call
       * `render`.
       *
       * @event dom-change
       */ /**
           * A boolean indicating whether this template should stamp.
           */if:{type:Boolean,observer:'__debounceRender'},/**
       * When true, elements will be removed from DOM and discarded when `if`
       * becomes false and re-created and added back to the DOM when `if`
       * becomes true.  By default, stamped elements will be hidden but left
       * in the DOM when `if` becomes false, which is generally results
       * in better performance.
       */restamp:{type:Boolean,observer:'__debounceRender'}};}}]);function DomIf(){var _this26;babelHelpers.classCallCheck(this,DomIf);_this26=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(DomIf).call(this));_this26.__renderDebouncer=null;_this26.__invalidProps=null;_this26.__instance=null;_this26._lastIf=false;_this26.__ctor=null;_this26.__hideTemplateChildren__=false;return _this26;}babelHelpers.createClass(DomIf,[{key:"__debounceRender",value:function __debounceRender(){var _this27=this;// Render is async for 2 reasons:
// 1. To eliminate dom creation trashing if user code thrashes `if` in the
//    same turn. This was more common in 1.x where a compound computed
//    property could result in the result changing multiple times, but is
//    mitigated to a large extent by batched property processing in 2.x.
// 2. To avoid double object propagation when a bag including values bound
//    to the `if` property as well as one or more hostProps could enqueue
//    the <dom-if> to flush before the <template>'s host property
//    forwarding. In that scenario creating an instance would result in
//    the host props being set once, and then the enqueued changes on the
//    template would set properties a second time, potentially causing an
//    object to be set to an instance more than once.  Creating the
//    instance async from flushing data ensures this doesn't happen. If
//    we wanted a sync option in the future, simply having <dom-if> flush
//    (or clear) its template's pending host properties before creating
//    the instance would also avoid the problem.
this.__renderDebouncer=Debouncer.debounce(this.__renderDebouncer,microTask,function(){return _this27.__render();});enqueueDebouncer(this.__renderDebouncer);}/**
     * @override
     * @return {void}
     */},{key:"disconnectedCallback",value:function disconnectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(DomIf.prototype),"disconnectedCallback",this).call(this);var parent=wrap$1(this).parentNode;if(!parent||parent.nodeType==Node.DOCUMENT_FRAGMENT_NODE&&!wrap$1(parent).host){this.__teardownInstance();}}/**
     * @override
     * @return {void}
     */},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(DomIf.prototype),"connectedCallback",this).call(this);if(!hideElementsGlobally()){this.style.display='none';}if(this.if){this.__debounceRender();}}/**
     * Forces the element to render its content. Normally rendering is
     * asynchronous to a provoking change. This is done for efficiency so
     * that multiple changes trigger only a single render. The render method
     * should be called if, for example, template rendering is required to
     * validate application state.
     * @return {void}
     */},{key:"render",value:function render(){flush$1();}},{key:"__render",value:function __render(){if(this.if){if(!this.__ensureInstance()){// No template found yet
return;}this._showHideChildren();}else if(this.restamp){this.__teardownInstance();}if(!this.restamp&&this.__instance){this._showHideChildren();}if(this.if!=this._lastIf){this.dispatchEvent(new CustomEvent('dom-change',{bubbles:true,composed:true}));this._lastIf=this.if;}}},{key:"__ensureInstance",value:function __ensureInstance(){var _this28=this;var parentNode=wrap$1(this).parentNode;// Guard against element being detached while render was queued
if(parentNode){if(!this.__ctor){var _template4=/** @type {HTMLTemplateElement} */wrap$1(this).querySelector('template');if(!_template4){// Wait until childList changes and template should be there by then
var _observer3=new MutationObserver(function(){if(wrap$1(_this28).querySelector('template')){_observer3.disconnect();_this28.__render();}else{throw new Error('dom-if requires a <template> child');}});_observer3.observe(this,{childList:true});return false;}this.__ctor=_templatize(_template4,this,{// dom-if templatizer instances require `mutable: true`, as
// `__syncHostProperties` relies on that behavior to sync objects
mutableData:true,/**
           * @param {string} prop Property to forward
           * @param {*} value Value of property
           * @this {DomIf}
           */forwardHostProp:function forwardHostProp(prop,value){if(this.__instance){if(this.if){this.__instance.forwardHostProp(prop,value);}else{// If we have an instance but are squelching host property
// forwarding due to if being false, note the invalidated
// properties so `__syncHostProperties` can sync them the next
// time `if` becomes true
this.__invalidProps=this.__invalidProps||Object.create(null);this.__invalidProps[root(prop)]=true;}}}});}if(!this.__instance){this.__instance=new this.__ctor();wrap$1(parentNode).insertBefore(this.__instance.root,this);}else{this.__syncHostProperties();var c$=this.__instance.children;if(c$&&c$.length){// Detect case where dom-if was re-attached in new position
var lastChild=wrap$1(this).previousSibling;if(lastChild!==c$[c$.length-1]){for(var _i75=0,n;_i75<c$.length&&(n=c$[_i75]);_i75++){wrap$1(parentNode).insertBefore(n,this);}}}}}return true;}},{key:"__syncHostProperties",value:function __syncHostProperties(){var props=this.__invalidProps;if(props){for(var prop in props){this.__instance._setPendingProperty(prop,this.__dataHost[prop]);}this.__invalidProps=null;this.__instance._flushProperties();}}},{key:"__teardownInstance",value:function __teardownInstance(){if(this.__instance){var c$=this.__instance.children;if(c$&&c$.length){// use first child parent, for case when dom-if may have been detached
var parent=wrap$1(c$[0]).parentNode;// Instance children may be disconnected from parents when dom-if
// detaches if a tree was innerHTML'ed
if(parent){parent=wrap$1(parent);for(var _i76=0,n;_i76<c$.length&&(n=c$[_i76]);_i76++){parent.removeChild(n);}}}this.__instance=null;this.__invalidProps=null;}}/**
     * Shows or hides the template instance top level child elements. For
     * text nodes, `textContent` is removed while "hidden" and replaced when
     * "shown."
     * @return {void}
     * @protected
     * @suppress {visibility}
     */},{key:"_showHideChildren",value:function _showHideChildren(){var hidden=this.__hideTemplateChildren__||!this.if;if(this.__instance){this.__instance._showHideChildren(hidden);}}}]);return DomIf;}(PolymerElement);_exports.DomIf=DomIf;customElements.define(DomIf.is,DomIf);var domIf={__proto__:null,DomIf:DomIf};_exports.$domIf=domIf;var ArraySelectorMixin=dedupingMixin(function(superClass){/**
   * @constructor
   * @implements {Polymer_ElementMixin}
   * @private
   */var elementBase=ElementMixin(superClass);/**
                                                  * @polymer
                                                  * @mixinClass
                                                  * @implements {Polymer_ArraySelectorMixin}
                                                  * @unrestricted
                                                  */var ArraySelectorMixin=/*#__PURE__*/function(_elementBase2){babelHelpers.inherits(ArraySelectorMixin,_elementBase2);babelHelpers.createClass(ArraySelectorMixin,null,[{key:"properties",get:function get(){return{/**
         * An array containing items from which selection will be made.
         */items:{type:Array},/**
         * When `true`, multiple items may be selected at once (in this case,
         * `selected` is an array of currently selected items).  When `false`,
         * only one item may be selected at a time.
         */multi:{type:Boolean,value:false},/**
         * When `multi` is true, this is an array that contains any selected.
         * When `multi` is false, this is the currently selected item, or `null`
         * if no item is selected.
         * @type {?Object|?Array<!Object>}
         */selected:{type:Object,notify:true},/**
         * When `multi` is false, this is the currently selected item, or `null`
         * if no item is selected.
         * @type {?Object}
         */selectedItem:{type:Object,notify:true},/**
         * When `true`, calling `select` on an item that is already selected
         * will deselect the item.
         */toggle:{type:Boolean,value:false}};}},{key:"observers",get:function get(){return['__updateSelection(multi, items.*)'];}}]);function ArraySelectorMixin(){var _this29;babelHelpers.classCallCheck(this,ArraySelectorMixin);_this29=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(ArraySelectorMixin).call(this));_this29.__lastItems=null;_this29.__lastMulti=null;_this29.__selectedMap=null;return _this29;}babelHelpers.createClass(ArraySelectorMixin,[{key:"__updateSelection",value:function __updateSelection(multi,itemsInfo){var path=itemsInfo.path;if(path==JSCompiler_renameProperty('items',this)){// Case 1 - items array changed, so diff against previous array and
// deselect any removed items and adjust selected indices
var newItems=itemsInfo.base||[];var lastItems=this.__lastItems;var lastMulti=this.__lastMulti;if(multi!==lastMulti){this.clearSelection();}if(lastItems){var splices=calculateSplices(newItems,lastItems);this.__applySplices(splices);}this.__lastItems=newItems;this.__lastMulti=multi;}else if(itemsInfo.path=="".concat(JSCompiler_renameProperty('items',this),".splices")){// Case 2 - got specific splice information describing the array mutation:
// deselect any removed items and adjust selected indices
this.__applySplices(itemsInfo.value.indexSplices);}else{// Case 3 - an array element was changed, so deselect the previous
// item for that index if it was previously selected
var part=path.slice("".concat(JSCompiler_renameProperty('items',this),".").length);var idx=parseInt(part,10);if(part.indexOf('.')<0&&part==idx){this.__deselectChangedIdx(idx);}}}},{key:"__applySplices",value:function __applySplices(splices){var _this30=this;var selected=this.__selectedMap;// Adjust selected indices and mark removals
var _loop4=function _loop4(_i77){var s=splices[_i77];selected.forEach(function(idx,item){if(idx<s.index){// no change
}else if(idx>=s.index+s.removed.length){// adjust index
selected.set(item,idx+s.addedCount-s.removed.length);}else{// remove index
selected.set(item,-1);}});for(var j=0;j<s.addedCount;j++){var idx=s.index+j;if(selected.has(_this30.items[idx])){selected.set(_this30.items[idx],idx);}}};for(var _i77=0;_i77<splices.length;_i77++){_loop4(_i77);}// Update linked paths
this.__updateLinks();// Remove selected items that were removed from the items array
var sidx=0;selected.forEach(function(idx,item){if(idx<0){if(_this30.multi){_this30.splice(JSCompiler_renameProperty('selected',_this30),sidx,1);}else{_this30.selected=_this30.selectedItem=null;}selected.delete(item);}else{sidx++;}});}},{key:"__updateLinks",value:function __updateLinks(){var _this31=this;this.__dataLinkedPaths={};if(this.multi){var sidx=0;this.__selectedMap.forEach(function(idx){if(idx>=0){_this31.linkPaths("".concat(JSCompiler_renameProperty('items',_this31),".").concat(idx),"".concat(JSCompiler_renameProperty('selected',_this31),".").concat(sidx++));}});}else{this.__selectedMap.forEach(function(idx){_this31.linkPaths(JSCompiler_renameProperty('selected',_this31),"".concat(JSCompiler_renameProperty('items',_this31),".").concat(idx));_this31.linkPaths(JSCompiler_renameProperty('selectedItem',_this31),"".concat(JSCompiler_renameProperty('items',_this31),".").concat(idx));});}}/**
       * Clears the selection state.
       * @override
       * @return {void}
       */},{key:"clearSelection",value:function clearSelection(){// Unbind previous selection
this.__dataLinkedPaths={};// The selected map stores 3 pieces of information:
// key: items array object
// value: items array index
// order: selected array index
this.__selectedMap=new Map();// Initialize selection
this.selected=this.multi?[]:null;this.selectedItem=null;}/**
       * Returns whether the item is currently selected.
       *
       * @override
       * @param {*} item Item from `items` array to test
       * @return {boolean} Whether the item is selected
       */},{key:"isSelected",value:function isSelected(item){return this.__selectedMap.has(item);}/**
       * Returns whether the item is currently selected.
       *
       * @override
       * @param {number} idx Index from `items` array to test
       * @return {boolean} Whether the item is selected
       */},{key:"isIndexSelected",value:function isIndexSelected(idx){return this.isSelected(this.items[idx]);}},{key:"__deselectChangedIdx",value:function __deselectChangedIdx(idx){var _this32=this;var sidx=this.__selectedIndexForItemIndex(idx);if(sidx>=0){var _i78=0;this.__selectedMap.forEach(function(idx,item){if(sidx==_i78++){_this32.deselect(item);}});}}},{key:"__selectedIndexForItemIndex",value:function __selectedIndexForItemIndex(idx){var selected=this.__dataLinkedPaths["".concat(JSCompiler_renameProperty('items',this),".").concat(idx)];if(selected){return parseInt(selected.slice("".concat(JSCompiler_renameProperty('selected',this),".").length),10);}}/**
       * Deselects the given item if it is already selected.
       *
       * @override
       * @param {*} item Item from `items` array to deselect
       * @return {void}
       */},{key:"deselect",value:function deselect(item){var idx=this.__selectedMap.get(item);if(idx>=0){this.__selectedMap.delete(item);var sidx;if(this.multi){sidx=this.__selectedIndexForItemIndex(idx);}this.__updateLinks();if(this.multi){this.splice(JSCompiler_renameProperty('selected',this),sidx,1);}else{this.selected=this.selectedItem=null;}}}/**
       * Deselects the given index if it is already selected.
       *
       * @override
       * @param {number} idx Index from `items` array to deselect
       * @return {void}
       */},{key:"deselectIndex",value:function deselectIndex(idx){this.deselect(this.items[idx]);}/**
       * Selects the given item.  When `toggle` is true, this will automatically
       * deselect the item if already selected.
       *
       * @override
       * @param {*} item Item from `items` array to select
       * @return {void}
       */},{key:"select",value:function select(item){this.selectIndex(this.items.indexOf(item));}/**
       * Selects the given index.  When `toggle` is true, this will automatically
       * deselect the item if already selected.
       *
       * @override
       * @param {number} idx Index from `items` array to select
       * @return {void}
       */},{key:"selectIndex",value:function selectIndex(idx){var item=this.items[idx];if(!this.isSelected(item)){if(!this.multi){this.__selectedMap.clear();}this.__selectedMap.set(item,idx);this.__updateLinks();if(this.multi){this.push(JSCompiler_renameProperty('selected',this),item);}else{this.selected=this.selectedItem=item;}}else if(this.toggle){this.deselectIndex(idx);}}}]);return ArraySelectorMixin;}(elementBase);return ArraySelectorMixin;});// export mixin
_exports.ArraySelectorMixin=ArraySelectorMixin;var baseArraySelector=ArraySelectorMixin(PolymerElement);/**
                                                             * Element implementing the `ArraySelector` mixin, which records
                                                             * dynamic associations between item paths in a master `items` array and a
                                                             * `selected` array such that path changes to the master array (at the host)
                                                             * element or elsewhere via data-binding) are correctly propagated to items
                                                             * in the selected array and vice-versa.
                                                             *
                                                             * The `items` property accepts an array of user data, and via the
                                                             * `select(item)` and `deselect(item)` API, updates the `selected` property
                                                             * which may be bound to other parts of the application, and any changes to
                                                             * sub-fields of `selected` item(s) will be kept in sync with items in the
                                                             * `items` array.  When `multi` is false, `selected` is a property
                                                             * representing the last selected item.  When `multi` is true, `selected`
                                                             * is an array of multiply selected items.
                                                             *
                                                             * Example:
                                                             *
                                                             * ```js
                                                             * import {PolymerElement} from '../../../../@polymer/polymer';
                                                             * import '../../../../@polymer/polymer/lib/elements/array-selector.js';
                                                             *
                                                             * class EmployeeList extends PolymerElement {
                                                             *   static get _template() {
                                                             *     return html`
                                                             *         <div> Employee list: </div>
                                                             *         <dom-repeat id="employeeList" items="{{employees}}">
                                                             *           <template>
                                                             *             <div>First name: <span>{{item.first}}</span></div>
                                                             *               <div>Last name: <span>{{item.last}}</span></div>
                                                             *               <button on-click="toggleSelection">Select</button>
                                                             *           </template>
                                                             *         </dom-repeat>
                                                             *
                                                             *         <array-selector id="selector"
                                                             *                         items="{{employees}}"
                                                             *                         selected="{{selected}}"
                                                             *                         multi toggle></array-selector>
                                                             *
                                                             *         <div> Selected employees: </div>
                                                             *         <dom-repeat items="{{selected}}">
                                                             *           <template>
                                                             *             <div>First name: <span>{{item.first}}</span></div>
                                                             *             <div>Last name: <span>{{item.last}}</span></div>
                                                             *           </template>
                                                             *         </dom-repeat>`;
                                                             *   }
                                                             *   static get is() { return 'employee-list'; }
                                                             *   static get properties() {
                                                             *     return {
                                                             *       employees: {
                                                             *         value() {
                                                             *           return [
                                                             *             {first: 'Bob', last: 'Smith'},
                                                             *             {first: 'Sally', last: 'Johnson'},
                                                             *             ...
                                                             *           ];
                                                             *         }
                                                             *       }
                                                             *     };
                                                             *   }
                                                             *   toggleSelection(e) {
                                                             *     const item = this.$.employeeList.itemForElement(e.target);
                                                             *     this.$.selector.select(item);
                                                             *   }
                                                             * }
                                                             * ```
                                                             *
                                                             * @polymer
                                                             * @customElement
                                                             * @extends {baseArraySelector}
                                                             * @appliesMixin ArraySelectorMixin
                                                             * @summary Custom element that links paths between an input `items` array and
                                                             *   an output `selected` item or array based on calls to its selection API.
                                                             */var ArraySelector=/*#__PURE__*/function(_baseArraySelector){babelHelpers.inherits(ArraySelector,_baseArraySelector);function ArraySelector(){babelHelpers.classCallCheck(this,ArraySelector);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(ArraySelector).apply(this,arguments));}babelHelpers.createClass(ArraySelector,null,[{key:"is",// Not needed to find template; can be removed once the analyzer
// can find the tag name from customElements.define call
get:function get(){return'array-selector';}},{key:"template",get:function get(){return null;}}]);return ArraySelector;}(baseArraySelector);_exports.ArraySelector=ArraySelector;customElements.define(ArraySelector.is,ArraySelector);var arraySelector={__proto__:null,ArraySelectorMixin:ArraySelectorMixin,ArraySelector:ArraySelector};/**
   @license
   Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
   Code distributed by Google as part of the polymer project is also
   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
   */_exports.$arraySelector=arraySelector;'use strict';var customStyleInterface$1=new CustomStyleInterface();if(!window.ShadyCSS){window.ShadyCSS={/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */prepareTemplate:function prepareTemplate(template,elementName,elementExtends){},// eslint-disable-line no-unused-vars
/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     */prepareTemplateDom:function prepareTemplateDom(template,elementName){},// eslint-disable-line no-unused-vars
/**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */prepareTemplateStyles:function prepareTemplateStyles(template,elementName,elementExtends){},// eslint-disable-line no-unused-vars
/**
     * @param {Element} element
     * @param {Object=} properties
     */styleSubtree:function styleSubtree(element,properties){customStyleInterface$1.processStyles();updateNativeProperties(element,properties);},/**
     * @param {Element} element
     */styleElement:function styleElement(element){// eslint-disable-line no-unused-vars
customStyleInterface$1.processStyles();},/**
     * @param {Object=} properties
     */styleDocument:function styleDocument(properties){customStyleInterface$1.processStyles();updateNativeProperties(document.body,properties);},/**
     * @param {Element} element
     * @param {string} property
     * @return {string}
     */getComputedStyleValue:function getComputedStyleValue(element,property){return _getComputedStyleValue(element,property);},flushCustomStyles:function flushCustomStyles(){},nativeCss:nativeCssVariables,nativeShadow:nativeShadow,cssBuild:cssBuild,disableRuntime:disableRuntime};}window.ShadyCSS.CustomStyleInterface=customStyleInterface$1;var attr='include';var CustomStyleInterface$1=window.ShadyCSS.CustomStyleInterface;/**
                                                                     * Custom element for defining styles in the main document that can take
                                                                     * advantage of [shady DOM](https://github.com/webcomponents/shadycss) shims
                                                                     * for style encapsulation, custom properties, and custom mixins.
                                                                     *
                                                                     * - Document styles defined in a `<custom-style>` are shimmed to ensure they
                                                                     *   do not leak into local DOM when running on browsers without native
                                                                     *   Shadow DOM.
                                                                     * - Custom properties can be defined in a `<custom-style>`. Use the `html` selector
                                                                     *   to define custom properties that apply to all custom elements.
                                                                     * - Custom mixins can be defined in a `<custom-style>`, if you import the optional
                                                                     *   [apply shim](https://github.com/webcomponents/shadycss#about-applyshim)
                                                                     *   (`shadycss/apply-shim.html`).
                                                                     *
                                                                     * To use:
                                                                     *
                                                                     * - Import `custom-style.html`.
                                                                     * - Place a `<custom-style>` element in the main document, wrapping an inline `<style>` tag that
                                                                     *   contains the CSS rules you want to shim.
                                                                     *
                                                                     * For example:
                                                                     *
                                                                     * ```html
                                                                     * <!-- import apply shim--only required if using mixins -->
                                                                     * <link rel="import" href="bower_components/shadycss/apply-shim.html">
                                                                     * <!-- import custom-style element -->
                                                                     * <link rel="import" href="bower_components/polymer/lib/elements/custom-style.html">
                                                                     *
                                                                     * <custom-style>
                                                                     *   <style>
                                                                     *     html {
                                                                     *       --custom-color: blue;
                                                                     *       --custom-mixin: {
                                                                     *         font-weight: bold;
                                                                     *         color: red;
                                                                     *       };
                                                                     *     }
                                                                     *   </style>
                                                                     * </custom-style>
                                                                     * ```
                                                                     *
                                                                     * @customElement
                                                                     * @extends HTMLElement
                                                                     * @summary Custom element for defining styles in the main document that can
                                                                     *   take advantage of Polymer's style scoping and custom properties shims.
                                                                     */var CustomStyle=/*#__PURE__*/function(_HTMLElement2){babelHelpers.inherits(CustomStyle,_HTMLElement2);function CustomStyle(){var _this33;babelHelpers.classCallCheck(this,CustomStyle);_this33=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(CustomStyle).call(this));_this33._style=null;CustomStyleInterface$1.addCustomStyle(babelHelpers.assertThisInitialized(_this33));return _this33;}/**
     * Returns the light-DOM `<style>` child this element wraps.  Upon first
     * call any style modules referenced via the `include` attribute will be
     * concatenated to this element's `<style>`.
     *
     * @export
     * @return {HTMLStyleElement} This element's light-DOM `<style>`
     */babelHelpers.createClass(CustomStyle,[{key:"getStyle",value:function getStyle(){if(this._style){return this._style;}var style=/** @type {HTMLStyleElement} */this.querySelector('style');if(!style){return null;}this._style=style;var include=style.getAttribute(attr);if(include){style.removeAttribute(attr);/** @suppress {deprecated} */style.textContent=cssFromModules(include)+style.textContent;}/*
      HTML Imports styling the main document are deprecated in Chrome
      https://crbug.com/523952
       If this element is not in the main document, then it must be in an HTML Import document.
      In that case, move the custom style to the main document.
       The ordering of `<custom-style>` should stay the same as when loaded by HTML Imports, but there may be odd
      cases of ordering w.r.t the main document styles.
      */if(this.ownerDocument!==window.document){window.document.head.appendChild(this);}return this._style;}}]);return CustomStyle;}(babelHelpers.wrapNativeSuper(HTMLElement));_exports.CustomStyle=CustomStyle;window.customElements.define('custom-style',CustomStyle);var customStyle={__proto__:null,CustomStyle:CustomStyle};_exports.$customStyle=customStyle;var mutablePropertyChange$1;/** @suppress {missingProperties} */(function(){mutablePropertyChange$1=MutableData._mutablePropertyChange;})();/**
       * Legacy element behavior to skip strict dirty-checking for objects and arrays,
       * (always consider them to be "dirty") for use on legacy API Polymer elements.
       *
       * By default, `Polymer.PropertyEffects` performs strict dirty checking on
       * objects, which means that any deep modifications to an object or array will
       * not be propagated unless "immutable" data patterns are used (i.e. all object
       * references from the root to the mutation were changed).
       *
       * Polymer also provides a proprietary data mutation and path notification API
       * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
       * mutation and notification of deep changes in an object graph to all elements
       * bound to the same object graph.
       *
       * In cases where neither immutable patterns nor the data mutation API can be
       * used, applying this mixin will cause Polymer to skip dirty checking for
       * objects and arrays (always consider them to be "dirty").  This allows a
       * user to make a deep modification to a bound object graph, and then either
       * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
       * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
       * elements that wish to be updated based on deep mutations must apply this
       * mixin or otherwise skip strict dirty checking for objects/arrays.
       * Specifically, any elements in the binding tree between the source of a
       * mutation and the consumption of it must apply this behavior or enable the
       * `Polymer.OptionalMutableDataBehavior`.
       *
       * In order to make the dirty check strategy configurable, see
       * `Polymer.OptionalMutableDataBehavior`.
       *
       * Note, the performance characteristics of propagating large object graphs
       * will be worse as opposed to using strict dirty checking with immutable
       * patterns or Polymer's path notification API.
       *
       * @polymerBehavior
       * @summary Behavior to skip strict dirty-checking for objects and
       *   arrays
       */var MutableDataBehavior={/**
   * Overrides `Polymer.PropertyEffects` to provide option for skipping
   * strict equality checking for Objects and Arrays.
   *
   * This method pulls the value to dirty check against from the `__dataTemp`
   * cache (rather than the normal `__data` cache) for Objects.  Since the temp
   * cache is cleared at the end of a turn, this implementation allows
   * side-effects of deep object changes to be processed by re-setting the
   * same object (using the temp cache as an in-turn backstop to prevent
   * cycles due to 2-way notification).
   *
   * @param {string} property Property name
   * @param {*} value New property value
   * @param {*} old Previous property value
   * @return {boolean} Whether the property should be considered a change
   * @protected
   * @override
   */_shouldPropertyChange:function _shouldPropertyChange(property,value,old){return mutablePropertyChange$1(this,property,value,old,true);}};/**
    * Legacy element behavior to add the optional ability to skip strict
    * dirty-checking for objects and arrays (always consider them to be
    * "dirty") by setting a `mutable-data` attribute on an element instance.
    *
    * By default, `Polymer.PropertyEffects` performs strict dirty checking on
    * objects, which means that any deep modifications to an object or array will
    * not be propagated unless "immutable" data patterns are used (i.e. all object
    * references from the root to the mutation were changed).
    *
    * Polymer also provides a proprietary data mutation and path notification API
    * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
    * mutation and notification of deep changes in an object graph to all elements
    * bound to the same object graph.
    *
    * In cases where neither immutable patterns nor the data mutation API can be
    * used, applying this mixin will allow Polymer to skip dirty checking for
    * objects and arrays (always consider them to be "dirty").  This allows a
    * user to make a deep modification to a bound object graph, and then either
    * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
    * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
    * elements that wish to be updated based on deep mutations must apply this
    * mixin or otherwise skip strict dirty checking for objects/arrays.
    * Specifically, any elements in the binding tree between the source of a
    * mutation and the consumption of it must enable this behavior or apply the
    * `Polymer.OptionalMutableDataBehavior`.
    *
    * While this behavior adds the ability to forgo Object/Array dirty checking,
    * the `mutableData` flag defaults to false and must be set on the instance.
    *
    * Note, the performance characteristics of propagating large object graphs
    * will be worse by relying on `mutableData: true` as opposed to using
    * strict dirty checking with immutable patterns or Polymer's path notification
    * API.
    *
    * @polymerBehavior
    * @summary Behavior to optionally skip strict dirty-checking for objects and
    *   arrays
    */_exports.MutableDataBehavior=MutableDataBehavior;var OptionalMutableDataBehavior={properties:{/**
     * Instance-level flag for configuring the dirty-checking strategy
     * for this element.  When true, Objects and Arrays will skip dirty
     * checking, otherwise strict equality checking will be used.
     */mutableData:Boolean},/**
   * Overrides `Polymer.PropertyEffects` to skip strict equality checking
   * for Objects and Arrays.
   *
   * Pulls the value to dirty check against from the `__dataTemp` cache
   * (rather than the normal `__data` cache) for Objects.  Since the temp
   * cache is cleared at the end of a turn, this implementation allows
   * side-effects of deep object changes to be processed by re-setting the
   * same object (using the temp cache as an in-turn backstop to prevent
   * cycles due to 2-way notification).
   *
   * @param {string} property Property name
   * @param {*} value New property value
   * @param {*} old Previous property value
   * @return {boolean} Whether the property should be considered a change
   * @protected
   * @override
   */_shouldPropertyChange:function _shouldPropertyChange(property,value,old){return mutablePropertyChange$1(this,property,value,old,this.mutableData);}};_exports.OptionalMutableDataBehavior=OptionalMutableDataBehavior;var mutableDataBehavior={__proto__:null,MutableDataBehavior:MutableDataBehavior,OptionalMutableDataBehavior:OptionalMutableDataBehavior};_exports.$mutableDataBehavior=mutableDataBehavior;var Base=LegacyElementMixin(HTMLElement).prototype;_exports.Base=Base;var polymerLegacy={__proto__:null,Base:Base,Polymer:Polymer,html:html};_exports.$polymerLegacy=polymerLegacy;var IronA11yAnnouncer=Polymer({_template:html(_templateObject_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'iron-a11y-announcer',properties:{/**
     * The value of mode is used to set the `aria-live` attribute
     * for the element that will be announced. Valid values are: `off`,
     * `polite` and `assertive`.
     */mode:{type:String,value:'polite'},_text:{type:String,value:''}},created:function created(){if(!IronA11yAnnouncer.instance){IronA11yAnnouncer.instance=this;}document.body.addEventListener('iron-announce',this._onIronAnnounce.bind(this));},/**
   * Cause a text string to be announced by screen readers.
   *
   * @param {string} text The text that should be announced.
   */announce:function announce(text){this._text='';this.async(function(){this._text=text;},100);},_onIronAnnounce:function _onIronAnnounce(event){if(event.detail&&event.detail.text){this.announce(event.detail.text);}}});_exports.IronA11yAnnouncer=IronA11yAnnouncer;IronA11yAnnouncer.instance=null;IronA11yAnnouncer.requestAvailability=function(){if(!IronA11yAnnouncer.instance){IronA11yAnnouncer.instance=document.createElement('iron-a11y-announcer');}document.body.appendChild(IronA11yAnnouncer.instance);};var ironA11yAnnouncer={__proto__:null,IronA11yAnnouncer:IronA11yAnnouncer};_exports.$ironA11yAnnouncer=ironA11yAnnouncer;var KEY_IDENTIFIER={'U+0008':'backspace','U+0009':'tab','U+001B':'esc','U+0020':'space','U+007F':'del'};/**
    * Special table for KeyboardEvent.keyCode.
    * KeyboardEvent.keyIdentifier is better, and KeyBoardEvent.key is even better
    * than that.
    *
    * Values from:
    * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.keyCode#Value_of_keyCode
    */var KEY_CODE={8:'backspace',9:'tab',13:'enter',27:'esc',33:'pageup',34:'pagedown',35:'end',36:'home',32:'space',37:'left',38:'up',39:'right',40:'down',46:'del',106:'*'};/**
    * MODIFIER_KEYS maps the short name for modifier keys used in a key
    * combo string to the property name that references those same keys
    * in a KeyboardEvent instance.
    */var MODIFIER_KEYS={'shift':'shiftKey','ctrl':'ctrlKey','alt':'altKey','meta':'metaKey'};/**
    * KeyboardEvent.key is mostly represented by printable character made by
    * the keyboard, with unprintable keys labeled nicely.
    *
    * However, on OS X, Alt+char can make a Unicode character that follows an
    * Apple-specific mapping. In this case, we fall back to .keyCode.
    */var KEY_CHAR=/[a-z0-9*]/;/**
                             * Matches a keyIdentifier string.
                             */var IDENT_CHAR=/U\+/;/**
                         * Matches arrow keys in Gecko 27.0+
                         */var ARROW_KEY=/^arrow/;/**
                           * Matches space keys everywhere (notably including IE10's exceptional name
                           * `spacebar`).
                           */var SPACE_KEY=/^space(bar)?/;/**
                                 * Matches ESC key.
                                 *
                                 * Value from: http://w3c.github.io/uievents-key/#key-Escape
                                 */var ESC_KEY=/^escape$/;/**
                           * Transforms the key.
                           * @param {string} key The KeyBoardEvent.key
                           * @param {Boolean} [noSpecialChars] Limits the transformation to
                           * alpha-numeric characters.
                           */function transformKey(key,noSpecialChars){var validKey='';if(key){var lKey=key.toLowerCase();if(lKey===' '||SPACE_KEY.test(lKey)){validKey='space';}else if(ESC_KEY.test(lKey)){validKey='esc';}else if(lKey.length==1){if(!noSpecialChars||KEY_CHAR.test(lKey)){validKey=lKey;}}else if(ARROW_KEY.test(lKey)){validKey=lKey.replace('arrow','');}else if(lKey=='multiply'){// numpad '*' can map to Multiply on IE/Windows
validKey='*';}else{validKey=lKey;}}return validKey;}function transformKeyIdentifier(keyIdent){var validKey='';if(keyIdent){if(keyIdent in KEY_IDENTIFIER){validKey=KEY_IDENTIFIER[keyIdent];}else if(IDENT_CHAR.test(keyIdent)){keyIdent=parseInt(keyIdent.replace('U+','0x'),16);validKey=String.fromCharCode(keyIdent).toLowerCase();}else{validKey=keyIdent.toLowerCase();}}return validKey;}function transformKeyCode(keyCode){var validKey='';if(Number(keyCode)){if(keyCode>=65&&keyCode<=90){// ascii a-z
// lowercase is 32 offset from uppercase
validKey=String.fromCharCode(32+keyCode);}else if(keyCode>=112&&keyCode<=123){// function keys f1-f12
validKey='f'+(keyCode-112+1);}else if(keyCode>=48&&keyCode<=57){// top 0-9 keys
validKey=String(keyCode-48);}else if(keyCode>=96&&keyCode<=105){// num pad 0-9
validKey=String(keyCode-96);}else{validKey=KEY_CODE[keyCode];}}return validKey;}/**
   * Calculates the normalized key for a KeyboardEvent.
   * @param {KeyboardEvent} keyEvent
   * @param {Boolean} [noSpecialChars] Set to true to limit keyEvent.key
   * transformation to alpha-numeric chars. This is useful with key
   * combinations like shift + 2, which on FF for MacOS produces
   * keyEvent.key = @
   * To get 2 returned, set noSpecialChars = true
   * To get @ returned, set noSpecialChars = false
   */function normalizedKeyForEvent(keyEvent,noSpecialChars){// Fall back from .key, to .detail.key for artifical keyboard events,
// and then to deprecated .keyIdentifier and .keyCode.
if(keyEvent.key){return transformKey(keyEvent.key,noSpecialChars);}if(keyEvent.detail&&keyEvent.detail.key){return transformKey(keyEvent.detail.key,noSpecialChars);}return transformKeyIdentifier(keyEvent.keyIdentifier)||transformKeyCode(keyEvent.keyCode)||'';}function keyComboMatchesEvent(keyCombo,event){// For combos with modifiers we support only alpha-numeric keys
var keyEvent=normalizedKeyForEvent(event,keyCombo.hasModifiers);return keyEvent===keyCombo.key&&(!keyCombo.hasModifiers||!!event.shiftKey===!!keyCombo.shiftKey&&!!event.ctrlKey===!!keyCombo.ctrlKey&&!!event.altKey===!!keyCombo.altKey&&!!event.metaKey===!!keyCombo.metaKey);}function parseKeyComboString(keyComboString){if(keyComboString.length===1){return{combo:keyComboString,key:keyComboString,event:'keydown'};}return keyComboString.split('+').reduce(function(parsedKeyCombo,keyComboPart){var eventParts=keyComboPart.split(':');var keyName=eventParts[0];var event=eventParts[1];if(keyName in MODIFIER_KEYS){parsedKeyCombo[MODIFIER_KEYS[keyName]]=true;parsedKeyCombo.hasModifiers=true;}else{parsedKeyCombo.key=keyName;parsedKeyCombo.event=event||'keydown';}return parsedKeyCombo;},{combo:keyComboString.split(':').shift()});}function parseEventString(eventString){return eventString.trim().split(' ').map(function(keyComboString){return parseKeyComboString(keyComboString);});}/**
   * `Polymer.IronA11yKeysBehavior` provides a normalized interface for processing
   * keyboard commands that pertain to [WAI-ARIA best
   * practices](http://www.w3.org/TR/wai-aria-practices/#kbd_general_binding). The
   * element takes care of browser differences with respect to Keyboard events and
   * uses an expressive syntax to filter key presses.
   *
   * Use the `keyBindings` prototype property to express what combination of keys
   * will trigger the callback. A key binding has the format
   * `"KEY+MODIFIER:EVENT": "callback"` (`"KEY": "callback"` or
   * `"KEY:EVENT": "callback"` are valid as well). Some examples:
   *
   *      keyBindings: {
   *        'space': '_onKeydown', // same as 'space:keydown'
   *        'shift+tab': '_onKeydown',
   *        'enter:keypress': '_onKeypress',
   *        'esc:keyup': '_onKeyup'
   *      }
   *
   * The callback will receive with an event containing the following information
   * in `event.detail`:
   *
   *      _onKeydown: function(event) {
   *        console.log(event.detail.combo); // KEY+MODIFIER, e.g. "shift+tab"
   *        console.log(event.detail.key); // KEY only, e.g. "tab"
   *        console.log(event.detail.event); // EVENT, e.g. "keydown"
   *        console.log(event.detail.keyboardEvent); // the original KeyboardEvent
   *      }
   *
   * Use the `keyEventTarget` attribute to set up event handlers on a specific
   * node.
   *
   * See the [demo source
   * code](https://github.com/PolymerElements/iron-a11y-keys-behavior/blob/master/demo/x-key-aware.html)
   * for an example.
   *
   * @demo demo/index.html
   * @polymerBehavior
   */var IronA11yKeysBehavior={properties:{/**
     * The EventTarget that will be firing relevant KeyboardEvents. Set it to
     * `null` to disable the listeners.
     * @type {?EventTarget}
     */keyEventTarget:{type:Object,value:function value(){return this;}},/**
     * If true, this property will cause the implementing element to
     * automatically stop propagation on any handled KeyboardEvents.
     */stopKeyboardEventPropagation:{type:Boolean,value:false},_boundKeyHandlers:{type:Array,value:function value(){return[];}},// We use this due to a limitation in IE10 where instances will have
// own properties of everything on the "prototype".
_imperativeKeyBindings:{type:Object,value:function value(){return{};}}},observers:['_resetKeyEventListeners(keyEventTarget, _boundKeyHandlers)'],/**
   * To be used to express what combination of keys  will trigger the relative
   * callback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`
   * @type {!Object}
   */keyBindings:{},registered:function registered(){this._prepKeyBindings();},attached:function attached(){this._listenKeyEventListeners();},detached:function detached(){this._unlistenKeyEventListeners();},/**
   * Can be used to imperatively add a key binding to the implementing
   * element. This is the imperative equivalent of declaring a keybinding
   * in the `keyBindings` prototype property.
   *
   * @param {string} eventString
   * @param {string} handlerName
   */addOwnKeyBinding:function addOwnKeyBinding(eventString,handlerName){this._imperativeKeyBindings[eventString]=handlerName;this._prepKeyBindings();this._resetKeyEventListeners();},/**
   * When called, will remove all imperatively-added key bindings.
   */removeOwnKeyBindings:function removeOwnKeyBindings(){this._imperativeKeyBindings={};this._prepKeyBindings();this._resetKeyEventListeners();},/**
   * Returns true if a keyboard event matches `eventString`.
   *
   * @param {KeyboardEvent} event
   * @param {string} eventString
   * @return {boolean}
   */keyboardEventMatchesKeys:function keyboardEventMatchesKeys(event,eventString){var keyCombos=parseEventString(eventString);for(var i=0;i<keyCombos.length;++i){if(keyComboMatchesEvent(keyCombos[i],event)){return true;}}return false;},_collectKeyBindings:function _collectKeyBindings(){var keyBindings=this.behaviors.map(function(behavior){return behavior.keyBindings;});if(keyBindings.indexOf(this.keyBindings)===-1){keyBindings.push(this.keyBindings);}return keyBindings;},_prepKeyBindings:function _prepKeyBindings(){this._keyBindings={};this._collectKeyBindings().forEach(function(keyBindings){for(var eventString in keyBindings){this._addKeyBinding(eventString,keyBindings[eventString]);}},this);for(var eventString in this._imperativeKeyBindings){this._addKeyBinding(eventString,this._imperativeKeyBindings[eventString]);}// Give precedence to combos with modifiers to be checked first.
for(var eventName in this._keyBindings){this._keyBindings[eventName].sort(function(kb1,kb2){var b1=kb1[0].hasModifiers;var b2=kb2[0].hasModifiers;return b1===b2?0:b1?-1:1;});}},_addKeyBinding:function _addKeyBinding(eventString,handlerName){parseEventString(eventString).forEach(function(keyCombo){this._keyBindings[keyCombo.event]=this._keyBindings[keyCombo.event]||[];this._keyBindings[keyCombo.event].push([keyCombo,handlerName]);},this);},_resetKeyEventListeners:function _resetKeyEventListeners(){this._unlistenKeyEventListeners();if(this.isAttached){this._listenKeyEventListeners();}},_listenKeyEventListeners:function _listenKeyEventListeners(){if(!this.keyEventTarget){return;}Object.keys(this._keyBindings).forEach(function(eventName){var keyBindings=this._keyBindings[eventName];var boundKeyHandler=this._onKeyBindingEvent.bind(this,keyBindings);this._boundKeyHandlers.push([this.keyEventTarget,eventName,boundKeyHandler]);this.keyEventTarget.addEventListener(eventName,boundKeyHandler);},this);},_unlistenKeyEventListeners:function _unlistenKeyEventListeners(){var keyHandlerTuple;var keyEventTarget;var eventName;var boundKeyHandler;while(this._boundKeyHandlers.length){// My kingdom for block-scope binding and destructuring assignment..
keyHandlerTuple=this._boundKeyHandlers.pop();keyEventTarget=keyHandlerTuple[0];eventName=keyHandlerTuple[1];boundKeyHandler=keyHandlerTuple[2];keyEventTarget.removeEventListener(eventName,boundKeyHandler);}},_onKeyBindingEvent:function _onKeyBindingEvent(keyBindings,event){if(this.stopKeyboardEventPropagation){event.stopPropagation();}// if event has been already prevented, don't do anything
if(event.defaultPrevented){return;}for(var i=0;i<keyBindings.length;i++){var keyCombo=keyBindings[i][0];var handlerName=keyBindings[i][1];if(keyComboMatchesEvent(keyCombo,event)){this._triggerKeyHandler(keyCombo,handlerName,event);// exit the loop if eventDefault was prevented
if(event.defaultPrevented){return;}}}},_triggerKeyHandler:function _triggerKeyHandler(keyCombo,handlerName,keyboardEvent){var detail=Object.create(keyCombo);detail.keyboardEvent=keyboardEvent;var event=new CustomEvent(keyCombo.event,{detail:detail,cancelable:true});this[handlerName].call(this,event);if(event.defaultPrevented){keyboardEvent.preventDefault();}}};_exports.IronA11yKeysBehavior=IronA11yKeysBehavior;var ironA11yKeysBehavior={__proto__:null,IronA11yKeysBehavior:IronA11yKeysBehavior};_exports.$ironA11yKeysBehavior=ironA11yKeysBehavior;Polymer({is:'iron-request',hostAttributes:{hidden:true},properties:{/**
     * A reference to the XMLHttpRequest instance used to generate the
     * network request.
     *
     * @type {XMLHttpRequest}
     */xhr:{type:Object,notify:true,readOnly:true,value:function value(){return new XMLHttpRequest();}},/**
     * A reference to the parsed response body, if the `xhr` has completely
     * resolved.
     *
     * @type {*}
     * @default null
     */response:{type:Object,notify:true,readOnly:true,value:function value(){return null;}},/**
     * A reference to the status code, if the `xhr` has completely resolved.
     */status:{type:Number,notify:true,readOnly:true,value:0},/**
     * A reference to the status text, if the `xhr` has completely resolved.
     */statusText:{type:String,notify:true,readOnly:true,value:''},/**
     * A promise that resolves when the `xhr` response comes back, or rejects
     * if there is an error before the `xhr` completes.
     * The resolve callback is called with the original request as an argument.
     * By default, the reject callback is called with an `Error` as an argument.
     * If `rejectWithRequest` is true, the reject callback is called with an
     * object with two keys: `request`, the original request, and `error`, the
     * error object.
     *
     * @type {Promise}
     */completes:{type:Object,readOnly:true,notify:true,value:function value(){return new Promise(function(resolve,reject){this.resolveCompletes=resolve;this.rejectCompletes=reject;}.bind(this));}},/**
     * An object that contains progress information emitted by the XHR if
     * available.
     *
     * @default {}
     */progress:{type:Object,notify:true,readOnly:true,value:function value(){return{};}},/**
     * Aborted will be true if an abort of the request is attempted.
     */aborted:{type:Boolean,notify:true,readOnly:true,value:false},/**
     * Errored will be true if the browser fired an error event from the
     * XHR object (mainly network errors).
     */errored:{type:Boolean,notify:true,readOnly:true,value:false},/**
     * TimedOut will be true if the XHR threw a timeout event.
     */timedOut:{type:Boolean,notify:true,readOnly:true,value:false}},/**
   * Succeeded is true if the request succeeded. The request succeeded if it
   * loaded without error, wasn't aborted, and the status code is ≥ 200, and
   * < 300, or if the status code is 0.
   *
   * The status code 0 is accepted as a success because some schemes - e.g.
   * file:// - don't provide status codes.
   *
   * @return {boolean}
   */get succeeded(){if(this.errored||this.aborted||this.timedOut){return false;}var status=this.xhr.status||0;// Note: if we are using the file:// protocol, the status code will be 0
// for all outcomes (successful or otherwise).
return status===0||status>=200&&status<300;},/**
   * Sends an HTTP request to the server and returns a promise (see the
   * `completes` property for details).
   *
   * The handling of the `body` parameter will vary based on the Content-Type
   * header. See the docs for iron-ajax's `body` property for details.
   *
   * @param {{
   *   url: string,
   *   method: (string|undefined),
   *   async: (boolean|undefined),
   *   body:
   * (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),
   *   headers: (Object|undefined),
   *   handleAs: (string|undefined),
   *   jsonPrefix: (string|undefined),
   *   withCredentials: (boolean|undefined),
   *   timeout: (number|undefined),
   *   rejectWithRequest: (boolean|undefined)}} options -
   *   - url The url to which the request is sent.
   *   - method The HTTP method to use, default is GET.
   *   - async By default, all requests are sent asynchronously. To send
   * synchronous requests, set to false.
   *   -  body The content for the request body for POST method.
   *   -  headers HTTP request headers.
   *   -  handleAs The response type. Default is 'text'.
   *   -  withCredentials Whether or not to send credentials on the request.
   * Default is false.
   *   -  timeout - Timeout for request, in milliseconds.
   *   -  rejectWithRequest Set to true to include the request object with
   * promise rejections.
   * @return {Promise}
   */send:function send(options){var xhr=this.xhr;if(xhr.readyState>0){return null;}xhr.addEventListener('progress',function(progress){this._setProgress({lengthComputable:progress.lengthComputable,loaded:progress.loaded,total:progress.total});// Webcomponents v1 spec does not fire *-changed events when not connected
this.fire('iron-request-progress-changed',{value:this.progress});}.bind(this));xhr.addEventListener('error',function(error){this._setErrored(true);this._updateStatus();var response=options.rejectWithRequest?{error:error,request:this}:error;this.rejectCompletes(response);}.bind(this));xhr.addEventListener('timeout',function(error){this._setTimedOut(true);this._updateStatus();var response=options.rejectWithRequest?{error:error,request:this}:error;this.rejectCompletes(response);}.bind(this));xhr.addEventListener('abort',function(){this._setAborted(true);this._updateStatus();var error=new Error('Request aborted.');var response=options.rejectWithRequest?{error:error,request:this}:error;this.rejectCompletes(response);}.bind(this));// Called after all of the above.
xhr.addEventListener('loadend',function(){this._updateStatus();this._setResponse(this.parseResponse());if(!this.succeeded){var error=new Error('The request failed with status code: '+this.xhr.status);var response=options.rejectWithRequest?{error:error,request:this}:error;this.rejectCompletes(response);return;}this.resolveCompletes(this);}.bind(this));this.url=options.url;var isXHRAsync=options.async!==false;xhr.open(options.method||'GET',options.url,isXHRAsync);var acceptType={'json':'application/json','text':'text/plain','html':'text/html','xml':'application/xml','arraybuffer':'application/octet-stream'}[options.handleAs];var headers=options.headers||Object.create(null);var newHeaders=Object.create(null);for(var key in headers){newHeaders[key.toLowerCase()]=headers[key];}headers=newHeaders;if(acceptType&&!headers['accept']){headers['accept']=acceptType;}Object.keys(headers).forEach(function(requestHeader){if(/[A-Z]/.test(requestHeader)){Base._error('Headers must be lower case, got',requestHeader);}xhr.setRequestHeader(requestHeader,headers[requestHeader]);},this);if(isXHRAsync){xhr.timeout=options.timeout;var handleAs=options.handleAs;// If a JSON prefix is present, the responseType must be 'text' or the
// browser won’t be able to parse the response.
if(!!options.jsonPrefix||!handleAs){handleAs='text';}// In IE, `xhr.responseType` is an empty string when the response
// returns. Hence, caching it as `xhr._responseType`.
xhr.responseType=xhr._responseType=handleAs;// Cache the JSON prefix, if it exists.
if(!!options.jsonPrefix){xhr._jsonPrefix=options.jsonPrefix;}}xhr.withCredentials=!!options.withCredentials;var body=this._encodeBodyObject(options.body,headers['content-type']);xhr.send(/**
                 @type {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|
                         null|string|undefined}
               */body);return this.completes;},/**
   * Attempts to parse the response body of the XHR. If parsing succeeds,
   * the value returned will be deserialized based on the `responseType`
   * set on the XHR.
   *
   * @return {*} The parsed response,
   * or undefined if there was an empty response or parsing failed.
   */parseResponse:function parseResponse(){var xhr=this.xhr;var responseType=xhr.responseType||xhr._responseType;var preferResponseText=!this.xhr.responseType;var prefixLen=xhr._jsonPrefix&&xhr._jsonPrefix.length||0;try{switch(responseType){case'json':// If the xhr object doesn't have a natural `xhr.responseType`,
// we can assume that the browser hasn't parsed the response for us,
// and so parsing is our responsibility. Likewise if response is
// undefined, as there's no way to encode undefined in JSON.
if(preferResponseText||xhr.response===undefined){// Try to emulate the JSON section of the response body section of
// the spec: https://xhr.spec.whatwg.org/#response-body
// That is to say, we try to parse as JSON, but if anything goes
// wrong return null.
try{return JSON.parse(xhr.responseText);}catch(_){console.warn('Failed to parse JSON sent from '+xhr.responseURL);return null;}}return xhr.response;case'xml':return xhr.responseXML;case'blob':case'document':case'arraybuffer':return xhr.response;case'text':default:{// If `prefixLen` is set, it implies the response should be parsed
// as JSON once the prefix of length `prefixLen` is stripped from
// it. Emulate the behavior above where null is returned on failure
// to parse.
if(prefixLen){try{return JSON.parse(xhr.responseText.substring(prefixLen));}catch(_){console.warn('Failed to parse JSON sent from '+xhr.responseURL);return null;}}return xhr.responseText;}}}catch(e){this.rejectCompletes(new Error('Could not parse response. '+e.message));}},/**
   * Aborts the request.
   */abort:function abort(){this._setAborted(true);this.xhr.abort();},/**
   * @param {*} body The given body of the request to try and encode.
   * @param {?string} contentType The given content type, to infer an encoding
   *     from.
   * @return {*} Either the encoded body as a string, if successful,
   *     or the unaltered body object if no encoding could be inferred.
   */_encodeBodyObject:function _encodeBodyObject(body,contentType){if(typeof body=='string'){return body;// Already encoded.
}var bodyObj=/** @type {Object} */body;switch(contentType){case'application/json':return JSON.stringify(bodyObj);case'application/x-www-form-urlencoded':return this._wwwFormUrlEncode(bodyObj);}return body;},/**
   * @param {Object} object The object to encode as x-www-form-urlencoded.
   * @return {string} .
   */_wwwFormUrlEncode:function _wwwFormUrlEncode(object){if(!object){return'';}var pieces=[];Object.keys(object).forEach(function(key){// TODO(rictic): handle array values here, in a consistent way with
//   iron-ajax params.
pieces.push(this._wwwFormUrlEncodePiece(key)+'='+this._wwwFormUrlEncodePiece(object[key]));},this);return pieces.join('&');},/**
   * @param {*} str A key or value to encode as x-www-form-urlencoded.
   * @return {string} .
   */_wwwFormUrlEncodePiece:function _wwwFormUrlEncodePiece(str){// Spec says to normalize newlines to \r\n and replace %20 spaces with +.
// jQuery does this as well, so this is likely to be widely compatible.
if(str===null||str===undefined||!str.toString){return'';}return encodeURIComponent(str.toString().replace(/\r?\n/g,'\r\n')).replace(/%20/g,'+');},/**
   * Updates the status code and status text.
   */_updateStatus:function _updateStatus(){this._setStatus(this.xhr.status);this._setStatusText(this.xhr.statusText===undefined?'':this.xhr.statusText);}});Polymer({is:'iron-ajax',/**
   * Fired before a request is sent.
   *
   * @event iron-ajax-presend
   */ /**
       * Fired when a request is sent.
       *
       * @event request
       */ /**
           * Fired when a request is sent.
           *
           * @event iron-ajax-request
           */ /**
               * Fired when a response is received.
               *
               * @event response
               */ /**
                   * Fired when a response is received.
                   *
                   * @event iron-ajax-response
                   */ /**
                       * Fired when an error is received.
                       *
                       * @event error
                       */ /**
                           * Fired when an error is received.
                           *
                           * @event iron-ajax-error
                           */hostAttributes:{hidden:true},properties:{/**
     * The URL target of the request.
     */url:{type:String},/**
     * An object that contains query parameters to be appended to the
     * specified `url` when generating a request. If you wish to set the body
     * content when making a POST request, you should use the `body` property
     * instead.
     */params:{type:Object,value:function value(){return{};}},/**
     * The HTTP method to use such as 'GET', 'POST', 'PUT', or 'DELETE'.
     * Default is 'GET'.
     */method:{type:String,value:'GET'},/**
     * HTTP request headers to send.
     *
     * Example:
     *
     *     <iron-ajax
     *         auto
     *         url="http://somesite.com"
     *         headers='{"X-Requested-With": "XMLHttpRequest"}'
     *         handle-as="json"></iron-ajax>
     *
     * Note: setting a `Content-Type` header here will override the value
     * specified by the `contentType` property of this element.
     */headers:{type:Object,value:function value(){return{};}},/**
     * Content type to use when sending data. If the `contentType` property
     * is set and a `Content-Type` header is specified in the `headers`
     * property, the `headers` property value will take precedence.
     *
     * Varies the handling of the `body` param.
     */contentType:{type:String,value:null},/**
     * Body content to send with the request, typically used with "POST"
     * requests.
     *
     * If body is a string it will be sent unmodified.
     *
     * If Content-Type is set to a value listed below, then
     * the body will be encoded accordingly.
     *
     *    * `content-type="application/json"`
     *      * body is encoded like `{"foo":"bar baz","x":1}`
     *    * `content-type="application/x-www-form-urlencoded"`
     *      * body is encoded like `foo=bar+baz&x=1`
     *
     * Otherwise the body will be passed to the browser unmodified, and it
     * will handle any encoding (e.g. for FormData, Blob, ArrayBuffer).
     *
     * @type
     * (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object)
     */body:{type:Object,value:null},/**
     * Toggle whether XHR is synchronous or asynchronous. Don't change this
     * to true unless You Know What You Are Doing™.
     */sync:{type:Boolean,value:false},/**
     * Specifies what data to store in the `response` property, and
     * to deliver as `event.detail.response` in `response` events.
     *
     * One of:
     *
     *    `text`: uses `XHR.responseText`.
     *
     *    `xml`: uses `XHR.responseXML`.
     *
     *    `json`: uses `XHR.responseText` parsed as JSON.
     *
     *    `arraybuffer`: uses `XHR.response`.
     *
     *    `blob`: uses `XHR.response`.
     *
     *    `document`: uses `XHR.response`.
     */handleAs:{type:String,value:'json'},/**
     * Set the withCredentials flag on the request.
     */withCredentials:{type:Boolean,value:false},/**
     * Set the timeout flag on the request.
     */timeout:{type:Number,value:0},/**
     * If true, automatically performs an Ajax request when either `url` or
     * `params` changes.
     */auto:{type:Boolean,value:false},/**
     * If true, error messages will automatically be logged to the console.
     */verbose:{type:Boolean,value:false},/**
     * The most recent request made by this iron-ajax element.
     *
     * @type {Object|undefined}
     */lastRequest:{type:Object,notify:true,readOnly:true},/**
     * The `progress` property of this element's `lastRequest`.
     *
     * @type {Object|undefined}
     */lastProgress:{type:Object,notify:true,readOnly:true},/**
     * True while lastRequest is in flight.
     */loading:{type:Boolean,notify:true,readOnly:true},/**
     * lastRequest's response.
     *
     * Note that lastResponse and lastError are set when lastRequest finishes,
     * so if loading is true, then lastResponse and lastError will correspond
     * to the result of the previous request.
     *
     * The type of the response is determined by the value of `handleAs` at
     * the time that the request was generated.
     *
     * @type {Object}
     */lastResponse:{type:Object,notify:true,readOnly:true},/**
     * lastRequest's error, if any.
     *
     * @type {Object}
     */lastError:{type:Object,notify:true,readOnly:true},/**
     * An Array of all in-flight requests originating from this iron-ajax
     * element.
     */activeRequests:{type:Array,notify:true,readOnly:true,value:function value(){return[];}},/**
     * Length of time in milliseconds to debounce multiple automatically
     * generated requests.
     */debounceDuration:{type:Number,value:0,notify:true},/**
     * Prefix to be stripped from a JSON response before parsing it.
     *
     * In order to prevent an attack using CSRF with Array responses
     * (http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx/)
     * many backends will mitigate this by prefixing all JSON response bodies
     * with a string that would be nonsensical to a JavaScript parser.
     *
     */jsonPrefix:{type:String,value:''},/**
     * By default, iron-ajax's events do not bubble. Setting this attribute will
     * cause its request and response events as well as its iron-ajax-request,
     * -response,  and -error events to bubble to the window object. The vanilla
     * error event never bubbles when using shadow dom even if this.bubbles is
     * true because a scoped flag is not passed with it (first link) and because
     * the shadow dom spec did not used to allow certain events, including
     * events named error, to leak outside of shadow trees (second link).
     * https://www.w3.org/TR/shadow-dom/#scoped-flag
     * https://www.w3.org/TR/2015/WD-shadow-dom-20151215/#events-that-are-not-leaked-into-ancestor-trees
     */bubbles:{type:Boolean,value:false},/**
     * Changes the [`completes`](iron-request#property-completes) promise chain
     * from `generateRequest` to reject with an object
     * containing the original request, as well an error message.
     * If false (default), the promise rejects with an error message only.
     */rejectWithRequest:{type:Boolean,value:false},_boundHandleResponse:{type:Function,value:function value(){return this._handleResponse.bind(this);}}},observers:['_requestOptionsChanged(url, method, params.*, headers, contentType, '+'body, sync, handleAs, jsonPrefix, withCredentials, timeout, auto)'],created:function created(){this._boundOnProgressChanged=this._onProgressChanged.bind(this);},/**
   * The query string that should be appended to the `url`, serialized from
   * the current value of `params`.
   *
   * @return {string}
   */get queryString(){var queryParts=[];var param;var value;for(param in this.params){value=this.params[param];param=window.encodeURIComponent(param);if(Array.isArray(value)){for(var i=0;i<value.length;i++){queryParts.push(param+'='+window.encodeURIComponent(value[i]));}}else if(value!==null){queryParts.push(param+'='+window.encodeURIComponent(value));}else{queryParts.push(param);}}return queryParts.join('&');},/**
   * The `url` with query string (if `params` are specified), suitable for
   * providing to an `iron-request` instance.
   *
   * @return {string}
   */get requestUrl(){var queryString=this.queryString;var url=this.url||'';if(queryString){var bindingChar=url.indexOf('?')>=0?'&':'?';return url+bindingChar+queryString;}return url;},/**
   * An object that maps header names to header values, first applying the
   * the value of `Content-Type` and then overlaying the headers specified
   * in the `headers` property.
   *
   * @return {Object}
   */get requestHeaders(){var headers={};var contentType=this.contentType;if(contentType==null&&typeof this.body==='string'){contentType='application/x-www-form-urlencoded';}if(contentType){headers['content-type']=contentType;}var header;if(babelHelpers.typeof(this.headers)==='object'){for(header in this.headers){headers[header]=this.headers[header].toString();}}return headers;},_onProgressChanged:function _onProgressChanged(event){this._setLastProgress(event.detail.value);},/**
   * Request options suitable for generating an `iron-request` instance based
   * on the current state of the `iron-ajax` instance's properties.
   *
   * @return {{
   *   url: string,
   *   method: (string|undefined),
   *   async: (boolean|undefined),
   *   body:
   * (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),
   *   headers: (Object|undefined),
   *   handleAs: (string|undefined),
   *   jsonPrefix: (string|undefined),
   *   withCredentials: (boolean|undefined)}}
   */toRequestOptions:function toRequestOptions(){return{url:this.requestUrl||'',method:this.method,headers:this.requestHeaders,body:this.body,async:!this.sync,handleAs:this.handleAs,jsonPrefix:this.jsonPrefix,withCredentials:this.withCredentials,timeout:this.timeout,rejectWithRequest:this.rejectWithRequest};},/**
   * Performs an AJAX request to the specified URL.
   *
   * @return {!IronRequestElement}
   */generateRequest:function generateRequest(){var request=/** @type {!IronRequestElement} */document.createElement('iron-request');var requestOptions=this.toRequestOptions();this.push('activeRequests',request);request.completes.then(this._boundHandleResponse).catch(this._handleError.bind(this,request)).then(this._discardRequest.bind(this,request));var evt=this.fire('iron-ajax-presend',{request:request,options:requestOptions},{bubbles:this.bubbles,cancelable:true});if(evt.defaultPrevented){request.abort();request.rejectCompletes(request);return request;}if(this.lastRequest){this.lastRequest.removeEventListener('iron-request-progress-changed',this._boundOnProgressChanged);}request.addEventListener('iron-request-progress-changed',this._boundOnProgressChanged);request.send(requestOptions);this._setLastProgress(null);this._setLastRequest(request);this._setLoading(true);this.fire('request',{request:request,options:requestOptions},{bubbles:this.bubbles,composed:true});this.fire('iron-ajax-request',{request:request,options:requestOptions},{bubbles:this.bubbles,composed:true});return request;},_handleResponse:function _handleResponse(request){if(request===this.lastRequest){this._setLastResponse(request.response);this._setLastError(null);this._setLoading(false);}this.fire('response',request,{bubbles:this.bubbles,composed:true});this.fire('iron-ajax-response',request,{bubbles:this.bubbles,composed:true});},_handleError:function _handleError(request,error){if(this.verbose){Base._error(error);}if(request===this.lastRequest){this._setLastError({request:request,error:error,status:request.xhr.status,statusText:request.xhr.statusText,response:request.xhr.response});this._setLastResponse(null);this._setLoading(false);}// Tests fail if this goes after the normal this.fire('error', ...)
this.fire('iron-ajax-error',{request:request,error:error},{bubbles:this.bubbles,composed:true});this.fire('error',{request:request,error:error},{bubbles:this.bubbles,composed:true});},_discardRequest:function _discardRequest(request){var requestIndex=this.activeRequests.indexOf(request);if(requestIndex>-1){this.splice('activeRequests',requestIndex,1);}},_requestOptionsChanged:function _requestOptionsChanged(){this.debounce('generate-request',function(){if(this.url==null){return;}if(this.auto){this.generateRequest();}},this.debounceDuration);}});var IronControlState={properties:{/**
     * If true, the element currently has focus.
     */focused:{type:Boolean,value:false,notify:true,readOnly:true,reflectToAttribute:true},/**
     * If true, the user cannot interact with this element.
     */disabled:{type:Boolean,value:false,notify:true,observer:'_disabledChanged',reflectToAttribute:true},/**
     * Value of the `tabindex` attribute before `disabled` was activated.
     * `null` means the attribute was not present.
     * @type {?string|undefined}
     */_oldTabIndex:{type:String},_boundFocusBlurHandler:{type:Function,value:function value(){return this._focusBlurHandler.bind(this);}}},observers:['_changedControlState(focused, disabled)'],/**
   * @return {void}
   */ready:function ready(){this.addEventListener('focus',this._boundFocusBlurHandler,true);this.addEventListener('blur',this._boundFocusBlurHandler,true);},_focusBlurHandler:function _focusBlurHandler(event){// Polymer takes care of retargeting events.
this._setFocused(event.type==='focus');return;},_disabledChanged:function _disabledChanged(disabled,old){this.setAttribute('aria-disabled',disabled?'true':'false');this.style.pointerEvents=disabled?'none':'';if(disabled){// Read the `tabindex` attribute instead of the `tabIndex` property.
// The property returns `-1` if there is no `tabindex` attribute.
// This distinction is important when restoring the value because
// leaving `-1` hides shadow root children from the tab order.
this._oldTabIndex=this.getAttribute('tabindex');this._setFocused(false);this.tabIndex=-1;this.blur();}else if(this._oldTabIndex!==undefined){if(this._oldTabIndex===null){this.removeAttribute('tabindex');}else{this.setAttribute('tabindex',this._oldTabIndex);}}},_changedControlState:function _changedControlState(){// _controlStateChanged is abstract, follow-on behaviors may implement it
if(this._controlStateChanged){this._controlStateChanged();}}};_exports.IronControlState=IronControlState;var ironControlState={__proto__:null,IronControlState:IronControlState};_exports.$ironControlState=ironControlState;var IronButtonStateImpl={properties:{/**
     * If true, the user is currently holding down the button.
     */pressed:{type:Boolean,readOnly:true,value:false,reflectToAttribute:true,observer:'_pressedChanged'},/**
     * If true, the button toggles the active state with each tap or press
     * of the spacebar.
     */toggles:{type:Boolean,value:false,reflectToAttribute:true},/**
     * If true, the button is a toggle and is currently in the active state.
     */active:{type:Boolean,value:false,notify:true,reflectToAttribute:true},/**
     * True if the element is currently being pressed by a "pointer," which
     * is loosely defined as mouse or touch input (but specifically excluding
     * keyboard input).
     */pointerDown:{type:Boolean,readOnly:true,value:false},/**
     * True if the input device that caused the element to receive focus
     * was a keyboard.
     */receivedFocusFromKeyboard:{type:Boolean,readOnly:true},/**
     * The aria attribute to be set if the button is a toggle and in the
     * active state.
     */ariaActiveAttribute:{type:String,value:'aria-pressed',observer:'_ariaActiveAttributeChanged'}},listeners:{down:'_downHandler',up:'_upHandler',tap:'_tapHandler'},observers:['_focusChanged(focused)','_activeChanged(active, ariaActiveAttribute)'],/**
   * @type {!Object}
   */keyBindings:{'enter:keydown':'_asyncClick','space:keydown':'_spaceKeyDownHandler','space:keyup':'_spaceKeyUpHandler'},_mouseEventRe:/^mouse/,_tapHandler:function _tapHandler(){if(this.toggles){// a tap is needed to toggle the active state
this._userActivate(!this.active);}else{this.active=false;}},_focusChanged:function _focusChanged(focused){this._detectKeyboardFocus(focused);if(!focused){this._setPressed(false);}},_detectKeyboardFocus:function _detectKeyboardFocus(focused){this._setReceivedFocusFromKeyboard(!this.pointerDown&&focused);},// to emulate native checkbox, (de-)activations from a user interaction fire
// 'change' events
_userActivate:function _userActivate(active){if(this.active!==active){this.active=active;this.fire('change');}},_downHandler:function _downHandler(event){this._setPointerDown(true);this._setPressed(true);this._setReceivedFocusFromKeyboard(false);},_upHandler:function _upHandler(){this._setPointerDown(false);this._setPressed(false);},/**
   * @param {!KeyboardEvent} event .
   */_spaceKeyDownHandler:function _spaceKeyDownHandler(event){var keyboardEvent=event.detail.keyboardEvent;var target=dom(keyboardEvent).localTarget;// Ignore the event if this is coming from a focused light child, since that
// element will deal with it.
if(this.isLightDescendant(/** @type {Node} */target))return;keyboardEvent.preventDefault();keyboardEvent.stopImmediatePropagation();this._setPressed(true);},/**
   * @param {!KeyboardEvent} event .
   */_spaceKeyUpHandler:function _spaceKeyUpHandler(event){var keyboardEvent=event.detail.keyboardEvent;var target=dom(keyboardEvent).localTarget;// Ignore the event if this is coming from a focused light child, since that
// element will deal with it.
if(this.isLightDescendant(/** @type {Node} */target))return;if(this.pressed){this._asyncClick();}this._setPressed(false);},// trigger click asynchronously, the asynchrony is useful to allow one
// event handler to unwind before triggering another event
_asyncClick:function _asyncClick(){this.async(function(){this.click();},1);},// any of these changes are considered a change to button state
_pressedChanged:function _pressedChanged(pressed){this._changedButtonState();},_ariaActiveAttributeChanged:function _ariaActiveAttributeChanged(value,oldValue){if(oldValue&&oldValue!=value&&this.hasAttribute(oldValue)){this.removeAttribute(oldValue);}},_activeChanged:function _activeChanged(active,ariaActiveAttribute){if(this.toggles){this.setAttribute(this.ariaActiveAttribute,active?'true':'false');}else{this.removeAttribute(this.ariaActiveAttribute);}this._changedButtonState();},_controlStateChanged:function _controlStateChanged(){if(this.disabled){this._setPressed(false);}else{this._changedButtonState();}},// provide hook for follow-on behaviors to react to button-state
_changedButtonState:function _changedButtonState(){if(this._buttonStateChanged){this._buttonStateChanged();// abstract
}}};/** @polymerBehavior */_exports.IronButtonStateImpl=IronButtonStateImpl;var IronButtonState=[IronA11yKeysBehavior,IronButtonStateImpl];_exports.IronButtonState=IronButtonState;var ironButtonState={__proto__:null,IronButtonStateImpl:IronButtonStateImpl,IronButtonState:IronButtonState};_exports.$ironButtonState=ironButtonState;var IronFitBehavior={properties:{/**
     * The element that will receive a `max-height`/`width`. By default it is
     * the same as `this`, but it can be set to a child element. This is useful,
     * for example, for implementing a scrolling region inside the element.
     * @type {!Element}
     */sizingTarget:{type:Object,value:function value(){return this;}},/**
     * The element to fit `this` into.
     */fitInto:{type:Object,value:window},/**
     * Will position the element around the positionTarget without overlapping
     * it.
     */noOverlap:{type:Boolean},/**
     * The element that should be used to position the element. If not set, it
     * will default to the parent node.
     * @type {!Element}
     */positionTarget:{type:Element},/**
     * The orientation against which to align the element horizontally
     * relative to the `positionTarget`. Possible values are "left", "right",
     * "center", "auto".
     */horizontalAlign:{type:String},/**
     * The orientation against which to align the element vertically
     * relative to the `positionTarget`. Possible values are "top", "bottom",
     * "middle", "auto".
     */verticalAlign:{type:String},/**
     * If true, it will use `horizontalAlign` and `verticalAlign` values as
     * preferred alignment and if there's not enough space, it will pick the
     * values which minimize the cropping.
     */dynamicAlign:{type:Boolean},/**
     * A pixel value that will be added to the position calculated for the
     * given `horizontalAlign`, in the direction of alignment. You can think
     * of it as increasing or decreasing the distance to the side of the
     * screen given by `horizontalAlign`.
     *
     * If `horizontalAlign` is "left" or "center", this offset will increase or
     * decrease the distance to the left side of the screen: a negative offset
     * will move the dropdown to the left; a positive one, to the right.
     *
     * Conversely if `horizontalAlign` is "right", this offset will increase
     * or decrease the distance to the right side of the screen: a negative
     * offset will move the dropdown to the right; a positive one, to the left.
     */horizontalOffset:{type:Number,value:0,notify:true},/**
     * A pixel value that will be added to the position calculated for the
     * given `verticalAlign`, in the direction of alignment. You can think
     * of it as increasing or decreasing the distance to the side of the
     * screen given by `verticalAlign`.
     *
     * If `verticalAlign` is "top" or "middle", this offset will increase or
     * decrease the distance to the top side of the screen: a negative offset
     * will move the dropdown upwards; a positive one, downwards.
     *
     * Conversely if `verticalAlign` is "bottom", this offset will increase
     * or decrease the distance to the bottom side of the screen: a negative
     * offset will move the dropdown downwards; a positive one, upwards.
     */verticalOffset:{type:Number,value:0,notify:true},/**
     * Set to true to auto-fit on attach.
     */autoFitOnAttach:{type:Boolean,value:false},/** @type {?Object} */_fitInfo:{type:Object}},get _fitWidth(){var fitWidth;if(this.fitInto===window){fitWidth=this.fitInto.innerWidth;}else{fitWidth=this.fitInto.getBoundingClientRect().width;}return fitWidth;},get _fitHeight(){var fitHeight;if(this.fitInto===window){fitHeight=this.fitInto.innerHeight;}else{fitHeight=this.fitInto.getBoundingClientRect().height;}return fitHeight;},get _fitLeft(){var fitLeft;if(this.fitInto===window){fitLeft=0;}else{fitLeft=this.fitInto.getBoundingClientRect().left;}return fitLeft;},get _fitTop(){var fitTop;if(this.fitInto===window){fitTop=0;}else{fitTop=this.fitInto.getBoundingClientRect().top;}return fitTop;},/**
   * The element that should be used to position the element,
   * if no position target is configured.
   */get _defaultPositionTarget(){var parent=dom(this).parentNode;if(parent&&parent.nodeType===Node.DOCUMENT_FRAGMENT_NODE){parent=parent.host;}return parent;},/**
   * The horizontal align value, accounting for the RTL/LTR text direction.
   */get _localeHorizontalAlign(){if(this._isRTL){// In RTL, "left" becomes "right".
if(this.horizontalAlign==='right'){return'left';}if(this.horizontalAlign==='left'){return'right';}}return this.horizontalAlign;},/**
   * True if the element should be positioned instead of centered.
   * @private
   */get __shouldPosition(){return(this.horizontalAlign||this.verticalAlign)&&this.positionTarget;},attached:function attached(){// Memoize this to avoid expensive calculations & relayouts.
// Make sure we do it only once
if(typeof this._isRTL==='undefined'){this._isRTL=window.getComputedStyle(this).direction=='rtl';}this.positionTarget=this.positionTarget||this._defaultPositionTarget;if(this.autoFitOnAttach){if(window.getComputedStyle(this).display==='none'){setTimeout(function(){this.fit();}.bind(this));}else{// NOTE: shadydom applies distribution asynchronously
// for performance reasons webcomponents/shadydom#120
// Flush to get correct layout info.
window.ShadyDOM&&ShadyDOM.flush();this.fit();}}},detached:function detached(){if(this.__deferredFit){clearTimeout(this.__deferredFit);this.__deferredFit=null;}},/**
   * Positions and fits the element into the `fitInto` element.
   */fit:function fit(){this.position();this.constrain();this.center();},/**
   * Memoize information needed to position and size the target element.
   * @suppress {deprecated}
   */_discoverInfo:function _discoverInfo(){if(this._fitInfo){return;}var target=window.getComputedStyle(this);var sizer=window.getComputedStyle(this.sizingTarget);this._fitInfo={inlineStyle:{top:this.style.top||'',left:this.style.left||'',position:this.style.position||''},sizerInlineStyle:{maxWidth:this.sizingTarget.style.maxWidth||'',maxHeight:this.sizingTarget.style.maxHeight||'',boxSizing:this.sizingTarget.style.boxSizing||''},positionedBy:{vertically:target.top!=='auto'?'top':target.bottom!=='auto'?'bottom':null,horizontally:target.left!=='auto'?'left':target.right!=='auto'?'right':null},sizedBy:{height:sizer.maxHeight!=='none',width:sizer.maxWidth!=='none',minWidth:parseInt(sizer.minWidth,10)||0,minHeight:parseInt(sizer.minHeight,10)||0},margin:{top:parseInt(target.marginTop,10)||0,right:parseInt(target.marginRight,10)||0,bottom:parseInt(target.marginBottom,10)||0,left:parseInt(target.marginLeft,10)||0}};},/**
   * Resets the target element's position and size constraints, and clear
   * the memoized data.
   */resetFit:function resetFit(){var info=this._fitInfo||{};for(var property in info.sizerInlineStyle){this.sizingTarget.style[property]=info.sizerInlineStyle[property];}for(var property in info.inlineStyle){this.style[property]=info.inlineStyle[property];}this._fitInfo=null;},/**
   * Equivalent to calling `resetFit()` and `fit()`. Useful to call this after
   * the element or the `fitInto` element has been resized, or if any of the
   * positioning properties (e.g. `horizontalAlign, verticalAlign`) is updated.
   * It preserves the scroll position of the sizingTarget.
   */refit:function refit(){var scrollLeft=this.sizingTarget.scrollLeft;var scrollTop=this.sizingTarget.scrollTop;this.resetFit();this.fit();this.sizingTarget.scrollLeft=scrollLeft;this.sizingTarget.scrollTop=scrollTop;},/**
   * Positions the element according to `horizontalAlign, verticalAlign`.
   */position:function position(){if(!this.__shouldPosition){// needs to be centered, and it is done after constrain.
return;}this._discoverInfo();this.style.position='fixed';// Need border-box for margin/padding.
this.sizingTarget.style.boxSizing='border-box';// Set to 0, 0 in order to discover any offset caused by parent stacking
// contexts.
this.style.left='0px';this.style.top='0px';var rect=this.getBoundingClientRect();var positionRect=this.__getNormalizedRect(this.positionTarget);var fitRect=this.__getNormalizedRect(this.fitInto);var margin=this._fitInfo.margin;// Consider the margin as part of the size for position calculations.
var size={width:rect.width+margin.left+margin.right,height:rect.height+margin.top+margin.bottom};var position=this.__getPosition(this._localeHorizontalAlign,this.verticalAlign,size,rect,positionRect,fitRect);var left=position.left+margin.left;var top=position.top+margin.top;// We first limit right/bottom within fitInto respecting the margin,
// then use those values to limit top/left.
var right=Math.min(fitRect.right-margin.right,left+rect.width);var bottom=Math.min(fitRect.bottom-margin.bottom,top+rect.height);// Keep left/top within fitInto respecting the margin.
left=Math.max(fitRect.left+margin.left,Math.min(left,right-this._fitInfo.sizedBy.minWidth));top=Math.max(fitRect.top+margin.top,Math.min(top,bottom-this._fitInfo.sizedBy.minHeight));// Use right/bottom to set maxWidth/maxHeight, and respect
// minWidth/minHeight.
this.sizingTarget.style.maxWidth=Math.max(right-left,this._fitInfo.sizedBy.minWidth)+'px';this.sizingTarget.style.maxHeight=Math.max(bottom-top,this._fitInfo.sizedBy.minHeight)+'px';// Remove the offset caused by any stacking context.
this.style.left=left-rect.left+'px';this.style.top=top-rect.top+'px';},/**
   * Constrains the size of the element to `fitInto` by setting `max-height`
   * and/or `max-width`.
   */constrain:function constrain(){if(this.__shouldPosition){return;}this._discoverInfo();var info=this._fitInfo;// position at (0px, 0px) if not already positioned, so we can measure the
// natural size.
if(!info.positionedBy.vertically){this.style.position='fixed';this.style.top='0px';}if(!info.positionedBy.horizontally){this.style.position='fixed';this.style.left='0px';}// need border-box for margin/padding
this.sizingTarget.style.boxSizing='border-box';// constrain the width and height if not already set
var rect=this.getBoundingClientRect();if(!info.sizedBy.height){this.__sizeDimension(rect,info.positionedBy.vertically,'top','bottom','Height');}if(!info.sizedBy.width){this.__sizeDimension(rect,info.positionedBy.horizontally,'left','right','Width');}},/**
   * @protected
   * @deprecated
   */_sizeDimension:function _sizeDimension(rect,positionedBy,start,end,extent){this.__sizeDimension(rect,positionedBy,start,end,extent);},/**
   * @private
   */__sizeDimension:function __sizeDimension(rect,positionedBy,start,end,extent){var info=this._fitInfo;var fitRect=this.__getNormalizedRect(this.fitInto);var max=extent==='Width'?fitRect.width:fitRect.height;var flip=positionedBy===end;var offset=flip?max-rect[end]:rect[start];var margin=info.margin[flip?start:end];var offsetExtent='offset'+extent;var sizingOffset=this[offsetExtent]-this.sizingTarget[offsetExtent];this.sizingTarget.style['max'+extent]=max-margin-offset-sizingOffset+'px';},/**
   * Centers horizontally and vertically if not already positioned. This also
   * sets `position:fixed`.
   */center:function center(){if(this.__shouldPosition){return;}this._discoverInfo();var positionedBy=this._fitInfo.positionedBy;if(positionedBy.vertically&&positionedBy.horizontally){// Already positioned.
return;}// Need position:fixed to center
this.style.position='fixed';// Take into account the offset caused by parents that create stacking
// contexts (e.g. with transform: translate3d). Translate to 0,0 and
// measure the bounding rect.
if(!positionedBy.vertically){this.style.top='0px';}if(!positionedBy.horizontally){this.style.left='0px';}// It will take in consideration margins and transforms
var rect=this.getBoundingClientRect();var fitRect=this.__getNormalizedRect(this.fitInto);if(!positionedBy.vertically){var top=fitRect.top-rect.top+(fitRect.height-rect.height)/2;this.style.top=top+'px';}if(!positionedBy.horizontally){var left=fitRect.left-rect.left+(fitRect.width-rect.width)/2;this.style.left=left+'px';}},__getNormalizedRect:function __getNormalizedRect(target){if(target===document.documentElement||target===window){return{top:0,left:0,width:window.innerWidth,height:window.innerHeight,right:window.innerWidth,bottom:window.innerHeight};}return target.getBoundingClientRect();},__getOffscreenArea:function __getOffscreenArea(position,size,fitRect){var verticalCrop=Math.min(0,position.top)+Math.min(0,fitRect.bottom-(position.top+size.height));var horizontalCrop=Math.min(0,position.left)+Math.min(0,fitRect.right-(position.left+size.width));return Math.abs(verticalCrop)*size.width+Math.abs(horizontalCrop)*size.height;},__getPosition:function __getPosition(hAlign,vAlign,size,sizeNoMargins,positionRect,fitRect){// All the possible configurations.
// Ordered as top-left, top-right, bottom-left, bottom-right.
var positions=[{verticalAlign:'top',horizontalAlign:'left',top:positionRect.top+this.verticalOffset,left:positionRect.left+this.horizontalOffset},{verticalAlign:'top',horizontalAlign:'right',top:positionRect.top+this.verticalOffset,left:positionRect.right-size.width-this.horizontalOffset},{verticalAlign:'bottom',horizontalAlign:'left',top:positionRect.bottom-size.height-this.verticalOffset,left:positionRect.left+this.horizontalOffset},{verticalAlign:'bottom',horizontalAlign:'right',top:positionRect.bottom-size.height-this.verticalOffset,left:positionRect.right-size.width-this.horizontalOffset}];if(this.noOverlap){// Duplicate.
for(var i=0,l=positions.length;i<l;i++){var copy={};for(var key in positions[i]){copy[key]=positions[i][key];}positions.push(copy);}// Horizontal overlap only.
positions[0].top=positions[1].top+=positionRect.height;positions[2].top=positions[3].top-=positionRect.height;// Vertical overlap only.
positions[4].left=positions[6].left+=positionRect.width;positions[5].left=positions[7].left-=positionRect.width;}// Consider auto as null for coding convenience.
vAlign=vAlign==='auto'?null:vAlign;hAlign=hAlign==='auto'?null:hAlign;if(!hAlign||hAlign==='center'){positions.push({verticalAlign:'top',horizontalAlign:'center',top:positionRect.top+this.verticalOffset+(this.noOverlap?positionRect.height:0),left:positionRect.left-sizeNoMargins.width/2+positionRect.width/2+this.horizontalOffset});positions.push({verticalAlign:'bottom',horizontalAlign:'center',top:positionRect.bottom-size.height-this.verticalOffset-(this.noOverlap?positionRect.height:0),left:positionRect.left-sizeNoMargins.width/2+positionRect.width/2+this.horizontalOffset});}if(!vAlign||vAlign==='middle'){positions.push({verticalAlign:'middle',horizontalAlign:'left',top:positionRect.top-sizeNoMargins.height/2+positionRect.height/2+this.verticalOffset,left:positionRect.left+this.horizontalOffset+(this.noOverlap?positionRect.width:0)});positions.push({verticalAlign:'middle',horizontalAlign:'right',top:positionRect.top-sizeNoMargins.height/2+positionRect.height/2+this.verticalOffset,left:positionRect.right-size.width-this.horizontalOffset-(this.noOverlap?positionRect.width:0)});}if(vAlign==='middle'&&hAlign==='center'){positions.push({verticalAlign:'middle',horizontalAlign:'center',top:positionRect.top-sizeNoMargins.height/2+positionRect.height/2+this.verticalOffset,left:positionRect.left-sizeNoMargins.width/2+positionRect.width/2+this.horizontalOffset});}var position;for(var i=0;i<positions.length;i++){var candidate=positions[i];var vAlignOk=candidate.verticalAlign===vAlign;var hAlignOk=candidate.horizontalAlign===hAlign;// If both vAlign and hAlign are defined, return exact match.
// For dynamicAlign and noOverlap we'll have more than one candidate, so
// we'll have to check the offscreenArea to make the best choice.
if(!this.dynamicAlign&&!this.noOverlap&&vAlignOk&&hAlignOk){position=candidate;break;}// Align is ok if alignment preferences are respected. If no preferences,
// it is considered ok.
var alignOk=(!vAlign||vAlignOk)&&(!hAlign||hAlignOk);// Filter out elements that don't match the alignment (if defined).
// With dynamicAlign, we need to consider all the positions to find the
// one that minimizes the cropped area.
if(!this.dynamicAlign&&!alignOk){continue;}candidate.offscreenArea=this.__getOffscreenArea(candidate,size,fitRect);// If not cropped and respects the align requirements, keep it.
// This allows to prefer positions overlapping horizontally over the
// ones overlapping vertically.
if(candidate.offscreenArea===0&&alignOk){position=candidate;break;}position=position||candidate;var diff=candidate.offscreenArea-position.offscreenArea;// Check which crops less. If it crops equally, check if at least one
// align setting is ok.
if(diff<0||diff===0&&(vAlignOk||hAlignOk)){position=candidate;}}return position;}};_exports.IronFitBehavior=IronFitBehavior;var ironFitBehavior={__proto__:null,IronFitBehavior:IronFitBehavior};_exports.$ironFitBehavior=ironFitBehavior;var template=html(_templateObject2_d98ac2c0a07c11eaa53fe90f40c8b4df());template.setAttribute('style','display: none;');document.head.appendChild(template.content);var template$1=html(_templateObject3_d98ac2c0a07c11eaa53fe90f40c8b4df());template$1.setAttribute('style','display: none;');document.head.appendChild(template$1.content);var style=document.createElement('style');style.textContent='[hidden] { display: none !important; }';document.head.appendChild(style);var IronFormElementBehavior={properties:{/**
     * The name of this element.
     */name:{type:String},/**
     * The value for this element.
     * @type {*}
     */value:{notify:true,type:String},/**
     * Set to true to mark the input as required. If used in a form, a
     * custom element that uses this behavior should also use
     * IronValidatableBehavior and define a custom validation method.
     * Otherwise, a `required` element will always be considered valid.
     * It's also strongly recommended to provide a visual style for the element
     * when its value is invalid.
     */required:{type:Boolean,value:false}},// Empty implementations for backcompatibility.
attached:function attached(){},detached:function detached(){}};_exports.IronFormElementBehavior=IronFormElementBehavior;var ironFormElementBehavior={__proto__:null,IronFormElementBehavior:IronFormElementBehavior};_exports.$ironFormElementBehavior=ironFormElementBehavior;var IronMeta=/*#__PURE__*/function(){/**
   * @param {{
   *   type: (string|null|undefined),
   *   key: (string|null|undefined),
   *   value: *,
   * }=} options
   */function IronMeta(options){babelHelpers.classCallCheck(this,IronMeta);IronMeta[' '](options);/** @type {string} */this.type=options&&options.type||'default';/** @type {string|null|undefined} */this.key=options&&options.key;if(options&&'value'in options){/** @type {*} */this.value=options.value;}}/** @return {*} */babelHelpers.createClass(IronMeta,[{key:"byKey",/**
     * @param {string} key
     * @return {*}
     */value:function byKey(key){this.key=key;return this.value;}},{key:"value",get:function get(){var type=this.type;var key=this.key;if(type&&key){return IronMeta.types[type]&&IronMeta.types[type][key];}}/** @param {*} value */,set:function set(value){var type=this.type;var key=this.key;if(type&&key){type=IronMeta.types[type]=IronMeta.types[type]||{};if(value==null){delete type[key];}else{type[key]=value;}}}/** @return {!Array<*>} */},{key:"list",get:function get(){var type=this.type;if(type){var items=IronMeta.types[this.type];if(!items){return[];}return Object.keys(items).map(function(key){return metaDatas[this.type][key];},this);}}}]);return IronMeta;}();_exports.IronMeta=IronMeta;;// This function is used to convince Closure not to remove constructor calls
// for instances that are not held anywhere. For example, when
// `new IronMeta({...})` is used only for the side effect of adding a value.
IronMeta[' ']=function(){};IronMeta.types={};var metaDatas=IronMeta.types;/**
                                `iron-meta` is a generic element you can use for sharing information across the
                                DOM tree. It uses [monostate pattern](http://c2.com/cgi/wiki?MonostatePattern)
                                such that any instance of iron-meta has access to the shared information. You
                                can use `iron-meta` to share whatever you want (or create an extension [like
                                x-meta] for enhancements).
                                
                                The `iron-meta` instances containing your actual data can be loaded in an
                                import, or constructed in any way you see fit. The only requirement is that you
                                create them before you try to access them.
                                
                                Examples:
                                
                                If I create an instance like this:
                                
                                    <iron-meta key="info" value="foo/bar"></iron-meta>
                                
                                Note that value="foo/bar" is the metadata I've defined. I could define more
                                attributes or use child nodes to define additional metadata.
                                
                                Now I can access that element (and it's metadata) from any iron-meta instance
                                via the byKey method, e.g.
                                
                                    meta.byKey('info');
                                
                                Pure imperative form would be like:
                                
                                    document.createElement('iron-meta').byKey('info');
                                
                                Or, in a Polymer element, you can include a meta in your template:
                                
                                    <iron-meta id="meta"></iron-meta>
                                    ...
                                    this.$.meta.byKey('info');
                                
                                @group Iron Elements
                                @demo demo/index.html
                                @element iron-meta
                                */Polymer({is:'iron-meta',properties:{/**
     * The type of meta-data.  All meta-data of the same type is stored
     * together.
     * @type {string}
     */type:{type:String,value:'default'},/**
     * The key used to store `value` under the `type` namespace.
     * @type {?string}
     */key:{type:String},/**
     * The meta-data to store or retrieve.
     * @type {*}
     */value:{type:String,notify:true},/**
     * If true, `value` is set to the iron-meta instance itself.
     */self:{type:Boolean,observer:'_selfChanged'},__meta:{type:Boolean,computed:'__computeMeta(type, key, value)'}},hostAttributes:{hidden:true},__computeMeta:function __computeMeta(type,key,value){var meta=new IronMeta({type:type,key:key});if(value!==undefined&&value!==meta.value){meta.value=value;}else if(this.value!==meta.value){this.value=meta.value;}return meta;},get list(){return this.__meta&&this.__meta.list;},_selfChanged:function _selfChanged(self){if(self){this.value=this;}},/**
   * Retrieves meta data value by key.
   *
   * @method byKey
   * @param {string} key The key of the meta-data to be returned.
   * @return {*}
   */byKey:function byKey(key){return new IronMeta({type:this.type,key:key}).value;}});var ironMeta={__proto__:null,IronMeta:IronMeta};_exports.$ironMeta=ironMeta;Polymer({_template:html(_templateObject4_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'iron-icon',properties:{/**
     * The name of the icon to use. The name should be of the form:
     * `iconset_name:icon_name`.
     */icon:{type:String},/**
     * The name of the theme to used, if one is specified by the
     * iconset.
     */theme:{type:String},/**
     * If using iron-icon without an iconset, you can set the src to be
     * the URL of an individual icon image file. Note that this will take
     * precedence over a given icon attribute.
     */src:{type:String},/**
     * @type {!IronMeta}
     */_meta:{value:Base.create('iron-meta',{type:'iconset'})}},observers:['_updateIcon(_meta, isAttached)','_updateIcon(theme, isAttached)','_srcChanged(src, isAttached)','_iconChanged(icon, isAttached)'],_DEFAULT_ICONSET:'icons',_iconChanged:function _iconChanged(icon){var parts=(icon||'').split(':');this._iconName=parts.pop();this._iconsetName=parts.pop()||this._DEFAULT_ICONSET;this._updateIcon();},_srcChanged:function _srcChanged(src){this._updateIcon();},_usesIconset:function _usesIconset(){return this.icon||!this.src;},/** @suppress {visibility} */_updateIcon:function _updateIcon(){if(this._usesIconset()){if(this._img&&this._img.parentNode){dom(this.root).removeChild(this._img);}if(this._iconName===''){if(this._iconset){this._iconset.removeIcon(this);}}else if(this._iconsetName&&this._meta){this._iconset=/** @type {?Polymer.Iconset} */this._meta.byKey(this._iconsetName);if(this._iconset){this._iconset.applyIcon(this,this._iconName,this.theme);this.unlisten(window,'iron-iconset-added','_updateIcon');}else{this.listen(window,'iron-iconset-added','_updateIcon');}}}else{if(this._iconset){this._iconset.removeIcon(this);}if(!this._img){this._img=document.createElement('img');this._img.style.width='100%';this._img.style.height='100%';this._img.draggable=false;}this._img.src=this.src;dom(this.root).appendChild(this._img);}}});Polymer({is:'iron-iconset-svg',properties:{/**
     * The name of the iconset.
     */name:{type:String,observer:'_nameChanged'},/**
     * The size of an individual icon. Note that icons must be square.
     */size:{type:Number,value:24},/**
     * Set to true to enable mirroring of icons where specified when they are
     * stamped. Icons that should be mirrored should be decorated with a
     * `mirror-in-rtl` attribute.
     *
     * NOTE: For performance reasons, direction will be resolved once per
     * document per iconset, so moving icons in and out of RTL subtrees will
     * not cause their mirrored state to change.
     */rtlMirroring:{type:Boolean,value:false},/**
     * Set to true to measure RTL based on the dir attribute on the body or
     * html elements (measured on document.body or document.documentElement as
     * available).
     */useGlobalRtlAttribute:{type:Boolean,value:false}},created:function created(){this._meta=new IronMeta({type:'iconset',key:null,value:null});},attached:function attached(){this.style.display='none';},/**
   * Construct an array of all icon names in this iconset.
   *
   * @return {!Array} Array of icon names.
   */getIconNames:function getIconNames(){this._icons=this._createIconMap();return Object.keys(this._icons).map(function(n){return this.name+':'+n;},this);},/**
   * Applies an icon to the given element.
   *
   * An svg icon is prepended to the element's shadowRoot if it exists,
   * otherwise to the element itself.
   *
   * If RTL mirroring is enabled, and the icon is marked to be mirrored in
   * RTL, the element will be tested (once and only once ever for each
   * iconset) to determine the direction of the subtree the element is in.
   * This direction will apply to all future icon applications, although only
   * icons marked to be mirrored will be affected.
   *
   * @method applyIcon
   * @param {Element} element Element to which the icon is applied.
   * @param {string} iconName Name of the icon to apply.
   * @return {?Element} The svg element which renders the icon.
   */applyIcon:function applyIcon(element,iconName){// Remove old svg element
this.removeIcon(element);// install new svg element
var svg=this._cloneIcon(iconName,this.rtlMirroring&&this._targetIsRTL(element));if(svg){// insert svg element into shadow root, if it exists
var pde=dom(element.root||element);pde.insertBefore(svg,pde.childNodes[0]);return element._svgIcon=svg;}return null;},/**
   * Remove an icon from the given element by undoing the changes effected
   * by `applyIcon`.
   *
   * @param {Element} element The element from which the icon is removed.
   */removeIcon:function removeIcon(element){// Remove old svg element
if(element._svgIcon){dom(element.root||element).removeChild(element._svgIcon);element._svgIcon=null;}},/**
   * Measures and memoizes the direction of the element. Note that this
   * measurement is only done once and the result is memoized for future
   * invocations.
   */_targetIsRTL:function _targetIsRTL(target){if(this.__targetIsRTL==null){if(this.useGlobalRtlAttribute){var globalElement=document.body&&document.body.hasAttribute('dir')?document.body:document.documentElement;this.__targetIsRTL=globalElement.getAttribute('dir')==='rtl';}else{if(target&&target.nodeType!==Node.ELEMENT_NODE){target=target.host;}this.__targetIsRTL=target&&window.getComputedStyle(target)['direction']==='rtl';}}return this.__targetIsRTL;},/**
   *
   * When name is changed, register iconset metadata
   *
   */_nameChanged:function _nameChanged(){this._meta.value=null;this._meta.key=this.name;this._meta.value=this;this.async(function(){this.fire('iron-iconset-added',this,{node:window});});},/**
   * Create a map of child SVG elements by id.
   *
   * @return {!Object} Map of id's to SVG elements.
   */_createIconMap:function _createIconMap(){// Objects chained to Object.prototype (`{}`) have members. Specifically,
// on FF there is a `watch` method that confuses the icon map, so we
// need to use a null-based object here.
var icons=Object.create(null);dom(this).querySelectorAll('[id]').forEach(function(icon){icons[icon.id]=icon;});return icons;},/**
   * Produce installable clone of the SVG element matching `id` in this
   * iconset, or `undefined` if there is no matching element.
   *
   * @return {Element} Returns an installable clone of the SVG element
   * matching `id`.
   */_cloneIcon:function _cloneIcon(id,mirrorAllowed){// create the icon map on-demand, since the iconset itself has no discrete
// signal to know when it's children are fully parsed
this._icons=this._icons||this._createIconMap();return this._prepareSvgClone(this._icons[id],this.size,mirrorAllowed);},/**
   * @param {Element} sourceSvg
   * @param {number} size
   * @param {Boolean} mirrorAllowed
   * @return {Element}
   */_prepareSvgClone:function _prepareSvgClone(sourceSvg,size,mirrorAllowed){if(sourceSvg){var content=sourceSvg.cloneNode(true),svg=document.createElementNS('http://www.w3.org/2000/svg','svg'),viewBox=content.getAttribute('viewBox')||'0 0 '+size+' '+size,cssText='pointer-events: none; display: block; width: 100%; height: 100%;';if(mirrorAllowed&&content.hasAttribute('mirror-in-rtl')){cssText+='-webkit-transform:scale(-1,1);transform:scale(-1,1);transform-origin:center;';}svg.setAttribute('viewBox',viewBox);svg.setAttribute('preserveAspectRatio','xMidYMid meet');svg.setAttribute('focusable','false');// TODO(dfreedm): `pointer-events: none` works around
// https://crbug.com/370136
// TODO(sjmiles): inline style may not be ideal, but avoids requiring a
// shadow-root
svg.style.cssText=cssText;svg.appendChild(content).removeAttribute('id');return svg;}return null;}});var IronValidatableBehaviorMeta=null;/**
                                                * `Use IronValidatableBehavior` to implement an element that validates
                                                * user input. Use the related `IronValidatorBehavior` to add custom
                                                * validation logic to an iron-input.
                                                *
                                                * By default, an `<iron-form>` element validates its fields when the user
                                                * presses the submit button. To validate a form imperatively, call the form's
                                                * `validate()` method, which in turn will call `validate()` on all its
                                                * children. By using `IronValidatableBehavior`, your custom element
                                                * will get a public `validate()`, which will return the validity of the
                                                * element, and a corresponding `invalid` attribute, which can be used for
                                                * styling.
                                                *
                                                * To implement the custom validation logic of your element, you must override
                                                * the protected `_getValidity()` method of this behaviour, rather than
                                                * `validate()`. See
                                                * [this](https://github.com/PolymerElements/iron-form/blob/master/demo/simple-element.html)
                                                * for an example.
                                                *
                                                * ### Accessibility
                                                *
                                                * Changing the `invalid` property, either manually or by calling `validate()`
                                                * will update the `aria-invalid` attribute.
                                                *
                                                * @demo demo/index.html
                                                * @polymerBehavior
                                                */_exports.IronValidatableBehaviorMeta=IronValidatableBehaviorMeta;var IronValidatableBehavior={properties:{/**
     * Name of the validator to use.
     */validator:{type:String},/**
     * True if the last call to `validate` is invalid.
     */invalid:{notify:true,reflectToAttribute:true,type:Boolean,value:false,observer:'_invalidChanged'}},registered:function registered(){_exports.IronValidatableBehaviorMeta=IronValidatableBehaviorMeta=new IronMeta({type:'validator'});},_invalidChanged:function _invalidChanged(){if(this.invalid){this.setAttribute('aria-invalid','true');}else{this.removeAttribute('aria-invalid');}},/* Recompute this every time it's needed, because we don't know if the
   * underlying IronValidatableBehaviorMeta has changed. */get _validator(){return IronValidatableBehaviorMeta&&IronValidatableBehaviorMeta.byKey(this.validator);},/**
   * @return {boolean} True if the validator `validator` exists.
   */hasValidator:function hasValidator(){return this._validator!=null;},/**
   * Returns true if the `value` is valid, and updates `invalid`. If you want
   * your element to have custom validation logic, do not override this method;
   * override `_getValidity(value)` instead.
    * @param {Object} value Deprecated: The value to be validated. By default,
   * it is passed to the validator's `validate()` function, if a validator is
   set.
   * If this argument is not specified, then the element's `value` property
   * is used, if it exists.
   * @return {boolean} True if `value` is valid.
   */validate:function validate(value){// If this is an element that also has a value property, and there was
// no explicit value argument passed, use the element's property instead.
if(value===undefined&&this.value!==undefined)this.invalid=!this._getValidity(this.value);else this.invalid=!this._getValidity(value);return!this.invalid;},/**
   * Returns true if `value` is valid.  By default, it is passed
   * to the validator's `validate()` function, if a validator is set. You
   * should override this method if you want to implement custom validity
   * logic for your element.
   *
   * @param {Object} value The value to be validated.
   * @return {boolean} True if `value` is valid.
   */_getValidity:function _getValidity(value){if(this.hasValidator()){return this._validator.validate(value);}return true;}};_exports.IronValidatableBehavior=IronValidatableBehavior;var ironValidatableBehavior={__proto__:null,get IronValidatableBehaviorMeta(){return IronValidatableBehaviorMeta;},IronValidatableBehavior:IronValidatableBehavior};_exports.$ironValidatableBehavior=ironValidatableBehavior;Polymer({_template:html(_templateObject5_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'iron-input',behaviors:[IronValidatableBehavior],/**
   * Fired whenever `validate()` is called.
   *
   * @event iron-input-validate
   */properties:{/**
     * Use this property instead of `value` for two-way data binding, or to
     * set a default value for the input. **Do not** use the distributed
     * input's `value` property to set a default value.
     */bindValue:{type:String,value:''},/**
     * Computed property that echoes `bindValue` (mostly used for Polymer 1.0
     * backcompatibility, if you were one-way binding to the Polymer 1.0
     * `input is="iron-input"` value attribute).
     */value:{type:String,computed:'_computeValue(bindValue)'},/**
     * Regex-like list of characters allowed as input; all characters not in the
     * list will be rejected. The recommended format should be a list of allowed
     * characters, for example, `[a-zA-Z0-9.+-!;:]`.
     *
     * This pattern represents the allowed characters for the field; as the user
     * inputs text, each individual character will be checked against the
     * pattern (rather than checking the entire value as a whole). If a
     * character is not a match, it will be rejected.
     *
     * Pasted input will have each character checked individually; if any
     * character doesn't match `allowedPattern`, the entire pasted string will
     * be rejected.
     *
     * Note: if you were using `iron-input` in 1.0, you were also required to
     * set `prevent-invalid-input`. This is no longer needed as of Polymer 2.0,
     * and will be set automatically for you if an `allowedPattern` is provided.
     *
     */allowedPattern:{type:String},/**
     * Set to true to auto-validate the input value as you type.
     */autoValidate:{type:Boolean,value:false},/**
     * The native input element.
     */_inputElement:Object},observers:['_bindValueChanged(bindValue, _inputElement)'],listeners:{'input':'_onInput','keypress':'_onKeypress'},created:function created(){IronA11yAnnouncer.requestAvailability();this._previousValidInput='';this._patternAlreadyChecked=false;},attached:function attached(){// If the input is added at a later time, update the internal reference.
this._observer=dom(this).observeNodes(function(info){this._initSlottedInput();}.bind(this));},detached:function detached(){if(this._observer){dom(this).unobserveNodes(this._observer);this._observer=null;}},/**
   * Returns the distributed input element.
   */get inputElement(){return this._inputElement;},_initSlottedInput:function _initSlottedInput(){this._inputElement=this.getEffectiveChildren()[0];if(this.inputElement&&this.inputElement.value){this.bindValue=this.inputElement.value;}this.fire('iron-input-ready');},get _patternRegExp(){var pattern;if(this.allowedPattern){pattern=new RegExp(this.allowedPattern);}else{switch(this.inputElement.type){case'number':pattern=/[0-9.,e-]/;break;}}return pattern;},/**
   * @suppress {checkTypes}
   */_bindValueChanged:function _bindValueChanged(bindValue,inputElement){// The observer could have run before attached() when we have actually
// initialized this property.
if(!inputElement){return;}if(bindValue===undefined){inputElement.value=null;}else if(bindValue!==inputElement.value){this.inputElement.value=bindValue;}if(this.autoValidate){this.validate();}// manually notify because we don't want to notify until after setting value
this.fire('bind-value-changed',{value:bindValue});},_onInput:function _onInput(){// Need to validate each of the characters pasted if they haven't
// been validated inside `_onKeypress` already.
if(this.allowedPattern&&!this._patternAlreadyChecked){var valid=this._checkPatternValidity();if(!valid){this._announceInvalidCharacter('Invalid string of characters not entered.');this.inputElement.value=this._previousValidInput;}}this.bindValue=this._previousValidInput=this.inputElement.value;this._patternAlreadyChecked=false;},_isPrintable:function _isPrintable(event){// What a control/printable character is varies wildly based on the browser.
// - most control characters (arrows, backspace) do not send a `keypress`
// event
//   in Chrome, but the *do* on Firefox
// - in Firefox, when they do send a `keypress` event, control chars have
//   a charCode = 0, keyCode = xx (for ex. 40 for down arrow)
// - printable characters always send a keypress event.
// - in Firefox, printable chars always have a keyCode = 0. In Chrome, the
// keyCode
//   always matches the charCode.
// None of this makes any sense.
// For these keys, ASCII code == browser keycode.
var anyNonPrintable=event.keyCode==8||// backspace
event.keyCode==9||// tab
event.keyCode==13||// enter
event.keyCode==27;// escape
// For these keys, make sure it's a browser keycode and not an ASCII code.
var mozNonPrintable=event.keyCode==19||// pause
event.keyCode==20||// caps lock
event.keyCode==45||// insert
event.keyCode==46||// delete
event.keyCode==144||// num lock
event.keyCode==145||// scroll lock
event.keyCode>32&&event.keyCode<41||// page up/down, end, home, arrows
event.keyCode>111&&event.keyCode<124;// fn keys
return!anyNonPrintable&&!(event.charCode==0&&mozNonPrintable);},_onKeypress:function _onKeypress(event){if(!this.allowedPattern&&this.inputElement.type!=='number'){return;}var regexp=this._patternRegExp;if(!regexp){return;}// Handle special keys and backspace
if(event.metaKey||event.ctrlKey||event.altKey){return;}// Check the pattern either here or in `_onInput`, but not in both.
this._patternAlreadyChecked=true;var thisChar=String.fromCharCode(event.charCode);if(this._isPrintable(event)&&!regexp.test(thisChar)){event.preventDefault();this._announceInvalidCharacter('Invalid character '+thisChar+' not entered.');}},_checkPatternValidity:function _checkPatternValidity(){var regexp=this._patternRegExp;if(!regexp){return true;}for(var i=0;i<this.inputElement.value.length;i++){if(!regexp.test(this.inputElement.value[i])){return false;}}return true;},/**
   * Returns true if `value` is valid. The validator provided in `validator`
   * will be used first, then any constraints.
   * @return {boolean} True if the value is valid.
   */validate:function validate(){if(!this.inputElement){this.invalid=false;return true;}// Use the nested input's native validity.
var valid=this.inputElement.checkValidity();// Only do extra checking if the browser thought this was valid.
if(valid){// Empty, required input is invalid
if(this.required&&this.bindValue===''){valid=false;}else if(this.hasValidator()){valid=IronValidatableBehavior.validate.call(this,this.bindValue);}}this.invalid=!valid;this.fire('iron-input-validate');return valid;},_announceInvalidCharacter:function _announceInvalidCharacter(message){this.fire('iron-announce',{text:message});},_computeValue:function _computeValue(bindValue){return bindValue;}});Polymer({is:'iron-media-query',properties:{/**
     * The Boolean return value of the media query.
     */queryMatches:{type:Boolean,value:false,readOnly:true,notify:true},/**
     * The CSS media query to evaluate.
     */query:{type:String,observer:'queryChanged'},/**
     * If true, the query attribute is assumed to be a complete media query
     * string rather than a single media feature.
     */full:{type:Boolean,value:false},/**
     * @type {function(MediaQueryList)}
     */_boundMQHandler:{value:function value(){return this.queryHandler.bind(this);}},/**
     * @type {MediaQueryList}
     */_mq:{value:null}},attached:function attached(){this.style.display='none';this.queryChanged();},detached:function detached(){this._remove();},_add:function _add(){if(this._mq){this._mq.addListener(this._boundMQHandler);}},_remove:function _remove(){if(this._mq){this._mq.removeListener(this._boundMQHandler);}this._mq=null;},queryChanged:function queryChanged(){this._remove();var query=this.query;if(!query){return;}if(!this.full&&query[0]!=='('){query='('+query+')';}this._mq=window.matchMedia(query);this._add();this.queryHandler(this._mq);},queryHandler:function queryHandler(mq){this._setQueryMatches(mq.matches);}});var p$1=Element.prototype;var matches$1=p$1.matches||p$1.matchesSelector||p$1.mozMatchesSelector||p$1.msMatchesSelector||p$1.oMatchesSelector||p$1.webkitMatchesSelector;var IronFocusablesHelper={/**
   * Returns a sorted array of tabbable nodes, including the root node.
   * It searches the tabbable nodes in the light and shadow dom of the chidren,
   * sorting the result by tabindex.
   * @param {!Node} node
   * @return {!Array<!HTMLElement>}
   */getTabbableNodes:function getTabbableNodes(node){var result=[];// If there is at least one element with tabindex > 0, we need to sort
// the final array by tabindex.
var needsSortByTabIndex=this._collectTabbableNodes(node,result);if(needsSortByTabIndex){return this._sortByTabIndex(result);}return result;},/**
   * Returns if a element is focusable.
   * @param {!HTMLElement} element
   * @return {boolean}
   */isFocusable:function isFocusable(element){// From http://stackoverflow.com/a/1600194/4228703:
// There isn't a definite list, it's up to the browser. The only
// standard we have is DOM Level 2 HTML
// https://www.w3.org/TR/DOM-Level-2-HTML/html.html, according to which the
// only elements that have a focus() method are HTMLInputElement,
// HTMLSelectElement, HTMLTextAreaElement and HTMLAnchorElement. This
// notably omits HTMLButtonElement and HTMLAreaElement. Referring to these
// tests with tabbables in different browsers
// http://allyjs.io/data-tables/focusable.html
// Elements that cannot be focused if they have [disabled] attribute.
if(matches$1.call(element,'input, select, textarea, button, object')){return matches$1.call(element,':not([disabled])');}// Elements that can be focused even if they have [disabled] attribute.
return matches$1.call(element,'a[href], area[href], iframe, [tabindex], [contentEditable]');},/**
   * Returns if a element is tabbable. To be tabbable, a element must be
   * focusable, visible, and with a tabindex !== -1.
   * @param {!HTMLElement} element
   * @return {boolean}
   */isTabbable:function isTabbable(element){return this.isFocusable(element)&&matches$1.call(element,':not([tabindex="-1"])')&&this._isVisible(element);},/**
   * Returns the normalized element tabindex. If not focusable, returns -1.
   * It checks for the attribute "tabindex" instead of the element property
   * `tabIndex` since browsers assign different values to it.
   * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`
   * @param {!HTMLElement} element
   * @return {!number}
   * @private
   */_normalizedTabIndex:function _normalizedTabIndex(element){if(this.isFocusable(element)){var tabIndex=element.getAttribute('tabindex')||0;return Number(tabIndex);}return-1;},/**
   * Searches for nodes that are tabbable and adds them to the `result` array.
   * Returns if the `result` array needs to be sorted by tabindex.
   * @param {!Node} node The starting point for the search; added to `result`
   * if tabbable.
   * @param {!Array<!HTMLElement>} result
   * @return {boolean}
   * @private
   */_collectTabbableNodes:function _collectTabbableNodes(node,result){// If not an element or not visible, no need to explore children.
if(node.nodeType!==Node.ELEMENT_NODE||!this._isVisible(node)){return false;}var element=/** @type {!HTMLElement} */node;var tabIndex=this._normalizedTabIndex(element);var needsSort=tabIndex>0;if(tabIndex>=0){result.push(element);}// In ShadowDOM v1, tab order is affected by the order of distrubution.
// E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];
// in ShadowDOM v0 tab order is not affected by the distrubution order,
// in fact getTabbableNodes(#root) returns [#B, #A].
//  <div id="root">
//   <!-- shadow -->
//     <slot name="a">
//     <slot name="b">
//   <!-- /shadow -->
//   <input id="A" slot="a">
//   <input id="B" slot="b" tabindex="1">
//  </div>
// TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.
var children;if(element.localName==='content'||element.localName==='slot'){children=dom(element).getDistributedNodes();}else{// Use shadow root if possible, will check for distributed nodes.
children=dom(element.root||element).children;}for(var i=0;i<children.length;i++){// Ensure method is always invoked to collect tabbable children.
needsSort=this._collectTabbableNodes(children[i],result)||needsSort;}return needsSort;},/**
   * Returns false if the element has `visibility: hidden` or `display: none`
   * @param {!HTMLElement} element
   * @return {boolean}
   * @private
   */_isVisible:function _isVisible(element){// Check inline style first to save a re-flow. If looks good, check also
// computed style.
var style=element.style;if(style.visibility!=='hidden'&&style.display!=='none'){style=window.getComputedStyle(element);return style.visibility!=='hidden'&&style.display!=='none';}return false;},/**
   * Sorts an array of tabbable elements by tabindex. Returns a new array.
   * @param {!Array<!HTMLElement>} tabbables
   * @return {!Array<!HTMLElement>}
   * @private
   */_sortByTabIndex:function _sortByTabIndex(tabbables){// Implement a merge sort as Array.prototype.sort does a non-stable sort
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort
var len=tabbables.length;if(len<2){return tabbables;}var pivot=Math.ceil(len/2);var left=this._sortByTabIndex(tabbables.slice(0,pivot));var right=this._sortByTabIndex(tabbables.slice(pivot));return this._mergeSortByTabIndex(left,right);},/**
   * Merge sort iterator, merges the two arrays into one, sorted by tab index.
   * @param {!Array<!HTMLElement>} left
   * @param {!Array<!HTMLElement>} right
   * @return {!Array<!HTMLElement>}
   * @private
   */_mergeSortByTabIndex:function _mergeSortByTabIndex(left,right){var result=[];while(left.length>0&&right.length>0){if(this._hasLowerTabOrder(left[0],right[0])){result.push(right.shift());}else{result.push(left.shift());}}return result.concat(left,right);},/**
   * Returns if element `a` has lower tab order compared to element `b`
   * (both elements are assumed to be focusable and tabbable).
   * Elements with tabindex = 0 have lower tab order compared to elements
   * with tabindex > 0.
   * If both have same tabindex, it returns false.
   * @param {!HTMLElement} a
   * @param {!HTMLElement} b
   * @return {boolean}
   * @private
   */_hasLowerTabOrder:function _hasLowerTabOrder(a,b){// Normalize tabIndexes
// e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`
var ati=Math.max(a.tabIndex,0);var bti=Math.max(b.tabIndex,0);return ati===0||bti===0?bti>ati:ati>bti;}};_exports.IronFocusablesHelper=IronFocusablesHelper;var ironFocusablesHelper={__proto__:null,IronFocusablesHelper:IronFocusablesHelper};_exports.$ironFocusablesHelper=ironFocusablesHelper;Polymer({_template:html(_templateObject6_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'iron-overlay-backdrop',properties:{/**
     * Returns true if the backdrop is opened.
     */opened:{reflectToAttribute:true,type:Boolean,value:false,observer:'_openedChanged'}},listeners:{'transitionend':'_onTransitionend'},created:function created(){// Used to cancel previous requestAnimationFrame calls when opened changes.
this.__openedRaf=null;},attached:function attached(){this.opened&&this._openedChanged(this.opened);},/**
   * Appends the backdrop to document body if needed.
   */prepare:function prepare(){if(this.opened&&!this.parentNode){dom(document.body).appendChild(this);}},/**
   * Shows the backdrop.
   */open:function open(){this.opened=true;},/**
   * Hides the backdrop.
   */close:function close(){this.opened=false;},/**
   * Removes the backdrop from document body if needed.
   */complete:function complete(){if(!this.opened&&this.parentNode===document.body){dom(this.parentNode).removeChild(this);}},_onTransitionend:function _onTransitionend(event){if(event&&event.target===this){this.complete();}},/**
   * @param {boolean} opened
   * @private
   */_openedChanged:function _openedChanged(opened){if(opened){// Auto-attach.
this.prepare();}else{// Animation might be disabled via the mixin or opacity custom property.
// If it is disabled in other ways, it's up to the user to call complete.
var cs=window.getComputedStyle(this);if(cs.transitionDuration==='0s'||cs.opacity==0){this.complete();}}if(!this.isAttached){return;}// Always cancel previous requestAnimationFrame.
if(this.__openedRaf){window.cancelAnimationFrame(this.__openedRaf);this.__openedRaf=null;}// Force relayout to ensure proper transitions.
this.scrollTop=this.scrollTop;this.__openedRaf=window.requestAnimationFrame(function(){this.__openedRaf=null;this.toggleClass('opened',this.opened);}.bind(this));}});var ORPHANS=new Set();/**
                          * `IronResizableBehavior` is a behavior that can be used in Polymer elements to
                          * coordinate the flow of resize events between "resizers" (elements that
                          *control the size or hidden state of their children) and "resizables" (elements
                          *that need to be notified when they are resized or un-hidden by their parents
                          *in order to take action on their new measurements).
                          *
                          * Elements that perform measurement should add the `IronResizableBehavior`
                          *behavior to their element definition and listen for the `iron-resize` event on
                          *themselves. This event will be fired when they become showing after having
                          *been hidden, when they are resized explicitly by another resizable, or when
                          *the window has been resized.
                          *
                          * Note, the `iron-resize` event is non-bubbling.
                          *
                          * @polymerBehavior
                          * @demo demo/index.html
                          **/var IronResizableBehavior={properties:{/**
     * The closest ancestor element that implements `IronResizableBehavior`.
     */_parentResizable:{type:Object,observer:'_parentResizableChanged'},/**
     * True if this element is currently notifying its descendant elements of
     * resize.
     */_notifyingDescendant:{type:Boolean,value:false}},listeners:{'iron-request-resize-notifications':'_onIronRequestResizeNotifications'},created:function created(){// We don't really need property effects on these, and also we want them
// to be created before the `_parentResizable` observer fires:
this._interestedResizables=[];this._boundNotifyResize=this.notifyResize.bind(this);this._boundOnDescendantIronResize=this._onDescendantIronResize.bind(this);},attached:function attached(){this._requestResizeNotifications();},detached:function detached(){if(this._parentResizable){this._parentResizable.stopResizeNotificationsFor(this);}else{ORPHANS.delete(this);window.removeEventListener('resize',this._boundNotifyResize);}this._parentResizable=null;},/**
   * Can be called to manually notify a resizable and its descendant
   * resizables of a resize change.
   */notifyResize:function notifyResize(){if(!this.isAttached){return;}this._interestedResizables.forEach(function(resizable){if(this.resizerShouldNotify(resizable)){this._notifyDescendant(resizable);}},this);this._fireResize();},/**
   * Used to assign the closest resizable ancestor to this resizable
   * if the ancestor detects a request for notifications.
   */assignParentResizable:function assignParentResizable(parentResizable){if(this._parentResizable){this._parentResizable.stopResizeNotificationsFor(this);}this._parentResizable=parentResizable;if(parentResizable&&parentResizable._interestedResizables.indexOf(this)===-1){parentResizable._interestedResizables.push(this);parentResizable._subscribeIronResize(this);}},/**
   * Used to remove a resizable descendant from the list of descendants
   * that should be notified of a resize change.
   */stopResizeNotificationsFor:function stopResizeNotificationsFor(target){var index=this._interestedResizables.indexOf(target);if(index>-1){this._interestedResizables.splice(index,1);this._unsubscribeIronResize(target);}},/**
   * Subscribe this element to listen to iron-resize events on the given target.
   *
   * Preferred over target.listen because the property renamer does not
   * understand to rename when the target is not specifically "this"
   *
   * @param {!HTMLElement} target Element to listen to for iron-resize events.
   */_subscribeIronResize:function _subscribeIronResize(target){target.addEventListener('iron-resize',this._boundOnDescendantIronResize);},/**
   * Unsubscribe this element from listening to to iron-resize events on the
   * given target.
   *
   * Preferred over target.unlisten because the property renamer does not
   * understand to rename when the target is not specifically "this"
   *
   * @param {!HTMLElement} target Element to listen to for iron-resize events.
   */_unsubscribeIronResize:function _unsubscribeIronResize(target){target.removeEventListener('iron-resize',this._boundOnDescendantIronResize);},/**
   * This method can be overridden to filter nested elements that should or
   * should not be notified by the current element. Return true if an element
   * should be notified, or false if it should not be notified.
   *
   * @param {HTMLElement} element A candidate descendant element that
   * implements `IronResizableBehavior`.
   * @return {boolean} True if the `element` should be notified of resize.
   */resizerShouldNotify:function resizerShouldNotify(element){return true;},_onDescendantIronResize:function _onDescendantIronResize(event){if(this._notifyingDescendant){event.stopPropagation();return;}// no need to use this during shadow dom because of event retargeting
if(!useShadow){this._fireResize();}},_fireResize:function _fireResize(){this.fire('iron-resize',null,{node:this,bubbles:false});},_onIronRequestResizeNotifications:function _onIronRequestResizeNotifications(event){var target=/** @type {!EventTarget} */dom(event).rootTarget;if(target===this){return;}target.assignParentResizable(this);this._notifyDescendant(target);event.stopPropagation();},_parentResizableChanged:function _parentResizableChanged(parentResizable){if(parentResizable){window.removeEventListener('resize',this._boundNotifyResize);}},_notifyDescendant:function _notifyDescendant(descendant){// NOTE(cdata): In IE10, attached is fired on children first, so it's
// important not to notify them if the parent is not attached yet (or
// else they will get redundantly notified when the parent attaches).
if(!this.isAttached){return;}this._notifyingDescendant=true;descendant.notifyResize();this._notifyingDescendant=false;},_requestResizeNotifications:function _requestResizeNotifications(){if(!this.isAttached){return;}if(document.readyState==='loading'){var _requestResizeNotifications=this._requestResizeNotifications.bind(this);document.addEventListener('readystatechange',function readystatechanged(){document.removeEventListener('readystatechange',readystatechanged);_requestResizeNotifications();});}else{this._findParent();if(!this._parentResizable){// If this resizable is an orphan, tell other orphans to try to find
// their parent again, in case it's this resizable.
ORPHANS.forEach(function(orphan){if(orphan!==this){orphan._findParent();}},this);window.addEventListener('resize',this._boundNotifyResize);this.notifyResize();}else{// If this resizable has a parent, tell other child resizables of
// that parent to try finding their parent again, in case it's this
// resizable.
this._parentResizable._interestedResizables.forEach(function(resizable){if(resizable!==this){resizable._findParent();}},this);}}},_findParent:function _findParent(){this.assignParentResizable(null);this.fire('iron-request-resize-notifications',null,{node:this,bubbles:true,cancelable:true});if(!this._parentResizable){ORPHANS.add(this);}else{ORPHANS.delete(this);}}};_exports.IronResizableBehavior=IronResizableBehavior;var ironResizableBehavior={__proto__:null,IronResizableBehavior:IronResizableBehavior};_exports.$ironResizableBehavior=ironResizableBehavior;var IronOverlayManagerClass=function IronOverlayManagerClass(){/**
   * Used to keep track of the opened overlays.
   * @private {!Array<!Element>}
   */this._overlays=[];/**
                           * iframes have a default z-index of 100,
                           * so this default should be at least that.
                           * @private {number}
                           */this._minimumZ=101;/**
                         * Memoized backdrop element.
                         * @private {Element|null}
                         */this._backdropElement=null;// Enable document-wide tap recognizer.
// NOTE: Use useCapture=true to avoid accidentally prevention of the closing
// of an overlay via event.stopPropagation(). The only way to prevent
// closing of an overlay should be through its APIs.
// NOTE: enable tap on <html> to workaround Polymer/polymer#4459
// Pass no-op function because MSEdge 15 doesn't handle null as 2nd argument
// https://github.com/Microsoft/ChakraCore/issues/3863
add(document.documentElement,'tap',function(){});document.addEventListener('tap',this._onCaptureClick.bind(this),true);document.addEventListener('focus',this._onCaptureFocus.bind(this),true);document.addEventListener('keydown',this._onCaptureKeyDown.bind(this),true);};_exports.IronOverlayManagerClass=IronOverlayManagerClass;IronOverlayManagerClass.prototype={constructor:IronOverlayManagerClass,/**
   * The shared backdrop element.
   * @return {!Element} backdropElement
   */get backdropElement(){if(!this._backdropElement){this._backdropElement=document.createElement('iron-overlay-backdrop');}return this._backdropElement;},/**
   * The deepest active element.
   * @return {!Element} activeElement the active element
   */get deepActiveElement(){var active=document.activeElement;// document.activeElement can be null
// https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement
// In IE 11, it can also be an object when operating in iframes.
// In these cases, default it to document.body.
if(!active||babelHelpers.instanceof(active,Element)===false){active=document.body;}while(active.root&&dom(active.root).activeElement){active=dom(active.root).activeElement;}return active;},/**
   * Brings the overlay at the specified index to the front.
   * @param {number} i
   * @private
   */_bringOverlayAtIndexToFront:function _bringOverlayAtIndexToFront(i){var overlay=this._overlays[i];if(!overlay){return;}var lastI=this._overlays.length-1;var currentOverlay=this._overlays[lastI];// Ensure always-on-top overlay stays on top.
if(currentOverlay&&this._shouldBeBehindOverlay(overlay,currentOverlay)){lastI--;}// If already the top element, return.
if(i>=lastI){return;}// Update z-index to be on top.
var minimumZ=Math.max(this.currentOverlayZ(),this._minimumZ);if(this._getZ(overlay)<=minimumZ){this._applyOverlayZ(overlay,minimumZ);}// Shift other overlays behind the new on top.
while(i<lastI){this._overlays[i]=this._overlays[i+1];i++;}this._overlays[lastI]=overlay;},/**
   * Adds the overlay and updates its z-index if it's opened, or removes it if
   * it's closed. Also updates the backdrop z-index.
   * @param {!Element} overlay
   */addOrRemoveOverlay:function addOrRemoveOverlay(overlay){if(overlay.opened){this.addOverlay(overlay);}else{this.removeOverlay(overlay);}},/**
   * Tracks overlays for z-index and focus management.
   * Ensures the last added overlay with always-on-top remains on top.
   * @param {!Element} overlay
   */addOverlay:function addOverlay(overlay){var i=this._overlays.indexOf(overlay);if(i>=0){this._bringOverlayAtIndexToFront(i);this.trackBackdrop();return;}var insertionIndex=this._overlays.length;var currentOverlay=this._overlays[insertionIndex-1];var minimumZ=Math.max(this._getZ(currentOverlay),this._minimumZ);var newZ=this._getZ(overlay);// Ensure always-on-top overlay stays on top.
if(currentOverlay&&this._shouldBeBehindOverlay(overlay,currentOverlay)){// This bumps the z-index of +2.
this._applyOverlayZ(currentOverlay,minimumZ);insertionIndex--;// Update minimumZ to match previous overlay's z-index.
var previousOverlay=this._overlays[insertionIndex-1];minimumZ=Math.max(this._getZ(previousOverlay),this._minimumZ);}// Update z-index and insert overlay.
if(newZ<=minimumZ){this._applyOverlayZ(overlay,minimumZ);}this._overlays.splice(insertionIndex,0,overlay);this.trackBackdrop();},/**
   * @param {!Element} overlay
   */removeOverlay:function removeOverlay(overlay){var i=this._overlays.indexOf(overlay);if(i===-1){return;}this._overlays.splice(i,1);this.trackBackdrop();},/**
   * Returns the current overlay.
   * @return {!Element|undefined}
   */currentOverlay:function currentOverlay(){var i=this._overlays.length-1;return this._overlays[i];},/**
   * Returns the current overlay z-index.
   * @return {number}
   */currentOverlayZ:function currentOverlayZ(){return this._getZ(this.currentOverlay());},/**
   * Ensures that the minimum z-index of new overlays is at least `minimumZ`.
   * This does not effect the z-index of any existing overlays.
   * @param {number} minimumZ
   */ensureMinimumZ:function ensureMinimumZ(minimumZ){this._minimumZ=Math.max(this._minimumZ,minimumZ);},focusOverlay:function focusOverlay(){var current=/** @type {?} */this.currentOverlay();if(current){current._applyFocus();}},/**
   * Updates the backdrop z-index.
   */trackBackdrop:function trackBackdrop(){var overlay=this._overlayWithBackdrop();// Avoid creating the backdrop if there is no overlay with backdrop.
if(!overlay&&!this._backdropElement){return;}this.backdropElement.style.zIndex=this._getZ(overlay)-1;this.backdropElement.opened=!!overlay;// Property observers are not fired until element is attached
// in Polymer 2.x, so we ensure element is attached if needed.
// https://github.com/Polymer/polymer/issues/4526
this.backdropElement.prepare();},/**
   * @return {!Array<!Element>}
   */getBackdrops:function getBackdrops(){var backdrops=[];for(var i=0;i<this._overlays.length;i++){if(this._overlays[i].withBackdrop){backdrops.push(this._overlays[i]);}}return backdrops;},/**
   * Returns the z-index for the backdrop.
   * @return {number}
   */backdropZ:function backdropZ(){return this._getZ(this._overlayWithBackdrop())-1;},/**
   * Returns the top opened overlay that has a backdrop.
   * @return {!Element|undefined}
   * @private
   */_overlayWithBackdrop:function _overlayWithBackdrop(){for(var i=this._overlays.length-1;i>=0;i--){if(this._overlays[i].withBackdrop){return this._overlays[i];}}},/**
   * Calculates the minimum z-index for the overlay.
   * @param {Element=} overlay
   * @private
   */_getZ:function _getZ(overlay){var z=this._minimumZ;if(overlay){var z1=Number(overlay.style.zIndex||window.getComputedStyle(overlay).zIndex);// Check if is a number
// Number.isNaN not supported in IE 10+
if(z1===z1){z=z1;}}return z;},/**
   * @param {!Element} element
   * @param {number|string} z
   * @private
   */_setZ:function _setZ(element,z){element.style.zIndex=z;},/**
   * @param {!Element} overlay
   * @param {number} aboveZ
   * @private
   */_applyOverlayZ:function _applyOverlayZ(overlay,aboveZ){this._setZ(overlay,aboveZ+2);},/**
   * Returns the deepest overlay in the path.
   * @param {!Array<!Element>=} path
   * @return {!Element|undefined}
   * @suppress {missingProperties}
   * @private
   */_overlayInPath:function _overlayInPath(path){path=path||[];for(var i=0;i<path.length;i++){if(path[i]._manager===this){return path[i];}}},/**
   * Ensures the click event is delegated to the right overlay.
   * @param {!Event} event
   * @private
   */_onCaptureClick:function _onCaptureClick(event){var i=this._overlays.length-1;if(i===-1)return;var path=/** @type {!Array<!EventTarget>} */dom(event).path;var overlay;// Check if clicked outside of overlay.
while((overlay=/** @type {?} */this._overlays[i])&&this._overlayInPath(path)!==overlay){overlay._onCaptureClick(event);if(overlay.allowClickThrough){i--;}else{break;}}},/**
   * Ensures the focus event is delegated to the right overlay.
   * @param {!Event} event
   * @private
   */_onCaptureFocus:function _onCaptureFocus(event){var overlay=/** @type {?} */this.currentOverlay();if(overlay){overlay._onCaptureFocus(event);}},/**
   * Ensures TAB and ESC keyboard events are delegated to the right overlay.
   * @param {!Event} event
   * @private
   */_onCaptureKeyDown:function _onCaptureKeyDown(event){var overlay=/** @type {?} */this.currentOverlay();if(overlay){if(IronA11yKeysBehavior.keyboardEventMatchesKeys(event,'esc')){overlay._onCaptureEsc(event);}else if(IronA11yKeysBehavior.keyboardEventMatchesKeys(event,'tab')){overlay._onCaptureTab(event);}}},/**
   * Returns if the overlay1 should be behind overlay2.
   * @param {!Element} overlay1
   * @param {!Element} overlay2
   * @return {boolean}
   * @suppress {missingProperties}
   * @private
   */_shouldBeBehindOverlay:function _shouldBeBehindOverlay(overlay1,overlay2){return!overlay1.alwaysOnTop&&overlay2.alwaysOnTop;}};var IronOverlayManager=new IronOverlayManagerClass();_exports.IronOverlayManager=IronOverlayManager;var ironOverlayManager={__proto__:null,IronOverlayManagerClass:IronOverlayManagerClass,IronOverlayManager:IronOverlayManager};_exports.$ironOverlayManager=ironOverlayManager;var lastTouchPosition={pageX:0,pageY:0};/**
    * Used to avoid computing event.path and filter scrollable nodes (better perf).
    * @type {?EventTarget}
    */var lastRootTarget=null;/**
                            * @type {!Array<!Node>}
                            */var lastScrollableNodes=[];/**
                               * @type {!Array<string>}
                               */var scrollEvents=[// Modern `wheel` event for mouse wheel scrolling:
'wheel',// Older, non-standard `mousewheel` event for some FF:
'mousewheel',// IE:
'DOMMouseScroll',// Touch enabled devices
'touchstart','touchmove'];// must be defined for modulizer
var _boundScrollHandler;_exports._boundScrollHandler=_boundScrollHandler;var currentLockingElement;/**
                            * The IronScrollManager is intended to provide a central source
                            * of authority and control over which elements in a document are currently
                            * allowed to scroll.
                            *
                            */_exports.currentLockingElement=currentLockingElement;"TODO(modulizer): A namespace named Polymer.IronScrollManager was\ndeclared here. The surrounding comments should be reviewed,\nand this string can then be deleted";/**
                                       * The current element that defines the DOM boundaries of the
                                       * scroll lock. This is always the most recently locking element.
                                       *
                                       * @return {!Node|undefined}
                                       */function elementIsScrollLocked(element){var lockingElement=currentLockingElement;if(lockingElement===undefined){return false;}var scrollLocked;if(_hasCachedLockedElement(element)){return true;}if(_hasCachedUnlockedElement(element)){return false;}scrollLocked=!!lockingElement&&lockingElement!==element&&!_composedTreeContains(lockingElement,element);if(scrollLocked){_lockedElementCache.push(element);}else{_unlockedElementCache.push(element);}return scrollLocked;}/**
   * Push an element onto the current scroll lock stack. The most recently
   * pushed element and its children will be considered scrollable. All
   * other elements will not be scrollable.
   *
   * Scroll locking is implemented as a stack so that cases such as
   * dropdowns within dropdowns are handled well.
   *
   * @param {!HTMLElement} element The element that should lock scroll.
   */function pushScrollLock(element){// Prevent pushing the same element twice
if(_lockingElements.indexOf(element)>=0){return;}if(_lockingElements.length===0){_lockScrollInteractions();}_lockingElements.push(element);_exports.currentLockingElement=currentLockingElement=_lockingElements[_lockingElements.length-1];_exports._lockedElementCache=_lockedElementCache=[];_exports._unlockedElementCache=_unlockedElementCache=[];}/**
   * Remove an element from the scroll lock stack. The element being
   * removed does not need to be the most recently pushed element. However,
   * the scroll lock constraints only change when the most recently pushed
   * element is removed.
   *
   * @param {!HTMLElement} element The element to remove from the scroll
   * lock stack.
   */function removeScrollLock(element){var index=_lockingElements.indexOf(element);if(index===-1){return;}_lockingElements.splice(index,1);_exports.currentLockingElement=currentLockingElement=_lockingElements[_lockingElements.length-1];_exports._lockedElementCache=_lockedElementCache=[];_exports._unlockedElementCache=_unlockedElementCache=[];if(_lockingElements.length===0){_unlockScrollInteractions();}}var _lockingElements=[];_exports._lockingElements=_lockingElements;var _lockedElementCache=null;_exports._lockedElementCache=_lockedElementCache;var _unlockedElementCache=null;_exports._unlockedElementCache=_unlockedElementCache;function _hasCachedLockedElement(element){return _lockedElementCache.indexOf(element)>-1;}function _hasCachedUnlockedElement(element){return _unlockedElementCache.indexOf(element)>-1;}function _composedTreeContains(element,child){// NOTE(cdata): This method iterates over content elements and their
// corresponding distributed nodes to implement a contains-like method
// that pierces through the composed tree of the ShadowDOM. Results of
// this operation are cached (elsewhere) on a per-scroll-lock basis, to
// guard against potentially expensive lookups happening repeatedly as
// a user scrolls / touchmoves.
var contentElements;var distributedNodes;var contentIndex;var nodeIndex;if(element.contains(child)){return true;}contentElements=dom(element).querySelectorAll('content,slot');for(contentIndex=0;contentIndex<contentElements.length;++contentIndex){distributedNodes=dom(contentElements[contentIndex]).getDistributedNodes();for(nodeIndex=0;nodeIndex<distributedNodes.length;++nodeIndex){// Polymer 2.x returns slot.assignedNodes which can contain text nodes.
if(distributedNodes[nodeIndex].nodeType!==Node.ELEMENT_NODE)continue;if(_composedTreeContains(distributedNodes[nodeIndex],child)){return true;}}}return false;}function _scrollInteractionHandler(event){// Avoid canceling an event with cancelable=false, e.g. scrolling is in
// progress and cannot be interrupted.
if(event.cancelable&&_shouldPreventScrolling(event)){event.preventDefault();}// If event has targetTouches (touch event), update last touch position.
if(event.targetTouches){var touch=event.targetTouches[0];lastTouchPosition.pageX=touch.pageX;lastTouchPosition.pageY=touch.pageY;}}/**
   * @private
   */function _lockScrollInteractions(){_exports._boundScrollHandler=_boundScrollHandler=_boundScrollHandler||_scrollInteractionHandler.bind(undefined);for(var i=0,l=scrollEvents.length;i<l;i++){// NOTE: browsers that don't support objects as third arg will
// interpret it as boolean, hence useCapture = true in this case.
document.addEventListener(scrollEvents[i],_boundScrollHandler,{capture:true,passive:false});}}function _unlockScrollInteractions(){for(var i=0,l=scrollEvents.length;i<l;i++){// NOTE: browsers that don't support objects as third arg will
// interpret it as boolean, hence useCapture = true in this case.
document.removeEventListener(scrollEvents[i],_boundScrollHandler,{capture:true,passive:false});}}/**
   * Returns true if the event causes scroll outside the current locking
   * element, e.g. pointer/keyboard interactions, or scroll "leaking"
   * outside the locking element when it is already at its scroll boundaries.
   * @param {!Event} event
   * @return {boolean}
   * @private
   */function _shouldPreventScrolling(event){// Update if root target changed. For touch events, ensure we don't
// update during touchmove.
var target=dom(event).rootTarget;if(event.type!=='touchmove'&&lastRootTarget!==target){lastRootTarget=target;lastScrollableNodes=_getScrollableNodes(dom(event).path);}// Prevent event if no scrollable nodes.
if(!lastScrollableNodes.length){return true;}// Don't prevent touchstart event inside the locking element when it has
// scrollable nodes.
if(event.type==='touchstart'){return false;}// Get deltaX/Y.
var info=_getScrollInfo(event);// Prevent if there is no child that can scroll.
return!_getScrollingNode(lastScrollableNodes,info.deltaX,info.deltaY);}/**
   * Returns an array of scrollable nodes up to the current locking element,
   * which is included too if scrollable.
   * @param {!Array<!Node>} nodes
   * @return {!Array<!Node>} scrollables
   * @private
   */function _getScrollableNodes(nodes){var scrollables=[];var lockingIndex=nodes.indexOf(currentLockingElement);// Loop from root target to locking element (included).
for(var i=0;i<=lockingIndex;i++){// Skip non-Element nodes.
if(nodes[i].nodeType!==Node.ELEMENT_NODE){continue;}var node=/** @type {!Element} */nodes[i];// Check inline style before checking computed style.
var style=node.style;if(style.overflow!=='scroll'&&style.overflow!=='auto'){style=window.getComputedStyle(node);}if(style.overflow==='scroll'||style.overflow==='auto'){scrollables.push(node);}}return scrollables;}/**
   * Returns the node that is scrolling. If there is no scrolling,
   * returns undefined.
   * @param {!Array<!Node>} nodes
   * @param {number} deltaX Scroll delta on the x-axis
   * @param {number} deltaY Scroll delta on the y-axis
   * @return {!Node|undefined}
   * @private
   */function _getScrollingNode(nodes,deltaX,deltaY){// No scroll.
if(!deltaX&&!deltaY){return;}// Check only one axis according to where there is more scroll.
// Prefer vertical to horizontal.
var verticalScroll=Math.abs(deltaY)>=Math.abs(deltaX);for(var i=0;i<nodes.length;i++){var node=nodes[i];var canScroll=false;if(verticalScroll){// delta < 0 is scroll up, delta > 0 is scroll down.
canScroll=deltaY<0?node.scrollTop>0:node.scrollTop<node.scrollHeight-node.clientHeight;}else{// delta < 0 is scroll left, delta > 0 is scroll right.
canScroll=deltaX<0?node.scrollLeft>0:node.scrollLeft<node.scrollWidth-node.clientWidth;}if(canScroll){return node;}}}/**
   * Returns scroll `deltaX` and `deltaY`.
   * @param {!Event} event The scroll event
   * @return {{deltaX: number, deltaY: number}} Object containing the
   * x-axis scroll delta (positive: scroll right, negative: scroll left,
   * 0: no scroll), and the y-axis scroll delta (positive: scroll down,
   * negative: scroll up, 0: no scroll).
   * @private
   */function _getScrollInfo(event){var info={deltaX:event.deltaX,deltaY:event.deltaY};// Already available.
if('deltaX'in event){}// do nothing, values are already good.
// Safari has scroll info in `wheelDeltaX/Y`.
else if('wheelDeltaX'in event&&'wheelDeltaY'in event){info.deltaX=-event.wheelDeltaX;info.deltaY=-event.wheelDeltaY;}// IE10 has only vertical scroll info in `wheelDelta`.
else if('wheelDelta'in event){info.deltaX=0;info.deltaY=-event.wheelDelta;}// Firefox has scroll info in `detail` and `axis`.
else if('axis'in event){info.deltaX=event.axis===1?event.detail:0;info.deltaY=event.axis===2?event.detail:0;}// On mobile devices, calculate scroll direction.
else if(event.targetTouches){var touch=event.targetTouches[0];// Touch moves from right to left => scrolling goes right.
info.deltaX=lastTouchPosition.pageX-touch.pageX;// Touch moves from down to up => scrolling goes down.
info.deltaY=lastTouchPosition.pageY-touch.pageY;}return info;}var ironScrollManager={__proto__:null,get currentLockingElement(){return currentLockingElement;},elementIsScrollLocked:elementIsScrollLocked,pushScrollLock:pushScrollLock,removeScrollLock:removeScrollLock,_lockingElements:_lockingElements,get _lockedElementCache(){return _lockedElementCache;},get _unlockedElementCache(){return _unlockedElementCache;},_hasCachedLockedElement:_hasCachedLockedElement,_hasCachedUnlockedElement:_hasCachedUnlockedElement,_composedTreeContains:_composedTreeContains,_scrollInteractionHandler:_scrollInteractionHandler,get _boundScrollHandler(){return _boundScrollHandler;},_lockScrollInteractions:_lockScrollInteractions,_unlockScrollInteractions:_unlockScrollInteractions,_shouldPreventScrolling:_shouldPreventScrolling,_getScrollableNodes:_getScrollableNodes,_getScrollingNode:_getScrollingNode,_getScrollInfo:_getScrollInfo};_exports.$ironScrollManager=ironScrollManager;var IronOverlayBehaviorImpl={properties:{/**
     * True if the overlay is currently displayed.
     */opened:{observer:'_openedChanged',type:Boolean,value:false,notify:true},/**
     * True if the overlay was canceled when it was last closed.
     */canceled:{observer:'_canceledChanged',readOnly:true,type:Boolean,value:false},/**
     * Set to true to display a backdrop behind the overlay. It traps the focus
     * within the light DOM of the overlay.
     */withBackdrop:{observer:'_withBackdropChanged',type:Boolean},/**
     * Set to true to disable auto-focusing the overlay or child nodes with
     * the `autofocus` attribute` when the overlay is opened.
     */noAutoFocus:{type:Boolean,value:false},/**
     * Set to true to disable canceling the overlay with the ESC key.
     */noCancelOnEscKey:{type:Boolean,value:false},/**
     * Set to true to disable canceling the overlay by clicking outside it.
     */noCancelOnOutsideClick:{type:Boolean,value:false},/**
     * Contains the reason(s) this overlay was last closed (see
     * `iron-overlay-closed`). `IronOverlayBehavior` provides the `canceled`
     * reason; implementers of the behavior can provide other reasons in
     * addition to `canceled`.
     */closingReason:{// was a getter before, but needs to be a property so other
// behaviors can override this.
type:Object},/**
     * Set to true to enable restoring of focus when overlay is closed.
     */restoreFocusOnClose:{type:Boolean,value:false},/**
     * Set to true to allow clicks to go through overlays.
     * When the user clicks outside this overlay, the click may
     * close the overlay below.
     */allowClickThrough:{type:Boolean},/**
     * Set to true to keep overlay always on top.
     */alwaysOnTop:{type:Boolean},/**
     * Determines which action to perform when scroll outside an opened overlay
     * happens. Possible values: lock - blocks scrolling from happening, refit -
     * computes the new position on the overlay cancel - causes the overlay to
     * close
     */scrollAction:{type:String},/**
     * Shortcut to access to the overlay manager.
     * @private
     * @type {!IronOverlayManagerClass}
     */_manager:{type:Object,value:IronOverlayManager},/**
     * The node being focused.
     * @type {?Node}
     */_focusedChild:{type:Object}},listeners:{'iron-resize':'_onIronResize'},observers:['__updateScrollObservers(isAttached, opened, scrollAction)'],/**
   * The backdrop element.
   * @return {!Element}
   */get backdropElement(){return this._manager.backdropElement;},/**
   * Returns the node to give focus to.
   * @return {!Node}
   */get _focusNode(){return this._focusedChild||dom(this).querySelector('[autofocus]')||this;},/**
   * Array of nodes that can receive focus (overlay included), ordered by
   * `tabindex`. This is used to retrieve which is the first and last focusable
   * nodes in order to wrap the focus for overlays `with-backdrop`.
   *
   * If you know what is your content (specifically the first and last focusable
   * children), you can override this method to return only `[firstFocusable,
   * lastFocusable];`
   * @return {!Array<!Node>}
   * @protected
   */get _focusableNodes(){return IronFocusablesHelper.getTabbableNodes(this);},/**
   * @return {void}
   */ready:function ready(){// Used to skip calls to notifyResize and refit while the overlay is
// animating.
this.__isAnimating=false;// with-backdrop needs tabindex to be set in order to trap the focus.
// If it is not set, IronOverlayBehavior will set it, and remove it if
// with-backdrop = false.
this.__shouldRemoveTabIndex=false;// Used for wrapping the focus on TAB / Shift+TAB.
this.__firstFocusableNode=this.__lastFocusableNode=null;// Used by to keep track of the RAF callbacks.
this.__rafs={};// Focused node before overlay gets opened. Can be restored on close.
this.__restoreFocusNode=null;// Scroll info to be restored.
this.__scrollTop=this.__scrollLeft=null;this.__onCaptureScroll=this.__onCaptureScroll.bind(this);// Root nodes hosting the overlay, used to listen for scroll events on them.
this.__rootNodes=null;this._ensureSetup();},attached:function attached(){// Call _openedChanged here so that position can be computed correctly.
if(this.opened){this._openedChanged(this.opened);}this._observer=dom(this).observeNodes(this._onNodesChange);},detached:function detached(){dom(this).unobserveNodes(this._observer);this._observer=null;for(var cb in this.__rafs){if(this.__rafs[cb]!==null){cancelAnimationFrame(this.__rafs[cb]);}}this.__rafs={};this._manager.removeOverlay(this);// We got detached while animating, ensure we show/hide the overlay
// and fire iron-overlay-opened/closed event!
if(this.__isAnimating){if(this.opened){this._finishRenderOpened();}else{// Restore the focus if necessary.
this._applyFocus();this._finishRenderClosed();}}},/**
   * Toggle the opened state of the overlay.
   */toggle:function toggle(){this._setCanceled(false);this.opened=!this.opened;},/**
   * Open the overlay.
   */open:function open(){this._setCanceled(false);this.opened=true;},/**
   * Close the overlay.
   */close:function close(){this._setCanceled(false);this.opened=false;},/**
   * Cancels the overlay.
   * @param {Event=} event The original event
   */cancel:function cancel(event){var cancelEvent=this.fire('iron-overlay-canceled',event,{cancelable:true});if(cancelEvent.defaultPrevented){return;}this._setCanceled(true);this.opened=false;},/**
   * Invalidates the cached tabbable nodes. To be called when any of the
   * focusable content changes (e.g. a button is disabled).
   */invalidateTabbables:function invalidateTabbables(){this.__firstFocusableNode=this.__lastFocusableNode=null;},_ensureSetup:function _ensureSetup(){if(this._overlaySetup){return;}this._overlaySetup=true;this.style.outline='none';this.style.display='none';},/**
   * Called when `opened` changes.
   * @param {boolean=} opened
   * @protected
   */_openedChanged:function _openedChanged(opened){if(opened){this.removeAttribute('aria-hidden');}else{this.setAttribute('aria-hidden','true');}// Defer any animation-related code on attached
// (_openedChanged gets called again on attached).
if(!this.isAttached){return;}this.__isAnimating=true;// Deraf for non-blocking rendering.
this.__deraf('__openedChanged',this.__openedChanged);},_canceledChanged:function _canceledChanged(){this.closingReason=this.closingReason||{};this.closingReason.canceled=this.canceled;},_withBackdropChanged:function _withBackdropChanged(){// If tabindex is already set, no need to override it.
if(this.withBackdrop&&!this.hasAttribute('tabindex')){this.setAttribute('tabindex','-1');this.__shouldRemoveTabIndex=true;}else if(this.__shouldRemoveTabIndex){this.removeAttribute('tabindex');this.__shouldRemoveTabIndex=false;}if(this.opened&&this.isAttached){this._manager.trackBackdrop();}},/**
   * tasks which must occur before opening; e.g. making the element visible.
   * @protected
   */_prepareRenderOpened:function _prepareRenderOpened(){// Store focused node.
this.__restoreFocusNode=this._manager.deepActiveElement;// Needed to calculate the size of the overlay so that transitions on its
// size will have the correct starting points.
this._preparePositioning();this.refit();this._finishPositioning();// Safari will apply the focus to the autofocus element when displayed
// for the first time, so we make sure to return the focus where it was.
if(this.noAutoFocus&&document.activeElement===this._focusNode){this._focusNode.blur();this.__restoreFocusNode.focus();}},/**
   * Tasks which cause the overlay to actually open; typically play an
   * animation.
   * @protected
   */_renderOpened:function _renderOpened(){this._finishRenderOpened();},/**
   * Tasks which cause the overlay to actually close; typically play an
   * animation.
   * @protected
   */_renderClosed:function _renderClosed(){this._finishRenderClosed();},/**
   * Tasks to be performed at the end of open action. Will fire
   * `iron-overlay-opened`.
   * @protected
   */_finishRenderOpened:function _finishRenderOpened(){this.notifyResize();this.__isAnimating=false;this.fire('iron-overlay-opened');},/**
   * Tasks to be performed at the end of close action. Will fire
   * `iron-overlay-closed`.
   * @protected
   */_finishRenderClosed:function _finishRenderClosed(){// Hide the overlay.
this.style.display='none';// Reset z-index only at the end of the animation.
this.style.zIndex='';this.notifyResize();this.__isAnimating=false;this.fire('iron-overlay-closed',this.closingReason);},_preparePositioning:function _preparePositioning(){this.style.transition=this.style.webkitTransition='none';this.style.transform=this.style.webkitTransform='none';this.style.display='';},_finishPositioning:function _finishPositioning(){// First, make it invisible & reactivate animations.
this.style.display='none';// Force reflow before re-enabling animations so that they don't start.
// Set scrollTop to itself so that Closure Compiler doesn't remove this.
this.scrollTop=this.scrollTop;this.style.transition=this.style.webkitTransition='';this.style.transform=this.style.webkitTransform='';// Now that animations are enabled, make it visible again
this.style.display='';// Force reflow, so that following animations are properly started.
// Set scrollTop to itself so that Closure Compiler doesn't remove this.
this.scrollTop=this.scrollTop;},/**
   * Applies focus according to the opened state.
   * @protected
   */_applyFocus:function _applyFocus(){if(this.opened){if(!this.noAutoFocus){this._focusNode.focus();}}else{// Restore focus.
if(this.restoreFocusOnClose&&this.__restoreFocusNode){// If the activeElement is `<body>` or inside the overlay,
// we are allowed to restore the focus. In all the other
// cases focus might have been moved elsewhere by another
// component or by an user interaction (e.g. click on a
// button outside the overlay).
var activeElement=this._manager.deepActiveElement;if(activeElement===document.body||dom(this).deepContains(activeElement)){this.__restoreFocusNode.focus();}}this.__restoreFocusNode=null;this._focusNode.blur();this._focusedChild=null;}},/**
   * Cancels (closes) the overlay. Call when click happens outside the overlay.
   * @param {!Event} event
   * @protected
   */_onCaptureClick:function _onCaptureClick(event){if(!this.noCancelOnOutsideClick){this.cancel(event);}},/**
   * Keeps track of the focused child. If withBackdrop, traps focus within
   * overlay.
   * @param {!Event} event
   * @protected
   */_onCaptureFocus:function _onCaptureFocus(event){if(!this.withBackdrop){return;}var path=dom(event).path;if(path.indexOf(this)===-1){event.stopPropagation();this._applyFocus();}else{this._focusedChild=path[0];}},/**
   * Handles the ESC key event and cancels (closes) the overlay.
   * @param {!Event} event
   * @protected
   */_onCaptureEsc:function _onCaptureEsc(event){if(!this.noCancelOnEscKey){this.cancel(event);}},/**
   * Handles TAB key events to track focus changes.
   * Will wrap focus for overlays withBackdrop.
   * @param {!Event} event
   * @protected
   */_onCaptureTab:function _onCaptureTab(event){if(!this.withBackdrop){return;}this.__ensureFirstLastFocusables();// TAB wraps from last to first focusable.
// Shift + TAB wraps from first to last focusable.
var shift=event.shiftKey;var nodeToCheck=shift?this.__firstFocusableNode:this.__lastFocusableNode;var nodeToSet=shift?this.__lastFocusableNode:this.__firstFocusableNode;var shouldWrap=false;if(nodeToCheck===nodeToSet){// If nodeToCheck is the same as nodeToSet, it means we have an overlay
// with 0 or 1 focusables; in either case we still need to trap the
// focus within the overlay.
shouldWrap=true;}else{// In dom=shadow, the manager will receive focus changes on the main
// root but not the ones within other shadow roots, so we can't rely on
// _focusedChild, but we should check the deepest active element.
var focusedNode=this._manager.deepActiveElement;// If the active element is not the nodeToCheck but the overlay itself,
// it means the focus is about to go outside the overlay, hence we
// should prevent that (e.g. user opens the overlay and hit Shift+TAB).
shouldWrap=focusedNode===nodeToCheck||focusedNode===this;}if(shouldWrap){// When the overlay contains the last focusable element of the document
// and it's already focused, pressing TAB would move the focus outside
// the document (e.g. to the browser search bar). Similarly, when the
// overlay contains the first focusable element of the document and it's
// already focused, pressing Shift+TAB would move the focus outside the
// document (e.g. to the browser search bar).
// In both cases, we would not receive a focus event, but only a blur.
// In order to achieve focus wrapping, we prevent this TAB event and
// force the focus. This will also prevent the focus to temporarily move
// outside the overlay, which might cause scrolling.
event.preventDefault();this._focusedChild=nodeToSet;this._applyFocus();}},/**
   * Refits if the overlay is opened and not animating.
   * @protected
   */_onIronResize:function _onIronResize(){if(this.opened&&!this.__isAnimating){this.__deraf('refit',this.refit);}},/**
   * Will call notifyResize if overlay is opened.
   * Can be overridden in order to avoid multiple observers on the same node.
   * @protected
   */_onNodesChange:function _onNodesChange(){if(this.opened&&!this.__isAnimating){// It might have added focusable nodes, so invalidate cached values.
this.invalidateTabbables();this.notifyResize();}},/**
   * Updates the references to the first and last focusable nodes.
   * @private
   */__ensureFirstLastFocusables:function __ensureFirstLastFocusables(){var focusableNodes=this._focusableNodes;this.__firstFocusableNode=focusableNodes[0];this.__lastFocusableNode=focusableNodes[focusableNodes.length-1];},/**
   * Tasks executed when opened changes: prepare for the opening, move the
   * focus, update the manager, render opened/closed.
   * @private
   */__openedChanged:function __openedChanged(){if(this.opened){// Make overlay visible, then add it to the manager.
this._prepareRenderOpened();this._manager.addOverlay(this);// Move the focus to the child node with [autofocus].
this._applyFocus();this._renderOpened();}else{// Remove overlay, then restore the focus before actually closing.
this._manager.removeOverlay(this);this._applyFocus();this._renderClosed();}},/**
   * Debounces the execution of a callback to the next animation frame.
   * @param {!string} jobname
   * @param {!Function} callback Always bound to `this`
   * @private
   */__deraf:function __deraf(jobname,callback){var rafs=this.__rafs;if(rafs[jobname]!==null){cancelAnimationFrame(rafs[jobname]);}rafs[jobname]=requestAnimationFrame(function nextAnimationFrame(){rafs[jobname]=null;callback.call(this);}.bind(this));},/**
   * @param {boolean} isAttached
   * @param {boolean} opened
   * @param {string=} scrollAction
   * @private
   */__updateScrollObservers:function __updateScrollObservers(isAttached,opened,scrollAction){if(!isAttached||!opened||!this.__isValidScrollAction(scrollAction)){removeScrollLock(this);this.__removeScrollListeners();}else{if(scrollAction==='lock'){this.__saveScrollPosition();pushScrollLock(this);}this.__addScrollListeners();}},/**
   * @private
   */__addScrollListeners:function __addScrollListeners(){if(!this.__rootNodes){this.__rootNodes=[];// Listen for scroll events in all shadowRoots hosting this overlay only
// when in native ShadowDOM.
if(useShadow){var node=this;while(node){if(node.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&node.host){this.__rootNodes.push(node);}node=node.host||node.assignedSlot||node.parentNode;}}this.__rootNodes.push(document);}this.__rootNodes.forEach(function(el){el.addEventListener('scroll',this.__onCaptureScroll,{capture:true,passive:true});},this);},/**
   * @private
   */__removeScrollListeners:function __removeScrollListeners(){if(this.__rootNodes){this.__rootNodes.forEach(function(el){el.removeEventListener('scroll',this.__onCaptureScroll,{capture:true,passive:true});},this);}if(!this.isAttached){this.__rootNodes=null;}},/**
   * @param {string=} scrollAction
   * @return {boolean}
   * @private
   */__isValidScrollAction:function __isValidScrollAction(scrollAction){return scrollAction==='lock'||scrollAction==='refit'||scrollAction==='cancel';},/**
   * @private
   */__onCaptureScroll:function __onCaptureScroll(event){if(this.__isAnimating){return;}// Check if scroll outside the overlay.
if(dom(event).path.indexOf(this)>=0){return;}switch(this.scrollAction){case'lock':// NOTE: scrolling might happen if a scroll event is not cancellable, or
// if user pressed keys that cause scrolling (they're not prevented in
// order not to break a11y features like navigate with arrow keys).
this.__restoreScrollPosition();break;case'refit':this.__deraf('refit',this.refit);break;case'cancel':this.cancel(event);break;}},/**
   * Memoizes the scroll position of the outside scrolling element.
   * @private
   */__saveScrollPosition:function __saveScrollPosition(){if(document.scrollingElement){this.__scrollTop=document.scrollingElement.scrollTop;this.__scrollLeft=document.scrollingElement.scrollLeft;}else{// Since we don't know if is the body or html, get max.
this.__scrollTop=Math.max(document.documentElement.scrollTop,document.body.scrollTop);this.__scrollLeft=Math.max(document.documentElement.scrollLeft,document.body.scrollLeft);}},/**
   * Resets the scroll position of the outside scrolling element.
   * @private
   */__restoreScrollPosition:function __restoreScrollPosition(){if(document.scrollingElement){document.scrollingElement.scrollTop=this.__scrollTop;document.scrollingElement.scrollLeft=this.__scrollLeft;}else{// Since we don't know if is the body or html, set both.
document.documentElement.scrollTop=document.body.scrollTop=this.__scrollTop;document.documentElement.scrollLeft=document.body.scrollLeft=this.__scrollLeft;}}};/**
     Use `Polymer.IronOverlayBehavior` to implement an element that can be hidden
     or shown, and displays on top of other content. It includes an optional
     backdrop, and can be used to implement a variety of UI controls including
     dialogs and drop downs. Multiple overlays may be displayed at once.
   
     See the [demo source
     code](https://github.com/PolymerElements/iron-overlay-behavior/blob/master/demo/simple-overlay.html)
     for an example.
   
     ### Closing and canceling
   
     An overlay may be hidden by closing or canceling. The difference between close
     and cancel is user intent. Closing generally implies that the user
     acknowledged the content on the overlay. By default, it will cancel whenever
     the user taps outside it or presses the escape key. This behavior is
     configurable with the `no-cancel-on-esc-key` and the
     `no-cancel-on-outside-click` properties. `close()` should be called explicitly
     by the implementer when the user interacts with a control in the overlay
     element. When the dialog is canceled, the overlay fires an
     'iron-overlay-canceled' event. Call `preventDefault` on this event to prevent
     the overlay from closing.
   
     ### Positioning
   
     By default the element is sized and positioned to fit and centered inside the
     window. You can position and size it manually using CSS. See
     `Polymer.IronFitBehavior`.
   
     ### Backdrop
   
     Set the `with-backdrop` attribute to display a backdrop behind the overlay.
     The backdrop is appended to `<body>` and is of type `<iron-overlay-backdrop>`.
     See its doc page for styling options.
   
     In addition, `with-backdrop` will wrap the focus within the content in the
     light DOM. Override the [`_focusableNodes`
     getter](#Polymer.IronOverlayBehavior:property-_focusableNodes) to achieve a
     different behavior.
   
     ### Limitations
   
     The element is styled to appear on top of other content by setting its
     `z-index` property. You must ensure no element has a stacking context with a
     higher `z-index` than its parent stacking context. You should place this
     element as a child of `<body>` whenever possible.
   
     @demo demo/index.html
     @polymerBehavior
    */_exports.IronOverlayBehaviorImpl=IronOverlayBehaviorImpl;var IronOverlayBehavior=[IronFitBehavior,IronResizableBehavior,IronOverlayBehaviorImpl];/**
                                                                                                       * Fired after the overlay opens.
                                                                                                       * @event iron-overlay-opened
                                                                                                       */ /**
                                                                                                           * Fired when the overlay is canceled, but before it is closed.
                                                                                                           * @event iron-overlay-canceled
                                                                                                           * @param {Event} event The closing of the overlay can be prevented
                                                                                                           * by calling `event.preventDefault()`. The `event.detail` is the original event
                                                                                                           * that originated the canceling (e.g. ESC keyboard event or click event outside
                                                                                                           * the overlay).
                                                                                                           */ /**
                                                                                                               * Fired after the overlay closes.
                                                                                                               * @event iron-overlay-closed
                                                                                                               * @param {Event} event The `event.detail` is the `closingReason` property
                                                                                                               * (contains `canceled`, whether the overlay was canceled).
                                                                                                               */_exports.IronOverlayBehavior=IronOverlayBehavior;var ironOverlayBehavior={__proto__:null,IronOverlayBehaviorImpl:IronOverlayBehaviorImpl,IronOverlayBehavior:IronOverlayBehavior};_exports.$ironOverlayBehavior=ironOverlayBehavior;var NeonAnimatableBehavior={properties:{/**
     * Animation configuration. See README for more info.
     */animationConfig:{type:Object},/**
     * Convenience property for setting an 'entry' animation. Do not set
     * `animationConfig.entry` manually if using this. The animated node is set
     * to `this` if using this property.
     */entryAnimation:{observer:'_entryAnimationChanged',type:String},/**
     * Convenience property for setting an 'exit' animation. Do not set
     * `animationConfig.exit` manually if using this. The animated node is set
     * to `this` if using this property.
     */exitAnimation:{observer:'_exitAnimationChanged',type:String}},_entryAnimationChanged:function _entryAnimationChanged(){this.animationConfig=this.animationConfig||{};this.animationConfig['entry']=[{name:this.entryAnimation,node:this}];},_exitAnimationChanged:function _exitAnimationChanged(){this.animationConfig=this.animationConfig||{};this.animationConfig['exit']=[{name:this.exitAnimation,node:this}];},_copyProperties:function _copyProperties(config1,config2){// shallowly copy properties from config2 to config1
for(var property in config2){config1[property]=config2[property];}},_cloneConfig:function _cloneConfig(config){var clone={isClone:true};this._copyProperties(clone,config);return clone;},_getAnimationConfigRecursive:function _getAnimationConfigRecursive(type,map,allConfigs){if(!this.animationConfig){return;}if(this.animationConfig.value&&typeof this.animationConfig.value==='function'){this._warn(this._logf('playAnimation','Please put \'animationConfig\' inside of your components \'properties\' object instead of outside of it.'));return;}// type is optional
var thisConfig;if(type){thisConfig=this.animationConfig[type];}else{thisConfig=this.animationConfig;}if(!Array.isArray(thisConfig)){thisConfig=[thisConfig];}// iterate animations and recurse to process configurations from child nodes
if(thisConfig){for(var config,index=0;config=thisConfig[index];index++){if(config.animatable){config.animatable._getAnimationConfigRecursive(config.type||type,map,allConfigs);}else{if(config.id){var cachedConfig=map[config.id];if(cachedConfig){// merge configurations with the same id, making a clone lazily
if(!cachedConfig.isClone){map[config.id]=this._cloneConfig(cachedConfig);cachedConfig=map[config.id];}this._copyProperties(cachedConfig,config);}else{// put any configs with an id into a map
map[config.id]=config;}}else{allConfigs.push(config);}}}}},/**
   * An element implementing `NeonAnimationRunnerBehavior` calls this
   * method to configure an animation with an optional type. Elements
   * implementing `NeonAnimatableBehavior` should define the property
   * `animationConfig`, which is either a configuration object or a map of
   * animation type to array of configuration objects.
   */getAnimationConfig:function getAnimationConfig(type){var map={};var allConfigs=[];this._getAnimationConfigRecursive(type,map,allConfigs);// append the configurations saved in the map to the array
for(var key in map){allConfigs.push(map[key]);}return allConfigs;}};_exports.NeonAnimatableBehavior=NeonAnimatableBehavior;var neonAnimatableBehavior={__proto__:null,NeonAnimatableBehavior:NeonAnimatableBehavior};_exports.$neonAnimatableBehavior=neonAnimatableBehavior;var NeonAnimationRunnerBehaviorImpl={_configureAnimations:function _configureAnimations(configs){var results=[];var resultsToPlay=[];if(configs.length>0){for(var config,index=0;config=configs[index];index++){var neonAnimation=document.createElement(config.name);// is this element actually a neon animation?
if(neonAnimation.isNeonAnimation){var result=null;// Closure compiler does not work well with a try / catch here.
// .configure needs to be explicitly defined
if(!neonAnimation.configure){/**
             * @param {Object} config
             * @return {AnimationEffectReadOnly}
             */neonAnimation.configure=function(config){return null;};}result=neonAnimation.configure(config);resultsToPlay.push({result:result,config:config,neonAnimation:neonAnimation});}else{console.warn(this.is+':',config.name,'not found!');}}}for(var i=0;i<resultsToPlay.length;i++){var _result=resultsToPlay[i].result;var _config=resultsToPlay[i].config;var _neonAnimation=resultsToPlay[i].neonAnimation;// configuration or play could fail if polyfills aren't loaded
try{// Check if we have an Effect rather than an Animation
if(typeof _result.cancel!='function'){_result=document.timeline.play(_result);}}catch(e){_result=null;console.warn('Couldnt play','(',_config.name,').',e);}if(_result){results.push({neonAnimation:_neonAnimation,config:_config,animation:_result});}}return results;},_shouldComplete:function _shouldComplete(activeEntries){var finished=true;for(var i=0;i<activeEntries.length;i++){if(activeEntries[i].animation.playState!='finished'){finished=false;break;}}return finished;},_complete:function _complete(activeEntries){for(var i=0;i<activeEntries.length;i++){activeEntries[i].neonAnimation.complete(activeEntries[i].config);}for(var i=0;i<activeEntries.length;i++){activeEntries[i].animation.cancel();}},/**
   * Plays an animation with an optional `type`.
   * @param {string=} type
   * @param {!Object=} cookie
   */playAnimation:function playAnimation(type,cookie){var configs=this.getAnimationConfig(type);if(!configs){return;}this._active=this._active||{};if(this._active[type]){this._complete(this._active[type]);delete this._active[type];}var activeEntries=this._configureAnimations(configs);if(activeEntries.length==0){this.fire('neon-animation-finish',cookie,{bubbles:false});return;}this._active[type]=activeEntries;for(var i=0;i<activeEntries.length;i++){activeEntries[i].animation.onfinish=function(){if(this._shouldComplete(activeEntries)){this._complete(activeEntries);delete this._active[type];this.fire('neon-animation-finish',cookie,{bubbles:false});}}.bind(this);}},/**
   * Cancels the currently running animations.
   */cancelAnimation:function cancelAnimation(){for(var k in this._active){var entries=this._active[k];for(var j in entries){entries[j].animation.cancel();}}this._active={};}};/** @polymerBehavior */_exports.NeonAnimationRunnerBehaviorImpl=NeonAnimationRunnerBehaviorImpl;var NeonAnimationRunnerBehavior=[NeonAnimatableBehavior,NeonAnimationRunnerBehaviorImpl];_exports.NeonAnimationRunnerBehavior=NeonAnimationRunnerBehavior;var neonAnimationRunnerBehavior={__proto__:null,NeonAnimationRunnerBehaviorImpl:NeonAnimationRunnerBehaviorImpl,NeonAnimationRunnerBehavior:NeonAnimationRunnerBehavior};_exports.$neonAnimationRunnerBehavior=neonAnimationRunnerBehavior;var Utility={distance:function distance(x1,y1,x2,y2){var xDelta=x1-x2;var yDelta=y1-y2;return Math.sqrt(xDelta*xDelta+yDelta*yDelta);},now:window.performance&&window.performance.now?window.performance.now.bind(window.performance):Date.now};/**
    * @param {HTMLElement} element
    * @constructor
    */function ElementMetrics(element){this.element=element;this.width=this.boundingRect.width;this.height=this.boundingRect.height;this.size=Math.max(this.width,this.height);}ElementMetrics.prototype={get boundingRect(){return this.element.getBoundingClientRect();},furthestCornerDistanceFrom:function furthestCornerDistanceFrom(x,y){var topLeft=Utility.distance(x,y,0,0);var topRight=Utility.distance(x,y,this.width,0);var bottomLeft=Utility.distance(x,y,0,this.height);var bottomRight=Utility.distance(x,y,this.width,this.height);return Math.max(topLeft,topRight,bottomLeft,bottomRight);}};/**
    * @param {HTMLElement} element
    * @constructor
    */function Ripple(element){this.element=element;this.color=window.getComputedStyle(element).color;this.wave=document.createElement('div');this.waveContainer=document.createElement('div');this.wave.style.backgroundColor=this.color;this.wave.classList.add('wave');this.waveContainer.classList.add('wave-container');dom(this.waveContainer).appendChild(this.wave);this.resetInteractionState();}Ripple.MAX_RADIUS=300;Ripple.prototype={get recenters(){return this.element.recenters;},get center(){return this.element.center;},get mouseDownElapsed(){var elapsed;if(!this.mouseDownStart){return 0;}elapsed=Utility.now()-this.mouseDownStart;if(this.mouseUpStart){elapsed-=this.mouseUpElapsed;}return elapsed;},get mouseUpElapsed(){return this.mouseUpStart?Utility.now()-this.mouseUpStart:0;},get mouseDownElapsedSeconds(){return this.mouseDownElapsed/1000;},get mouseUpElapsedSeconds(){return this.mouseUpElapsed/1000;},get mouseInteractionSeconds(){return this.mouseDownElapsedSeconds+this.mouseUpElapsedSeconds;},get initialOpacity(){return this.element.initialOpacity;},get opacityDecayVelocity(){return this.element.opacityDecayVelocity;},get radius(){var width2=this.containerMetrics.width*this.containerMetrics.width;var height2=this.containerMetrics.height*this.containerMetrics.height;var waveRadius=Math.min(Math.sqrt(width2+height2),Ripple.MAX_RADIUS)*1.1+5;var duration=1.1-0.2*(waveRadius/Ripple.MAX_RADIUS);var timeNow=this.mouseInteractionSeconds/duration;var size=waveRadius*(1-Math.pow(80,-timeNow));return Math.abs(size);},get opacity(){if(!this.mouseUpStart){return this.initialOpacity;}return Math.max(0,this.initialOpacity-this.mouseUpElapsedSeconds*this.opacityDecayVelocity);},get outerOpacity(){// Linear increase in background opacity, capped at the opacity
// of the wavefront (waveOpacity).
var outerOpacity=this.mouseUpElapsedSeconds*0.3;var waveOpacity=this.opacity;return Math.max(0,Math.min(outerOpacity,waveOpacity));},get isOpacityFullyDecayed(){return this.opacity<0.01&&this.radius>=Math.min(this.maxRadius,Ripple.MAX_RADIUS);},get isRestingAtMaxRadius(){return this.opacity>=this.initialOpacity&&this.radius>=Math.min(this.maxRadius,Ripple.MAX_RADIUS);},get isAnimationComplete(){return this.mouseUpStart?this.isOpacityFullyDecayed:this.isRestingAtMaxRadius;},get translationFraction(){return Math.min(1,this.radius/this.containerMetrics.size*2/Math.sqrt(2));},get xNow(){if(this.xEnd){return this.xStart+this.translationFraction*(this.xEnd-this.xStart);}return this.xStart;},get yNow(){if(this.yEnd){return this.yStart+this.translationFraction*(this.yEnd-this.yStart);}return this.yStart;},get isMouseDown(){return this.mouseDownStart&&!this.mouseUpStart;},resetInteractionState:function resetInteractionState(){this.maxRadius=0;this.mouseDownStart=0;this.mouseUpStart=0;this.xStart=0;this.yStart=0;this.xEnd=0;this.yEnd=0;this.slideDistance=0;this.containerMetrics=new ElementMetrics(this.element);},draw:function draw(){var scale;var dx;var dy;this.wave.style.opacity=this.opacity;scale=this.radius/(this.containerMetrics.size/2);dx=this.xNow-this.containerMetrics.width/2;dy=this.yNow-this.containerMetrics.height/2;// 2d transform for safari because of border-radius and overflow:hidden
// clipping bug. https://bugs.webkit.org/show_bug.cgi?id=98538
this.waveContainer.style.webkitTransform='translate('+dx+'px, '+dy+'px)';this.waveContainer.style.transform='translate3d('+dx+'px, '+dy+'px, 0)';this.wave.style.webkitTransform='scale('+scale+','+scale+')';this.wave.style.transform='scale3d('+scale+','+scale+',1)';},/** @param {Event=} event */downAction:function downAction(event){var xCenter=this.containerMetrics.width/2;var yCenter=this.containerMetrics.height/2;this.resetInteractionState();this.mouseDownStart=Utility.now();if(this.center){this.xStart=xCenter;this.yStart=yCenter;this.slideDistance=Utility.distance(this.xStart,this.yStart,this.xEnd,this.yEnd);}else{this.xStart=event?event.detail.x-this.containerMetrics.boundingRect.left:this.containerMetrics.width/2;this.yStart=event?event.detail.y-this.containerMetrics.boundingRect.top:this.containerMetrics.height/2;}if(this.recenters){this.xEnd=xCenter;this.yEnd=yCenter;this.slideDistance=Utility.distance(this.xStart,this.yStart,this.xEnd,this.yEnd);}this.maxRadius=this.containerMetrics.furthestCornerDistanceFrom(this.xStart,this.yStart);this.waveContainer.style.top=(this.containerMetrics.height-this.containerMetrics.size)/2+'px';this.waveContainer.style.left=(this.containerMetrics.width-this.containerMetrics.size)/2+'px';this.waveContainer.style.width=this.containerMetrics.size+'px';this.waveContainer.style.height=this.containerMetrics.size+'px';},/** @param {Event=} event */upAction:function upAction(event){if(!this.isMouseDown){return;}this.mouseUpStart=Utility.now();},remove:function remove(){dom(this.waveContainer.parentNode).removeChild(this.waveContainer);}};/**
   Material design: [Surface
   reaction](https://www.google.com/design/spec/animation/responsive-interaction.html#responsive-interaction-surface-reaction)
   
   `paper-ripple` provides a visual effect that other paper elements can
   use to simulate a rippling effect emanating from the point of contact.  The
   effect can be visualized as a concentric circle with motion.
   
   Example:
   
       <div style="position:relative">
         <paper-ripple></paper-ripple>
       </div>
   
   Note, it's important that the parent container of the ripple be relative
   position, otherwise the ripple will emanate outside of the desired container.
   
   `paper-ripple` listens to "mousedown" and "mouseup" events so it would display
   ripple effect when touches on it.  You can also defeat the default behavior and
   manually route the down and up actions to the ripple element.  Note that it is
   important if you call `downAction()` you will have to make sure to call
   `upAction()` so that `paper-ripple` would end the animation loop.
   
   Example:
   
       <paper-ripple id="ripple" style="pointer-events: none;"></paper-ripple>
       ...
       downAction: function(e) {
         this.$.ripple.downAction(e.detail);
       },
       upAction: function(e) {
         this.$.ripple.upAction();
       }
   
   Styling ripple effect:
   
     Use CSS color property to style the ripple:
   
       paper-ripple {
         color: #4285f4;
       }
   
     Note that CSS color property is inherited so it is not required to set it on
     the `paper-ripple` element directly.
   
   By default, the ripple is centered on the point of contact.  Apply the
   `recenters` attribute to have the ripple grow toward the center of its
   container.
   
       <paper-ripple recenters></paper-ripple>
   
   You can also  center the ripple inside its container from the start.
   
       <paper-ripple center></paper-ripple>
   
   Apply `circle` class to make the rippling effect within a circle.
   
       <paper-ripple class="circle"></paper-ripple>
   
   @group Paper Elements
   @element paper-ripple
   @hero hero.svg
   @demo demo/index.html
   */Polymer({_template:html(_templateObject7_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-ripple',behaviors:[IronA11yKeysBehavior],properties:{/**
     * The initial opacity set on the wave.
     *
     * @attribute initialOpacity
     * @type number
     * @default 0.25
     */initialOpacity:{type:Number,value:0.25},/**
     * How fast (opacity per second) the wave fades out.
     *
     * @attribute opacityDecayVelocity
     * @type number
     * @default 0.8
     */opacityDecayVelocity:{type:Number,value:0.8},/**
     * If true, ripples will exhibit a gravitational pull towards
     * the center of their container as they fade away.
     *
     * @attribute recenters
     * @type boolean
     * @default false
     */recenters:{type:Boolean,value:false},/**
     * If true, ripples will center inside its container
     *
     * @attribute recenters
     * @type boolean
     * @default false
     */center:{type:Boolean,value:false},/**
     * A list of the visual ripples.
     *
     * @attribute ripples
     * @type Array
     * @default []
     */ripples:{type:Array,value:function value(){return[];}},/**
     * True when there are visible ripples animating within the
     * element.
     */animating:{type:Boolean,readOnly:true,reflectToAttribute:true,value:false},/**
     * If true, the ripple will remain in the "down" state until `holdDown`
     * is set to false again.
     */holdDown:{type:Boolean,value:false,observer:'_holdDownChanged'},/**
     * If true, the ripple will not generate a ripple effect
     * via pointer interaction.
     * Calling ripple's imperative api like `simulatedRipple` will
     * still generate the ripple effect.
     */noink:{type:Boolean,value:false},_animating:{type:Boolean},_boundAnimate:{type:Function,value:function value(){return this.animate.bind(this);}}},get target(){return this.keyEventTarget;},/**
   * @type {!Object}
   */keyBindings:{'enter:keydown':'_onEnterKeydown','space:keydown':'_onSpaceKeydown','space:keyup':'_onSpaceKeyup'},attached:function attached(){// Set up a11yKeysBehavior to listen to key events on the target,
// so that space and enter activate the ripple even if the target doesn't
// handle key events. The key handlers deal with `noink` themselves.
if(this.parentNode.nodeType==11){// DOCUMENT_FRAGMENT_NODE
this.keyEventTarget=dom(this).getOwnerRoot().host;}else{this.keyEventTarget=this.parentNode;}var keyEventTarget=/** @type {!EventTarget} */this.keyEventTarget;this.listen(keyEventTarget,'up','uiUpAction');this.listen(keyEventTarget,'down','uiDownAction');},detached:function detached(){this.unlisten(this.keyEventTarget,'up','uiUpAction');this.unlisten(this.keyEventTarget,'down','uiDownAction');this.keyEventTarget=null;},get shouldKeepAnimating(){for(var index=0;index<this.ripples.length;++index){if(!this.ripples[index].isAnimationComplete){return true;}}return false;},simulatedRipple:function simulatedRipple(){this.downAction(null);// Please see polymer/polymer#1305
this.async(function(){this.upAction();},1);},/**
   * Provokes a ripple down effect via a UI event,
   * respecting the `noink` property.
   * @param {Event=} event
   */uiDownAction:function uiDownAction(event){if(!this.noink){this.downAction(event);}},/**
   * Provokes a ripple down effect via a UI event,
   * *not* respecting the `noink` property.
   * @param {Event=} event
   */downAction:function downAction(event){if(this.holdDown&&this.ripples.length>0){return;}var ripple=this.addRipple();ripple.downAction(event);if(!this._animating){this._animating=true;this.animate();}},/**
   * Provokes a ripple up effect via a UI event,
   * respecting the `noink` property.
   * @param {Event=} event
   */uiUpAction:function uiUpAction(event){if(!this.noink){this.upAction(event);}},/**
   * Provokes a ripple up effect via a UI event,
   * *not* respecting the `noink` property.
   * @param {Event=} event
   */upAction:function upAction(event){if(this.holdDown){return;}this.ripples.forEach(function(ripple){ripple.upAction(event);});this._animating=true;this.animate();},onAnimationComplete:function onAnimationComplete(){this._animating=false;this.$.background.style.backgroundColor=null;this.fire('transitionend');},addRipple:function addRipple(){var ripple=new Ripple(this);dom(this.$.waves).appendChild(ripple.waveContainer);this.$.background.style.backgroundColor=ripple.color;this.ripples.push(ripple);this._setAnimating(true);return ripple;},removeRipple:function removeRipple(ripple){var rippleIndex=this.ripples.indexOf(ripple);if(rippleIndex<0){return;}this.ripples.splice(rippleIndex,1);ripple.remove();if(!this.ripples.length){this._setAnimating(false);}},/**
   * Deprecated. Please use animateRipple() instead.
   *
   * This method name conflicts with Element#animate().
   * https://developer.mozilla.org/en-US/docs/Web/API/Element/animate.
   *
   * @suppress {checkTypes}
   */animate:function animate(){if(!this._animating){return;}var index;var ripple;for(index=0;index<this.ripples.length;++index){ripple=this.ripples[index];ripple.draw();this.$.background.style.opacity=ripple.outerOpacity;if(ripple.isOpacityFullyDecayed&&!ripple.isRestingAtMaxRadius){this.removeRipple(ripple);}}if(!this.shouldKeepAnimating&&this.ripples.length===0){this.onAnimationComplete();}else{window.requestAnimationFrame(this._boundAnimate);}},/**
   * An alias for animate() whose name does not conflict with the platform
   * Element.animate() method.
   */animateRipple:function animateRipple(){return this.animate();},_onEnterKeydown:function _onEnterKeydown(){this.uiDownAction();this.async(this.uiUpAction,1);},_onSpaceKeydown:function _onSpaceKeydown(){this.uiDownAction();},_onSpaceKeyup:function _onSpaceKeyup(){this.uiUpAction();},// note: holdDown does not respect noink since it can be a focus based
// effect.
_holdDownChanged:function _holdDownChanged(newVal,oldVal){if(oldVal===undefined){return;}if(newVal){this.downAction();}else{this.upAction();}}/**
    Fired when the animation finishes.
    This is useful if you want to wait until
    the ripple animation finishes to perform some action.
     @event transitionend
    @param {{node: Object}} detail Contains the animated node.
    */});var PaperRippleBehavior={properties:{/**
     * If true, the element will not produce a ripple effect when interacted
     * with via the pointer.
     */noink:{type:Boolean,observer:'_noinkChanged'},/**
     * @type {Element|undefined}
     */_rippleContainer:{type:Object}},/**
   * Ensures a `<paper-ripple>` element is available when the element is
   * focused.
   */_buttonStateChanged:function _buttonStateChanged(){if(this.focused){this.ensureRipple();}},/**
   * In addition to the functionality provided in `IronButtonState`, ensures
   * a ripple effect is created when the element is in a `pressed` state.
   */_downHandler:function _downHandler(event){IronButtonStateImpl._downHandler.call(this,event);if(this.pressed){this.ensureRipple(event);}},/**
   * Ensures this element contains a ripple effect. For startup efficiency
   * the ripple effect is dynamically on demand when needed.
   * @param {!Event=} optTriggeringEvent (optional) event that triggered the
   * ripple.
   */ensureRipple:function ensureRipple(optTriggeringEvent){if(!this.hasRipple()){this._ripple=this._createRipple();this._ripple.noink=this.noink;var rippleContainer=this._rippleContainer||this.root;if(rippleContainer){dom(rippleContainer).appendChild(this._ripple);}if(optTriggeringEvent){// Check if the event happened inside of the ripple container
// Fall back to host instead of the root because distributed text
// nodes are not valid event targets
var domContainer=dom(this._rippleContainer||this);var target=dom(optTriggeringEvent).rootTarget;if(domContainer.deepContains(/** @type {Node} */target)){this._ripple.uiDownAction(optTriggeringEvent);}}}},/**
   * Returns the `<paper-ripple>` element used by this element to create
   * ripple effects. The element's ripple is created on demand, when
   * necessary, and calling this method will force the
   * ripple to be created.
   */getRipple:function getRipple(){this.ensureRipple();return this._ripple;},/**
   * Returns true if this element currently contains a ripple effect.
   * @return {boolean}
   */hasRipple:function hasRipple(){return Boolean(this._ripple);},/**
   * Create the element's ripple effect via creating a `<paper-ripple>`.
   * Override this method to customize the ripple element.
   * @return {!PaperRippleElement} Returns a `<paper-ripple>` element.
   */_createRipple:function _createRipple(){var element=/** @type {!PaperRippleElement} */document.createElement('paper-ripple');return element;},_noinkChanged:function _noinkChanged(noink){if(this.hasRipple()){this._ripple.noink=noink;}}};_exports.PaperRippleBehavior=PaperRippleBehavior;var paperRippleBehavior={__proto__:null,PaperRippleBehavior:PaperRippleBehavior};_exports.$paperRippleBehavior=paperRippleBehavior;var PaperButtonBehaviorImpl={properties:{/**
     * The z-depth of this element, from 0-5. Setting to 0 will remove the
     * shadow, and each increasing number greater than 0 will be "deeper"
     * than the last.
     *
     * @attribute elevation
     * @type number
     * @default 1
     */elevation:{type:Number,reflectToAttribute:true,readOnly:true}},observers:['_calculateElevation(focused, disabled, active, pressed, receivedFocusFromKeyboard)','_computeKeyboardClass(receivedFocusFromKeyboard)'],hostAttributes:{role:'button',tabindex:'0',animated:true},_calculateElevation:function _calculateElevation(){var e=1;if(this.disabled){e=0;}else if(this.active||this.pressed){e=4;}else if(this.receivedFocusFromKeyboard){e=3;}this._setElevation(e);},_computeKeyboardClass:function _computeKeyboardClass(receivedFocusFromKeyboard){this.toggleClass('keyboard-focus',receivedFocusFromKeyboard);},/**
   * In addition to `IronButtonState` behavior, when space key goes down,
   * create a ripple down effect.
   *
   * @param {!KeyboardEvent} event .
   */_spaceKeyDownHandler:function _spaceKeyDownHandler(event){IronButtonStateImpl._spaceKeyDownHandler.call(this,event);// Ensure that there is at most one ripple when the space key is held down.
if(this.hasRipple()&&this.getRipple().ripples.length<1){this._ripple.uiDownAction();}},/**
   * In addition to `IronButtonState` behavior, when space key goes up,
   * create a ripple up effect.
   *
   * @param {!KeyboardEvent} event .
   */_spaceKeyUpHandler:function _spaceKeyUpHandler(event){IronButtonStateImpl._spaceKeyUpHandler.call(this,event);if(this.hasRipple()){this._ripple.uiUpAction();}}};/** @polymerBehavior */_exports.PaperButtonBehaviorImpl=PaperButtonBehaviorImpl;var PaperButtonBehavior=[IronButtonState,IronControlState,PaperRippleBehavior,PaperButtonBehaviorImpl];_exports.PaperButtonBehavior=PaperButtonBehavior;var paperButtonBehavior={__proto__:null,PaperButtonBehaviorImpl:PaperButtonBehaviorImpl,PaperButtonBehavior:PaperButtonBehavior};_exports.$paperButtonBehavior=paperButtonBehavior;var PaperInkyFocusBehaviorImpl={observers:['_focusedChanged(receivedFocusFromKeyboard)'],_focusedChanged:function _focusedChanged(receivedFocusFromKeyboard){if(receivedFocusFromKeyboard){this.ensureRipple();}if(this.hasRipple()){this._ripple.holdDown=receivedFocusFromKeyboard;}},_createRipple:function _createRipple(){var ripple=PaperRippleBehavior._createRipple();ripple.id='ink';ripple.setAttribute('center','');ripple.classList.add('circle');return ripple;}};/** @polymerBehavior */_exports.PaperInkyFocusBehaviorImpl=PaperInkyFocusBehaviorImpl;var PaperInkyFocusBehavior=[IronButtonState,IronControlState,PaperRippleBehavior,PaperInkyFocusBehaviorImpl];_exports.PaperInkyFocusBehavior=PaperInkyFocusBehavior;var paperInkyFocusBehavior={__proto__:null,PaperInkyFocusBehaviorImpl:PaperInkyFocusBehaviorImpl,PaperInkyFocusBehavior:PaperInkyFocusBehavior};_exports.$paperInkyFocusBehavior=paperInkyFocusBehavior;var template$2=html(_templateObject8_d98ac2c0a07c11eaa53fe90f40c8b4df());template$2.setAttribute('style','display: none;');document.head.appendChild(template$2.content);var template$3=html(_templateObject9_d98ac2c0a07c11eaa53fe90f40c8b4df());template$3.setAttribute('style','display: none;');document.head.appendChild(template$3.content);var template$4=html(_templateObject10_d98ac2c0a07c11eaa53fe90f40c8b4df());template$4.setAttribute('strip-whitespace','');/**
                                                 Material design:
                                                 [Buttons](https://www.google.com/design/spec/components/buttons.html)
                                                                                               `paper-button` is a button. When the user touches the button, a ripple effect
                                                 emanates from the point of contact. It may be flat or raised. A raised button is
                                                 styled with a shadow.
                                                                                               Example:
                                                                                                   <paper-button>Flat button</paper-button>
                                                   <paper-button raised>Raised button</paper-button>
                                                   <paper-button noink>No ripple effect</paper-button>
                                                   <paper-button toggles>Toggle-able button</paper-button>
                                                                                               A button that has `toggles` true will remain `active` after being clicked (and
                                                 will have an `active` attribute set). For more information, see the
                                                 `IronButtonState` behavior.
                                                                                               You may use custom DOM in the button body to create a variety of buttons. For
                                                 example, to create a button with an icon and some text:
                                                                                                   <paper-button>
                                                     <iron-icon icon="favorite"></iron-icon>
                                                     custom button content
                                                   </paper-button>
                                                                                               To use `paper-button` as a link, wrap it in an anchor tag. Since `paper-button`
                                                 will already receive focus, you may want to prevent the anchor tag from
                                                 receiving focus as well by setting its tabindex to -1.
                                                                                                   <a href="https://www.polymer-project.org/" tabindex="-1">
                                                     <paper-button raised>Polymer Project</paper-button>
                                                   </a>
                                                                                               ### Styling
                                                                                               Style the button with CSS as you would a normal DOM element.
                                                                                                   paper-button.fancy {
                                                     background: green;
                                                     color: yellow;
                                                   }
                                                                                                   paper-button.fancy:hover {
                                                     background: lime;
                                                   }
                                                                                                   paper-button[disabled],
                                                   paper-button[toggles][active] {
                                                     background: red;
                                                   }
                                                                                               By default, the ripple is the same color as the foreground at 25% opacity. You
                                                 may customize the color using the `--paper-button-ink-color` custom property.
                                                                                               The following custom properties and mixins are also available for styling:
                                                                                               Custom property | Description | Default
                                                 ----------------|-------------|----------
                                                 `--paper-button-ink-color` | Background color of the ripple | `Based on the button's color`
                                                 `--paper-button` | Mixin applied to the button | `{}`
                                                 `--paper-button-disabled` | Mixin applied to the disabled button. Note that you can also use the `paper-button[disabled]` selector | `{}`
                                                 `--paper-button-flat-keyboard-focus` | Mixin applied to a flat button after it's been focused using the keyboard | `{}`
                                                 `--paper-button-raised-keyboard-focus` | Mixin applied to a raised button after it's been focused using the keyboard | `{}`
                                                                                               @demo demo/index.html
                                                 */Polymer({_template:template$4,is:'paper-button',behaviors:[PaperButtonBehavior],properties:{/**
     * If true, the button should be styled with a shadow.
     */raised:{type:Boolean,reflectToAttribute:true,value:false,observer:'_calculateElevation'}},_calculateElevation:function _calculateElevation(){if(!this.raised){this._setElevation(0);}else{PaperButtonBehaviorImpl._calculateElevation.apply(this);}}/**
    Fired when the animation finishes.
    This is useful if you want to wait until
    the ripple animation finishes to perform some action.
     @event transitionend
    Event param: {{node: Object}} detail Contains the animated node.
    */});var PaperDialogBehaviorImpl={hostAttributes:{'role':'dialog','tabindex':'-1'},properties:{/**
     * If `modal` is true, this implies `no-cancel-on-outside-click`,
     * `no-cancel-on-esc-key` and `with-backdrop`.
     */modal:{type:Boolean,value:false},__readied:{type:Boolean,value:false}},observers:['_modalChanged(modal, __readied)'],listeners:{'tap':'_onDialogClick'},/**
   * @return {void}
   */ready:function ready(){// Only now these properties can be read.
this.__prevNoCancelOnOutsideClick=this.noCancelOnOutsideClick;this.__prevNoCancelOnEscKey=this.noCancelOnEscKey;this.__prevWithBackdrop=this.withBackdrop;this.__readied=true;},_modalChanged:function _modalChanged(modal,readied){// modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.
// We need to wait for the element to be ready before we can read the
// properties values.
if(!readied){return;}if(modal){this.__prevNoCancelOnOutsideClick=this.noCancelOnOutsideClick;this.__prevNoCancelOnEscKey=this.noCancelOnEscKey;this.__prevWithBackdrop=this.withBackdrop;this.noCancelOnOutsideClick=true;this.noCancelOnEscKey=true;this.withBackdrop=true;}else{// If the value was changed to false, let it false.
this.noCancelOnOutsideClick=this.noCancelOnOutsideClick&&this.__prevNoCancelOnOutsideClick;this.noCancelOnEscKey=this.noCancelOnEscKey&&this.__prevNoCancelOnEscKey;this.withBackdrop=this.withBackdrop&&this.__prevWithBackdrop;}},_updateClosingReasonConfirmed:function _updateClosingReasonConfirmed(confirmed){this.closingReason=this.closingReason||{};this.closingReason.confirmed=confirmed;},/**
   * Will dismiss the dialog if user clicked on an element with dialog-dismiss
   * or dialog-confirm attribute.
   */_onDialogClick:function _onDialogClick(event){// Search for the element with dialog-confirm or dialog-dismiss,
// from the root target until this (excluded).
var path=dom(event).path;for(var i=0,l=path.indexOf(this);i<l;i++){var target=path[i];if(target.hasAttribute&&(target.hasAttribute('dialog-dismiss')||target.hasAttribute('dialog-confirm'))){this._updateClosingReasonConfirmed(target.hasAttribute('dialog-confirm'));this.close();event.stopPropagation();break;}}}};/** @polymerBehavior */_exports.PaperDialogBehaviorImpl=PaperDialogBehaviorImpl;var PaperDialogBehavior=[IronOverlayBehavior,PaperDialogBehaviorImpl];_exports.PaperDialogBehavior=PaperDialogBehavior;var paperDialogBehavior={__proto__:null,PaperDialogBehaviorImpl:PaperDialogBehaviorImpl,PaperDialogBehavior:PaperDialogBehavior};_exports.$paperDialogBehavior=paperDialogBehavior;var template$5=html(_templateObject11_d98ac2c0a07c11eaa53fe90f40c8b4df());template$5.setAttribute('style','display: none;');document.head.appendChild(template$5.content);var template$6=html(_templateObject12_d98ac2c0a07c11eaa53fe90f40c8b4df());template$6.setAttribute('style','display: none;');document.head.appendChild(template$6.content);var template$7=html(_templateObject13_d98ac2c0a07c11eaa53fe90f40c8b4df());template$7.setAttribute('style','display: none;');document.head.appendChild(template$7.content);var $_documentContainer=document.createElement('template');$_documentContainer.setAttribute('style','display: none;');$_documentContainer.innerHTML="<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was `:host > ::content h2`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>";document.head.appendChild($_documentContainer.content);Polymer({_template:html(_templateObject14_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-dialog',behaviors:[PaperDialogBehavior,NeonAnimationRunnerBehavior],listeners:{'neon-animation-finish':'_onNeonAnimationFinish'},_renderOpened:function _renderOpened(){this.cancelAnimation();this.playAnimation('entry');},_renderClosed:function _renderClosed(){this.cancelAnimation();this.playAnimation('exit');},_onNeonAnimationFinish:function _onNeonAnimationFinish(){if(this.opened){this._finishRenderOpened();}else{this._finishRenderClosed();}}});Polymer({is:'paper-icon-button',_template:html(_templateObject15_d98ac2c0a07c11eaa53fe90f40c8b4df()),hostAttributes:{role:'button',tabindex:'0'},behaviors:[PaperInkyFocusBehavior],registered:function registered(){this._template.setAttribute('strip-whitespace','');},properties:{/**
     * The URL of an image for the icon. If the src property is specified,
     * the icon property should not be.
     */src:{type:String},/**
     * Specifies the icon name or index in the set of icons available in
     * the icon's icon set. If the icon property is specified,
     * the src property should not be.
     */icon:{type:String},/**
     * Specifies the alternate text for the button, for accessibility.
     */alt:{type:String,observer:'_altChanged'}},_altChanged:function _altChanged(newValue,oldValue){var label=this.getAttribute('aria-label');// Don't stomp over a user-set aria-label.
if(!label||oldValue==label){this.setAttribute('aria-label',newValue);}}});var PaperInputAddonBehavior={attached:function attached(){this.fire('addon-attached');},/**
   * The function called by `<paper-input-container>` when the input value or
   * validity changes.
   * @param {{
   *   invalid: boolean,
   *   inputElement: (Element|undefined),
   *   value: (string|undefined)
   * }} state -
   *     inputElement: The input element.
   *     value: The input value.
   *     invalid: True if the input value is invalid.
   */update:function update(state){}};_exports.PaperInputAddonBehavior=PaperInputAddonBehavior;var paperInputAddonBehavior={__proto__:null,PaperInputAddonBehavior:PaperInputAddonBehavior};// aria-labelledby) and add-ons.
_exports.$paperInputAddonBehavior=paperInputAddonBehavior;var PaperInputHelper={};_exports.PaperInputHelper=PaperInputHelper;PaperInputHelper.NextLabelID=1;PaperInputHelper.NextAddonID=1;PaperInputHelper.NextInputID=1;/**
                                   * Use `PaperInputBehavior` to implement inputs with `<paper-input-container>`.
                                   * This behavior is implemented by `<paper-input>`. It exposes a number of
                                   * properties from `<paper-input-container>` and `<input is="iron-input">` and
                                   * they should be bound in your template.
                                   *
                                   * The input element can be accessed by the `inputElement` property if you need
                                   * to access properties or methods that are not exposed.
                                   * @polymerBehavior PaperInputBehavior
                                   */var PaperInputBehaviorImpl={properties:{/**
     * Fired when the input changes due to user interaction.
     *
     * @event change
     */ /**
         * The label for this input. If you're using PaperInputBehavior to
         * implement your own paper-input-like element, bind this to
         * `<label>`'s content and `hidden` property, e.g.
         * `<label hidden$="[[!label]]">[[label]]</label>` in your `template`
         */label:{type:String},/**
     * The value for this input. If you're using PaperInputBehavior to
     * implement your own paper-input-like element, bind this to
     * the `<iron-input>`'s `bindValue`
     * property, or the value property of your input that is `notify:true`.
     * @type {*}
     */value:{notify:true,type:String},/**
     * Set to true to disable this input. If you're using PaperInputBehavior to
     * implement your own paper-input-like element, bind this to
     * both the `<paper-input-container>`'s and the input's `disabled` property.
     */disabled:{type:Boolean,value:false},/**
     * Returns true if the value is invalid. If you're using PaperInputBehavior
     * to implement your own paper-input-like element, bind this to both the
     * `<paper-input-container>`'s and the input's `invalid` property.
     *
     * If `autoValidate` is true, the `invalid` attribute is managed
     * automatically, which can clobber attempts to manage it manually.
     */invalid:{type:Boolean,value:false,notify:true},/**
     * Set this to specify the pattern allowed by `preventInvalidInput`. If
     * you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `allowedPattern`
     * property.
     */allowedPattern:{type:String},/**
     * The type of the input. The supported types are the
     * [native input's
     * types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_<input>_types).
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the (Polymer 1) `<input is="iron-input">`'s or
     * (Polymer 2)
     * `<iron-input>`'s `type` property.
     */type:{type:String},/**
     * The datalist of the input (if any). This should match the id of an
     * existing `<datalist>`. If you're using PaperInputBehavior to implement
     * your own paper-input-like element, bind this to the `<input
     * is="iron-input">`'s `list` property.
     */list:{type:String},/**
     * A pattern to validate the `input` with. If you're using
     * PaperInputBehavior to implement your own paper-input-like element, bind
     * this to the `<input is="iron-input">`'s `pattern` property.
     */pattern:{type:String},/**
     * Set to true to mark the input as required. If you're using
     * PaperInputBehavior to implement your own paper-input-like element, bind
     * this to the `<input is="iron-input">`'s `required` property.
     */required:{type:Boolean,value:false},/**
     * The error message to display when the input is invalid. If you're using
     * PaperInputBehavior to implement your own paper-input-like element,
     * bind this to the `<paper-input-error>`'s content, if using.
     */errorMessage:{type:String},/**
     * Set to true to show a character counter.
     */charCounter:{type:Boolean,value:false},/**
     * Set to true to disable the floating label. If you're using
     * PaperInputBehavior to implement your own paper-input-like element, bind
     * this to the `<paper-input-container>`'s `noLabelFloat` property.
     */noLabelFloat:{type:Boolean,value:false},/**
     * Set to true to always float the label. If you're using PaperInputBehavior
     * to implement your own paper-input-like element, bind this to the
     * `<paper-input-container>`'s `alwaysFloatLabel` property.
     */alwaysFloatLabel:{type:Boolean,value:false},/**
     * Set to true to auto-validate the input value. If you're using
     * PaperInputBehavior to implement your own paper-input-like element, bind
     * this to the `<paper-input-container>`'s `autoValidate` property.
     */autoValidate:{type:Boolean,value:false},/**
     * Name of the validator to use. If you're using PaperInputBehavior to
     * implement your own paper-input-like element, bind this to
     * the `<input is="iron-input">`'s `validator` property.
     */validator:{type:String},// HTMLInputElement attributes for binding if needed
/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `autocomplete`
     * property.
     */autocomplete:{type:String,value:'off'},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `autofocus`
     * property.
     */autofocus:{type:Boolean,observer:'_autofocusChanged'},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `inputmode`
     * property.
     */inputmode:{type:String},/**
     * The minimum length of the input value.
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `minlength`
     * property.
     */minlength:{type:Number},/**
     * The maximum length of the input value.
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `maxlength`
     * property.
     */maxlength:{type:Number},/**
     * The minimum (numeric or date-time) input value.
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `min` property.
     */min:{type:String},/**
     * The maximum (numeric or date-time) input value.
     * Can be a String (e.g. `"2000-01-01"`) or a Number (e.g. `2`).
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `max` property.
     */max:{type:String},/**
     * Limits the numeric or date-time increments.
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `step` property.
     */step:{type:String},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `name` property.
     */name:{type:String},/**
     * A placeholder string in addition to the label. If this is set, the label
     * will always float.
     */placeholder:{type:String,// need to set a default so _computeAlwaysFloatLabel is run
value:''},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `readonly`
     * property.
     */readonly:{type:Boolean,value:false},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `size` property.
     */size:{type:Number},// Nonstandard attributes for binding if needed
/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `autocapitalize`
     * property.
     *
     * @type {string}
     */autocapitalize:{type:String,value:'none'},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `autocorrect`
     * property.
     */autocorrect:{type:String,value:'off'},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `autosave`
     * property, used with type=search.
     */autosave:{type:String},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `results` property,
     * used with type=search.
     */results:{type:Number},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the `<input is="iron-input">`'s `accept` property,
     * used with type=file.
     */accept:{type:String},/**
     * If you're using PaperInputBehavior to implement your own paper-input-like
     * element, bind this to the`<input is="iron-input">`'s `multiple` property,
     * used with type=file.
     */multiple:{type:Boolean},/** @private */_ariaDescribedBy:{type:String,value:''},/** @private */_ariaLabelledBy:{type:String,value:''},/** @private */_inputId:{type:String,value:''}},listeners:{'addon-attached':'_onAddonAttached'},/**
   * @type {!Object}
   */keyBindings:{'shift+tab:keydown':'_onShiftTabDown'},/** @private */hostAttributes:{tabindex:0},/**
   * Returns a reference to the input element.
   * @return {!HTMLElement}
   */get inputElement(){// Chrome generates audit errors if an <input type="password"> has a
// duplicate ID, which is almost always true in Shady DOM. Generate
// a unique ID instead.
if(!this.$){this.$={};}if(!this.$.input){this._generateInputId();this.$.input=this.$$('#'+this._inputId);}return this.$.input;},/**
   * Returns a reference to the focusable element.
   * @return {!HTMLElement}
   */get _focusableElement(){return this.inputElement;},created:function created(){// These types have some default placeholder text; overlapping
// the label on top of it looks terrible. Auto-float the label in this case.
this._typesThatHaveText=['date','datetime','datetime-local','month','time','week','file'];},attached:function attached(){this._updateAriaLabelledBy();// In the 2.0 version of the element, this is handled in `onIronInputReady`,
// i.e. after the native input has finished distributing. In the 1.0
// version, the input is in the shadow tree, so it's already available.
if(!PolymerElement&&this.inputElement&&this._typesThatHaveText.indexOf(this.inputElement.type)!==-1){this.alwaysFloatLabel=true;}},_appendStringWithSpace:function _appendStringWithSpace(str,more){if(str){str=str+' '+more;}else{str=more;}return str;},_onAddonAttached:function _onAddonAttached(event){var target=dom(event).rootTarget;if(target.id){this._ariaDescribedBy=this._appendStringWithSpace(this._ariaDescribedBy,target.id);}else{var id='paper-input-add-on-'+PaperInputHelper.NextAddonID++;target.id=id;this._ariaDescribedBy=this._appendStringWithSpace(this._ariaDescribedBy,id);}},/**
   * Validates the input element and sets an error style if needed.
   *
   * @return {boolean}
   */validate:function validate(){return this.inputElement.validate();},/**
   * Forward focus to inputElement. Overriden from IronControlState.
   */_focusBlurHandler:function _focusBlurHandler(event){IronControlState._focusBlurHandler.call(this,event);// Forward the focus to the nested input.
if(this.focused&&!this._shiftTabPressed&&this._focusableElement){this._focusableElement.focus();}},/**
   * Handler that is called when a shift+tab keypress is detected by the menu.
   *
   * @param {CustomEvent} event A key combination event.
   */_onShiftTabDown:function _onShiftTabDown(event){var oldTabIndex=this.getAttribute('tabindex');this._shiftTabPressed=true;this.setAttribute('tabindex','-1');this.async(function(){this.setAttribute('tabindex',oldTabIndex);this._shiftTabPressed=false;},1);},/**
   * If `autoValidate` is true, then validates the element.
   */_handleAutoValidate:function _handleAutoValidate(){if(this.autoValidate)this.validate();},/**
   * Restores the cursor to its original position after updating the value.
   * @param {string} newValue The value that should be saved.
   */updateValueAndPreserveCaret:function updateValueAndPreserveCaret(newValue){// Not all elements might have selection, and even if they have the
// right properties, accessing them might throw an exception (like for
// <input type=number>)
try{var start=this.inputElement.selectionStart;this.value=newValue;// The cursor automatically jumps to the end after re-setting the value,
// so restore it to its original position.
this.inputElement.selectionStart=start;this.inputElement.selectionEnd=start;}catch(e){// Just set the value and give up on the caret.
this.value=newValue;}},_computeAlwaysFloatLabel:function _computeAlwaysFloatLabel(alwaysFloatLabel,placeholder){return placeholder||alwaysFloatLabel;},_updateAriaLabelledBy:function _updateAriaLabelledBy(){var label=dom(this.root).querySelector('label');if(!label){this._ariaLabelledBy='';return;}var labelledBy;if(label.id){labelledBy=label.id;}else{labelledBy='paper-input-label-'+PaperInputHelper.NextLabelID++;label.id=labelledBy;}this._ariaLabelledBy=labelledBy;},_generateInputId:function _generateInputId(){if(!this._inputId||this._inputId===''){this._inputId='input-'+PaperInputHelper.NextInputID++;}},_onChange:function _onChange(event){// In the Shadow DOM, the `change` event is not leaked into the
// ancestor tree, so we must do this manually.
// See
// https://w3c.github.io/webcomponents/spec/shadow/#events-that-are-not-leaked-into-ancestor-trees.
if(this.shadowRoot){this.fire(event.type,{sourceEvent:event},{node:this,bubbles:event.bubbles,cancelable:event.cancelable});}},_autofocusChanged:function _autofocusChanged(){// Firefox doesn't respect the autofocus attribute if it's applied after
// the page is loaded (Chrome/WebKit do respect it), preventing an
// autofocus attribute specified in markup from taking effect when the
// element is upgraded. As a workaround, if the autofocus property is set,
// and the focus hasn't already been moved elsewhere, we take focus.
if(this.autofocus&&this._focusableElement){// In IE 11, the default document.activeElement can be the page's
// outermost html element, but there are also cases (under the
// polyfill?) in which the activeElement is not a real HTMLElement, but
// just a plain object. We identify the latter case as having no valid
// activeElement.
var activeElement=document.activeElement;var isActiveElementValid=babelHelpers.instanceof(activeElement,HTMLElement);// Has some other element has already taken the focus?
var isSomeElementActive=isActiveElementValid&&activeElement!==document.body&&activeElement!==document.documentElement;/* IE 11 */if(!isSomeElementActive){// No specific element has taken the focus yet, so we can take it.
this._focusableElement.focus();}}}};/** @polymerBehavior */_exports.PaperInputBehaviorImpl=PaperInputBehaviorImpl;var PaperInputBehavior=[IronControlState,IronA11yKeysBehavior,PaperInputBehaviorImpl];_exports.PaperInputBehavior=PaperInputBehavior;var paperInputBehavior={__proto__:null,PaperInputHelper:PaperInputHelper,PaperInputBehaviorImpl:PaperInputBehaviorImpl,PaperInputBehavior:PaperInputBehavior};_exports.$paperInputBehavior=paperInputBehavior;Polymer({_template:html(_templateObject16_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-input-char-counter',behaviors:[PaperInputAddonBehavior],properties:{_charCounterStr:{type:String,value:'0'}},/**
   * This overrides the update function in PaperInputAddonBehavior.
   * @param {{
   *   inputElement: (Element|undefined),
   *   value: (string|undefined),
   *   invalid: boolean
   * }} state -
   *     inputElement: The input element.
   *     value: The input value.
   *     invalid: True if the input value is invalid.
   */update:function update(state){if(!state.inputElement){return;}state.value=state.value||'';var counter=state.value.toString().length.toString();if(state.inputElement.hasAttribute('maxlength')){counter+='/'+state.inputElement.getAttribute('maxlength');}this._charCounterStr=counter;}});var template$8=html(_templateObject17_d98ac2c0a07c11eaa53fe90f40c8b4df());template$8.setAttribute('style','display: none;');document.head.appendChild(template$8.content);/*
                                               `<paper-input-container>` is a container for a `<label>`, an `<iron-input>` or
                                               `<textarea>` and optional add-on elements such as an error message or character
                                               counter, used to implement Material Design text fields.
                                                                                           For example:
                                                                                               <paper-input-container>
                                                   <label slot="label">Your name</label>
                                                   <iron-input slot="input">
                                                     <input>
                                                   </iron-input>
                                                   // In Polymer 1.0, you would use `<input is="iron-input" slot="input">`
                                               instead of the above.
                                                 </paper-input-container>
                                                                                           You can style the nested `<input>` however you want; if you want it to look like
                                               a Material Design input, you can style it with the
                                               --paper-input-container-shared-input-style mixin.
                                                                                           Do not wrap `<paper-input-container>` around elements that already include it,
                                               such as `<paper-input>`. Doing so may cause events to bounce infinitely between
                                               the container and its contained element.
                                                                                           ### Listening for input changes
                                                                                           By default, it listens for changes on the `bind-value` attribute on its children
                                               nodes and perform tasks such as auto-validating and label styling when the
                                               `bind-value` changes. You can configure the attribute it listens to with the
                                               `attr-for-value` attribute.
                                                                                           ### Using a custom input element
                                                                                           You can use a custom input element in a `<paper-input-container>`, for example
                                               to implement a compound input field like a social security number input. The
                                               custom input element should have the `paper-input-input` class, have a
                                               `notify:true` value property and optionally implements
                                               `Polymer.IronValidatableBehavior` if it is validatable.
                                                                                               <paper-input-container attr-for-value="ssn-value">
                                                   <label slot="label">Social security number</label>
                                                   <ssn-input slot="input" class="paper-input-input"></ssn-input>
                                                 </paper-input-container>
                                                                                           
                                               If you're using a `<paper-input-container>` imperatively, it's important to make
                                               sure that you attach its children (the `iron-input` and the optional `label`)
                                               before you attach the `<paper-input-container>` itself, so that it can be set up
                                               correctly.
                                                                                           ### Validation
                                                                                           If the `auto-validate` attribute is set, the input container will validate the
                                               input and update the container styling when the input value changes.
                                                                                           ### Add-ons
                                                                                           Add-ons are child elements of a `<paper-input-container>` with the `add-on`
                                               attribute and implements the `Polymer.PaperInputAddonBehavior` behavior. They
                                               are notified when the input value or validity changes, and may implement
                                               functionality such as error messages or character counters. They appear at the
                                               bottom of the input.
                                                                                           ### Prefixes and suffixes
                                               These are child elements of a `<paper-input-container>` with the `prefix`
                                               or `suffix` attribute, and are displayed inline with the input, before or after.
                                                                                               <paper-input-container>
                                                   <div slot="prefix">$</div>
                                                   <label slot="label">Total</label>
                                                   <iron-input slot="input">
                                                     <input>
                                                   </iron-input>
                                                   // In Polymer 1.0, you would use `<input is="iron-input" slot="input">`
                                               instead of the above. <paper-icon-button slot="suffix"
                                               icon="clear"></paper-icon-button>
                                                 </paper-input-container>
                                                                                           ### Styling
                                                                                           The following custom properties and mixins are available for styling:
                                                                                           Custom property | Description | Default
                                               ----------------|-------------|----------
                                               `--paper-input-container-color` | Label and underline color when the input is not focused | `--secondary-text-color`
                                               `--paper-input-container-focus-color` | Label and underline color when the input is focused | `--primary-color`
                                               `--paper-input-container-invalid-color` | Label and underline color when the input is is invalid | `--error-color`
                                               `--paper-input-container-input-color` | Input foreground color | `--primary-text-color`
                                               `--paper-input-container` | Mixin applied to the container | `{}`
                                               `--paper-input-container-disabled` | Mixin applied to the container when it's disabled | `{}`
                                               `--paper-input-container-label` | Mixin applied to the label | `{}`
                                               `--paper-input-container-label-focus` | Mixin applied to the label when the input is focused | `{}`
                                               `--paper-input-container-label-floating` | Mixin applied to the label when floating | `{}`
                                               `--paper-input-container-input` | Mixin applied to the input | `{}`
                                               `--paper-input-container-input-align` | The vertical-align property of the input | `bottom`
                                               `--paper-input-container-input-disabled` | Mixin applied to the input when the component is disabled | `{}`
                                               `--paper-input-container-input-focus` | Mixin applied to the input when focused | `{}`
                                               `--paper-input-container-input-invalid` | Mixin applied to the input when invalid | `{}`
                                               `--paper-input-container-input-webkit-spinner` | Mixin applied to the webkit spinner | `{}`
                                               `--paper-input-container-input-webkit-clear` | Mixin applied to the webkit clear button | `{}`
                                               `--paper-input-container-input-webkit-calendar-picker-indicator` | Mixin applied to the webkit calendar picker indicator | `{}`
                                               `--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer clear button | `{}`
                                               `--paper-input-container-underline` | Mixin applied to the underline | `{}`
                                               `--paper-input-container-underline-focus` | Mixin applied to the underline when the input is focused | `{}`
                                               `--paper-input-container-underline-disabled` | Mixin applied to the underline when the input is disabled | `{}`
                                               `--paper-input-prefix` | Mixin applied to the input prefix | `{}`
                                               `--paper-input-suffix` | Mixin applied to the input suffix | `{}`
                                                                                           This element is `display:block` by default, but you can set the `inline`
                                               attribute to make it `display:inline-block`.
                                               */Polymer({_template:html(_templateObject18_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-input-container',properties:{/**
     * Set to true to disable the floating label. The label disappears when the
     * input value is not null.
     */noLabelFloat:{type:Boolean,value:false},/**
     * Set to true to always float the floating label.
     */alwaysFloatLabel:{type:Boolean,value:false},/**
     * The attribute to listen for value changes on.
     */attrForValue:{type:String,value:'bind-value'},/**
     * Set to true to auto-validate the input value when it changes.
     */autoValidate:{type:Boolean,value:false},/**
     * True if the input is invalid. This property is set automatically when the
     * input value changes if auto-validating, or when the `iron-input-validate`
     * event is heard from a child.
     */invalid:{observer:'_invalidChanged',type:Boolean,value:false},/**
     * True if the input has focus.
     */focused:{readOnly:true,type:Boolean,value:false,notify:true},_addons:{type:Array// do not set a default value here intentionally - it will be initialized
// lazily when a distributed child is attached, which may occur before
// configuration for this element in polyfill.
},_inputHasContent:{type:Boolean,value:false},_inputSelector:{type:String,value:'input,iron-input,textarea,.paper-input-input'},_boundOnFocus:{type:Function,value:function value(){return this._onFocus.bind(this);}},_boundOnBlur:{type:Function,value:function value(){return this._onBlur.bind(this);}},_boundOnInput:{type:Function,value:function value(){return this._onInput.bind(this);}},_boundValueChanged:{type:Function,value:function value(){return this._onValueChanged.bind(this);}}},listeners:{'addon-attached':'_onAddonAttached','iron-input-validate':'_onIronInputValidate'},get _valueChangedEvent(){return this.attrForValue+'-changed';},get _propertyForValue(){return dashToCamelCase(this.attrForValue);},get _inputElement(){return dom(this).querySelector(this._inputSelector);},get _inputElementValue(){return this._inputElement[this._propertyForValue]||this._inputElement.value;},ready:function ready(){// Paper-input treats a value of undefined differently at startup than
// the rest of the time (specifically: it does not validate it at startup,
// but it does after that. We need to track whether the first time we
// encounter the value is basically this first time, so that we can validate
// it correctly the rest of the time. See
// https://github.com/PolymerElements/paper-input/issues/605
this.__isFirstValueUpdate=true;if(!this._addons){this._addons=[];}this.addEventListener('focus',this._boundOnFocus,true);this.addEventListener('blur',this._boundOnBlur,true);},attached:function attached(){if(this.attrForValue){this._inputElement.addEventListener(this._valueChangedEvent,this._boundValueChanged);}else{this.addEventListener('input',this._onInput);}// Only validate when attached if the input already has a value.
if(this._inputElementValue&&this._inputElementValue!=''){this._handleValueAndAutoValidate(this._inputElement);}else{this._handleValue(this._inputElement);}},/** @private */_onAddonAttached:function _onAddonAttached(event){if(!this._addons){this._addons=[];}var target=event.target;if(this._addons.indexOf(target)===-1){this._addons.push(target);if(this.isAttached){this._handleValue(this._inputElement);}}},/** @private */_onFocus:function _onFocus(){this._setFocused(true);},/** @private */_onBlur:function _onBlur(){this._setFocused(false);this._handleValueAndAutoValidate(this._inputElement);},/** @private */_onInput:function _onInput(event){this._handleValueAndAutoValidate(event.target);},/** @private */_onValueChanged:function _onValueChanged(event){var input=event.target;// Paper-input treats a value of undefined differently at startup than
// the rest of the time (specifically: it does not validate it at startup,
// but it does after that. If this is in fact the bootup case, ignore
// validation, just this once.
if(this.__isFirstValueUpdate){this.__isFirstValueUpdate=false;if(input.value===undefined||input.value===''){return;}}this._handleValueAndAutoValidate(event.target);},/** @private */_handleValue:function _handleValue(inputElement){var value=this._inputElementValue;// type="number" hack needed because this.value is empty until it's valid
if(value||value===0||inputElement.type==='number'&&!inputElement.checkValidity()){this._inputHasContent=true;}else{this._inputHasContent=false;}this.updateAddons({inputElement:inputElement,value:value,invalid:this.invalid});},/** @private */_handleValueAndAutoValidate:function _handleValueAndAutoValidate(inputElement){if(this.autoValidate&&inputElement){var valid;if(inputElement.validate){valid=inputElement.validate(this._inputElementValue);}else{valid=inputElement.checkValidity();}this.invalid=!valid;}// Call this last to notify the add-ons.
this._handleValue(inputElement);},/** @private */_onIronInputValidate:function _onIronInputValidate(event){this.invalid=this._inputElement.invalid;},/** @private */_invalidChanged:function _invalidChanged(){if(this._addons){this.updateAddons({invalid:this.invalid});}},/**
   * Call this to update the state of add-ons.
   * @param {Object} state Add-on state.
   */updateAddons:function updateAddons(state){for(var addon,index=0;addon=this._addons[index];index++){addon.update(state);}},/** @private */_computeInputContentClass:function _computeInputContentClass(noLabelFloat,alwaysFloatLabel,focused,invalid,_inputHasContent){var cls='input-content';if(!noLabelFloat){var label=this.querySelector('label');if(alwaysFloatLabel||_inputHasContent){cls+=' label-is-floating';// If the label is floating, ignore any offsets that may have been
// applied from a prefix element.
this.$.labelAndInputContainer.style.position='static';if(invalid){cls+=' is-invalid';}else if(focused){cls+=' label-is-highlighted';}}else{// When the label is not floating, it should overlap the input element.
if(label){this.$.labelAndInputContainer.style.position='relative';}if(invalid){cls+=' is-invalid';}}}else{if(_inputHasContent){cls+=' label-is-hidden';}if(invalid){cls+=' is-invalid';}}if(focused){cls+=' focused';}return cls;},/** @private */_computeUnderlineClass:function _computeUnderlineClass(focused,invalid){var cls='underline';if(invalid){cls+=' is-invalid';}else if(focused){cls+=' is-highlighted';}return cls;},/** @private */_computeAddOnContentClass:function _computeAddOnContentClass(focused,invalid){var cls='add-on-content';if(invalid){cls+=' is-invalid';}else if(focused){cls+=' is-highlighted';}return cls;}});Polymer({_template:html(_templateObject19_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-input-error',behaviors:[PaperInputAddonBehavior],properties:{/**
     * True if the error is showing.
     */invalid:{readOnly:true,reflectToAttribute:true,type:Boolean}},/**
   * This overrides the update function in PaperInputAddonBehavior.
   * @param {{
   *   inputElement: (Element|undefined),
   *   value: (string|undefined),
   *   invalid: boolean
   * }} state -
   *     inputElement: The input element.
   *     value: The input value.
   *     invalid: True if the input value is invalid.
   */update:function update(state){this._setInvalid(state.invalid);}});Polymer({is:'paper-input',_template:html(_templateObject20_d98ac2c0a07c11eaa53fe90f40c8b4df()),behaviors:[PaperInputBehavior,IronFormElementBehavior],properties:{value:{// Required for the correct TypeScript type-generation
type:String}},/**
   * Returns a reference to the focusable element. Overridden from
   * PaperInputBehavior to correctly focus the native input.
   *
   * @return {!HTMLElement}
   */get _focusableElement(){return this.inputElement._inputElement;},// Note: This event is only available in the 1.0 version of this element.
// In 2.0, the functionality of `_onIronInputReady` is done in
// PaperInputBehavior::attached.
listeners:{'iron-input-ready':'_onIronInputReady'},_onIronInputReady:function _onIronInputReady(){// Even though this is only used in the next line, save this for
// backwards compatibility, since the native input had this ID until 2.0.5.
if(!this.$.nativeInput){this.$.nativeInput=this.$$('input');}if(this.inputElement&&this._typesThatHaveText.indexOf(this.$.nativeInput.type)!==-1){this.alwaysFloatLabel=true;}// Only validate when attached if the input already has a value.
if(!!this.inputElement.bindValue){this.$.container._handleValueAndAutoValidate(this.inputElement);}}});var template$9=html(_templateObject21_d98ac2c0a07c11eaa53fe90f40c8b4df());template$9.setAttribute('style','display: none;');document.body.appendChild(template$9.content);Polymer({_template:html(_templateObject22_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-material',properties:{/**
     * The z-depth of this element, from 0-5. Setting to 0 will remove the
     * shadow, and each increasing number greater than 0 will be "deeper"
     * than the last.
     *
     * @attribute elevation
     * @type number
     * @default 1
     */elevation:{type:Number,reflectToAttribute:true,value:1},/**
     * Set this to true to animate the shadow when setting a new
     * `elevation` value.
     *
     * @attribute animated
     * @type boolean
     * @default false
     */animated:{type:Boolean,reflectToAttribute:true,value:false}}});var PaperSpinnerBehavior={properties:{/**
     * Displays the spinner.
     */active:{type:Boolean,value:false,reflectToAttribute:true,observer:'__activeChanged'},/**
     * Alternative text content for accessibility support.
     * If alt is present, it will add an aria-label whose content matches alt
     * when active. If alt is not present, it will default to 'loading' as the
     * alt value.
     */alt:{type:String,value:'loading',observer:'__altChanged'},__coolingDown:{type:Boolean,value:false}},__computeContainerClasses:function __computeContainerClasses(active,coolingDown){return[active||coolingDown?'active':'',coolingDown?'cooldown':''].join(' ');},__activeChanged:function __activeChanged(active,old){this.__setAriaHidden(!active);this.__coolingDown=!active&&old;},__altChanged:function __altChanged(alt){// user-provided `aria-label` takes precedence over prototype default
if(alt==='loading'){this.alt=this.getAttribute('aria-label')||alt;}else{this.__setAriaHidden(alt==='');this.setAttribute('aria-label',alt);}},__setAriaHidden:function __setAriaHidden(hidden){var attr='aria-hidden';if(hidden){this.setAttribute(attr,'true');}else{this.removeAttribute(attr);}},__reset:function __reset(){this.active=false;this.__coolingDown=false;}};_exports.PaperSpinnerBehavior=PaperSpinnerBehavior;var paperSpinnerBehavior={__proto__:null,PaperSpinnerBehavior:PaperSpinnerBehavior};/**
   @license
   Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
   This code may only be used under the BSD style license found at
   http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
   http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
   found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
   part of the polymer project is also subject to an additional IP rights grant
   found at http://polymer.github.io/PATENTS.txt
   */_exports.$paperSpinnerBehavior=paperSpinnerBehavior;var $_documentContainer$1=document.createElement('template');$_documentContainer$1.setAttribute('style','display: none;');$_documentContainer$1.innerHTML="<dom-module id=\"paper-spinner-styles\">\n  <template>\n    <style>\n      /*\n      /**************************/\n      /* STYLES FOR THE SPINNER */\n      /**************************/\n\n      /*\n       * Constants:\n       *      ARCSIZE     = 270 degrees (amount of circle the arc takes up)\n       *      ARCTIME     = 1333ms (time it takes to expand and contract arc)\n       *      ARCSTARTROT = 216 degrees (how much the start location of the arc\n       *                                should rotate each time, 216 gives us a\n       *                                5 pointed star shape (it's 360/5 * 3).\n       *                                For a 7 pointed star, we might do\n       *                                360/7 * 3 = 154.286)\n       *      SHRINK_TIME = 400ms\n       */\n\n      :host {\n        display: inline-block;\n        position: relative;\n        width: 28px;\n        height: 28px;\n\n        /* 360 * ARCTIME / (ARCSTARTROT + (360-ARCSIZE)) */\n        --paper-spinner-container-rotation-duration: 1568ms;\n\n        /* ARCTIME */\n        --paper-spinner-expand-contract-duration: 1333ms;\n\n        /* 4 * ARCTIME */\n        --paper-spinner-full-cycle-duration: 5332ms;\n\n        /* SHRINK_TIME */\n        --paper-spinner-cooldown-duration: 400ms;\n      }\n\n      #spinnerContainer {\n        width: 100%;\n        height: 100%;\n\n        /* The spinner does not have any contents that would have to be\n         * flipped if the direction changes. Always use ltr so that the\n         * style works out correctly in both cases. */\n        direction: ltr;\n      }\n\n      #spinnerContainer.active {\n        -webkit-animation: container-rotate var(--paper-spinner-container-rotation-duration) linear infinite;\n        animation: container-rotate var(--paper-spinner-container-rotation-duration) linear infinite;\n      }\n\n      @-webkit-keyframes container-rotate {\n        to { -webkit-transform: rotate(360deg) }\n      }\n\n      @keyframes container-rotate {\n        to { transform: rotate(360deg) }\n      }\n\n      .spinner-layer {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        white-space: nowrap;\n        color: var(--paper-spinner-color, var(--google-blue-500));\n      }\n\n      .layer-1 {\n        color: var(--paper-spinner-layer-1-color, var(--google-blue-500));\n      }\n\n      .layer-2 {\n        color: var(--paper-spinner-layer-2-color, var(--google-red-500));\n      }\n\n      .layer-3 {\n        color: var(--paper-spinner-layer-3-color, var(--google-yellow-500));\n      }\n\n      .layer-4 {\n        color: var(--paper-spinner-layer-4-color, var(--google-green-500));\n      }\n\n      /**\n       * IMPORTANT NOTE ABOUT CSS ANIMATION PROPERTIES (keanulee):\n       *\n       * iOS Safari (tested on iOS 8.1) does not handle animation-delay very well - it doesn't\n       * guarantee that the animation will start _exactly_ after that value. So we avoid using\n       * animation-delay and instead set custom keyframes for each color (as layer-2undant as it\n       * seems).\n       */\n      .active .spinner-layer {\n        -webkit-animation-name: fill-unfill-rotate;\n        -webkit-animation-duration: var(--paper-spinner-full-cycle-duration);\n        -webkit-animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);\n        -webkit-animation-iteration-count: infinite;\n        animation-name: fill-unfill-rotate;\n        animation-duration: var(--paper-spinner-full-cycle-duration);\n        animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);\n        animation-iteration-count: infinite;\n        opacity: 1;\n      }\n\n      .active .spinner-layer.layer-1 {\n        -webkit-animation-name: fill-unfill-rotate, layer-1-fade-in-out;\n        animation-name: fill-unfill-rotate, layer-1-fade-in-out;\n      }\n\n      .active .spinner-layer.layer-2 {\n        -webkit-animation-name: fill-unfill-rotate, layer-2-fade-in-out;\n        animation-name: fill-unfill-rotate, layer-2-fade-in-out;\n      }\n\n      .active .spinner-layer.layer-3 {\n        -webkit-animation-name: fill-unfill-rotate, layer-3-fade-in-out;\n        animation-name: fill-unfill-rotate, layer-3-fade-in-out;\n      }\n\n      .active .spinner-layer.layer-4 {\n        -webkit-animation-name: fill-unfill-rotate, layer-4-fade-in-out;\n        animation-name: fill-unfill-rotate, layer-4-fade-in-out;\n      }\n\n      @-webkit-keyframes fill-unfill-rotate {\n        12.5% { -webkit-transform: rotate(135deg) } /* 0.5 * ARCSIZE */\n        25%   { -webkit-transform: rotate(270deg) } /* 1   * ARCSIZE */\n        37.5% { -webkit-transform: rotate(405deg) } /* 1.5 * ARCSIZE */\n        50%   { -webkit-transform: rotate(540deg) } /* 2   * ARCSIZE */\n        62.5% { -webkit-transform: rotate(675deg) } /* 2.5 * ARCSIZE */\n        75%   { -webkit-transform: rotate(810deg) } /* 3   * ARCSIZE */\n        87.5% { -webkit-transform: rotate(945deg) } /* 3.5 * ARCSIZE */\n        to    { -webkit-transform: rotate(1080deg) } /* 4   * ARCSIZE */\n      }\n\n      @keyframes fill-unfill-rotate {\n        12.5% { transform: rotate(135deg) } /* 0.5 * ARCSIZE */\n        25%   { transform: rotate(270deg) } /* 1   * ARCSIZE */\n        37.5% { transform: rotate(405deg) } /* 1.5 * ARCSIZE */\n        50%   { transform: rotate(540deg) } /* 2   * ARCSIZE */\n        62.5% { transform: rotate(675deg) } /* 2.5 * ARCSIZE */\n        75%   { transform: rotate(810deg) } /* 3   * ARCSIZE */\n        87.5% { transform: rotate(945deg) } /* 3.5 * ARCSIZE */\n        to    { transform: rotate(1080deg) } /* 4   * ARCSIZE */\n      }\n\n      @-webkit-keyframes layer-1-fade-in-out {\n        0% { opacity: 1 }\n        25% { opacity: 1 }\n        26% { opacity: 0 }\n        89% { opacity: 0 }\n        90% { opacity: 1 }\n        to { opacity: 1 }\n      }\n\n      @keyframes layer-1-fade-in-out {\n        0% { opacity: 1 }\n        25% { opacity: 1 }\n        26% { opacity: 0 }\n        89% { opacity: 0 }\n        90% { opacity: 1 }\n        to { opacity: 1 }\n      }\n\n      @-webkit-keyframes layer-2-fade-in-out {\n        0% { opacity: 0 }\n        15% { opacity: 0 }\n        25% { opacity: 1 }\n        50% { opacity: 1 }\n        51% { opacity: 0 }\n        to { opacity: 0 }\n      }\n\n      @keyframes layer-2-fade-in-out {\n        0% { opacity: 0 }\n        15% { opacity: 0 }\n        25% { opacity: 1 }\n        50% { opacity: 1 }\n        51% { opacity: 0 }\n        to { opacity: 0 }\n      }\n\n      @-webkit-keyframes layer-3-fade-in-out {\n        0% { opacity: 0 }\n        40% { opacity: 0 }\n        50% { opacity: 1 }\n        75% { opacity: 1 }\n        76% { opacity: 0 }\n        to { opacity: 0 }\n      }\n\n      @keyframes layer-3-fade-in-out {\n        0% { opacity: 0 }\n        40% { opacity: 0 }\n        50% { opacity: 1 }\n        75% { opacity: 1 }\n        76% { opacity: 0 }\n        to { opacity: 0 }\n      }\n\n      @-webkit-keyframes layer-4-fade-in-out {\n        0% { opacity: 0 }\n        65% { opacity: 0 }\n        75% { opacity: 1 }\n        90% { opacity: 1 }\n        to { opacity: 0 }\n      }\n\n      @keyframes layer-4-fade-in-out {\n        0% { opacity: 0 }\n        65% { opacity: 0 }\n        75% { opacity: 1 }\n        90% { opacity: 1 }\n        to { opacity: 0 }\n      }\n\n      .circle-clipper {\n        display: inline-block;\n        position: relative;\n        width: 50%;\n        height: 100%;\n        overflow: hidden;\n      }\n\n      /**\n       * Patch the gap that appear between the two adjacent div.circle-clipper while the\n       * spinner is rotating (appears on Chrome 50, Safari 9.1.1, and Edge).\n       */\n      .spinner-layer::after {\n        content: '';\n        left: 45%;\n        width: 10%;\n        border-top-style: solid;\n      }\n\n      .spinner-layer::after,\n      .circle-clipper .circle {\n        box-sizing: border-box;\n        position: absolute;\n        top: 0;\n        border-width: var(--paper-spinner-stroke-width, 3px);\n        border-radius: 50%;\n      }\n\n      .circle-clipper .circle {\n        bottom: 0;\n        width: 200%;\n        border-style: solid;\n        border-bottom-color: transparent !important;\n      }\n\n      .circle-clipper.left .circle {\n        left: 0;\n        border-right-color: transparent !important;\n        -webkit-transform: rotate(129deg);\n        transform: rotate(129deg);\n      }\n\n      .circle-clipper.right .circle {\n        left: -100%;\n        border-left-color: transparent !important;\n        -webkit-transform: rotate(-129deg);\n        transform: rotate(-129deg);\n      }\n\n      .active .gap-patch::after,\n      .active .circle-clipper .circle {\n        -webkit-animation-duration: var(--paper-spinner-expand-contract-duration);\n        -webkit-animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);\n        -webkit-animation-iteration-count: infinite;\n        animation-duration: var(--paper-spinner-expand-contract-duration);\n        animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);\n        animation-iteration-count: infinite;\n      }\n\n      .active .circle-clipper.left .circle {\n        -webkit-animation-name: left-spin;\n        animation-name: left-spin;\n      }\n\n      .active .circle-clipper.right .circle {\n        -webkit-animation-name: right-spin;\n        animation-name: right-spin;\n      }\n\n      @-webkit-keyframes left-spin {\n        0% { -webkit-transform: rotate(130deg) }\n        50% { -webkit-transform: rotate(-5deg) }\n        to { -webkit-transform: rotate(130deg) }\n      }\n\n      @keyframes left-spin {\n        0% { transform: rotate(130deg) }\n        50% { transform: rotate(-5deg) }\n        to { transform: rotate(130deg) }\n      }\n\n      @-webkit-keyframes right-spin {\n        0% { -webkit-transform: rotate(-130deg) }\n        50% { -webkit-transform: rotate(5deg) }\n        to { -webkit-transform: rotate(-130deg) }\n      }\n\n      @keyframes right-spin {\n        0% { transform: rotate(-130deg) }\n        50% { transform: rotate(5deg) }\n        to { transform: rotate(-130deg) }\n      }\n\n      #spinnerContainer.cooldown {\n        -webkit-animation: container-rotate var(--paper-spinner-container-rotation-duration) linear infinite, fade-out var(--paper-spinner-cooldown-duration) cubic-bezier(0.4, 0.0, 0.2, 1);\n        animation: container-rotate var(--paper-spinner-container-rotation-duration) linear infinite, fade-out var(--paper-spinner-cooldown-duration) cubic-bezier(0.4, 0.0, 0.2, 1);\n      }\n\n      @-webkit-keyframes fade-out {\n        0% { opacity: 1 }\n        to { opacity: 0 }\n      }\n\n      @keyframes fade-out {\n        0% { opacity: 1 }\n        to { opacity: 0 }\n      }\n    </style>\n  </template>\n</dom-module>";document.head.appendChild($_documentContainer$1.content);var template$a=html(_templateObject23_d98ac2c0a07c11eaa53fe90f40c8b4df());template$a.setAttribute('strip-whitespace','');/**
                                                 Material design: [Progress &
                                                 activity](https://www.google.com/design/spec/components/progress-activity.html)
                                                                                               Element providing a multiple color material design circular spinner.
                                                                                                   <paper-spinner active></paper-spinner>
                                                                                               The default spinner cycles between four layers of colors; by default they are
                                                 blue, red, yellow and green. It can be customized to cycle between four
                                                 different colors. Use <paper-spinner-lite> for single color spinners.
                                                                                               ### Accessibility
                                                                                               Alt attribute should be set to provide adequate context for accessibility. If
                                                 not provided, it defaults to 'loading'. Empty alt can be provided to mark the
                                                 element as decorative if alternative content is provided in another form (e.g. a
                                                 text block following the spinner).
                                                                                                   <paper-spinner alt="Loading contacts list" active></paper-spinner>
                                                                                               ### Styling
                                                                                               The following custom properties and mixins are available for styling:
                                                                                               Custom property | Description | Default
                                                 ----------------|-------------|----------
                                                 `--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`
                                                 `--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`
                                                 `--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`
                                                 `--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`
                                                 `--paper-spinner-stroke-width` | The width of the spinner stroke | 3px
                                                                                               @group Paper Elements
                                                 @element paper-spinner
                                                 @hero hero.svg
                                                 @demo demo/index.html
                                                 */Polymer({_template:template$a,is:'paper-spinner',behaviors:[PaperSpinnerBehavior]});var currentToast=null;/**
                         Material design: [Snackbars &
                         toasts](https://www.google.com/design/spec/components/snackbars-toasts.html)
                         
                         `paper-toast` provides a subtle notification toast. Only one `paper-toast` will
                         be visible on screen.
                         
                         Use `opened` to show the toast:
                         
                         Example:
                         
                             <paper-toast text="Hello world!" opened></paper-toast>
                         
                         Also `open()` or `show()` can be used to show the toast:
                         
                         Example:
                         
                             <paper-button on-click="openToast">Open Toast</paper-button>
                             <paper-toast id="toast" text="Hello world!"></paper-toast>
                         
                             ...
                         
                             openToast: function() {
                               this.$.toast.open();
                             }
                         
                         Set `duration` to 0, a negative number or Infinity to persist the toast on
                         screen:
                         
                         Example:
                         
                             <paper-toast text="Terms and conditions" opened duration="0">
                               <a href="#">Show more</a>
                             </paper-toast>
                         
                         
                         ### Styling
                         The following custom properties and mixins are available for styling:
                         
                         Custom property | Description | Default
                         ----------------|-------------|----------
                         `--paper-toast-background-color` | The paper-toast background-color | `#323232`
                         `--paper-toast-color` | The paper-toast color | `#f1f1f1`
                         
                         This element applies the mixin `--paper-font-common-base` but does not import
                         `paper-styles/typography.html`. In order to apply the `Roboto` font to this
                         element, make sure you've imported `paper-styles/typography.html`.
                         
                         @group Paper Elements
                         @element paper-toast
                         @demo demo/index.html
                         @hero hero.svg
                         */Polymer({_template:html(_templateObject24_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:'paper-toast',behaviors:[IronOverlayBehavior],properties:{/**
     * The element to fit `this` into.
     * Overridden from `Polymer.IronFitBehavior`.
     */fitInto:{type:Object,value:window,observer:'_onFitIntoChanged'},/**
     * The orientation against which to align the dropdown content
     * horizontally relative to `positionTarget`.
     * Overridden from `Polymer.IronFitBehavior`.
     */horizontalAlign:{type:String,value:'left'},/**
     * The orientation against which to align the dropdown content
     * vertically relative to `positionTarget`.
     * Overridden from `Polymer.IronFitBehavior`.
     */verticalAlign:{type:String,value:'bottom'},/**
     * The duration in milliseconds to show the toast.
     * Set to `0`, a negative number, or `Infinity`, to disable the
     * toast auto-closing.
     */duration:{type:Number,value:3000},/**
     * The text to display in the toast.
     */text:{type:String,value:''},/**
     * Overridden from `IronOverlayBehavior`.
     * Set to false to enable closing of the toast by clicking outside it.
     */noCancelOnOutsideClick:{type:Boolean,value:true},/**
     * Overridden from `IronOverlayBehavior`.
     * Set to true to disable auto-focusing the toast or child nodes with
     * the `autofocus` attribute` when the overlay is opened.
     */noAutoFocus:{type:Boolean,value:true}},listeners:{'transitionend':'__onTransitionEnd'},/**
   * Read-only. Deprecated. Use `opened` from `IronOverlayBehavior`.
   * @property visible
   * @deprecated
   */get visible(){Base._warn('`visible` is deprecated, use `opened` instead');return this.opened;},/**
   * Read-only. Can auto-close if duration is a positive finite number.
   * @property _canAutoClose
   */get _canAutoClose(){return this.duration>0&&this.duration!==Infinity;},created:function created(){this._autoClose=null;IronA11yAnnouncer.requestAvailability();},/**
   * Show the toast. Without arguments, this is the same as `open()` from
   * `IronOverlayBehavior`.
   * @param {(Object|string)=} properties Properties to be set before opening the toast.
   * e.g. `toast.show('hello')` or `toast.show({text: 'hello', duration: 3000})`
   */show:function show(properties){if(typeof properties=='string'){properties={text:properties};}for(var property in properties){if(property.indexOf('_')===0){Base._warn('The property "'+property+'" is private and was not set.');}else if(property in this){this[property]=properties[property];}else{Base._warn('The property "'+property+'" is not valid.');}}this.open();},/**
   * Hide the toast. Same as `close()` from `IronOverlayBehavior`.
   */hide:function hide(){this.close();},/**
   * Called on transitions of the toast, indicating a finished animation
   * @private
   */__onTransitionEnd:function __onTransitionEnd(e){// there are different transitions that are happening when opening and
// closing the toast. The last one so far is for `opacity`.
// This marks the end of the transition, so we check for this to determine
// if this is the correct event.
if(e&&e.target===this&&e.propertyName==='opacity'){if(this.opened){this._finishRenderOpened();}else{this._finishRenderClosed();}}},/**
   * Overridden from `IronOverlayBehavior`.
   * Called when the value of `opened` changes.
   */_openedChanged:function _openedChanged(){if(this._autoClose!==null){this.cancelAsync(this._autoClose);this._autoClose=null;}if(this.opened){if(currentToast&&currentToast!==this){currentToast.close();}currentToast=this;this.fire('iron-announce',{text:this.text});if(this._canAutoClose){this._autoClose=this.async(this.close,this.duration);}}else if(currentToast===this){currentToast=null;}IronOverlayBehaviorImpl._openedChanged.apply(this,arguments);},/**
   * Overridden from `IronOverlayBehavior`.
   */_renderOpened:function _renderOpened(){this.classList.add('paper-toast-open');},/**
   * Overridden from `IronOverlayBehavior`.
   */_renderClosed:function _renderClosed(){this.classList.remove('paper-toast-open');},/**
   * @private
   */_onFitIntoChanged:function _onFitIntoChanged(fitInto){this.positionTarget=fitInto;}/**
     * Fired when `paper-toast` is opened.
     *
     * @event 'iron-announce'
     * @param {{text: string}} detail Contains text that will be announced.
     */});var TriBlockViewResponsiveBehavior={properties:{/**
     * `(Deprecated)` True if the screen width is less than or equal to the size specified by the <b>smallScreenMaxWidth</b> property.
     */smallScreen:{type:Boolean,notify:true,value:false,reflectToAttribute:true},/**
     * True if the screen width is less than or equal to the size specified by the <b>smallScreenMaxWidth</b> property.
     */smallScreenWidth:{type:Boolean,notify:true,value:false,reflectToAttribute:true},/**
     * The maximum width of a small screen.
     */smallScreenMaxWidth:{type:String,value:"600px"},/**
     * True if the screen height is less than or equal to the size specified by the <b>smallScreenMaxHeight</b> property.
     */smallScreenHeight:{type:Boolean,notify:true,value:false,reflectToAttribute:true},/**
     * The maximum height of a small screen.
     */smallScreenMaxHeight:{type:String,value:"800px"},/**
     * True if the screen width is greater than or equal to the size specified by the <b>mediumScreenMinWidth</b> property, 
     * and less than or equal to the size specified by the <b>mediumScreenMaxWidth</b> property.
     */mediumScreenWidth:{type:Boolean,notify:true,value:false,reflectToAttribute:true},/**
     * The maximum width of a medium screen.
     */mediumScreenMaxWidth:{type:String,value:"1024px"},/**
     * The minimum width of a medium screen.
     */mediumScreenMinWidth:{type:String,value:"601px"},/**
     * Disable the automatic detection of screen size changes. 
     * If true, the properties smallScreenWidth, smallScreenHeight and mediumScreenWidth will not be set by this behavior.
     * This can be used when a parent component already computed the responsive properties and it will propagate those properties to its children.
     */disableScreenSizeDetection:{type:Boolean,value:false}},attached:function attached(){this._setMediaQuery();},_setMediaQuery:function _setMediaQuery(){if(!this._mediaQueryIsSet&&!this.disableScreenSizeDetection){this._mediaQuery=document.createElement("iron-media-query");dom(this.root).appendChild(this._mediaQuery);this._mediaQuery.addEventListener("query-matches-changed",this._handleSmallScreen.bind(this));this._mediaQuery.query=this.smallScreenMaxWidth?"(max-width:"+this.smallScreenMaxWidth+")":"(max-width: 600px)";this._heightMediaQuery=document.createElement("iron-media-query");dom(this.root).appendChild(this._heightMediaQuery);this._heightMediaQuery.addEventListener("query-matches-changed",this._handleSmallScreenHeight.bind(this));this._heightMediaQuery.query=this.smallScreenMaxHeight?"(max-height:"+this.smallScreenMaxHeight+")":"(max-height: 800px)";this._mediumMediaQuery=document.createElement("iron-media-query");dom(this.root).appendChild(this._mediumMediaQuery);this._mediumMediaQuery.addEventListener("query-matches-changed",this._handleMediumScreenWidth.bind(this));this._mediumMediaQuery.query=this.mediumScreenMinWidth&&this.mediumScreenMaxWidth?"(min-width:"+this.mediumScreenMinWidth+") and (max-width:"+this.mediumScreenMaxWidth+")":"(max-width: 601px) and (max-width: 1024px)";this._mediaQueryIsSet=true;}},_handleSmallScreen:function _handleSmallScreen(e){var isSmallScreen=e.detail.value;this.smallScreen=isSmallScreen;this.smallScreenWidth=isSmallScreen;},_handleSmallScreenHeight:function _handleSmallScreenHeight(e){var isSmallScreenHeight=e.detail.value;this.smallScreenHeight=isSmallScreenHeight;},_handleMediumScreenWidth:function _handleMediumScreenWidth(e){var isMediumScreenWidth=e.detail.value;this.mediumScreenWidth=isMediumScreenWidth;}};_exports.TriBlockViewResponsiveBehavior=TriBlockViewResponsiveBehavior;var triblockViewResponsiveBehavior={__proto__:null,TriBlockViewResponsiveBehavior:TriBlockViewResponsiveBehavior};_exports.$triblockViewResponsiveBehavior=triblockViewResponsiveBehavior;function assertParametersAreDefined(pArguments){if(!pArguments){return true;}if(pArguments.length==1){/*
     * For a single property, it always return true because in Polymer 1 the observer is called each time an observable change 
     * is made to one of the dependencies, even if the new value for the path is undefined.
     */return true;}for(var _i79=0,l=pArguments.length;_i79<l;_i79++){l;if(pArguments[_i79]===undefined||pArguments[_i79]&&pArguments[_i79].hasOwnProperty('value')&&pArguments[_i79].hasOwnProperty('base')&&pArguments[_i79].value===undefined&&pArguments[_i79].base===undefined){return false;}}return true;};function getResourceUrl(){var resourceUrlInputElement=document.querySelector("#resourceUrl");if(resourceUrlInputElement){return window.location.origin+resourceUrlInputElement.getAttribute("value");}else{var match=window.location.href.match(/\/l\/(?!p)/);if(match){return window.location.href.substring(0,match.index+2);}}}function getModuleUrl(modulePath){if(!modulePath){return null;}modulePath=modulePath.replace("../","").replace("./","");if(modulePath[0]=="/"){modulePath=modulePath.slice(1);}return{url:getResourceUrl()+"/"+modulePath};}var importedJsFiles={};function importJs(jsImportPathList,hostComponentRelativePath){if(!jsImportPathList||!hostComponentRelativePath){return Promise.reject();}if(!Array.isArray(jsImportPathList)){jsImportPathList=[jsImportPathList];}return new Promise(_doImportJs.bind(null,jsImportPathList,hostComponentRelativePath));}function _doImportJs(jsImportPathList,hostComponentRelativePath,resolve,reject,index){if(!index){index=0;}if(index>=jsImportPathList.length){resolve();return;}var jsImportPath=jsImportPathList[index];_createScriptTag(jsImportPath,hostComponentRelativePath).then(function(){_doImportJs(jsImportPathList,hostComponentRelativePath,resolve,reject,++index);}).catch(function(error){reject(error);});}function _createScriptTag(jsImportPath,hostComponentRelativePath){var resolvedUrl=_resolveUrl(jsImportPath,getModuleUrl(hostComponentRelativePath).url);if(importedJsFiles[resolvedUrl]){return importedJsFiles[resolvedUrl];}var promiseResolve,promiseReject;var scriptPromise=new Promise(function(resolve,reject){promiseResolve=resolve;promiseReject=reject;});var scriptTag=document.createElement("script");scriptTag.onload=function(event){promiseResolve(event);};scriptTag.onerror=function(event){promiseReject(event.error);};scriptTag.setAttribute("async",false);scriptTag.setAttribute("src",resolvedUrl);importedJsFiles[resolvedUrl]=scriptPromise;document.head.appendChild(scriptTag);return scriptPromise;}var importedCssFiles={};function importCss(cssImportList,hostComponentRelativePath){if(!cssImportList){return Promise.reject();}if(!Array.isArray(cssImportList)){cssImportList=[cssImportList];}return new Promise(_doImportCss.bind(null,cssImportList,hostComponentRelativePath));}function _doImportCss(cssImportList,hostComponentRelativePath,resolve,reject,index){if(!index){index=0;}if(index>=cssImportList.length){resolve();return;}var cssImport=cssImportList[index];_createCssTag(cssImport,hostComponentRelativePath).then(function(){_doImportCss(cssImportList,hostComponentRelativePath,resolve,reject,++index);}).catch(function(error){reject(error);});}function _createCssTag(cssImport,hostComponentRelativePath){var importPath=cssImport.search(/http/)==-1?pathFromUrl(getModuleUrl(hostComponentRelativePath).url):"";var fullPath="".concat(importPath).concat(cssImport);if(importedCssFiles[fullPath]){return importedCssFiles[fullPath];}var promiseResolve,promiseReject;var cssPromise=new Promise(function(resolve,reject){promiseResolve=resolve;promiseReject=reject;});var linkTag=document.createElement("link");linkTag.onload=function(event){promiseResolve(event);};linkTag.onerror=function(event){promiseReject(event.error);};linkTag.setAttribute("rel","stylesheet");linkTag.setAttribute("type","text/css");linkTag.setAttribute("href",fullPath);importedCssFiles[fullPath]=cssPromise;document.head.appendChild(linkTag);return cssPromise;}function addCustomStyle(customStyleSource){var customStyleTag=document.createElement("template");customStyleTag.setAttribute("style","display: none;");customStyleTag.innerHTML=customStyleSource;document.head.appendChild(customStyleTag.content);}function addDomStyleModule(domModuleSource,hostComponentRelativePath){var importPath=pathFromUrl(getModuleUrl(hostComponentRelativePath).url);var templateTag=document.createElement("template");templateTag.setAttribute("style","display: none;");templateTag.innerHTML=resolveCss(domModuleSource,importPath);document.head.appendChild(templateTag.content);}function addDomNodes(domNodesSource){var domNodesContainer=document.createElement("template");domNodesContainer.setAttribute("style","display: none;");domNodesContainer.innerHTML=domNodesSource;document.head.appendChild(domNodesContainer.content);}function formatMarkupForDemo(source){var index=source.innerHTML.search("<template");return source.innerHTML.substring(0,index);}var tricoreUtil={__proto__:null,assertParametersAreDefined:assertParametersAreDefined,getResourceUrl:getResourceUrl,getModuleUrl:getModuleUrl,importJs:importJs,importCss:importCss,addCustomStyle:addCustomStyle,addDomStyleModule:addDomStyleModule,addDomNodes:addDomNodes,formatMarkupForDemo:formatMarkupForDemo};_exports.$tricoreUtil=tricoreUtil;var domNodesContainer="\n<iron-iconset-svg name=\"ibm\" size=\"32\">\n \n<!--\n\t  icon: access-password-key (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"access-password-key\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M25,1L12.611,13.388C11.785,13.138,10.908,13,10,13c-4.971,0-9,4.029-9,9s4.029,9,9,9s9-4.029,9-9\n\t\tc0-0.909-0.138-1.785-0.389-2.612L21,17v-2h2l8-8V1H25z M29,6.171L22.172,13H21h-2v2v1.171l-1.803,1.802l-0.848,0.848l0.348,1.147\n\t\tC16.898,20.63,17,21.313,17,22c0,3.86-3.141,7-7,7s-7-3.14-7-7s3.141-7,7-7c0.686,0,1.37,0.102,2.031,0.302l1.146,0.348\n\t\tl0.848-0.848L25.828,3H29V6.171z\"></path>\n\t<circle cx=\"8\" cy=\"24\" r=\"2\"></circle>\n\t<rect x=\"19.757\" y=\"7.5\" transform=\"matrix(-0.7071 0.7071 -0.7071 -0.7071 46.6274 -3.3137)\" width=\"8.485\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: activity (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"activity\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"21,14.414 25.293,18.707 26.707,17.293 21,11.586 11,21.586 6.707,17.293 5.293,18.707 11,24.414 \t\"></polygon>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: add-new (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"add-new\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"17,9 15,9 15,15 9,15 9,17 15,17 15,23 17,23 17,17 23,17 23,15 17,15 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: admin (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"admin\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,21c5.523,0,10-4.477,10-10S21.523,1,16,1S6,5.477,6,11S10.477,21,16,21z M16,3c4.411,0,8,3.589,8,8s-3.589,8-8,8\n\t\ts-8-3.589-8-8S11.589,3,16,3z\"></path>\n\t<path d=\"M24,23H8c-2.209,0-4,1.791-4,4v4h24v-4C28,24.791,26.209,23,24,23z\"></path>\n\t<polygon points=\"21.207,8.707 19.793,7.293 14.5,12.586 12.207,10.293 10.793,11.707 14.5,15.414 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: aligncenter (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"aligncenter\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"5\" y=\"6\" width=\"22\" height=\"2\"></rect>\n\t<rect x=\"9\" y=\"12\" width=\"14\" height=\"2\"></rect>\n\t<rect x=\"3\" y=\"18\" width=\"26\" height=\"2\"></rect>\n\t<rect x=\"9\" y=\"24\" width=\"14\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: alignleft (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"alignleft\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"1\" y=\"6\" width=\"22\" height=\"2\"></rect>\n\t<rect x=\"1\" y=\"12\" width=\"14\" height=\"2\"></rect>\n\t<rect x=\"1\" y=\"18\" width=\"26\" height=\"2\"></rect>\n\t<rect x=\"1\" y=\"24\" width=\"14\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: alignright (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"alignright\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"9\" y=\"6\" width=\"22\" height=\"2\"></rect>\n\t<rect x=\"17\" y=\"12\" width=\"14\" height=\"2\"></rect>\n\t<rect x=\"5\" y=\"18\" width=\"26\" height=\"2\"></rect>\n\t<rect x=\"17\" y=\"24\" width=\"14\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: api (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"api\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M14.16,15.715c-0.107,0-0.179-0.03-0.215-0.09c-0.037-0.06-0.055-0.16-0.055-0.3v-2.66c0-0.274-0.06-0.505-0.18-0.695\n\t\tc-0.12-0.19-0.278-0.345-0.475-0.465c-0.197-0.12-0.419-0.207-0.665-0.26c-0.247-0.053-0.497-0.08-0.75-0.08\n\t\tc-0.287,0-0.566,0.027-0.84,0.08c-0.273,0.053-0.519,0.146-0.735,0.28c-0.217,0.134-0.395,0.31-0.535,0.53\n\t\tc-0.14,0.22-0.22,0.497-0.24,0.83h1.14c0.027-0.28,0.143-0.487,0.35-0.62c0.207-0.133,0.47-0.2,0.79-0.2\n\t\tc0.113,0,0.233,0.009,0.36,0.025c0.126,0.017,0.242,0.05,0.345,0.1c0.103,0.05,0.19,0.122,0.26,0.215\n\t\tc0.07,0.093,0.105,0.213,0.105,0.36c0,0.167-0.042,0.292-0.125,0.375c-0.083,0.083-0.197,0.145-0.34,0.185\n\t\tc-0.144,0.04-0.309,0.068-0.495,0.085c-0.187,0.017-0.383,0.045-0.59,0.085c-0.24,0.027-0.479,0.065-0.715,0.115\n\t\tc-0.237,0.05-0.45,0.132-0.64,0.245c-0.19,0.114-0.344,0.27-0.46,0.47c-0.117,0.2-0.175,0.46-0.175,0.78\n\t\tc0,0.253,0.048,0.475,0.145,0.665c0.097,0.19,0.227,0.347,0.39,0.47c0.163,0.124,0.352,0.217,0.565,0.28\n\t\tc0.213,0.063,0.436,0.095,0.67,0.095c0.307,0,0.625-0.05,0.955-0.15c0.33-0.1,0.608-0.26,0.835-0.48\n\t\tc0.047,0.234,0.147,0.397,0.3,0.49c0.153,0.093,0.346,0.14,0.58,0.14c0.047,0,0.104-0.003,0.17-0.01\n\t\tc0.066-0.007,0.133-0.017,0.2-0.03c0.067-0.014,0.132-0.028,0.195-0.045c0.063-0.017,0.115-0.032,0.155-0.045v-0.79\n\t\tc-0.06,0.013-0.113,0.02-0.16,0.02C14.233,15.715,14.193,15.715,14.16,15.715z M12.75,14.734c0,0.18-0.043,0.332-0.13,0.455\n\t\tc-0.087,0.123-0.195,0.225-0.325,0.305c-0.13,0.08-0.269,0.137-0.415,0.17c-0.146,0.034-0.283,0.05-0.41,0.05\n\t\tc-0.1,0-0.211-0.01-0.335-0.03c-0.123-0.02-0.236-0.055-0.34-0.105s-0.192-0.118-0.265-0.205c-0.073-0.086-0.11-0.193-0.11-0.32\n\t\tc0-0.146,0.025-0.271,0.075-0.375c0.05-0.104,0.118-0.186,0.205-0.25c0.086-0.063,0.186-0.113,0.3-0.15\n\t\tc0.113-0.037,0.23-0.065,0.35-0.085c0.253-0.047,0.506-0.082,0.76-0.105c0.253-0.023,0.467-0.092,0.64-0.205V14.734z\"></path>\n\t<path d=\"M19.67,11.97c-0.2-0.25-0.452-0.447-0.755-0.59c-0.303-0.143-0.659-0.215-1.065-0.215c-0.333,0-0.644,0.065-0.93,0.195\n\t\tc-0.287,0.13-0.51,0.345-0.67,0.645h-0.02v-0.7h-1.08v7.08h1.14v-2.58h0.02c0.086,0.14,0.195,0.262,0.325,0.365\n\t\tc0.13,0.104,0.271,0.189,0.425,0.255c0.153,0.066,0.313,0.115,0.48,0.145c0.166,0.03,0.333,0.045,0.5,0.045\n\t\tc0.38,0,0.71-0.075,0.99-0.225c0.28-0.15,0.512-0.35,0.695-0.6c0.183-0.25,0.32-0.538,0.41-0.865\n\t\tc0.09-0.327,0.135-0.664,0.135-1.01c0-0.38-0.05-0.736-0.15-1.07S19.87,12.22,19.67,11.97z M19.055,14.56\n\t\tc-0.05,0.217-0.134,0.41-0.25,0.58c-0.117,0.17-0.265,0.309-0.445,0.415c-0.18,0.106-0.4,0.16-0.66,0.16\n\t\tc-0.233,0-0.438-0.047-0.615-0.14c-0.177-0.093-0.329-0.22-0.455-0.38c-0.126-0.16-0.222-0.352-0.285-0.575\n\t\tc-0.063-0.223-0.095-0.465-0.095-0.725c0-0.553,0.122-0.997,0.365-1.33c0.243-0.333,0.605-0.5,1.085-0.5\n\t\tc0.233,0,0.44,0.052,0.62,0.155c0.18,0.104,0.33,0.24,0.45,0.41c0.12,0.17,0.21,0.365,0.27,0.585c0.06,0.22,0.09,0.446,0.09,0.68\n\t\tC19.13,14.121,19.105,14.343,19.055,14.56z\"></path>\n\t<rect x=\"21.26\" y=\"9.334\" width=\"1.14\" height=\"1.08\"></rect>\n\t<rect x=\"21.26\" y=\"11.305\" width=\"1.14\" height=\"5.17\"></rect>\n\t<path d=\"M3,3v22v4h26v-4V3H3z M5,5h22v18H5V5z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: applications (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"applications\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M25.192,16.192l-1.414-1.414c-0.938,0.938-2.029,1.677-3.242,2.221l-2.32-6.671C19.291,9.61,20,8.389,20,7\n\tc0-1.861-1.278-3.412-3-3.858V1h-2v2.142C13.278,3.588,12,5.139,12,7c0,1.389,0.709,2.61,1.784,3.328L7.056,29.671l1.889,0.657\n\tl3.747-10.773c1.082,0.283,2.195,0.428,3.309,0.428c1.114,0,2.227-0.145,3.309-0.428l3.747,10.773l1.889-0.657l-3.75-10.783\n\tC22.692,18.239,24.04,17.345,25.192,16.192z M16,6c0.552,0,1,0.448,1,1s-0.448,1-1,1c-0.552,0-1-0.448-1-1S15.448,6,16,6z\n\t M13.351,17.66l2.328-6.692C15.787,10.977,15.89,11,16,11c0.11,0,0.213-0.023,0.321-0.032l2.328,6.692\n\tC16.913,18.089,15.087,18.089,13.351,17.66z\"></path>\n</svg>\n<!--\n\t  icon: archive-storage (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"archive-storage\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"13\" y=\"14\" width=\"6\" height=\"2\"></rect>\n\t<path d=\"M1,5v5h2v16v1h6v-1h14v1h6v-1V10h2V5H1z M5,24V12h22v12H5z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: assets (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"assets\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M29,24L28.963,3H3v21h9v3.015l-2,0.003V29h12v-2l-2,0.003V24H29z M5,5h22v15H5V5z\"></path>\n</svg>\n<!--\n\t  icon: attachment (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"attachment\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M8.003,30c-1.876,0-3.639-0.753-4.963-2.12c-2.711-2.801-2.711-7.358,0-10.16L15.62,4.726C17.321,2.968,19.586,2,21.997,2\n\tc2.411,0,4.676,0.968,6.377,2.726c3.491,3.606,3.492,9.475,0.001,13.082L18.128,28.392L16.692,27l10.247-10.583\n\tc2.748-2.839,2.748-7.46-0.001-10.3C25.616,4.752,23.861,4,21.997,4c-1.864,0-3.619,0.752-4.941,2.117L4.477,19.111\n\tc-1.968,2.034-1.969,5.344,0,7.377C5.42,27.463,6.673,28,8.003,28c1.33,0,2.582-0.537,3.525-1.511l9.409-9.719\n\tc1.189-1.228,1.188-3.226,0-4.453c-1.131-1.168-3.09-1.169-4.222-0.001L9.64,19.624l-1.437-1.392l7.074-7.307\n\tc0.945-0.977,2.206-1.515,3.547-1.515c1.342,0,2.602,0.538,3.548,1.515c1.931,1.995,1.932,5.24,0,7.235l-9.408,9.718\n\tC11.642,29.247,9.879,30,8.003,30z\"></path>\n</svg>\n<!--\n\t  icon: availability\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"availability\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<rect x=\"4.9\" y=\"5.2\" width=\"8\" height=\"4\"></rect>\n\t\t<path d=\"M11.9,6.2v2h-6v-2H11.9 M13.9,4.2h-10v6h10V4.2L13.9,4.2z\"></path>\n\t</g>\n\t<rect x=\"7\" y=\"12.7\" width=\"18\" height=\"6\"></rect>\n\t<rect x=\"16.1\" y=\"21.2\" width=\"12\" height=\"6\"></rect>\n\t<rect x=\"1\" y=\"3.5\" width=\"1\" height=\"25\"></rect>\n\t<rect x=\"30\" y=\"3.5\" width=\"1\" height=\"25\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: audio-sound (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"audio-sound\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M5,1v30h22V1H5z M25,29H7V3h18V29z\"></path>\n\t<path d=\"M16,27c3.866,0,7-3.134,7-7c0-3.865-3.134-7-7-7s-7,3.135-7,7C9,23.866,12.134,27,16,27z M16,18c1.104,0,2,0.896,2,2\n\t\ts-0.896,2-2,2s-2-0.896-2-2S14.896,18,16,18z\"></path>\n\t<circle cx=\"16\" cy=\"8\" r=\"2\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: audio (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"audio\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M5,10v12h7l9,9V1l-9,9H5z M10,20H7v-8h3V20z\"></path>\n\t<path d=\"M22,13v6c1.654,0,3-1.346,3-3S23.654,13,22,13z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: backward (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"backward\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"15.3,9.3 8.6,16 15.3,22.7 16.7,21.3 12.4,17 24,17 24,15 12.4,15 16.7,10.7 \t\"></polygon>\n\t<path d=\"M2,16c0,7.7,6.3,14,14,14s14-6.3,14-14S23.7,2,16,2S2,8.3,2,16z M4,16C4,9.4,9.4,4,16,4s12,5.4,12,12s-5.4,12-12,12\n\t\tS4,22.6,4,16z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: back-left-previous (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"back-left-previous\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<polygon points=\"16.707,10.707 15.293,9.293 8.586,16 15.293,22.707 16.707,21.293 12.414,17 24,17 24,15 12.414,15 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: barchart (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"barchart\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"2,26 2,5 1,5 1,26 1,27 2,27 31,27 31,26 \t\"></polygon>\n\t<rect x=\"4\" y=\"16\" width=\"7\" height=\"8\"></rect>\n\t<path d=\"M20,8h-7v16h7V8z M18,22h-3V10h3V22z\"></path>\n\t<rect x=\"22\" y=\"13\" width=\"7\" height=\"1\"></rect>\n\t<rect x=\"22\" y=\"15\" width=\"7\" height=\"1\"></rect>\n\t<rect x=\"22\" y=\"17\" width=\"7\" height=\"1\"></rect>\n\t<rect x=\"22\" y=\"19\" width=\"7\" height=\"1\"></rect>\n\t<rect x=\"22\" y=\"21\" width=\"7\" height=\"1\"></rect>\n\t<rect x=\"22\" y=\"23\" width=\"7\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: bee (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"bee\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M11.843,14h8.313c-0.896-1.205-2.423-2-4.157-2C14.266,12,12.74,12.795,11.843,14z\"></path>\n\t<path d=\"M11.033,16C11.012,16.164,11,16.331,11,16.5V18h10v-1.5c0-0.169-0.012-0.336-0.033-0.5H11.033z\"></path>\n\t<path d=\"M11,21.5c0,0.169,0.012,0.336,0.033,0.5h9.935C20.988,21.836,21,21.669,21,21.5V20H11V21.5z\"></path>\n\t<path d=\"M16,26c1.734,0,3.26-0.795,4.157-2h-8.313C12.74,25.205,14.266,26,16,26z\"></path>\n\t<path d=\"M3.23,15.049c-0.426,0.178-0.826,0.438-1.172,0.783c-0.347,0.347-0.606,0.746-0.783,1.172\n\t\tC1.092,17.446,0.999,17.916,1,18.387c-0.001,0.472,0.092,0.941,0.275,1.383c0.177,0.428,0.436,0.826,0.783,1.173\n\t\tc0.346,0.347,0.747,0.606,1.172,0.783C3.669,21.907,4.138,22,4.606,22c0.002,0,0.005,0,0.007,0c0.002,0,0.005,0,0.007,0\n\t\tc0.468,0,0.936-0.093,1.376-0.275c0.427-0.176,0.826-0.435,1.172-0.782c0.346-0.347,0.606-0.745,0.783-1.173L11,12L3.23,15.049z\n\t\t M7.027,19.387c-0.132,0.319-0.323,0.606-0.566,0.849c-0.244,0.243-0.528,0.434-0.848,0.565C5.294,20.934,4.961,21,4.606,21\n\t\tc-0.341,0-0.675-0.066-0.991-0.197c-0.322-0.135-0.607-0.324-0.85-0.568c-0.243-0.242-0.433-0.527-0.565-0.848\n\t\tC2.067,19.067,1.999,18.73,2,18.386c-0.001-0.343,0.067-0.679,0.199-0.999c0.132-0.319,0.323-0.604,0.566-0.848\n\t\tc0.243-0.242,0.528-0.434,0.831-0.559l5.636-2.213L7.027,19.387z\"></path>\n\t<path d=\"M30.725,17.004c-0.177-0.426-0.436-0.825-0.783-1.172c-0.346-0.346-0.747-0.605-1.172-0.783L21,12l3.049,7.77\n\t\tc0.177,0.428,0.437,0.826,0.783,1.173c0.346,0.347,0.745,0.606,1.172,0.782C26.444,21.907,26.912,22,27.379,22\n\t\tc0.002,0,0.005,0,0.007,0c0.002,0,0.005,0,0.007,0c0.468,0,0.937-0.093,1.376-0.274c0.425-0.177,0.826-0.436,1.172-0.783\n\t\tc0.347-0.347,0.606-0.745,0.783-1.173C30.908,19.328,31,18.858,31,18.387C31,17.916,30.908,17.446,30.725,17.004z M29.801,19.388\n\t\tc-0.132,0.319-0.323,0.605-0.566,0.849c-0.242,0.242-0.527,0.432-0.846,0.565C28.069,20.934,27.735,21,27.379,21\n\t\tc-0.34,0-0.674-0.066-0.994-0.199c-0.318-0.132-0.603-0.322-0.847-0.565c-0.244-0.243-0.434-0.529-0.56-0.831l-2.211-5.637\n\t\tl5.618,2.205c0.32,0.133,0.606,0.324,0.849,0.566c0.243,0.243,0.434,0.528,0.566,0.848c0.132,0.32,0.2,0.656,0.199,1.001\n\t\tC30,18.73,29.933,19.067,29.801,19.388z\"></path>\n\t<path d=\"M13.5,11c1.104,0,2-0.894,2-2s-0.896-2-2-2c-1.105,0-2,0.894-2,2S12.395,11,13.5,11z M13.5,8c0.551,0,1,0.449,1,1\n\t\ts-0.449,1-1,1c-0.551,0-1-0.449-1-1S12.949,8,13.5,8z\"></path>\n\t<path d=\"M18.5,11c1.104,0,2-0.894,2-2s-0.896-2-2-2c-1.105,0-2,0.894-2,2S17.395,11,18.5,11z M18.5,8c0.551,0,1,0.449,1,1\n\t\ts-0.449,1-1,1c-0.551,0-1-0.449-1-1S17.949,8,18.5,8z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: blog (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"blog\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"15,13 13,13 14,9 12,9 11,13 11,17 15,17 \t\"></polygon>\n\t<polygon points=\"21,13 19,13 20,9 18,9 17,13 17,17 21,17 \t\"></polygon>\n\t<path d=\"M3,3v19v1l6,6h1h19V3H3z M27,27H10v-5H5V5h22V27z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: bold (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"bold\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M23,16c2.126-1.248,4-3.335,4-5.849C27,6.26,24.168,3,20,3H5v26h15c4.168,0,7-3.26,7-7.151C27,19.335,25.126,17.248,23,16z\n\t M15,27h-4V17h4c2.98,0,5,2.205,5,5.052C20,24.899,17.98,27,15,27z M15,15h-4V5h4c2.98,0,5,2.205,5,5.052C20,12.899,17.98,15,15,15z\n\t\"></path>\n</svg>\n<!--\n\t  icon: booklet-guide (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"booklet-guide\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M21,7L11,5L1,7v18v3v1l10-2l10,2l10-2v-1v-3V5L21,7z M20,24.8l-8-1.6V7.239l8,1.601V24.8z M3,8.64l7-1.399V23.2L3,24.6V8.64\n\tz M22,24.8V8.84l7-1.4V23.4L22,24.8z\"></path>\n</svg>\n<!--\n\t  icon: bookmark (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"bookmark\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M8,1H4v30h4h20V1H8z M26,29H10V3h6v14l4-4l4,4V3h2V29z\"></path>\n</svg>\n<!--\n\t  icon: bottom (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"bottom\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"6\" y=\"27\" width=\"20\" height=\"4\"></rect>\n\t<polygon points=\"24.707,13.707 23.293,12.293 17,18.587 17,2 15,2 15,18.585 8.707,12.293 7.293,13.707 16.001,22.414 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: buildings (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"buildings\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"10.9\" y=\"5\" width=\"3\" height=\"3\"></rect>\n\t<rect x=\"15.9\" y=\"5\" width=\"3\" height=\"3\"></rect>\n\t<rect x=\"21\" y=\"5\" width=\"3\" height=\"3\"></rect>\n\t<rect x=\"21\" y=\"10\" width=\"3\" height=\"3\"></rect>\n\t<rect x=\"21\" y=\"15\" width=\"3\" height=\"3\"></rect>\n\t<rect x=\"21\" y=\"20\" width=\"3\" height=\"3\"></rect>\n\t<path d=\"M6.9,1v9H4v21h15.1v-3H28V1H6.9z M10.3,28.5h-4v-4h4V28.5z M10.3,22.5h-4v-4h4V22.5z M10.3,16.5h-4v-4h4V16.5z M16.8,28.5\n\t\th-4v-4h4V28.5z M16.8,22.5h-4v-4h4V22.5z M16.8,16.5h-4v-4h4V16.5z M26,26h-6.9V10H8.9V3H26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: bulletlist (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"bulletlist\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"8\" y=\"6\" width=\"23\" height=\"2\"></rect>\n\t<rect x=\"8\" y=\"15\" width=\"23\" height=\"2\"></rect>\n\t<rect x=\"8\" y=\"24\" width=\"23\" height=\"2\"></rect>\n\t<circle cx=\"3\" cy=\"7\" r=\"2\"></circle>\n\t<circle cx=\"3\" cy=\"16\" r=\"2\"></circle>\n\t<circle cx=\"3\" cy=\"25\" r=\"2\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: calendar (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"calendar\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M17.461,19.279c-0.345,0.303-0.723,0.586-1.135,0.848c-0.412,0.266-0.807,0.535-1.187,0.816\n\t\tc-0.79,0.539-1.413,1.172-1.869,1.896c-0.457,0.729-0.692,1.58-0.702,2.557h7.983v-1.715h-5.695c0.078-0.26,0.222-0.5,0.436-0.73\n\t\tc0.209-0.23,0.458-0.451,0.74-0.664c0.286-0.213,0.594-0.426,0.928-0.639c0.335-0.213,0.669-0.438,1.004-0.672\n\t\tc0.333-0.234,0.657-0.488,0.97-0.76c0.311-0.27,0.588-0.563,0.832-0.881c0.246-0.318,0.441-0.668,0.586-1.049\n\t\tc0.146-0.381,0.217-0.809,0.217-1.279c0-0.379-0.062-0.781-0.183-1.201c-0.122-0.42-0.333-0.809-0.628-1.17\n\t\tc-0.294-0.357-0.681-0.654-1.16-0.891c-0.478-0.234-1.074-0.352-1.787-0.352c-0.656,0-1.232,0.115-1.728,0.344\n\t\tc-0.496,0.229-0.916,0.547-1.263,0.949c-0.345,0.404-0.604,0.883-0.775,1.438c-0.173,0.557-0.26,1.158-0.26,1.809h1.903\n\t\tc0.013-0.414,0.054-0.802,0.125-1.16c0.074-0.357,0.185-0.668,0.335-0.934c0.149-0.264,0.351-0.471,0.602-0.623\n\t\tc0.25-0.148,0.563-0.227,0.943-0.227c0.41,0,0.744,0.07,1.002,0.211c0.256,0.141,0.457,0.314,0.602,0.521s0.242,0.43,0.293,0.672\n\t\tc0.049,0.242,0.074,0.469,0.074,0.68c-0.012,0.459-0.127,0.865-0.352,1.218C18.091,18.648,17.809,18.977,17.461,19.279z\"></path>\n\t<path d=\"M26,6V3.463c0-0.553-0.447-1-1-1s-1,0.447-1,1V6H8V3.463c0-0.553-0.447-1-1-1s-1,0.447-1,1V6H1v24h23.568L31,23.396V6H26z\n\t\t M29,23h-5v5H3V11h26V23z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: calendar-today (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"calendar-today\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M26,6V3.463c0-0.553-0.447-1-1-1s-1,0.447-1,1V6H8V3.463c0-0.553-0.447-1-1-1s-1,0.447-1,1V6H1v24h23.568L31,23.396V6H26z\n\t\t\t M29,23h-5v5H3V11h26V23z\"></path>\n\t</g>\n\t<polygon points=\"13.999,21.068 10.706,17.775 9.292,19.189 13.999,23.896 22.707,15.189 21.293,13.775 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: camera (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"camera\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M11,6V4H5v2H1v20h30V6H11z M29,24H3V8h26V24z\"></path>\n\t<path d=\"M21,22.5c3.592,0,6.5-2.908,6.5-6.5S24.592,9.5,21,9.5c-3.587,0-6.5,2.908-6.5,6.5S17.413,22.5,21,22.5z M21,10.5\n\t\tc3.033,0,5.5,2.467,5.5,5.5s-2.467,5.5-5.5,5.5c-3.033,0-5.5-2.467-5.5-5.5S17.967,10.5,21,10.5z\"></path>\n\t<path d=\"M21,19.5c1.934,0,3.5-1.566,3.5-3.5s-1.566-3.5-3.5-3.5c-1.932,0-3.5,1.566-3.5,3.5S19.068,19.5,21,19.5z M21,15\n\t\tc0.552,0,1,0.447,1,1s-0.448,1-1,1c-0.552,0-1-0.447-1-1S20.448,15,21,15z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: cart-checkout (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"cart-checkout\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M25.414,12l-6.707-6.707l-1.414,1.414L22.586,12H9.414l5.293-5.293l-1.414-1.414L6.586,12H1v3h2l2,15h22l2-15h2v-3H25.414z\n\t\t M25.249,28H6.751L5.284,17h21.432L25.249,28z\"></path>\n\t<rect x=\"11\" y=\"19\" width=\"1\" height=\"7\"></rect>\n\t<rect x=\"14\" y=\"19\" width=\"1\" height=\"7\"></rect>\n\t<rect x=\"17\" y=\"19\" width=\"1\" height=\"7\"></rect>\n\t<rect x=\"20\" y=\"19\" width=\"1\" height=\"7\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: catalog (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"catalog\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M21,3c-2,0-4,1-5,2c-1-1-3-2-5-2H3v24h8c2,0,4,1,5,2c1-1,3-2,5-2h8V3H21z M16,26.484C14.657,25.649,12.869,25,11,25H5V5h6\n\tc1.359,0,2.891,0.719,3.586,1.414L16,7.829V26.484z M26,20h-7v-1h7V20z M26,17h-7v-1h7V17z M26,14h-7v-1h7V14z M26,11h-7v-1h7V11z\"></path>\n</svg>\n<!--\n\t  icon: chat-im (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"chat-im\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M24.484,4.515C22.313,2.343,19.313,1,16,1S9.686,2.343,7.516,4.515C5.344,6.687,4,9.686,4,13s1.344,6.313,3.516,8.485\n\t\tC9.686,23.657,12.686,25,16,25v6l8.484-9.016C26.656,19.685,28,16.508,28,13C28,9.686,26.656,6.687,24.484,4.515z M23.027,20.613\n\t\tL18,25.956V25v-2h-2c-2.671,0-5.182-1.04-7.07-2.93C7.041,18.182,6,15.671,6,13s1.041-5.182,2.93-7.071S13.329,3,16,3\n\t\ts5.182,1.04,7.07,2.93C24.959,7.818,26,10.329,26,13C26,15.881,24.945,18.583,23.027,20.613z\"></path>\n\t<circle cx=\"16\" cy=\"13\" r=\"1.5\"></circle>\n\t<circle cx=\"21\" cy=\"13\" r=\"1.5\"></circle>\n\t<circle cx=\"11\" cy=\"13\" r=\"1.5\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: client (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"client\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"19,5 17,6 21,12 17,12 4,12 4,15 17,15 17,16 1,16 1,19 17,19 17,20 4,20 4,23 17,23 17,24 7,24 7,27 17,27 23,27 \n\t\t31,25 31,12 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: clock-time (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"clock-time\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.268,2,2,8.268,2,16s6.268,14,14,14c7.732,0,14-6.268,14-14S23.732,2,16,2z M16,28C9.383,28,4,22.617,4,16\n\t\tS9.383,4,16,4c6.617,0,12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<polygon points=\"22.646,8.646 16.353,14.939 12.707,11.293 11.293,12.707 14.939,16.354 13.646,17.646 14.353,18.354 15.646,17.06 \n\t\t17.293,18.707 18.707,17.293 17.06,15.646 23.353,9.354 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: close-cancel-error (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"close-cancel-error\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"20.293,10.293 16,14.586 11.707,10.293 10.293,11.707 14.586,16 10.293,20.293 11.707,21.707 16,17.414 \n\t\t20.293,21.707 21.707,20.293 17.414,16 21.707,11.707 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: cloud (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"cloud\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M26.446,12.604C26.003,8.287,22.416,5,18,5c-4.162,0-7.691,3.083-8.374,7.086C9.253,12.029,8.877,12,8.5,12\n\tC4.364,12,1,15.364,1,19.5S4.364,27,8.5,27h15c4.136,0,7.5-3.364,7.5-7.5C31,16.464,29.196,13.773,26.446,12.604z M23.5,25h-15\n\tC5.467,25,3,22.533,3,19.5S5.467,14,8.5,14c0.575,0,1.146,0.092,1.699,0.271l1.277,0.416l0.032-1.344C11.592,9.846,14.504,7,18,7\n\tc3.552,0,6.403,2.784,6.491,6.338l0.017,0.711l0.676,0.217C27.466,14.999,29,17.103,29,19.5C29,22.533,26.533,25,23.5,25z\"></path>\n</svg>\n<!--\n\t  icon: code (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"code\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"8.586,8.586 1.171,16 8.586,23.414 11.414,20.586 6.829,16 11.414,11.414 \t\"></polygon>\n\t<polygon points=\"23.414,8.586 20.586,11.414 25.171,16 20.586,20.586 23.414,23.414 30.829,16 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: collaborate-group (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"collaborate-group\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M8,23c2.762,0,5-2.238,5-5s-2.238-5-5-5s-5,2.238-5,5S5.238,23,8,23z M8,15c1.654,0,3,1.346,3,3s-1.346,3-3,3s-3-1.346-3-3\n\t\tS6.346,15,8,15z\"></path>\n\t<path d=\"M19,18c0,2.762,2.238,5,5,5s5-2.238,5-5s-2.238-5-5-5S19,15.238,19,18z M24,15c1.654,0,3,1.346,3,3s-1.346,3-3,3\n\t\ts-3-1.346-3-3S22.346,15,24,15z\"></path>\n\t<path d=\"M21,7c0-2.762-2.238-5-5-5s-5,2.238-5,5s2.238,5,5,5S21,9.762,21,7z M16,10c-1.654,0-3-1.346-3-3s1.346-3,3-3s3,1.346,3,3\n\t\tS17.654,10,16,10z\"></path>\n\t<path d=\"M12,25H4c-1.105,0-2,0.896-2,2v3h12v-3C14,25.896,13.104,25,12,25z\"></path>\n\t<path d=\"M28,25h-8c-1.104,0-2,0.896-2,2v3h12v-3C30,25.896,29.104,25,28,25z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: commandline-terminal (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"commandline-terminal\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"7.707,23.707 13.414,18 7.707,12.293 6.293,13.707 10.586,18 6.293,22.293 \t\"></polygon>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: compass (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"compass\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M16,6C10.478,6,6,10.479,6,16c0,5.523,4.478,10,10,10c5.523,0,10-4.477,10-10C26,10.479,21.523,6,16,6z M18,18l-8,4l4-8\n\t\t\t\tl8-4L18,18z\"></path>\n\t\t</g>\n\t</g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M16,2C8.268,2,2,8.268,2,16s6.268,14,14,14s14-6.268,14-14S23.732,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\t\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n\t\t</g>\n\t</g>\n\t<g>\n\t\t<circle cx=\"16\" cy=\"16\" r=\"1\"></circle>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: compressed (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"compressed\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M3,3v22v4h26v-4V3H3z M5,5h22v18H5V5z\"></path>\n\t</g>\n\t<g>\n\t\t<rect x=\"15\" y=\"9\" width=\"2\" height=\"1\"></rect>\n\t</g>\n\t<g>\n\t\t<rect x=\"15\" y=\"7\" width=\"2\" height=\"1\"></rect>\n\t</g>\n\t<g>\n\t\t<rect x=\"15\" y=\"11\" width=\"2\" height=\"1\"></rect>\n\t</g>\n\t<g>\n\t\t<rect x=\"15\" y=\"13\" width=\"2\" height=\"1\"></rect>\n\t</g>\n\t<g>\n\t\t<polygon points=\"15,15 14,19 14,21 18,21 18,19 17,15 \t\t\"></polygon>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: configure-manage (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"configure-manage\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12.858,7C12.412,5.278,10.861,4,9,4S5.588,5.278,5.142,7H1v2h4.142C5.588,10.722,7.139,12,9,12s3.412-1.278,3.858-3H31V7\n\t\tH12.858z M9,9C8.448,9,8,8.552,8,8s0.448-1,1-1s1,0.448,1,1S9.552,9,9,9z\"></path>\n\t<path d=\"M23,12c-1.861,0-3.412,1.278-3.858,3H1v2h18.142c0.446,1.722,1.997,3,3.858,3s3.412-1.278,3.858-3H31v-2h-4.142\n\t\tC26.412,13.278,24.861,12,23,12z M23,17c-0.552,0-1-0.448-1-1s0.448-1,1-1s1,0.448,1,1S23.552,17,23,17z\"></path>\n\t<path d=\"M9,20c-1.861,0-3.412,1.278-3.858,3H1v2h4.142C5.588,26.722,7.139,28,9,28s3.412-1.278,3.858-3H31v-2H12.858\n\t\tC12.412,21.278,10.861,20,9,20z M9,25c-0.552,0-1-0.448-1-1s0.448-1,1-1s1,0.448,1,1S9.552,25,9,25z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: copy (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"copy\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M21,7V1H5v24h6v6h16V7H21z M11,23H7V3h12v4h-8V23z M25,29H13V9h12V29z\"></path>\n\t<rect x=\"15\" y=\"13\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"15\" y=\"15\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"15\" y=\"17\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"15\" y=\"19\" width=\"4\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: create-new (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"create-new\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"15,24 17,24 17,19 22,19 22,17 17,17 17,12 15,12 15,17 10,17 10,19 15,19 \t\"></polygon>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: cut (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"cut\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M27,13H17V8.858C18.722,8.412,20,6.861,20,5c0-2.209-1.791-4-4-4s-4,1.791-4,4c0,1.861,1.278,3.412,3,3.858V13\n\tc-1.106,0-2,0.895-2,2H8.858C8.412,13.278,6.861,12,5,12c-2.209,0-4,1.791-4,4s1.791,4,4,4c1.861,0,3.412-1.278,3.858-3H13v10l4,4\n\tV17h14L27,13z M5,18c-1.103,0-2-0.896-2-2s0.897-2,2-2s2,0.896,2,2S6.103,18,5,18z M15,16c-0.553,0-1-0.448-1-1s0.447-1,1-1\n\tc0.552,0,1,0.448,1,1S15.552,16,15,16z M16,7c-1.104,0-2-0.896-2-2s0.896-2,2-2s2,0.895,2,2S17.104,7,16,7z\"></path>\n</svg>\n<!--\n\t  icon: dashboard (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"dashboard\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12.465,21.535C11.521,20.591,11,19.335,11,18c0-2.757,2.243-5,5-5s5,2.243,5,5c0,1.335-0.521,2.591-1.465,3.535\n\t\tl1.414,1.414C22.271,21.627,23,19.87,23,18c0-3.86-3.141-7-7-7s-7,3.14-7,7c0,1.87,0.729,3.627,2.051,4.949L12.465,21.535z\"></path>\n\t<polygon points=\"15,25 17,25 16,16 \t\"></polygon>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: data (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"data\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"1\" y=\"9\" width=\"2\" height=\"14\"></rect>\n\t<path d=\"M14.061,11.354c-0.365-0.685-0.875-1.25-1.529-1.692C11.877,9.221,11.033,9,10.001,9C8.967,9,8.123,9.221,7.47,9.663\n\t\tc-0.655,0.442-1.165,1.007-1.529,1.692c-0.365,0.687-0.613,1.44-0.744,2.26C5.065,14.436,5,15.231,5,16s0.065,1.564,0.196,2.384\n\t\tc0.131,0.821,0.379,1.574,0.744,2.26c0.364,0.687,0.874,1.25,1.529,1.692C8.123,22.779,8.967,23,10.001,23\n\t\tc1.032,0,1.876-0.221,2.53-0.664c0.654-0.442,1.164-1.006,1.529-1.692c0.364-0.685,0.612-1.439,0.743-2.26\n\t\tC14.936,17.564,15,16.769,15,16s-0.064-1.564-0.196-2.385C14.673,12.795,14.425,12.042,14.061,11.354z M12.521,18\n\t\tc-0.083,0.627-0.225,1.176-0.424,1.644c-0.199,0.468-0.471,0.84-0.816,1.115c-0.344,0.276-0.771,0.413-1.279,0.413\n\t\tc-0.524,0-0.956-0.138-1.292-0.413c-0.338-0.275-0.607-0.647-0.807-1.115c-0.2-0.468-0.341-1.017-0.423-1.644\n\t\tc-0.083-0.628-0.124-1.295-0.124-2c0-0.705,0.041-1.369,0.124-1.991c0.082-0.622,0.223-1.17,0.423-1.645\n\t\tc0.199-0.474,0.469-0.849,0.807-1.125c0.336-0.276,0.768-0.413,1.292-0.413c0.509,0,0.935,0.138,1.279,0.413\n\t\tc0.346,0.275,0.617,0.651,0.816,1.125c0.199,0.475,0.341,1.023,0.424,1.645c0.083,0.622,0.124,1.286,0.124,1.991\n\t\tC12.644,16.705,12.604,17.372,12.521,18z\"></path>\n\t<path d=\"M30.804,13.615c-0.131-0.82-0.379-1.573-0.743-2.26c-0.365-0.685-0.875-1.25-1.529-1.692C27.877,9.221,27.033,9,26.001,9\n\t\tc-1.034,0-1.878,0.221-2.531,0.663c-0.655,0.442-1.165,1.007-1.529,1.692c-0.365,0.687-0.613,1.44-0.744,2.26\n\t\tC21.065,14.436,21,15.231,21,16s0.065,1.564,0.196,2.384c0.131,0.821,0.379,1.574,0.744,2.26c0.364,0.687,0.874,1.25,1.529,1.692\n\t\tC24.123,22.779,24.967,23,26.001,23c1.032,0,1.876-0.221,2.53-0.664c0.654-0.442,1.164-1.006,1.529-1.692\n\t\tc0.364-0.685,0.612-1.439,0.743-2.26C30.935,17.564,31,16.769,31,16S30.935,14.436,30.804,13.615z M28.521,18\n\t\tc-0.083,0.627-0.225,1.176-0.424,1.644c-0.199,0.468-0.471,0.84-0.816,1.115c-0.344,0.276-0.771,0.413-1.279,0.413\n\t\tc-0.524,0-0.956-0.138-1.292-0.413c-0.338-0.275-0.607-0.647-0.807-1.115c-0.2-0.468-0.341-1.017-0.423-1.644\n\t\tc-0.083-0.628-0.124-1.295-0.124-2c0-0.705,0.041-1.369,0.124-1.991c0.082-0.622,0.223-1.17,0.423-1.645\n\t\tc0.199-0.474,0.469-0.849,0.807-1.125c0.336-0.276,0.768-0.413,1.292-0.413c0.509,0,0.936,0.138,1.279,0.413\n\t\tc0.346,0.275,0.617,0.651,0.816,1.125c0.199,0.475,0.341,1.023,0.424,1.645c0.083,0.622,0.124,1.286,0.124,1.991\n\t\tC28.645,16.705,28.604,17.372,28.521,18z\"></path>\n\t<rect x=\"17\" y=\"9\" width=\"2\" height=\"14\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: database-server (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"database-server\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v8v2v6v2v8h26v-8v-2v-6v-2V3H3z M27,27H5v-6h22V27z M27,19H5v-6h22V19z M24,7c0.552,0,1,0.448,1,1s-0.448,1-1,1\n\t\ts-1-0.448-1-1S23.448,7,24,7z\"></path>\n\t<circle cx=\"24\" cy=\"16\" r=\"1\"></circle>\n\t<circle cx=\"24\" cy=\"24\" r=\"1\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: debug (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"debug\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31,15h-2.051C28.462,8.621,23.379,3.538,17,3.051V1h-2v2.051C8.621,3.538,3.538,8.621,3.051,15H1v2h2.051\n\tC3.538,23.379,8.621,28.462,15,28.949V31h2v-2.051c6.379-0.487,11.462-5.57,11.949-11.949H31V15z M26.949,15h-3.018\n\tC23.479,11.384,20.617,8.521,17,8.069V5.051C22.268,5.528,26.472,9.732,26.949,15z M22.92,17c-0.44,3.059-2.861,5.479-5.92,5.92V19\n\th-2v3.92c-3.059-0.44-5.479-2.861-5.92-5.92H13v-2H9.08c0.44-3.059,2.861-5.479,5.92-5.92V13h2V9.08\n\tc3.059,0.44,5.479,2.861,5.92,5.92H19v2H22.92z M15,5.051v3.018C11.383,8.521,8.521,11.384,8.069,15H5.051\n\tC5.528,9.732,9.732,5.528,15,5.051z M5.051,17h3.018c0.452,3.616,3.314,6.479,6.931,6.931v3.018C9.732,26.472,5.528,22.268,5.051,17\n\tz M17,26.949v-3.018c3.617-0.452,6.479-3.315,6.931-6.931h3.018C26.472,22.268,22.268,26.472,17,26.949z\"></path>\n</svg>\n<!--\n\t  icon: deploy (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"deploy\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M30.707,8.293L24,1.586l-6.707,6.707l1.414,1.414L23,5.414V19c0,5.514-4.486,10-10,10S3,24.514,3,19\n\t\t\tc0-2.671,1.04-5.182,2.929-7.071l-1.414-1.414C2.248,12.782,1,15.795,1,19c0,6.617,5.383,12,12,12s12-5.383,12-12V5.414\n\t\t\tl4.293,4.293L30.707,8.293z\"></path>\n\t</g>\n\t<g>\n\t\t<circle cx=\"13\" cy=\"19\" r=\"3\"></circle>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: details (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"details\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M26,23v-1V1H6v30h11h1L26,23z M24,22h-7v7H8V3h16V22z\"></path>\n\t<rect x=\"10\" y=\"13\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"11\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"9\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"15\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"17\" width=\"6\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: document (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"document\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M18,1h-1H6v30h20V10V9L18,1z M24,29H8V3h9v7h7V29z\"></path>\n\t<rect x=\"10\" y=\"13\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"15\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"17\" width=\"6\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: down (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"down\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"15\" y=\"9\" width=\"2\" height=\"14\"></rect>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: download-import (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"download-import\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"24.708,13.707 23.294,12.292 17,18.587 17,2 15,2 15,18.585 8.708,12.292 7.294,13.707 16.001,22.414 \t\"></polygon>\n\t<polygon points=\"29,19 29,27 3,27 3,19 1,19 1,27 1,31 3,31 29,31 31,31 31,27 31,19 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: edit (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"edit\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"24.379\" y=\"1.257\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 3.8726 20.3492)\" width=\"4.243\" height=\"8.485\"></rect>\n\t<path d=\"M5,21l6,6l15-15l-6-6L5,21z M11,24.171L7.828,21L20,8.829L23.172,12L11,24.171z\"></path>\n\t<polygon points=\"1,31 6,29 3,26 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: email (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"email\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M16,4L1,12v1v15h30V13v-1L16,4z M7,11h18v4.2L16,20l-9-4.8V11z M29,26H3V14.066L16,21l13-6.934V26z\"></path>\n</svg>\n<!--\n\t  icon: equipment (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"equipment\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M30.131,9.806c-1.252-2.948-4.152-4.683-7.17-4.6L21.178,1l-4.983,2.115l1.768,4.167c-2.218,2.11-3.023,5.451-1.758,8.435\n\t\tl3.838-1.629c0.58,1.245,1.82,2.047,3.201,2.047c0.477,0,0.939-0.095,1.379-0.282c1.756-0.745,2.588-2.751,1.91-4.52L30.131,9.806z\n\t\t M24.246,14.962c-0.328,0.139-0.668,0.205-1.002,0.205c-0.961,0-1.871-0.546-2.309-1.458l4.707-1.998\n\t\tC26.113,12.989,25.514,14.425,24.246,14.962z\"></path>\n\t<path d=\"M18.516,28.855c0-1.852-1.502-3.355-3.358-3.355c-0.15,0-0.293,0.025-0.438,0.045l-8.451-8.451\n\t\tc0.057-0.197,0.097-0.401,0.097-0.617c0-0.277-0.057-0.54-0.148-0.786L13.25,8.66c0.25,0.096,0.52,0.155,0.804,0.155\n\t\tc1.244,0,2.253-1.007,2.253-2.249c0-1.243-1.009-2.25-2.253-2.25c-1.239,0-2.248,1.007-2.248,2.25c0,0.24,0.048,0.467,0.117,0.684\n\t\tl-7.101,7.101c-0.224-0.074-0.457-0.124-0.704-0.124c-1.244,0-2.249,1.007-2.249,2.25c0,1.242,1.005,2.25,2.249,2.25\n\t\tc0.309,0,0.603-0.063,0.871-0.176l7.872,7.873c-0.647,0.611-1.056,1.473-1.056,2.432c0,0.072,0.013,0.139,0.018,0.209H8.619V31\n\t\th13.194v-1.936h-3.314C18.504,28.994,18.516,28.928,18.516,28.855z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: event-announcement (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"event-announcement\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M4,13.714V13H3v-1H1v8h2v-1h1v-0.714l2,0.571V22c0,1.104,0.896,2,2,2h4c1.104,0,2-0.896,2-2v-0.857L31,26V6L4,13.714z\n\t M12,22H8v-2.571l4,1.143V22z M29,23.349L5,16.491v-0.982l24-6.857V23.349z\"></path>\n</svg>\n<!--\n\t  icon: file (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"file\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M18,1h-1H6v30h20V10V9L18,1z M24,29H8V3h9v7h7V29z\"></path>\n</svg>\n<!--\n\t  icon: fileextension (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"fileextension\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M13.964,21.424c-0.155-0.203-0.35-0.365-0.584-0.488c-0.235-0.122-0.515-0.183-0.84-0.183\n\t\tc-0.256,0-0.491,0.051-0.704,0.152c-0.213,0.102-0.39,0.264-0.528,0.488h-0.016v-0.529h-1.08v5.585h1.136v-1.96h0.016\n\t\tc0.139,0.203,0.316,0.355,0.532,0.46c0.216,0.104,0.452,0.155,0.708,0.155c0.304,0,0.569-0.059,0.796-0.176\n\t\tc0.227-0.117,0.416-0.274,0.568-0.472c0.152-0.197,0.265-0.424,0.34-0.681c0.075-0.256,0.112-0.521,0.112-0.799\n\t\tc0-0.294-0.038-0.575-0.112-0.845C14.233,21.863,14.119,21.627,13.964,21.424z M13.236,23.432c-0.032,0.16-0.087,0.301-0.164,0.42\n\t\tc-0.077,0.121-0.179,0.218-0.304,0.293c-0.125,0.074-0.281,0.111-0.468,0.111c-0.181,0-0.336-0.037-0.464-0.111\n\t\tc-0.128-0.075-0.231-0.172-0.308-0.293c-0.078-0.119-0.133-0.26-0.168-0.42c-0.035-0.16-0.052-0.322-0.052-0.488\n\t\tc0-0.17,0.016-0.336,0.048-0.495c0.032-0.16,0.087-0.302,0.164-0.425c0.077-0.122,0.178-0.223,0.304-0.299\n\t\tc0.125-0.078,0.281-0.117,0.468-0.117c0.181,0,0.335,0.039,0.46,0.117c0.125,0.076,0.228,0.178,0.308,0.303\n\t\tc0.08,0.126,0.138,0.269,0.172,0.429c0.035,0.16,0.052,0.323,0.052,0.487C13.284,23.109,13.268,23.271,13.236,23.432z\"></path>\n\t<path d=\"M15.956,20.932c-0.23,0.12-0.42,0.279-0.572,0.477c-0.152,0.197-0.267,0.426-0.344,0.684\n\t\tc-0.078,0.259-0.116,0.527-0.116,0.805c0,0.287,0.039,0.564,0.116,0.832c0.077,0.266,0.192,0.502,0.344,0.707\n\t\tc0.152,0.206,0.345,0.369,0.58,0.488c0.235,0.12,0.507,0.18,0.816,0.18c0.272,0,0.516-0.049,0.732-0.147\n\t\tc0.216-0.099,0.391-0.261,0.524-0.483h0.016V25h1.08v-5.712h-1.136v2.08H17.98c-0.128-0.202-0.303-0.357-0.524-0.46\n\t\tc-0.222-0.103-0.455-0.156-0.7-0.156C16.452,20.752,16.185,20.812,15.956,20.932z M17.524,21.721\n\t\tc0.123,0.074,0.223,0.172,0.3,0.291c0.078,0.12,0.132,0.259,0.164,0.416c0.032,0.158,0.048,0.322,0.048,0.492\n\t\tc0,0.171-0.016,0.336-0.048,0.496c-0.032,0.16-0.085,0.303-0.16,0.428c-0.075,0.125-0.175,0.226-0.3,0.301\n\t\tc-0.125,0.074-0.281,0.111-0.468,0.111c-0.176,0-0.327-0.039-0.452-0.115c-0.125-0.078-0.229-0.18-0.312-0.305\n\t\tc-0.082-0.125-0.143-0.267-0.18-0.428c-0.038-0.16-0.056-0.32-0.056-0.48c0-0.17,0.017-0.334,0.052-0.492\n\t\tc0.035-0.156,0.091-0.297,0.168-0.42c0.078-0.122,0.18-0.221,0.308-0.295c0.128-0.075,0.285-0.113,0.472-0.113\n\t\tC17.247,21.607,17.401,21.646,17.524,21.721z\"></path>\n\t<path d=\"M20.236,25h1.136v-3.376h0.784v-0.761h-0.784v-0.247c0-0.171,0.033-0.292,0.1-0.364c0.066-0.072,0.177-0.108,0.332-0.108\n\t\tc0.144,0,0.283,0.008,0.416,0.023V19.32c-0.096-0.006-0.195-0.012-0.296-0.02c-0.101-0.008-0.203-0.012-0.304-0.012\n\t\tc-0.464,0-0.81,0.117-1.04,0.353c-0.229,0.234-0.344,0.535-0.344,0.903v0.319h-0.68v0.761h0.68V25z\"></path>\n\t<path d=\"M18,1h-1H6v30h20V10V9L18,1z M24,29H8V3h9v7h7V29z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: filter (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"filter\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31,1H1v4l12,12v14l6-6v-3.379C19.733,22.459,20.798,23,22,23c2.21,0,4-1.79,4-4s-1.79-4-4-4\n\tc-0.423,0-0.822,0.083-1.205,0.205L31,5V1z M24,19c0,1.103-0.898,2-2,2c-1.103,0-2-0.897-2-2s0.897-2,2-2C23.102,17,24,17.897,24,19\n\tz M17.586,15.586L17,16.171V17v7.171l-2,2V17v-0.829l-0.586-0.585L3.829,5h24.343L17.586,15.586z\"></path>\n</svg>\n<!--\n\t  icon: floorplan (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"floorplan\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<polygon points=\"3,3 3,29 10.346,29 10.346,27 5,27 5,17 9.951,17 9.951,15 5,15 5,5 27,5 27,15 19.947,15 19.947,11.591 \n\t17.947,11.591 17.947,20.409 19.947,20.409 19.947,17 27,17 27,27 17.897,27 17.897,29 29,29 29,3 \"></polygon>\n</svg>\n<!--\n\t  icon: flow (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"flow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M24,19c-2.419,0-4.435,1.718-4.899,4h-6.201c-0.13-0.638-0.384-1.23-0.731-1.754l9.078-9.077\n\t\t\t\tC22.036,12.692,22.981,13,24,13c2.762,0,5-2.238,5-5s-2.238-5-5-5c-2.419,0-4.435,1.718-4.899,4h-6.201\n\t\t\t\tC12.436,4.718,10.419,3,8,3C5.238,3,3,5.238,3,8s2.238,5,5,5c2.419,0,4.436-1.718,4.899-4h6.201\n\t\t\t\tc0.13,0.638,0.384,1.23,0.731,1.754l-9.078,9.077C9.964,19.308,9.019,19,8,19c-2.762,0-5,2.238-5,5s2.238,5,5,5\n\t\t\t\tc2.419,0,4.436-1.718,4.899-4h6.201c0.464,2.282,2.481,4,4.899,4c2.762,0,5-2.238,5-5S26.762,19,24,19z M24,5\n\t\t\t\tc1.657,0,3,1.343,3,3s-1.343,3-3,3s-3-1.343-3-3S22.343,5,24,5z M8,11c-1.657,0-3-1.343-3-3s1.343-3,3-3s3,1.343,3,3\n\t\t\t\tS9.657,11,8,11z M8,27c-1.657,0-3-1.343-3-3s1.343-3,3-3s3,1.343,3,3S9.657,27,8,27z\"></path>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: folder (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"folder\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M13,8V5H1v3v3v16h30V11V8H13z M29,25H3V11h26V25z\"></path>\n</svg>\n<!--\n\t  icon: forum (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"forum\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M27.484,4.515C25.313,2.343,22.313,1,19,1s-6.314,1.343-8.484,3.515C8.344,6.687,7,9.686,7,13\n\t\t\tc0,1.045,0.148,2.054,0.398,3.02C7.267,16.011,7.135,16,7,16c-1.656,0-3.156,0.672-4.242,1.758C1.672,18.843,1,20.343,1,22\n\t\t\tc0,1.754,0.672,3.343,1.758,4.492L7,31v-3c1.656,0,3.156-0.672,4.242-1.758c0.795-0.794,1.363-1.812,1.614-2.948\n\t\t\tC14.654,24.37,16.752,25,19,25v6l8.484-9.016C29.656,19.685,31,16.508,31,13C31,9.686,29.656,6.687,27.484,4.515z M26.027,20.613\n\t\t\tL21,25.956V25v-2h-2c-2.24,0-4.361-0.74-6.104-2.09c-0.225-1.219-0.812-2.311-1.654-3.152c-0.451-0.451-0.977-0.825-1.552-1.115\n\t\t\tC9.242,15.497,9,14.268,9,13c0-2.671,1.041-5.182,2.93-7.071S16.329,3,19,3s5.182,1.04,7.07,2.93C27.959,7.818,29,10.329,29,13\n\t\t\tC29,15.881,27.945,18.583,26.027,20.613z\"></path>\n\t</g>\n\t<g>\n\t\t<circle cx=\"19\" cy=\"13\" r=\"1.5\"></circle>\n\t</g>\n\t<g>\n\t\t<circle cx=\"24\" cy=\"13\" r=\"1.5\"></circle>\n\t</g>\n\t<g>\n\t\t<circle cx=\"14\" cy=\"13\" r=\"1.5\"></circle>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: forward (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"iso-8859-1\"?-->\n<svg version=\"1.1\" id=\"forward\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"15.293,10.707 19.586,15 8,15 8,17 19.586,17 15.293,21.293 16.707,22.707 23.414,16 16.707,9.293 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14c7.731,0,14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16\n\t\tS9.383,4,16,4c6.617,0,12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: gauge (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"gauge\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.268,2,2,8.268,2,16s6.268,14,14,14s14-6.268,14-14S23.732,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<polygon points=\"15,17 17,19 23,9 13,15 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: glasses (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"glasses\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31,15h-1.09c-0.478-2.836-2.941-5-5.91-5c-1.176,0-2.27,0.344-3.196,0.93l-0.136-0.136C19.378,9.637,17.721,9,16,9\n\ts-3.378,0.637-4.707,1.831l-0.098,0.098C10.269,10.344,9.176,10,8,10c-2.97,0-5.433,2.164-5.91,5H1v2h1.09\n\tC2.567,19.836,5.03,22,8,22c3.311,0,6-2.687,6-6c0-1.413-0.492-2.709-1.31-3.734C13.609,11.451,14.783,11,16,11\n\tc1.227,0,2.41,0.455,3.293,1.245l0.019,0.019C18.492,13.289,18,14.586,18,16c0,3.313,2.69,6,6,6c2.97,0,5.433-2.164,5.91-5H31V15z\n\t M8,20c-2.205,0-4-1.795-4-4s1.795-4,4-4s4,1.795,4,4S10.205,20,8,20z M24,20c-2.205,0-4-1.795-4-4s1.795-4,4-4s4,1.795,4,4\n\tS26.205,20,24,20z\"></path>\n</svg>\n<!--\n\t  icon: hat (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"hat\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M28,23v-6v-1c0-6.627-5.375-12-12-12S4,9.373,4,16v1v6H1c0,2.766,2.241,5,4.995,5h20.01C28.759,28,31,25.766,31,23H28z\n\t M6,23v-6h20v6H6z\"></path>\n</svg>\n<!--\n\t  icon: headphones (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"headphones\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M27,17v4h2v-4h-1v-1.5c0-6.617-5.383-12-12-12c-6.617,0-12,5.383-12,12V17H3v4h2v-4v-1.5c0-6.065,4.935-11,11-11\n\t\tc6.065,0,11,4.935,11,11V17z\"></path>\n\t<rect x=\"1\" y=\"22\" width=\"4\" height=\"9\"></rect>\n\t<rect x=\"27\" y=\"22\" width=\"4\" height=\"9\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: help (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"help\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M23,16c0,0.893-0.174,1.743-0.479,2.528\n\tc-0.711,1.829-2.164,3.281-3.992,3.992C17.744,22.826,16.893,23,16,23c-0.893,0-1.744-0.174-2.529-0.479\n\tc-1.828-0.711-3.281-2.164-3.992-3.992C9.174,17.743,9,16.893,9,16c0-0.893,0.174-1.743,0.479-2.527\n\tc0.711-1.829,2.165-3.283,3.992-3.994C14.257,9.174,15.107,9,16,9c0.893,0,1.743,0.174,2.529,0.479\n\tc1.827,0.71,3.281,2.165,3.992,3.994C22.826,14.257,23,15.107,23,16z M19.286,8.714C18.282,8.259,17.172,8,16,8\n\ts-2.282,0.259-3.286,0.714L9.766,5.766C11.586,4.653,13.715,4,16,4s4.414,0.653,6.234,1.766L19.286,8.714z M8.714,19.286\n\tl-2.948,2.948C4.653,20.415,4,18.285,4,16s0.653-4.415,1.766-6.234l2.948,2.948C8.26,13.718,8,14.828,8,16S8.26,18.282,8.714,19.286\n\tz M12.714,23.286C13.718,23.741,14.828,24,16,24s2.282-0.259,3.286-0.714l2.948,2.948C20.414,27.347,18.285,28,16,28\n\ts-4.414-0.653-6.234-1.766L12.714,23.286z M23.286,12.714l2.948-2.948C27.347,11.585,28,13.715,28,16s-0.653,4.415-1.766,6.234\n\tl-2.948-2.948C23.74,18.282,24,17.172,24,16S23.74,13.718,23.286,12.714z\"></path>\n</svg>\n<!--\n\t  icon: home (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"home\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,1L2,15l3,3v13h22V18l3-3L16,1z M25,29H7V16l9-9l9,9V29z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: idea (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"idea\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,1C9.924,1,5,5.924,5,12s4.924,11,11,11s11-4.924,11-11S22.076,1,16,1z M16,21c-4.963,0-9-4.038-9-9s4.037-9,9-9\n\t\ts9,4.038,9,9S20.963,21,16,21z\"></path>\n\t<rect x=\"12\" y=\"24\" width=\"8\" height=\"4\"></rect>\n\t<path d=\"M16,31c1.104,0,2-0.896,2-2h-4C14,30.104,14.896,31,16,31z\"></path>\n\t<path d=\"M16,19l4-6h-8L16,19z M16,17.197L13.868,14h4.264L16,17.197z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: indent (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"indent\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"2.293,11.707 6.586,16 2.293,20.293 3.707,21.707 9.414,16 3.707,10.293 \t\"></polygon>\n\t<rect x=\"11\" y=\"6\" width=\"2\" height=\"20\"></rect>\n\t<rect x=\"15\" y=\"9\" width=\"12\" height=\"2\"></rect>\n\t<rect x=\"15\" y=\"13\" width=\"8\" height=\"2\"></rect>\n\t<rect x=\"15\" y=\"17\" width=\"16\" height=\"2\"></rect>\n\t<rect x=\"15\" y=\"21\" width=\"8\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: industry-factory (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"industry-factory\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M29,1h-4l-1,15h-7v-4l-8,4v-4l-8,4v15h22h5h3L29,1z M3,29V18h20.867l-0.734,11H3z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: info-moreinfo (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"info-moreinfo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"18,14 12,14 12,16 14,16 14,22 12,22 12,24 20,24 20,22 18,22 \t\"></polygon>\n\t<circle cx=\"16\" cy=\"10\" r=\"2\"></circle>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: insert (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"insert\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M29.293,22.293L25,26.586V13c0-6.617-5.383-12-12-12S1,6.383,1,13h2C3,7.486,7.486,3,13,3s10,4.486,10,10v13.586\n\tl-4.293-4.293l-1.414,1.414L24,30.414l6.707-6.707L29.293,22.293z\"></path>\n</svg>\n<!--\n\t  icon: inventory (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"inventory\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M24,15V3H8v12H3v14h26V15H24z M10,5h12v10H10V5z M27,27H5V17h3h16h3V27z\"></path>\n\t<rect x=\"12\" y=\"9\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"12\" y=\"11\" width=\"8\" height=\"1\"></rect>\n\t<polygon points=\"19,22 13,22 13,21 12,21 12,22 12,23 13,23 19,23 20,23 20,22 20,21 19,21 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: italic (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"italic\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<polygon points=\"25,5 25,3 13,3 13,5 16.923,5 10.577,27 7,27 7,29 19,29 19,27 14.577,27 20.923,5 \"></polygon>\n</svg>\n<!--\n\t  icon: justify (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"justify\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"5\" y=\"24\" width=\"22\" height=\"2\"></rect>\n\t<rect x=\"5\" y=\"18\" width=\"22\" height=\"2\"></rect>\n\t<rect x=\"5\" y=\"12\" width=\"22\" height=\"2\"></rect>\n\t<rect x=\"5\" y=\"6\" width=\"22\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: like-heart (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"like-heart\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M22,4c-2.551,0-4.776,1.369-6,3.408C14.776,5.369,12.551,4,10,4c-3.866,0-7,3.134-7,7c0,1.933,0.761,3.706,2,5\n\tc2.815,2.94,11,12,11,12s8.185-9.06,11-12c1.239-1.294,2-3.067,2-5C29,7.134,25.866,4,22,4z M25.556,14.617\n\tC23.457,16.808,18.499,22.262,16,25.02c-2.499-2.757-7.457-8.211-9.556-10.403C5.513,13.644,5,12.36,5,11c0-2.757,2.243-5,5-5\n\tc1.768,0,3.369,0.911,4.285,2.437L16,11.294l1.715-2.857C18.631,6.911,20.232,6,22,6c2.757,0,5,2.243,5,5\n\tC27,12.36,26.487,13.644,25.556,14.617z\"></path>\n</svg>\n<!--\n\t  icon: link-externallink (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"link-externallink\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M28.95,3.05C27.683,1.784,25.933,1,24,1s-3.683,0.784-4.95,2.05l-3,3C14.784,7.317,14,9.067,14,11\n\tc0,1.206,0.286,2.359,0.808,3.364l-0.443,0.443C13.359,14.286,12.206,14,11,14c-1.933,0-3.683,0.784-4.95,2.05l-3,3\n\tC1.784,20.317,1,22.067,1,24s0.784,3.683,2.05,4.95S6.067,31,8,31s3.683-0.784,4.95-2.05l3-3C17.216,24.683,18,22.933,18,21\n\tc0-1.206-0.286-2.359-0.808-3.364l0.443-0.443C18.641,17.714,19.794,18,21,18c1.933,0,3.683-0.784,4.95-2.05l3-3\n\tC30.216,11.683,31,9.933,31,8S30.216,4.317,28.95,3.05z M16,21c0,1.335-0.52,2.591-1.464,3.536l-3,3C10.591,28.48,9.335,29,8,29\n\ts-2.591-0.52-3.536-1.464C3.52,26.591,3,25.335,3,24s0.52-2.591,1.464-3.536l3-3C8.409,16.52,9.665,16,11,16\n\tc0.642,0,1.264,0.122,1.84,0.332l-4.254,4.254l2.828,2.828l4.254-4.254C15.878,19.736,16,20.358,16,21z M27.536,11.536l-3,3\n\tC23.591,15.48,22.335,16,21,16c-0.642,0-1.264-0.122-1.84-0.332l4.254-4.254l-2.828-2.828l-4.254,4.254\n\tC16.122,12.264,16,11.642,16,11c0-1.335,0.52-2.591,1.464-3.536l3-3C21.409,3.52,22.665,3,24,3s2.591,0.52,3.536,1.464\n\tC28.48,5.409,29,6.665,29,8S28.48,10.591,27.536,11.536z\"></path>\n</svg>\n<!--\n\t  icon: list-view (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"list-view\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M1,4v4v20h30V8V4H1z M29,26H3v-4h26V26z M29,20H3v-4h26V20z M29,14H3v-4h26V14z\"></path>\n</svg>\n<!--\n\t  icon: location (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"location\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M24.484,4.515C22.313,2.343,19.313,1,16,1c-3.314,0-6.314,1.343-8.484,3.515C5.344,6.687,4,9.686,4,13\n\t\tc0,3.508,1.344,6.685,3.516,8.984L16,31l8.484-9.016C26.656,19.685,28,16.508,28,13C28,9.686,26.656,6.687,24.484,4.515z\n\t\t M23.028,20.613L16,28.081L8.969,20.61C7.055,18.583,6,15.881,6,13c0-2.671,1.04-5.182,2.93-7.071C10.818,4.04,13.329,3,16,3\n\t\tc2.671,0,5.182,1.04,7.07,2.93C24.959,7.818,26,10.329,26,13C26,15.881,24.945,18.583,23.028,20.613z\"></path>\n\t<circle cx=\"16\" cy=\"13\" r=\"4\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: location-map (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"location-map\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M24.484,4.515C22.313,2.343,19.313,1,16,1c-3.314,0-6.314,1.343-8.484,3.515C5.344,6.687,4,9.686,4,13\n\t\tc0,3.508,1.344,6.685,3.516,8.984L16,31l8.484-9.016C26.656,19.685,28,16.508,28,13C28,9.686,26.656,6.687,24.484,4.515z\n\t\t M23.028,20.613L16,28.081L8.969,20.61C7.055,18.583,6,15.881,6,13c0-2.671,1.04-5.182,2.93-7.071C10.818,4.04,13.329,3,16,3\n\t\tc2.671,0,5.182,1.04,7.07,2.93C24.959,7.818,26,10.329,26,13C26,15.881,24.945,18.583,23.028,20.613z\"></path>\n\t<circle cx=\"16\" cy=\"13\" r=\"4\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: lock-secure (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"lock-secure\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"14.5,21.586 12.207,19.293 10.793,20.707 14.5,24.414 21.207,17.707 19.793,16.293 \t\"></polygon>\n\t<path d=\"M24,12.466V9c0-4.418-3.581-8-8-8S8,4.582,8,9v3.467C6.145,14.436,5,17.082,5,20c0,6.074,4.926,11,11,11\n\t\tc6.076,0,11-4.926,11-11C27,17.081,25.855,14.436,24,12.466z M10,9c0-3.309,2.691-6,6-6s6,2.691,6,6v1.788\n\t\tC20.273,9.661,18.215,9,16,9c-2.215,0-4.273,0.661-6,1.788V9z M16,29c-4.971,0-9-4.029-9-9s4.029-9,9-9s9,4.029,9,9\n\t\tS20.971,29,16,29z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: log (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"log\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"6\" y=\"29\" width=\"20\" height=\"2\"></rect>\n\t<path d=\"M6,1v4v22h20V5V1H6z M24,25H8V7h16V25z\"></path>\n\t<rect x=\"10\" y=\"15\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"11\" width=\"12\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"19\" width=\"12\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: maximize (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"maximize\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n\t<polygon points=\"18.707,21.707 25,15.414 25,20 27,20 27,12 19,12 19,14 23.586,14 17.293,20.293 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: menuoverflow (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"menuoverflow\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<circle cx=\"4\" cy=\"16\" r=\"3\"></circle>\n\t<circle cx=\"16\" cy=\"16\" r=\"3\"></circle>\n\t<circle cx=\"28\" cy=\"16\" r=\"3\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: microphone-recording (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"microphone-recording\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,23c3.865,0,7-3.135,7-7v-2v-1v-2v-1V8c0-3.865-3.135-7-7-7S9,4.135,9,8v2v1v2v1v2C9,19.865,12.135,23,16,23z M13,14h-2\n\t\tv-1h2c0.553,0,1-0.447,1-1s-0.447-1-1-1h-2v-1h2c0.553,0,1-0.447,1-1s-0.447-1-1-1h-2c0-2.757,2.243-5,5-5s5,2.243,5,5h-2\n\t\tc-0.553,0-1,0.447-1,1s0.447,1,1,1h2v1h-2c-0.553,0-1,0.447-1,1s0.447,1,1,1h2v1h-2c-0.553,0-1,0.447-1,1s0.447,1,1,1h2\n\t\tc0,2.757-2.243,5-5,5s-5-2.243-5-5h2c0.553,0,1-0.447,1-1S13.553,14,13,14z\"></path>\n\t<path d=\"M26,16h-2c0,4.411-3.589,8-8,8s-8-3.589-8-8H6c0,5.177,3.954,9.445,9,9.949V29h-3v2h3h2h3v-2h-3v-3.051\n\t\tC22.046,25.445,26,21.177,26,16z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: migrate (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"migrate\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M24.707,16.293l-1.414,1.414L26.586,21H21V10V9l-8-8h-1H1v30h20v-8h5.586l-3.293,3.293l1.414,1.414L30.414,22L24.707,16.293\n\tz M19,29H3V3h9v7h7v11h-7v2h7V29z\"></path>\n</svg>\n<!--\n\t  icon: minimize (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"minimize\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,4v20v4h30v-4V4H1z M3,6h26v16H3V6z\"></path>\n\t<polygon points=\"13.293,10.293 7,16.586 7,12 5,12 5,20 13,20 13,18 8.414,18 14.707,11.707 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: mobile (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"mobile\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M7,1v4v22v4h18v-4V5V1H7z M23,7v18H9V7H23z M14,3h4v1h-4V3z\"></path>\n</svg>\n<!--\n\t  icon: monitoring (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"monitoring\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n\t</g>\n\t<g>\n\t\t<path d=\"M16,24c4.484,0,7.9-2.417,10-6c-2.1-3.583-5.516-6-10-6s-7.9,2.417-10,6C8.1,21.583,11.516,24,16,24z M16,13\n\t\t\tc3.627,0,6.74,1.77,8.826,5c-2.086,3.23-5.199,5-8.826,5s-6.74-1.77-8.826-5C9.26,14.77,12.373,13,16,13z\"></path>\n\t</g>\n\t<g>\n\t\t<path d=\"M16,21.5c1.934,0,3.5-1.566,3.5-3.5s-1.566-3.5-3.5-3.5c-1.932,0-3.5,1.566-3.5,3.5S14.068,21.5,16,21.5z M16,16.833\n\t\t\tc0.646,0,1.166,0.522,1.166,1.167s-0.52,1.167-1.166,1.167S14.834,18.645,14.834,18S15.354,16.833,16,16.833z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: move (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"move\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"12,17 12,15 5.414,15 7.707,12.707 6.293,11.293 1.586,16 6.293,20.707 7.707,19.293 5.414,17 \t\"></polygon>\n\t<polygon points=\"25.707,11.293 24.293,12.707 26.586,15 20,15 20,17 26.586,17 24.293,19.293 25.707,20.707 30.414,16 \t\"></polygon>\n\t<polygon points=\"17,26.586 17,20 15,20 15,26.586 12.707,24.293 11.293,25.707 16,30.414 20.707,25.707 19.293,24.293 \t\"></polygon>\n\t<polygon points=\"15,5.414 15,12 17,12 17,5.414 19.293,7.707 20.707,6.293 16,1.586 11.293,6.293 12.707,7.707 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: move-cart (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"move-cart\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M13.35,13.22l3.245,7.673c1.407,0.051,2.69,0.6,3.677,1.482l7.664-3.242L23.602,8.885L13.35,13.22z M19.92,11.938\n\t\tl2.762-1.174l0.193,0.457l-2.76,1.176L19.92,11.938z M23.416,12.446l-2.777,1.184l-0.195-0.458l2.775-1.182L23.416,12.446z\"></path>\n\t<path d=\"M21.295,23.571c0.359,0.555,0.629,1.171,0.783,1.834l8.746-3.698l-0.777-1.837L21.295,23.571z\"></path>\n\t<path d=\"M13.199,21.833c0.284-0.184,0.582-0.354,0.902-0.488c0.302-0.129,0.614-0.219,0.931-0.294L7.542,3.334L1.97,0.918\n\t\tL1.176,2.747l4.84,2.1L13.199,21.833z\"></path>\n\t<path d=\"M16.359,22.286c-2.399,0.043-4.315,2.027-4.273,4.426s2.026,4.314,4.425,4.273c2.397-0.042,4.315-2.027,4.273-4.426\n\t\tS18.757,22.245,16.359,22.286z M16.477,28.995c-1.302,0.023-2.38-1.017-2.403-2.318c-0.022-1.302,1.019-2.379,2.32-2.402\n\t\ts2.38,1.018,2.403,2.318C18.819,27.896,17.778,28.974,16.477,28.995z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: music (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"music\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M11,5v4v1v12.023C10.162,21.39,9.131,21,8,21c-2.761,0-5,2.238-5,5s2.239,5,5,5s5-2.238,5-5V9.556l14-3.111v11.579\n\tC26.162,17.39,25.131,17,24,17c-2.761,0-5,2.238-5,5s2.239,5,5,5s5-2.238,5-5V6V5V1L11,5z M8,29c-1.654,0-3-1.346-3-3s1.346-3,3-3\n\ts3,1.346,3,3S9.654,29,8,29z M24,25c-1.654,0-3-1.346-3-3s1.346-3,3-3s3,1.346,3,3S25.654,25,24,25z\"></path>\n</svg>\n<!--\n\t  icon: musicfile (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"musicfile\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v22v4h26v-4V3H3z M5,5h22v18H5V5z\"></path>\n\t<path d=\"M13,9v2v5.779C12.469,16.3,11.771,16,11,16c-1.655,0-3,1.344-3,3c0,1.656,1.345,3,3,3s3-1.344,3-3v-8.182l9-1.637v5.598\n\t\tC22.469,14.3,21.771,14,21,14c-1.655,0-3,1.344-3,3c0,1.656,1.345,3,3,3s3-1.344,3-3V9V7V6L13,8V9z M11,21c-1.102,0-2-0.897-2-2\n\t\ts0.898-2,2-2s2,0.897,2,2S12.102,21,11,21z M21,19c-1.103,0-2-0.897-2-2s0.897-2,2-2s2,0.898,2,2S22.103,19,21,19z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: new-indicator (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"new-indicator\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.27,2,2,8.269,2,16c0,7.729,6.27,14,14,14c7.73,0,14-6.271,14-14C30,8.269,23.73,2,16,2z M16,28\n\t\tC9.383,28,4,22.617,4,16S9.383,4,16,4s12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<g>\n\t\t<path d=\"M8.525,14.971l0.701-1.854L15,15.174V9h1.956v6.174l5.769-2.058l0.752,1.854l-5.92,1.957l3.611,4.918L19.564,23\n\t\t\tL15.9,17.982L12.241,23l-1.605-1.154l3.659-4.918L8.525,14.971z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: next-right-forward (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"next-right-forward\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"15.293,10.707 19.586,15 8,15 8,17 19.586,17 15.293,21.293 16.707,22.707 23.414,16 16.707,9.293 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14c7.731,0,14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16\n\t\tS9.383,4,16,4c6.617,0,12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: not-ready (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"not-ready\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon fill=\"#C7C7C7\" points=\"14,18.586 10.707,15.293 9.293,16.707 14,21.414 22.707,12.707 21.293,11.293 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16c0,7.73,6.269,14,14,14c7.73,0,14-6.27,14-14C30,8.269,23.73,2,16,2z M16,28\n\t\tC9.383,28,4,22.617,4,16S9.383,4,16,4s12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: numberlist (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"numberlist\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"8\" y=\"6\" width=\"23\" height=\"2\"></rect>\n\t<rect x=\"8\" y=\"15\" width=\"23\" height=\"2\"></rect>\n\t<rect x=\"8\" y=\"24\" width=\"23\" height=\"2\"></rect>\n\t<polygon points=\"3,4 2,4 1,4 1,5 2,5 2,9 1,9 1,10 2,10 3,10 4,10 4,9 3,9 \t\"></polygon>\n\t<polygon points=\"3,15 3,16 4,16 4,15 4,14 3,14 \t\"></polygon>\n\t<rect x=\"2\" y=\"16\" width=\"1\" height=\"1\"></rect>\n\t<polygon points=\"1,18 1,19 4,19 4,18 2,18 2,17 1,17 \t\"></polygon>\n\t<polygon points=\"2,13 1,13 1,14 2,14 3,14 3,13 \t\"></polygon>\n\t<rect x=\"3\" y=\"23\" width=\"1\" height=\"1\"></rect>\n\t<rect x=\"2\" y=\"24\" width=\"1\" height=\"1\"></rect>\n\t<polygon points=\"3,27 4,27 4,26 4,25 3,25 3,26 \t\"></polygon>\n\t<polygon points=\"1,27 1,28 2,28 3,28 3,27 2,27 \t\"></polygon>\n\t<polygon points=\"2,22 1,22 1,23 2,23 3,23 3,22 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: outdent (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"outdent\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"7.292,10.292 1.585,16 7.292,21.706 8.706,20.292 4.414,16 8.706,11.707 \t\"></polygon>\n\t<rect x=\"11\" y=\"6\" width=\"2\" height=\"20\"></rect>\n\t<rect x=\"15\" y=\"9\" width=\"12\" height=\"2\"></rect>\n\t<rect x=\"15\" y=\"13\" width=\"8\" height=\"2\"></rect>\n\t<rect x=\"15\" y=\"17\" width=\"16\" height=\"2\"></rect>\n\t<rect x=\"15\" y=\"21\" width=\"8\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: overview (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"overview\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M24,9c-1.906,0-3.632,0.764-4.895,2h-1.383c-0.347-0.595-0.984-1-1.723-1s-1.376,0.405-1.723,1h-1.383\n\tC11.632,9.764,9.906,9,8,9c-3.867,0-7,3.135-7,7s3.133,7,7,7s7-3.135,7-7h2c0,3.865,3.133,7,7,7s7-3.135,7-7S27.867,9,24,9z M8,21\n\tc-2.757,0-5-2.243-5-5s2.243-5,5-5s5,2.243,5,5S10.757,21,8,21z M24,21c-2.757,0-5-2.243-5-5s2.243-5,5-5s5,2.243,5,5\n\tS26.757,21,24,21z\"></path>\n</svg>\n<!--\n\t  icon: pan-zoom (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"pan-zoom\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<polygon points=\"11.9,19.2 11.9,21.2 20.1,21.2 20.1,19.2 \t\t\t\"></polygon>\n\t\t</g>\n\t</g>\n\t<polygon points=\"20,12 17,12 17,9 15,9 15,12 12,12 12,14 15,14 15,17 17,17 17,14 20,14 \t\"></polygon>\n\t<polygon points=\"3.7,16 5.1,14.6 7.8,11.9 6.5,10.5 1,16 6.5,21.5 7.8,20.1 5.1,17.4 \t\"></polygon>\n\t<polygon points=\"25.5,10.5 24.2,11.9 26.9,14.6 28.3,16 26.9,17.4 24.2,20.1 25.5,21.5 31,16 \t\"></polygon>\n\t<polygon points=\"17.4,26.9 16,28.3 14.6,26.9 11.9,24.2 10.5,25.5 16,31 21.5,25.5 20.1,24.2 \t\"></polygon>\n\t<polygon points=\"14.6,5.1 16,3.7 17.4,5.1 20.1,7.8 21.5,6.5 16,1 10.5,6.5 11.9,7.8 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: paste (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"paste\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M21,7V1H5v24h6v6h16V7H21z M25,29H13V9h12V29z\"></path>\n\t<rect x=\"15\" y=\"13\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"15\" y=\"15\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"15\" y=\"17\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"15\" y=\"19\" width=\"4\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: pause (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"pause\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<rect x=\"11\" y=\"11\" width=\"4\" height=\"10\"></rect>\n\t<rect x=\"17\" y=\"11\" width=\"4\" height=\"10\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: payment-creditcard (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"payment-creditcard\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,6v20h30V6H1z M29,8v2H3V8H29z M3,24V13h26v11H3z\"></path>\n\t<rect x=\"5\" y=\"21\" width=\"4\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"21\" width=\"4\" height=\"1\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: person (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"person\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,9c2.209,0,4-1.791,4-4s-1.791-4-4-4s-4,1.791-4,4S13.791,9,16,9z M16,3c1.103,0,2,0.897,2,2s-0.897,2-2,2s-2-0.897-2-2\n\t\tS14.898,3,16,3z\"></path>\n\t<path d=\"M19,11h-6c-1.104,0-2,0.896-2,2v8l2,2v7c0,0.552,0.447,1,1,1h4c0.553,0,1-0.448,1-1v-7l2-2v-8C21,11.896,20.104,11,19,11z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: phone-call (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"phone-call\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M24,1l-6,7l2,3l-9,9l-3-2l-7,5l3,8c5-2,11-6,16-11S29,9,31,4L24,1z M18.586,18.586c-4.049,4.049-8.952,7.582-13.455,9.733\n\tl-1.719-4.584l4.627-3.306l1.852,1.234l1.364,0.91l1.159-1.16l9-9l1.159-1.159l-0.909-1.364l-1.159-1.739l4.058-4.734l3.798,1.627\n\tC26.213,9.571,22.661,14.511,18.586,18.586z\"></path>\n</svg>\n<!--\n\t  icon: picturefile (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"picturefile\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v22v4h26v-4V3H3z M5,5h22v18H5V5z\"></path>\n\t<polygon points=\"19,17 12,10 7,15 7,21 25,21 25,17 22,14 \t\"></polygon>\n\t<circle cx=\"23\" cy=\"9\" r=\"2\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: piechart (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"piechart\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2v14H2c0,7.731,6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M18,4.167C23.668,5.122,28,10.064,28,16H18V4.167z\n\t\t M16,28c-5.936,0-10.878-4.332-11.833-10H16h2h9.819C26.863,23.666,21.934,28,16,28z\"></path>\n\t<path d=\"M14,2.159C7.873,3.038,3.038,7.873,2.159,14H14V2.159z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: pin (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"pin\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31.011,11.131L20.745,0.866l-7.318,9.714c-0.403-0.05-0.81-0.076-1.219-0.076c-2.535,0-5.033,0.983-7.032,2.769\n\tl-1.578,1.41l6.257,6.255l-8.861,8.86l-0.004,1.325l1.341,0.01l8.859-8.859l6.004,6.003l1.409-1.578\n\tc2.096-2.346,3.057-5.346,2.693-8.25L31.011,11.131z M19.094,17.604c0.704,2.546,0.084,5.449-1.982,7.763L6.509,14.765\n\tc1.706-1.524,3.732-2.261,5.699-2.261c0.701,0,1.395,0.094,2.063,0.278l6.687-8.875l7.012,7.011L19.094,17.604z\"></path>\n</svg>\n<!--\n\t  icon: pin-asset (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"pin-asset\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path fill=\"#FFFFFF\" d=\"M25.246,3.749C22.778,1.332,19.495,0,16,0c-3.494,0-6.779,1.332-9.248,3.75\n\tc-2.479,2.419-3.845,5.641-3.845,9.072c0,3.604,1.358,6.996,3.826,9.552L16,32l9.268-9.627c2.466-2.555,3.824-5.947,3.824-9.551\n\tC29.093,9.392,27.727,6.169,25.246,3.749z\"></path>\n<path d=\"M24.558,4.455C22.373,2.315,19.349,0.986,16,0.986c-3.349,0-6.373,1.329-8.558,3.468c-2.19,2.138-3.549,5.098-3.549,8.368\n\tc0,3.461,1.358,6.598,3.549,8.867L16,30.578l8.558-8.889c2.19-2.27,3.549-5.406,3.549-8.867C28.106,9.552,26.748,6.592,24.558,4.455\n\tz M16,22.821c-5.2,0-9.415-4.216-9.415-9.416S10.8,3.991,16,3.991c5.2,0,9.415,4.215,9.415,9.415S21.2,22.821,16,22.821z\"></path>\n<path d=\"M21.918,17.838l-0.02-10.225H10.082v10.225h4.301v1.087h-1.074v0.524h5.38v-0.537h-1.076v-1.074H21.918z M11.159,8.689h9.68\n\tv7h-9.68V8.689z\"></path>\n</svg>\n<!--\n\t  icon: pin-equipment (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"pin-equipment\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path fill=\"#FFFFFF\" d=\"M25.246,3.749C22.778,1.332,19.494,0,16,0S9.221,1.332,6.752,3.75c-2.479,2.419-3.845,5.642-3.845,9.072\n\tc0,3.604,1.358,6.996,3.825,9.552l8.557,8.888L16,32l0.711-0.738l8.558-8.889c2.466-2.555,3.824-5.947,3.824-9.551\n\tC29.093,9.392,27.727,6.169,25.246,3.749z\"></path>\n<g>\n\t<path d=\"M24.558,4.455C22.373,2.315,19.349,0.986,16,0.986c-3.349,0-6.373,1.329-8.558,3.468c-2.19,2.138-3.549,5.098-3.549,8.368\n\t\tc0,3.461,1.358,6.598,3.549,8.867L16,30.578l8.558-8.889c2.19-2.27,3.549-5.406,3.549-8.867\n\t\tC28.106,9.552,26.748,6.592,24.558,4.455z M16,22.535c-5.2,0-9.416-4.216-9.416-9.417c0-5.2,4.215-9.415,9.416-9.415\n\t\ts9.415,4.215,9.415,9.415C25.415,18.319,21.2,22.535,16,22.535z\"></path>\n\t<path d=\"M22.429,9.416c-0.567-1.346-1.89-2.131-3.263-2.1l-0.812-1.91l-2.266,0.965l0.804,1.894\n\t\tc-1.01,0.963-1.374,2.475-0.801,3.84l1.6-0.678c0.287,0.622,0.908,1.024,1.602,1.024c0.235,0,0.472-0.045,0.69-0.14\n\t\tc0.437-0.182,0.772-0.534,0.951-0.966c0.168-0.419,0.167-0.873,0.003-1.296L22.429,9.416z M19.752,11.76\n\t\tc-0.152,0.059-0.305,0.095-0.458,0.095c-0.435,0-0.845-0.25-1.043-0.671l2.135-0.903C20.602,10.863,20.327,11.511,19.752,11.76z\"></path>\n\t<path d=\"M15.628,16.553l-4.018-4.016c0.002-0.029,0.012-0.058,0.012-0.087c0-0.066-0.012-0.124-0.021-0.185l3.325-3.321\n\t\tc0.06,0.014,0.125,0.014,0.193,0.014c0.563,0,1.021-0.457,1.021-1.023c0-0.564-0.458-1.022-1.021-1.022\n\t\tc-0.568,0-1.023,0.455-1.023,1.022c0,0.042,0.007,0.084,0.012,0.132l-3.376,3.375c-0.047-0.014-0.089-0.014-0.137-0.014\n\t\tc-0.566,0-1.024,0.457-1.024,1.022c0,0.566,0.458,1.023,1.024,1.023c0.076,0,0.15-0.012,0.226-0.025l3.648,3.645\n\t\tc-0.218,0.256-0.353,0.566-0.369,0.925h-1.461v1.2h6.008v-1.202H17.14C17.104,17.204,16.443,16.561,15.628,16.553z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: pin-multiples (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"pin-multiples\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path fill=\"#FFFFFF\" d=\"M25.237,3.738C22.77,1.328,19.489,0,16.001,0H16h-0.016c-3.493,0.004-6.775,1.339-9.242,3.759\n\tc-2.477,2.422-3.839,5.646-3.835,9.077c0.004,3.605,1.366,6.996,3.835,9.549l8.567,8.878L16.021,32l0.71-0.739l8.548-8.898\n\tc2.464-2.555,3.818-5.948,3.814-9.554C29.089,9.376,27.719,6.155,25.237,3.738z\"></path>\n<path d=\"M24.549,4.444c-2.188-2.136-5.214-3.462-8.562-3.458c-3.35,0.004-6.372,1.335-8.554,3.477\n\tc-2.188,2.139-3.544,5.102-3.54,8.372c0.004,3.462,1.365,6.598,3.558,8.864l8.568,8.879l8.548-8.898\n\tc2.188-2.271,3.543-5.409,3.539-8.871C28.103,9.54,26.742,6.58,24.549,4.444z M16,22.535c-5.2,0-9.416-4.216-9.416-9.417\n\tc0-5.2,4.215-9.415,9.416-9.415s9.415,4.215,9.415,9.415C25.415,18.319,21.2,22.535,16,22.535z\"></path>\n</svg>\n<!--\n\t  icon: pin-person (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"pin-person\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path fill=\"#FFFFFF\" d=\"M25.246,3.749C22.777,1.332,19.494,0,16,0S9.221,1.332,6.752,3.75c-2.479,2.419-3.845,5.642-3.845,9.072\n\tc0,3.604,1.358,6.997,3.825,9.552l8.557,8.888L16,32l0.711-0.738l8.559-8.889c2.465-2.555,3.823-5.947,3.823-9.551\n\tC29.093,9.392,27.727,6.169,25.246,3.749z\"></path>\n<g>\n\t<path d=\"M24.559,4.455C22.373,2.315,19.35,0.986,16,0.986S9.627,2.315,7.441,4.454c-2.189,2.138-3.549,5.098-3.549,8.368\n\t\tc0,3.461,1.358,6.598,3.549,8.868L16,30.578l8.559-8.889c2.189-2.271,3.549-5.406,3.549-8.868\n\t\tC28.105,9.552,26.748,6.592,24.559,4.455z M16,22.535c-5.2,0-9.416-4.217-9.416-9.417S10.799,3.703,16,3.703\n\t\ts9.415,4.215,9.415,9.415S21.2,22.535,16,22.535z\"></path>\n\t<g>\n\t\t<path d=\"M16.001,5.656c2.424,0,4.391,1.964,4.391,4.393c0,2.421-1.967,4.391-4.391,4.391c-2.428,0-4.395-1.97-4.395-4.391\n\t\t\tC11.607,7.621,13.574,5.656,16.001,5.656z\"></path>\n\t</g>\n\t<path d=\"M19.766,15.699h-7.533c-1.012,0-1.883,0.871-1.883,1.888v1.879h11.3v-1.879C21.648,16.568,20.781,15.699,19.766,15.699z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: pin-room-function (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"pin-room-function\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path fill=\"#FFFFFF\" d=\"M25.246,3.749C22.778,1.332,19.494,0,16,0S9.221,1.332,6.752,3.75c-2.479,2.419-3.845,5.642-3.845,9.072\n\tc0,3.604,1.358,6.996,3.825,9.552l8.557,8.888L16,32l0.711-0.738l8.558-8.889c2.466-2.555,3.824-5.947,3.824-9.551\n\tC29.093,9.392,27.727,6.169,25.246,3.749z\"></path>\n<g>\n\t<path d=\"M24.558,4.455C22.373,2.315,19.349,0.986,16,0.986c-3.349,0-6.373,1.329-8.558,3.468c-2.19,2.138-3.549,5.098-3.549,8.368\n\t\tc0,3.461,1.358,6.598,3.549,8.867L16,30.578l8.558-8.889c2.19-2.27,3.549-5.406,3.549-8.867\n\t\tC28.106,9.552,26.748,6.592,24.558,4.455z M16,22.535c-5.2,0-9.416-4.216-9.416-9.417c0-5.2,4.215-9.415,9.416-9.415\n\t\ts9.415,4.215,9.415,9.415C25.415,18.319,21.2,22.535,16,22.535z\"></path>\n\t<rect x=\"10.082\" y=\"11.056\" width=\"11.836\" height=\"4.25\"></rect>\n\t<path d=\"M11.972,16.207c0.798,0,1.441,0.636,1.441,1.419c0,0.782-0.643,1.418-1.441,1.418c-0.79,0-1.435-0.636-1.435-1.418\n\t\tC10.537,16.842,11.182,16.207,11.972,16.207z\"></path>\n\t<path d=\"M20.167,16.207c0.798,0,1.439,0.636,1.439,1.419c0,0.782-0.642,1.418-1.439,1.418c-0.793,0-1.434-0.636-1.434-1.418\n\t\tC18.733,16.842,19.374,16.207,20.167,16.207z\"></path>\n\t<path d=\"M16.073,16.207c0.792,0,1.436,0.636,1.436,1.419c0,0.782-0.644,1.418-1.436,1.418c-0.797,0-1.441-0.636-1.441-1.418\n\t\tC14.632,16.842,15.277,16.207,16.073,16.207z\"></path>\n\t<path d=\"M11.972,7.208c0.798,0,1.441,0.636,1.441,1.418s-0.643,1.418-1.441,1.418c-0.79,0-1.435-0.636-1.435-1.418\n\t\tS11.182,7.208,11.972,7.208z\"></path>\n\t<ellipse cx=\"20.167\" cy=\"8.626\" rx=\"1.439\" ry=\"1.418\"></ellipse>\n\t<path d=\"M16.073,7.208c0.792,0,1.436,0.636,1.436,1.418s-0.644,1.418-1.436,1.418c-0.797,0-1.441-0.636-1.441-1.418\n\t\tS15.277,7.208,16.073,7.208z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: pinned (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"pinned\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31.011,11.131L20.745,0.866l-7.318,9.714c-0.403-0.05-0.81-0.076-1.219-0.076c-2.535,0-5.033,0.983-7.032,2.769\n\tl-1.578,1.41l6.257,6.255l-8.861,8.86l-0.004,1.325l1.341,0.01l8.859-8.859l6.004,6.003l1.409-1.578\n\tc2.096-2.346,3.057-5.346,2.693-8.25L31.011,11.131z\"></path>\n</svg>\n<!--\n\t  icon: play-demo-start (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"play-demo-start\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<polygon points=\"11,22 23,16 11,10 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: power-start (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"power-start\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M18,7.18V1h-4v6.18C8.326,8.134,4,13.055,4,19c0,6.628,5.371,12,12,12c6.629,0,12-5.372,12-12\n\tC28,13.055,23.674,8.134,18,7.18z M16,29c-5.514,0-10-4.486-10-10c0-4.829,3.441-8.869,8-9.798V19h4V9.202\n\tc4.559,0.929,8,4.969,8,9.798C26,24.514,21.514,29,16,29z\"></path>\n</svg>\n<!--\n\t  icon: presentationfile (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"presentationfile\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n\t<path d=\"M16,25c3.865,0,7-3.135,7-7s-3.135-7-7-7v7H9C9,21.865,12.135,25,16,25z M16,19h1v-1v-5.916c2.834,0.477,5,2.948,5,5.916\n\t\tc0,3.309-2.691,6-6,6c-2.968,0-5.439-2.166-5.917-5H16z\"></path>\n\t<path d=\"M15,11.08c-3.064,0.439-5.481,2.856-5.92,5.92H15V11.08z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: print (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"print\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M26,6V1H6v5H2v12h4v4v1l8,8h1h11V18h4V6H26z M8,3h16v3H8V3z M15,29v-7H8v-8h16v15H15z\"></path>\n</svg>\n<!--\n\t  icon: priority-emergency\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"priority-emergency\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 18 18\" style=\"enable-background:new 0 0 18 18;\" xml:space=\"preserve\">\n<path d=\"M17.4,7.6l-7-7c-0.8-0.8-2-0.8-2.8,0l-7,7c-0.8,0.8-0.8,2,0,2.8l7,7c0.8,0.8,2,0.8,2.8,0l7-7C18.2,9.6,18.2,8.4,17.4,7.6z\n\t M8,3.4h2v3.2l-0.5,4.9H8.5L8,6.6V3.4z M10.1,14.6H7.9v-2h2.1V14.6z\"></path>\n</svg>\n<!--\n\t  icon: priority-high\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"priority-high\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 18 18\" style=\"enable-background:new 0 0 18 18;\" xml:space=\"preserve\">\n<path d=\"M9,6.1l4.5,7.9h-9L9,6.1 M9,1C8.6,1,8.3,1.2,8,1.7L0.2,15.3c-0.6,1-0.1,1.7,1.1,1.7h15.4c1.1,0,1.6-0.8,1.1-1.7L10,1.7\n\tC9.7,1.2,9.4,1,9,1L9,1z\"></path>\n</svg>\n<!--\n\t  icon: priority-low\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"priority-low\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 18 18\" style=\"enable-background:new 0 0 18 18;\" xml:space=\"preserve\">\n<path d=\"M13.5,4L9,11.9L4.5,4H13.5 M16.7,1H1.3C0.2,1-0.3,1.8,0.2,2.7L8,16.3C8.3,16.8,8.6,17,9,17c0.4,0,0.7-0.2,1-0.7l7.8-13.5\n\tC18.3,1.8,17.8,1,16.7,1L16.7,1z\"></path>\n</svg>\n<!--\n\t  icon: priority-medium\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"priority-medium\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 18 18\" style=\"enable-background:new 0 0 18 18;\" xml:space=\"preserve\">\n<path d=\"M15,3v12H3V3H15 M16,0H2C0.9,0,0,0.9,0,2v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V2C18,0.9,17.1,0,16,0L16,0z\"></path>\n</svg>\n<!--\n\t  icon: priority-none\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"priority-none\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 18 18\" style=\"enable-background:new 0 0 18 18;\" xml:space=\"preserve\">\n\t<rect y=\"7.5\" width=\"18\" height=\"3\"/>\n</svg>\n<!--\n\t  icon: project-planning (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"project-planning\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M25,1l-7.646,7.646l-0.707,0.707l-1.293,1.293l-0.707,0.707l-1.293,1.293l-0.707,0.707l-1.293,1.293l-0.707,0.707\n\t\tl-1.293,1.293l-0.707,0.707l-1.293,1.293l-0.707,0.707L4,22l-3,3l6,6l3-3L31,7L25,1z M8.586,26.586l-3.172-3.172l2.646-2.647\n\t\tl1.586,1.586l0.707-0.707L8.768,20.06l1.293-1.293l1.586,1.586l0.707-0.707l-1.586-1.586l1.293-1.293l1.586,1.586l0.707-0.707\n\t\tl-1.586-1.586l1.293-1.293l1.586,1.586l0.707-0.707l-1.586-1.586l1.293-1.293l1.586,1.586l0.707-0.707l-1.586-1.586l1.293-1.293\n\t\tl1.586,1.586l0.707-0.707l-1.586-1.586L25,3.829L28.172,7L8.586,26.586z\"></path>\n\t<circle cx=\"25\" cy=\"7\" r=\"1\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: rating-star (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"rating-star\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31,13l-11-1L16,1l-4,11L1,13l9,7L7,31l9-7l9,7l-3-11L31,13z M17.228,22.421L16,21.466l-1.228,0.955l-4.264,3.316\n\tl1.421-5.211l0.351-1.287l-1.052-0.818l-5-3.889l5.953-0.541l1.265-0.115l0.434-1.193L16,6.852l2.121,5.831l0.434,1.193l1.265,0.115\n\tl5.953,0.541l-4.999,3.889L19.72,19.24l0.351,1.287l1.421,5.211L17.228,22.421z\"></path>\n</svg>\n<!--\n\t  icon: rating-star-filled\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"rating-star-filled\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M31,13l-11-1L16,1l-4,11L1,13l9,7L7,31l9-7l9,7l-3-11L31,13z\"></path>\n</svg>\n<!--\n\t  icon: read (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"read\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M16,4L1,12v1v15h30V13v-1L16,4z M7,11h18v4.2L16,20l-9-4.8V11z M29,26H3V14.066L16,21l13-6.934V26z\"></path>\n</svg>\n<!--\n\t  icon: ready (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"ready\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M16,2C8.269,2,2,8.269,2,16c0,7.73,6.269,14,14,14c7.73,0,14-6.27,14-14C30,8.269,23.73,2,16,2z M14,21.414l-4.707-4.707\n\tl1.414-1.414L14,18.586l7.293-7.293l1.414,1.414L14,21.414z\"></path>\n</svg>\n<!--\n\t  icon: recommended (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"recommended\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<polygon points=\"14.5,13.586 12.207,11.293 10.793,12.707 14.5,16.414 21.207,9.707 19.793,8.293 \t\t\"></polygon>\n\t</g>\n\t<g>\n\t\t<path d=\"M27,12c0-6.074-4.924-11-11-11C9.926,1,5,5.926,5,12c0,4.21,2.369,7.865,5.844,9.714L10,31l6-4l6,4l-0.844-9.286\n\t\t\tC24.632,19.865,27,16.21,27,12z M16,21c-4.971,0-9-4.029-9-9s4.029-9,9-9s9,4.029,9,9S20.971,21,16,21z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: recurring (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"recurring\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M21.5,1l-1.4,1.4l4.3,4.3h-9.8C8,6.8,2.5,12.2,2.5,18.9c0,1.1,0.2,2.2,0.4,3.2l1.7-1.7c-0.1-0.5-0.1-1-0.1-1.5\n\t\tc0-5.6,4.5-10.1,10.1-10.1h9.8l-4.3,4.3l1.4,1.4l6.8-6.8L21.5,1z\"></path>\n\t<path d=\"M27.3,11.6c0.1,0.5,0.1,1,0.1,1.5c0,5.6-4.5,10.1-10.1,10.1H7.6l4.3-4.3l-1.4-1.4l-6.8,6.8l6.8,6.8l1.4-1.4l-4.3-4.3h9.8\n\t\tc6.7,0,12.1-5.4,12.1-12.1c0-1.1-0.2-2.2-0.4-3.2L27.3,11.6z\"></path>\n</g>\n</svg>\n\n<!--\n\t  icon: recurring-exception (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"recurring-exception\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n\t<style type=\"text/css\">\n\t\t.exception{fill:#E05702;}\n\t</style>\n\t<path d=\"M21.5,1l-1.4,1.4l4.3,4.3h-9.8C8,6.8,2.5,12.2,2.5,18.9c0,1.1,0.2,2.2,0.4,3.2l1.7-1.7c-0.1-0.5-0.1-1-0.1-1.5\n\t\tc0-5.6,4.5-10.1,10.1-10.1h9.8l-4.3,4.3l1.4,1.4l6.8-6.8L21.5,1z\"></path>\n\t<g>\n\t\t<path d=\"M26.2,18.1l1.5,1.5c1.2-1.9,1.9-4.1,1.9-6.4c0-1.1-0.2-2.2-0.4-3.2l-1.7,1.7c0.1,0.5,0.1,1,0.1,1.5\n\t\t\tC27.5,14.9,27,16.6,26.2,18.1z\"></path>\n\t\t<polygon points=\"15.2,25.2 14.2,24.2 15.2,23.2 7.6,23.2 11.9,18.9 10.5,17.5 3.7,24.2 10.5,31 11.9,29.6 7.6,25.2\"></polygon>\n\t</g>\n\t<g>\n\t\t<rect x=\"18.8\" y=\"19.8\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -10.3252 23.5218)\" class=\"exception\" width=\"8.8\" height=\"8.8\"></rect>\n\t</g>\n</svg>\n<!--\n\t  icon: refresh-redo (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"refresh-redo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M17,29c-5.514,0-10-4.486-10-10S11.486,9,17,9h6.586l-4.293,4.293l1.414,1.414L27.414,8l-6.707-6.707l-1.414,1.414L23.586,7\n\tH17C10.383,7,5,12.383,5,19s5.383,12,12,12c3.205,0,6.218-1.248,8.485-3.515l-1.414-1.414C22.182,27.96,19.671,29,17,29z\"></path>\n</svg>\n<!--\n\t  icon: relationship (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"relationship\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M24,9c2.209,0,4-1.791,4-4s-1.791-4-4-4s-4,1.791-4,4S21.791,9,24,9z M24,3c1.103,0,2,0.897,2,2c0,1.102-0.897,2-2,2\n\t\tc-1.104,0-2-0.898-2-2C22,3.897,22.896,3,24,3z\"></path>\n\t<path d=\"M27,11h-6l-5,5l-5-5H5c-1.105,0-2,0.896-2,2v8l2,2v7c0,0.553,0.447,1,1,1h4c0.553,0,1-0.447,1-1V16l5,5l5-5v14\n\t\tc0,0.553,0.447,1,1,1h4c0.553,0,1-0.447,1-1v-7l2-2v-8C29,11.896,28.104,11,27,11z\"></path>\n\t<path d=\"M8,9c2.209,0,4-1.791,4-4s-1.791-4-4-4S4,2.791,4,5S5.791,9,8,9z M8,3c1.103,0,2,0.897,2,2c0,1.102-0.897,2-2,2\n\t\tC6.896,7,6,6.102,6,5C6,3.897,6.896,3,8,3z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: remove-delete (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"remove-delete\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"9\" y=\"15\" width=\"14\" height=\"2\"></rect>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: remove-trash (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"remove-trash\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"12\" y=\"2\" width=\"8\" height=\"2\"></rect>\n\t<path d=\"M6,5v5h1v20h18V10h1V5H6z M23,28H9V12h14V28z\"></path>\n\t<rect x=\"11\" y=\"14\" width=\"1\" height=\"12\"></rect>\n\t<rect x=\"14\" y=\"14\" width=\"1\" height=\"12\"></rect>\n\t<rect x=\"17\" y=\"14\" width=\"1\" height=\"12\"></rect>\n\t<rect x=\"20\" y=\"14\" width=\"1\" height=\"12\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: report (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"report\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"10\" y=\"7\" width=\"5\" height=\"21\"></rect>\n\t<rect x=\"17\" y=\"17\" width=\"5\" height=\"1\"></rect>\n\t<rect x=\"17\" y=\"15\" width=\"5\" height=\"1\"></rect>\n\t<rect x=\"17\" y=\"19\" width=\"5\" height=\"1\"></rect>\n\t<rect x=\"17\" y=\"21\" width=\"5\" height=\"1\"></rect>\n\t<rect x=\"17\" y=\"23\" width=\"5\" height=\"1\"></rect>\n\t<rect x=\"17\" y=\"25\" width=\"5\" height=\"1\"></rect>\n\t<rect x=\"17\" y=\"27\" width=\"5\" height=\"1\"></rect>\n\t<path d=\"M6,1v2v28h20V3V1H6z M24,29H8V5h16V29z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: repository-archive (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"repository-archive\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M29,10V8h-1h-1V7V6h-1H6H5v1v1H4H3v2H1v16h30V10H29z M6,7h20v1H6V7z M29,24H3V12h26V24z\"></path>\n\t<polygon points=\"19,19 20,19 20,18 20,17 19,17 19,18 13,18 13,17 12,17 12,18 12,19 13,19 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: reset-revert (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"reset-revert\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M19,5C12.383,5,7,10.383,7,17v6.586l-4.293-4.293l-1.414,1.414L8,27.414l6.707-6.707l-1.414-1.414L9,23.586V17\n\tc0-5.514,4.486-10,10-10s10,4.486,10,10c0,2.671-1.04,5.182-2.929,7.071l1.414,1.414C29.752,23.218,31,20.205,31,17\n\tC31,10.383,25.617,5,19,5z\"></path>\n</svg>\n<!--\n\t  icon: restore (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"restore\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M19,4C12.383,4,7,9.383,7,16v8.586l-4.293-4.293l-1.414,1.414L8,28.414l6.707-6.707l-1.414-1.414L9,24.586V16\n\t\tc0-5.514,4.486-10,10-10s10,4.486,10,10s-4.486,10-10,10v2c6.617,0,12-5.383,12-12S25.617,4,19,4z\"></path>\n\t<polygon points=\"20.293,18.707 21.707,17.293 20.06,15.646 25.354,10.354 24.646,9.646 19.354,14.939 16.707,12.293 15.293,13.707 \n\t\t17.94,16.354 16.646,17.646 17.354,18.354 18.646,17.06 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: retrieve (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"retrieve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"12\" y=\"23\" width=\"8\" height=\"1\"></rect>\n\t<rect x=\"12\" y=\"25\" width=\"8\" height=\"1\"></rect>\n\t<path d=\"M24,29V17H8v12H3v2h5h16h5v-2H24z M10,29V19h12v10H10z\"></path>\n\t<polygon points=\"15,5.414 15,15 17,15 17,5.414 20.293,8.707 21.707,7.293 16,1.586 10.293,7.293 11.707,8.707 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: role (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"role\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M18,5V1h-4v4H6v26h20V5H18z M16,2c0.552,0,1,0.448,1,1s-0.448,1-1,1s-1-0.448-1-1S15.448,2,16,2z M24,29H8V7h6v2h4V7h6V29z\n\t\t\"></path>\n\t<path d=\"M16,11c-2.762,0-5,2.238-5,5s2.238,5,5,5s5-2.238,5-5S18.762,11,16,11z M16,19c-1.654,0-3-1.346-3-3s1.346-3,3-3\n\t\ts3,1.346,3,3S17.654,19,16,19z\"></path>\n\t<path d=\"M12,23c-1.104,0-2,0.896-2,2v2h12v-2c0-1.104-0.896-2-2-2H12z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: room-function (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"room-function\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"3\" y=\"11.454\" width=\"26\" height=\"9.331\"></rect>\n\t<ellipse cx=\"7.156\" cy=\"25.881\" rx=\"3.157\" ry=\"3.119\"></ellipse>\n\t<ellipse cx=\"25.156\" cy=\"25.881\" rx=\"3.158\" ry=\"3.119\"></ellipse>\n\t<ellipse cx=\"16.156\" cy=\"25.881\" rx=\"3.157\" ry=\"3.119\"></ellipse>\n\t<ellipse cx=\"7.156\" cy=\"6.119\" rx=\"3.157\" ry=\"3.119\"></ellipse>\n\t<ellipse cx=\"25.156\" cy=\"6.119\" rx=\"3.158\" ry=\"3.119\"></ellipse>\n\t<ellipse cx=\"16.156\" cy=\"6.119\" rx=\"3.157\" ry=\"3.119\"></ellipse>\n</g>\n</svg>\n<!--\n\t  icon: rss-feed (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"rss-feed\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v5c11.598,0,21,9.402,21,21h5C29,14.641,17.359,3,3,3z\"></path>\n\t<path d=\"M3,13v5c6.076,0,11,4.924,11,11h5C19,20.163,11.837,13,3,13z\"></path>\n\t<circle cx=\"4.5\" cy=\"27.5\" r=\"3.5\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: run-running (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"run-running\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M11,11c-2.761,0-5,2.239-5,5s2.239,5,5,5c2.761,0,5-2.239,5-5S13.761,11,11,11z M11,18c-1.105,0-2-0.896-2-2s0.895-2,2-2\n\t\t\tc1.104,0,2,0.896,2,2S12.104,18,11,18z\"></path>\n\t</g>\n\t<g>\n\t\t<path d=\"M30.121,6.879C29.578,6.337,28.828,6,28,6H11C8.239,6,5.739,7.119,3.929,8.929C2.119,10.738,1,13.238,1,16\n\t\t\ts1.119,5.262,2.929,7.071C5.739,24.881,8.239,26,11,26c2.761,0,5.257-1.123,7.071-2.929c0,0,0,0,0,0\n\t\t\tc0.002-0.002,0.003-0.003,0.004-0.005c3.011-2.998,12.045-11.945,12.045-11.945C30.665,10.579,31,9.829,31,9\n\t\t\tS30.665,7.421,30.121,6.879z M16.661,21.652l-0.001,0.001C15.14,23.167,13.13,24,11,24c-2.137,0-4.146-0.832-5.657-2.343\n\t\t\tC3.832,20.146,3,18.137,3,16s0.832-4.146,2.343-5.657C6.854,8.832,8.863,8,11,8c2.049,0,4.097,0.783,5.657,2.343\n\t\t\tC19.774,13.461,19.775,18.533,16.661,21.652z M20.882,17.461c0.444-3.022-0.485-6.206-2.811-8.533\n\t\t\tC17.727,8.585,17.36,8.283,16.982,8h8.2c-0.374,1.056-0.148,2.276,0.697,3.121c0.246,0.246,0.528,0.428,0.824,0.571\n\t\t\tC25.148,13.231,22.924,15.436,20.882,17.461z M28,10c-0.552,0-1-0.448-1-1s0.448-1,1-1c0.552,0,1,0.448,1,1S28.552,10,28,10z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: satellitedish (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"satellitedish\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M28,21l-9-9l2.494-4.157C21.645,7.934,21.812,8,22,8c0.553,0,1-0.447,1-1s-0.447-1-1-1s-1,0.447-1,1\n\t\tc0,0.188,0.066,0.356,0.157,0.506L17,10L8,1C5.45,3.549,4,7.11,4,11c0,3.891,1.45,7.451,4,10c2.548,2.549,6.109,4,10,4\n\t\tC21.89,25,25.451,23.549,28,21z M6,11c0-2.614,0.745-5.053,2.127-7.045l16.918,16.918C23.053,22.255,20.614,23,18,23\n\t\tc-3.336,0-6.385-1.213-8.586-3.414C7.213,17.385,6,14.336,6,11z\"></path>\n\t<rect x=\"11\" y=\"27\" width=\"10\" height=\"4\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: save (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"save\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v26h7h12h3l4-4V3H3z M27,24.171L24.172,27H22v-2H10v2H5V5h22V24.171z\"></path>\n\t<path d=\"M16,22c3.313,0,6-2.687,6-6s-2.687-6-6-6s-6,2.686-6,6S12.686,22,16,22z M16,14c1.104,0,2,0.896,2,2s-0.896,2-2,2\n\t\ts-2-0.896-2-2S14.896,14,16,14z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: search (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"search\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12,1C5.926,1,1,5.926,1,12c0,6.074,4.926,11,11,11s11-4.926,11-11C23,5.926,18.074,1,12,1z M12,21c-4.962,0-9-4.038-9-9\n\t\ts4.038-9,9-9s9,4.038,9,9S16.962,21,12,21z\"></path>\n\t<rect x=\"23.879\" y=\"21.05\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -10.7696 26)\" width=\"4.243\" height=\"9.899\"></rect>\n\t<circle cx=\"21\" cy=\"21\" r=\"1\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: select-area (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"select-area\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"3.2,1.2 1.2,1.2 1.2,3.2 3.2,3.2 3.2,1.2 \t\"></polygon>\n\t<polygon points=\"7.2,1.2 5.2,1.2 5.2,3.2 7.2,3.2 7.2,1.2 \t\"></polygon>\n\t<polygon points=\"11.2,1.2 9.2,1.2 9.2,3.2 11.2,3.2 11.2,1.2 \t\"></polygon>\n\t<polygon points=\"15.2,1.2 13.2,1.2 13.2,3.2 15.2,3.2 15.2,1.2 \t\"></polygon>\n\t<polygon points=\"19.2,1.2 17.2,1.2 17.2,3.2 19.2,3.2 19.2,1.2 \t\"></polygon>\n\t<polygon points=\"23.2,1.2 21.2,1.2 21.2,3.2 23.2,3.2 23.2,1.2 \t\"></polygon>\n\t<polygon points=\"27.2,1.2 25.2,1.2 25.2,3.2 27.2,3.2 27.2,1.2 \t\"></polygon>\n\t<polygon points=\"27.2,5.2 25.2,5.2 25.2,7.2 27.2,7.2 27.2,5.2 \t\"></polygon>\n\t<polygon points=\"27.2,9.2 25.2,9.2 25.2,11.2 27.2,11.2 27.2,9.2 \t\"></polygon>\n\t<polygon points=\"27.2,13.2 25.2,13.2 25.2,15.2 27.2,15.2 27.2,13.2 \t\"></polygon>\n\t<polygon points=\"3.2,5.2 1.2,5.2 1.2,7.2 3.2,7.2 3.2,5.2 \t\"></polygon>\n\t<polygon points=\"3.2,9.2 1.2,9.2 1.2,11.2 3.2,11.2 3.2,9.2 \t\"></polygon>\n\t<polygon points=\"3.2,13.2 1.2,13.2 1.2,15.2 3.2,15.2 3.2,13.2 \t\"></polygon>\n\t<polygon points=\"3.2,17.2 1.2,17.2 1.2,19.2 3.2,19.2 3.2,17.2 \t\"></polygon>\n\t<polygon points=\"3.2,21.2 1.2,21.2 1.2,23.2 3.2,23.2 3.2,21.2 \t\"></polygon>\n\t<polygon points=\"3.2,25.2 1.2,25.2 1.2,27.2 3.2,27.2 3.2,25.2 \t\"></polygon>\n\t<polygon points=\"7.2,25.2 5.2,25.2 5.2,27.2 7.2,27.2 7.2,25.2 \t\"></polygon>\n\t<polygon points=\"11.2,25.2 9.2,25.2 9.2,27.2 11.2,27.2 11.2,25.2 \t\"></polygon>\n\t<polygon points=\"15.2,25.2 13.2,25.2 13.2,27.2 15.2,27.2 15.2,25.2 \t\"></polygon>\n\t<polygon points=\"31,28.9 26,23.8 28.8,21 18.5,18.2 21.2,28.5 24,25.7 29.1,30.8 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: settings (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"settings\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M30.366,5.876l-4.245,4.246C25.535,10.707,24.768,11,24,11s-1.535-0.293-2.121-0.879c-1.172-1.171-1.172-3.071-0.001-4.243\n\t\tl4.245-4.245C25.164,1.226,24.108,1,23,1c-4.419,0-8,3.582-8,8c0,0.914,0.161,1.789,0.443,2.606L2.025,25.025\n\t\tc-1.367,1.367-1.367,3.583,0,4.95C2.709,30.658,3.605,31,4.5,31s1.791-0.342,2.475-1.025l13.418-13.418\n\t\tC21.211,16.839,22.086,17,23,17c4.418,0,8-3.582,8-8C31,7.891,30.773,6.835,30.366,5.876z M23,15c-0.654,0-1.312-0.112-1.954-0.334\n\t\tl-1.183-0.409l-0.885,0.885L5.561,28.56C5.277,28.844,4.9,29,4.5,29s-0.777-0.156-1.06-0.44C3.156,28.277,3,27.9,3,27.5\n\t\tc0-0.401,0.156-0.777,0.44-1.061l13.418-13.418l0.885-0.884l-0.408-1.182C17.112,10.312,17,9.654,17,9\n\t\tc0-2.901,2.069-5.328,4.81-5.881l-1.347,1.346c-1.948,1.95-1.947,5.122,0.001,7.07C21.408,12.479,22.664,13,24,13\n\t\tc1.335,0,2.591-0.52,3.535-1.465l1.347-1.347C28.328,12.93,25.901,15,23,15z\"></path>\n\t<circle cx=\"4.5\" cy=\"27.5\" r=\"1\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: settings-manage (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"settings-manage\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M27.5,16c0-0.615-0.062-1.213-0.155-1.802L31,11l-3.105-5.098l-4.359,1.424c-1.042-0.906-2.248-1.623-3.569-2.109L19,1h-6\n\t\t\tl-0.966,4.217c-1.321,0.486-2.527,1.203-3.57,2.11L4.105,5.902L1,11l3.655,3.199C4.562,14.787,4.5,15.386,4.5,16\n\t\t\tc0,0.615,0.062,1.213,0.155,1.802L1,21l3.106,5.098l4.358-1.424c1.042,0.907,2.249,1.624,3.57,2.11L13,31h6l0.966-4.217\n\t\t\tc1.321-0.486,2.527-1.203,3.569-2.109l4.359,1.424L31,21l-3.655-3.197C27.438,17.214,27.5,16.615,27.5,16z M28.416,21.397\n\t\t\tl-1.406,2.308l-2.854-0.932l-1.078-0.352l-0.855,0.744c-0.868,0.755-1.86,1.341-2.947,1.742l-1.017,0.375l-0.242,1.056L17.406,29\n\t\t\th-2.812l-0.61-2.664l-0.242-1.056l-1.017-0.375c-1.088-0.4-2.08-0.986-2.948-1.742L8.921,22.42l-1.078,0.353L4.99,23.705\n\t\t\tl-1.406-2.308l2.388-2.09l0.83-0.727L6.63,17.49C6.543,16.934,6.5,16.446,6.5,16c0-0.446,0.043-0.934,0.13-1.49l0.172-1.09\n\t\t\tl-0.83-0.727l-2.388-2.091l1.406-2.308l2.854,0.933L8.921,9.58l0.855-0.744c0.869-0.756,1.86-1.342,2.948-1.742l1.017-0.375\n\t\t\tl0.242-1.056L14.594,3h2.812l0.61,2.664l0.242,1.056l1.017,0.375c1.087,0.4,2.079,0.986,2.947,1.742l0.855,0.744l1.078-0.352\n\t\t\tl2.854-0.933l1.406,2.308l-2.388,2.089l-0.831,0.727l0.173,1.091C25.457,15.066,25.5,15.553,25.5,16s-0.043,0.935-0.131,1.49\n\t\t\tl-0.173,1.091l0.831,0.727L28.416,21.397z\"></path>\n\t</g>\n\t<g>\n\t\t<path d=\"M16,10c-3.314,0-6,2.685-6,6s2.686,6,6,6c3.315,0,6-2.685,6-6S19.315,10,16,10z M16,18c-1.104,0-2-0.896-2-2s0.896-2,2-2\n\t\t\ts2,0.896,2,2S17.104,18,16,18z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: sign-out (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"sign-out\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"22.244,7.32 20.83,8.72 27.123,15 10,15 10,17 27.123,17 20.83,23.307 22.244,24.728 30.952,16.023 \t\"></polygon>\n\t<polygon points=\"3,3 16,3 16,1 1,1 1,31 16,31 16,29 3,29 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: sort (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"sort\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"5.434,13 16.178,1 26.921,13 \t\"></polygon>\n\t<polygon points=\"5.434,19 16.178,31 26.921,19 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: sort-ascending (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"sort-ascending\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"5.434,13 16.178,1 26.921,13 \t\"></polygon>\n\t<polygon fill=\"#E0E0E0\" points=\"5.434,19 16.178,31 26.921,19 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: sort-descending (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"sort-descending\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon fill=\"#E0E0E0\" points=\"5.434,13 16.178,1 26.921,13 \t\"></polygon>\n\t<polygon points=\"5.434,19 16.178,31 26.921,19 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: spaces (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"spaces\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,6v20h30V6H1z M29,24H3V8h26V24z\"></path>\n\t<path d=\"M28,9H17v6h11V9z M27,14h-9v-4h9V14z\"></path>\n\t<rect x=\"4\" y=\"9\" width=\"11\" height=\"6\"></rect>\n\t<path d=\"M15,17H4v6h11V17z M14,22H5v-4h9V22z\"></path>\n\t<path d=\"M28,17H17v6h11V17z M27,22h-9v-4h9V22z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: spellcheck (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"spellcheck\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M6.832,16.62v-3.229c0-0.376-0.084-0.678-0.252-0.905c-0.168-0.229-0.384-0.406-0.648-0.534\n\t\tc-0.264-0.128-0.556-0.214-0.876-0.258c-0.32-0.044-0.636-0.066-0.948-0.066c-0.344,0-0.686,0.034-1.026,0.103\n\t\tc-0.34,0.067-0.646,0.182-0.918,0.342c-0.272,0.16-0.496,0.372-0.672,0.636c-0.176,0.264-0.276,0.596-0.3,0.996h1.704\n\t\tc0.032-0.336,0.144-0.576,0.336-0.72c0.192-0.145,0.456-0.217,0.792-0.217c0.152,0,0.294,0.011,0.426,0.03\n\t\tc0.132,0.021,0.248,0.061,0.348,0.12c0.1,0.059,0.18,0.143,0.24,0.252c0.06,0.108,0.09,0.254,0.09,0.439\n\t\tc0.008,0.176-0.044,0.31-0.156,0.401c-0.112,0.093-0.264,0.162-0.456,0.21c-0.192,0.048-0.412,0.084-0.66,0.108\n\t\tc-0.249,0.023-0.5,0.056-0.756,0.096c-0.256,0.04-0.51,0.095-0.762,0.162c-0.252,0.068-0.476,0.17-0.672,0.306\n\t\tc-0.196,0.137-0.356,0.318-0.48,0.547C1.062,15.666,1,15.956,1,16.308c0,0.32,0.054,0.597,0.162,0.828\n\t\tc0.108,0.233,0.258,0.425,0.45,0.576c0.192,0.152,0.416,0.264,0.672,0.336c0.256,0.072,0.532,0.108,0.828,0.108\n\t\tc0.384,0,0.76-0.057,1.128-0.168C4.608,17.876,4.928,17.68,5.2,17.4c0.008,0.104,0.022,0.206,0.042,0.306\n\t\tc0.02,0.1,0.046,0.198,0.078,0.294h1.728c-0.08-0.128-0.136-0.32-0.168-0.576C6.848,17.168,6.832,16.9,6.832,16.62z M5.128,15.6\n\t\tc0,0.097-0.01,0.225-0.03,0.385c-0.02,0.16-0.074,0.317-0.162,0.474c-0.088,0.156-0.224,0.29-0.408,0.402\n\t\tc-0.184,0.111-0.444,0.168-0.78,0.168c-0.136,0-0.268-0.013-0.396-0.036c-0.128-0.024-0.24-0.066-0.336-0.126\n\t\tc-0.096-0.06-0.172-0.143-0.228-0.246c-0.056-0.104-0.084-0.232-0.084-0.384c0-0.16,0.028-0.292,0.084-0.396\n\t\tc0.056-0.103,0.13-0.189,0.222-0.258c0.092-0.068,0.2-0.122,0.324-0.162c0.124-0.04,0.25-0.072,0.378-0.096\n\t\tC3.848,15.3,3.984,15.28,4.12,15.264c0.136-0.016,0.266-0.036,0.39-0.06c0.124-0.024,0.24-0.054,0.348-0.09\n\t\tc0.108-0.036,0.198-0.086,0.27-0.15V15.6z\"></path>\n\t<path d=\"M9.772,17.208h0.024c0.184,0.344,0.456,0.588,0.816,0.732c0.36,0.144,0.768,0.216,1.224,0.216\n\t\tc0.312,0,0.62-0.064,0.924-0.192c0.304-0.128,0.578-0.324,0.822-0.588c0.244-0.264,0.442-0.602,0.594-1.014\n\t\tc0.152-0.412,0.228-0.902,0.228-1.471c0-0.567-0.076-1.058-0.228-1.47c-0.152-0.412-0.35-0.75-0.594-1.014\n\t\tc-0.244-0.265-0.518-0.46-0.822-0.588c-0.304-0.128-0.612-0.192-0.924-0.192c-0.384,0-0.754,0.074-1.11,0.222\n\t\tc-0.356,0.148-0.638,0.383-0.846,0.702H9.856v-3.12H8.152V18h1.62V17.208z M9.88,14.148c0.056-0.24,0.144-0.452,0.264-0.637\n\t\tc0.12-0.184,0.272-0.33,0.456-0.438c0.184-0.108,0.4-0.162,0.648-0.162c0.256,0,0.474,0.054,0.654,0.162\n\t\tc0.18,0.107,0.33,0.254,0.45,0.438c0.12,0.185,0.208,0.397,0.264,0.637c0.056,0.239,0.084,0.491,0.084,0.756\n\t\tc0,0.256-0.028,0.504-0.084,0.744c-0.056,0.239-0.144,0.451-0.264,0.636c-0.12,0.184-0.27,0.33-0.45,0.438\n\t\tc-0.18,0.108-0.398,0.162-0.654,0.162c-0.248,0-0.464-0.054-0.648-0.162c-0.184-0.107-0.336-0.254-0.456-0.438\n\t\tc-0.12-0.185-0.209-0.397-0.264-0.636c-0.056-0.24-0.084-0.488-0.084-0.744C9.796,14.64,9.824,14.388,9.88,14.148z\"></path>\n\t<path d=\"M16.156,17.268c0.272,0.28,0.602,0.498,0.99,0.654c0.388,0.156,0.814,0.234,1.278,0.234c0.824,0,1.5-0.216,2.028-0.649\n\t\tc0.528-0.432,0.848-1.06,0.96-1.884h-1.644c-0.056,0.384-0.194,0.691-0.414,0.918c-0.22,0.228-0.534,0.342-0.942,0.342\n\t\tc-0.264,0-0.488-0.06-0.672-0.18c-0.184-0.12-0.33-0.274-0.438-0.462c-0.108-0.189-0.186-0.398-0.234-0.63\n\t\tc-0.048-0.232-0.072-0.46-0.072-0.685c0-0.231,0.024-0.466,0.072-0.702c0.048-0.235,0.13-0.451,0.246-0.648\n\t\tc0.116-0.196,0.266-0.356,0.45-0.48c0.184-0.124,0.412-0.186,0.684-0.186c0.728,0,1.148,0.356,1.26,1.068h1.668\n\t\tc-0.024-0.4-0.12-0.746-0.288-1.038c-0.168-0.292-0.386-0.536-0.654-0.732c-0.268-0.196-0.572-0.342-0.912-0.438\n\t\tc-0.34-0.097-0.694-0.145-1.062-0.145c-0.504,0-0.952,0.084-1.344,0.252c-0.392,0.168-0.724,0.402-0.996,0.702\n\t\tc-0.272,0.3-0.479,0.656-0.618,1.068c-0.14,0.412-0.21,0.857-0.21,1.338c0,0.464,0.076,0.89,0.228,1.277\n\t\tC15.672,16.654,15.884,16.988,16.156,17.268z\"></path>\n\t<polygon points=\"28,14 17,25 12,20 9,23 17,31 31,17 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: spreadsheet-listview (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"spreadsheet-listview\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M1,4v4v20h30V8V4H1z M29,26H3v-4h26V26z M29,20H3v-4h26V20z M29,14H3v-4h26V14z\"></path>\n</svg>\n<!--\n\t  icon: status-error (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"status-error\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"20.293,10.293 16,14.586 11.707,10.293 10.293,11.707 14.586,16 10.293,20.293 11.707,21.707 16,17.414 \n\t\t20.293,21.707 21.707,20.293 17.414,16 21.707,11.707 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16c0,7.73,6.269,14,14,14c7.73,0,14-6.27,14-14C30,8.269,23.73,2,16,2z M16,28\n\t\tC9.383,28,4,22.617,4,16S9.383,4,16,4s12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: status-info (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"status-info\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"18,14 12,14 12,16 14,16 14,22 12,22 12,24 20,24 20,22 18,22 \t\"></polygon>\n\t<circle cx=\"16\" cy=\"10\" r=\"2\"></circle>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16c0,7.73,6.269,14,14,14c7.73,0,14-6.27,14-14C30,8.269,23.73,2,16,2z M16,28\n\t\tC9.383,28,4,22.617,4,16S9.383,4,16,4s12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: status-success (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"status-success\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"14,18.586 10.707,15.293 9.293,16.707 14,21.414 22.707,12.707 21.293,11.293 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16c0,7.73,6.269,14,14,14c7.73,0,14-6.27,14-14C30,8.269,23.73,2,16,2z M16,28\n\t\tC9.383,28,4,22.617,4,16S9.383,4,16,4s12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: status-warning (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"status-warning\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,3L1,29h30L16,3z M16,7.002L27.537,27H4.463L16,7.002z\"></path>\n\t<polygon points=\"15,14 15,16 15.5,21 16.5,21 17,16 17,14 \t\"></polygon>\n\t<circle cx=\"16\" cy=\"23\" r=\"1\"></circle>\n</g>\n</svg><!--\n\t  icon: status-warning-major (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"status-warning-major\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M16,29L31,3H1L16,29z M16,24.998L4.463,5h23.074L16,24.998z\"></path>\n<polygon points=\"15,8 15,10 15.5,15 16.5,15 17,10 17,8 \"></polygon>\n<circle cx=\"16\" cy=\"17\" r=\"1\"></circle>\n</svg>\n<!--\n\t  icon: stop (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"stop\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n\t<rect x=\"11\" y=\"11\" width=\"10\" height=\"10\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: success-confirmation (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"success-confirmation\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"14,18.586 10.707,15.293 9.293,16.707 14,21.414 22.707,12.707 21.293,11.293 \t\"></polygon>\n\t<path d=\"M16,2C8.269,2,2,8.269,2,16s6.269,14,14,14s14-6.269,14-14S23.731,2,16,2z M16,28C9.383,28,4,22.617,4,16S9.383,4,16,4\n\t\ts12,5.383,12,12S22.617,28,16,28z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: table-tables (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"table-tables\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M1,4v4v20h30V8V4H1z M19,17H3v-7h16V17z M3,26v-7h16v7H3z M29,26h-8v-7h8V26z M29,17h-8v-7h8V17z\"></path>\n</svg>\n<!--\n\t  icon: tag (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"tag\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M18,1L4,15l-3,3l13,13l3-3l14-14V1H18z M29,13.172L15.586,26.586L5.414,16.414L18.829,3H29V13.172z\"></path>\n\t<circle cx=\"24\" cy=\"8\" r=\"2\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: task (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"task\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n\t<rect x=\"10\" y=\"14\" width=\"11\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"16\" width=\"11\" height=\"1\"></rect>\n\t<rect x=\"10\" y=\"18\" width=\"5\" height=\"1\"></rect>\n\t<path d=\"M17.621,3c-0.156-1-1.086-1.932-2.218-1.932S13.342,2,13.186,3H5v28h21V3H17.621z M15.403,2.331c0.69,0,1.25,0.56,1.25,1.25\n\tc0,0.69-0.56,1.25-1.25,1.25s-1.25-0.56-1.25-1.25C14.153,2.891,14.713,2.331,15.403,2.331z M7,24.146L12.456,29H7V24.146z M24,29\n\tH13.52l-0.001-6H7V5h4v2h9V5h4V29z\"></path>\n</svg>\n<!--\n\t  icon: task-tasks (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"task-tasks\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v19v1l6,6h1h19V3H3z M27,27H10v-5H5V5h22V27z\"></path>\n\t<polygon points=\"22.707,12.707 21.293,11.293 14,18.586 10.707,15.293 9.293,16.707 14,21.414 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: template (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"template\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M18,11H4v14h14V11z M17,12.707v10.586L11.707,18L17,12.707z M11,17.293L5.707,12h10.586L11,17.293z M10.293,18L5,23.293\n\t\tV12.707L10.293,18z M11,18.707L16.293,24H5.707L11,18.707z\"></path>\n\t<rect x=\"20\" y=\"11\" width=\"8\" height=\"14\"></rect>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: textcolor (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"textcolor\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"6\" y=\"25\" width=\"20\" height=\"6\"></rect>\n\t<path d=\"M12.4,19H19.6l1.4,4h4L18,3h-4L7,23h4L12.4,19z M16,8.714L18.2,15h-4.4L16,8.714z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: tile-tiles-tileview (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"tile-tiles-tileview\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"19\" y=\"3\" width=\"10\" height=\"10\"></rect>\n\t<path d=\"M17,3h-2H3v12v2v12h12h2h12V17v-2H17V3z M15,27H5V17h10V27z M27,17v10H17V17H27z M5,15V5h10v10H5z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: tile-view (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"tile-view\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"19\" y=\"3\" width=\"10\" height=\"10\"></rect>\n\t<path d=\"M17,3h-2H3v12v2v12h12h2h12V17v-2H17V3z M15,27H5V17h10V27z M27,17v10H17V17H27z M5,15V5h10v10H5z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: timer-complete\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"timer-complete\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M17.5,28.8c-0.7,0.1-1.4,0.2-2.1,0.2c-6.6,0-12-5.4-12-12c0-6.6,5.4-12,12-12s12,5.4,12,12c0,0.2,0,0.3,0,0.5\n\t\tc0.7,0.3,1.3,0.6,1.9,1.1c0.1-0.5,0.1-1.1,0.1-1.6c0-3.5-1.3-6.7-3.4-9.1l1.1-1.1l-2.2-2.2l-1.2,1.2c-2.1-1.5-4.5-2.5-7.3-2.7V2h1\n\t\tV1h-4.1v1h1v1.1C7.2,3.7,1.5,9.7,1.5,17c0,7.7,6.3,14,14,14c1.2,0,2.3-0.2,3.4-0.4C18.3,30.1,17.9,29.5,17.5,28.8z\"></path>\n\t<path d=\"M22.1,11.2l-0.7-0.7l-4.8,4.8c-0.3-0.2-0.7-0.3-1-0.3c-1.1,0-2.1,0.9-2.1,2.1c0,1.1,0.9,2.1,2.1,2.1\n\t\ts2.1-0.9,2.1-2.1c0-0.4-0.1-0.7-0.3-1L22.1,11.2z\"></path>\n\t<path fill=\"#325c80\" d=\"M24.5,19c-3.3,0-6,2.7-6,6s2.7,6,6,6s6-2.7,6-6S27.9,19,24.5,19z M23.8,28.2l-0.7-0.7l-0.7-0.7l-2.1-2.1\n\t\tl1.4-1.4l2.1,2.1l3.5-3.5l1.4,1.4L23.8,28.2z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: timer-start\n  -->\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg id=\"timer-start\" viewBox=\"0 0 31 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<g>\n\t\t<path d=\"M26.7232298,19.6285686 L24.4062742,18.4690655 C24.5334523,17.7969047 24.6,17.1035743 24.6,16.395 C24.6,10.2555 19.608,5.262 13.4685,5.262 C7.33,5.262 2.3375,10.256 2.3375,16.395 C2.3375,22.5325 7.3305,27.5255 13.4685,27.5255 C14.7024215,27.5255 15.8899917,27.3237962 17,26.9516439 L17,29.5529444 C15.8945969,29.8446072 14.7338255,30 13.5365,30 C6.0365,30 0,23.8955 0,16.395 C0,9.461 5.0685,3.7325 12.0685,2.9025 L12.0685,1.5 L11.5685,1.5 L11.5685,0 L15.5685,0 L15.5685,1.5 L15.0685,1.5 L15.0685,2.9025 C17.0685,3.135 18.728,3.748 20.286,4.6625 L21.2235,3.536 L23.188,5.101 L22.3685,6.1285 C25.2455,8.624 27.109,12.296 27.1095,16.395 C27.1095,17.5087776 26.9756871,18.5917729 26.7232298,19.6285686 Z M19.9255,10.7 C20.2505,11.0255 20.32,11.4825 20.0815,11.722 L15.8285,15.9745 C15.908,16.191 15.9585,16.4215 15.9585,16.6655 C15.9585,17.769 15.0625,18.666 13.9585,18.666 C12.853,18.666 11.958,17.769 11.958,16.6655 C11.958,15.561 12.853,14.6655 13.9585,14.6655 C14.2025,14.6655 14.4335,14.7155 14.6495,14.796 L18.9025,10.5435 C19.142,10.3045 19.599,10.374 19.9255,10.7 Z M19,18 L31,24.0053101 L19,30 L19,18 Z\"></path>\n\t</g>\n</svg>\n<!--\n\t  icon: timer-stop\n  -->\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg id=\"timer-stop\" viewBox=\"0 0 31 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<g>\n\t\t<path d=\"M24.6116621,16 C24.3707443,10.102047 19.4985821,5.3785 13.542,5.3785 C7.4315,5.3785 2.4625,10.3485 2.4625,16.458 C2.4625,22.5675 7.4315,27.536 13.542,27.536 C14.5977304,27.536 15.6168317,27.381471 16.5835,27.1014226 L16.5835,29.6529534 C15.6055309,29.8794246 14.5878999,30 13.542,30 C6.075,30 0,23.925 0,16.4585 C0,9.6295 5.0865,3.98 11.6665,3.062 L11.6665,1.6665 L10.8335,1.6665 L10.8335,0 L15.8335,0 L15.8335,1.6665 L15.0005,1.6665 L15.0005,2.9985 C16.943,3.2075 18.757,3.837 20.3665,4.7815 L21.261,3.6605 L23.2155,5.219 L22.401,6.24 C25.1553348,8.63151715 26.9450559,12.1061989 27.0758125,16 L24.6116621,16 Z M19.9675,10.2985487 C20.2925,10.6240487 20.362,11.0810487 20.1235,11.3205487 L15.8705,15.5730487 C15.95,15.7895487 16.0005,16.0200487 16.0005,16.2640487 C16.0005,17.3675487 15.1045,18.2645487 14.0005,18.2645487 C12.895,18.2645487 12,17.3675487 12,16.2640487 C12,15.1595487 12.895,14.2640487 14.0005,14.2640487 C14.2445,14.2640487 14.4755,14.3140487 14.6915,14.3945487 L18.9445,10.1420487 C19.184,9.9030487 19.641,9.9725487 19.9675,10.2985487 Z M18.5835,18 L30.5835,18 L30.5835,30 L18.5835,30 L18.5835,18 Z\"></path>\n\t</g>\n</svg>\n<!--\n\t  icon: tools-toolbox (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"tools-toolbox\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,26l4,4l17-17l-4-4L1,26z M5,27.172L3.828,26L18,11.828L19.172,13L5,27.172z\"></path>\n\t<polygon points=\"30,11 28,11 28,9 21,2 13,2 24,13 26,13 26,15 27,16 31,12 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: top (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"top\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"6\" y=\"1\" width=\"20\" height=\"4\"></rect>\n\t<polygon points=\"7.293,18.293 8.707,19.707 15,13.413 15,30 17,30 17,13.415 23.293,19.707 24.707,18.293 15.999,9.586 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: traffic (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"traffic\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<circle cx=\"17\" cy=\"8\" r=\"3\"></circle>\n\t<path d=\"M17,19c1.656,0,3-1.344,3-3c0-1.656-1.344-3-3-3c-1.656,0-3,1.344-3,3C14,17.656,15.344,19,17,19z M17,14\n\t\tc1.103,0,2,0.896,2,2s-0.897,2-2,2s-2-0.896-2-2S15.898,14,17,14z\"></path>\n\t<path d=\"M17,27c1.656,0,3-1.344,3-3c0-1.656-1.344-3-3-3c-1.656,0-3,1.344-3,3C14,25.656,15.344,27,17,27z M17,22\n\t\tc1.103,0,2,0.896,2,2s-0.897,2-2,2s-2-0.896-2-2S15.898,22,17,22z\"></path>\n\t<path d=\"M28,13h-4v-2l4-6h-4V1H10v4H6l4,6v2H6l4,6v2H6l4,6v4h14v-4l4-6h-4v-2L28,13z M22,29H12V3h10V29z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: underline (from Formatting)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"underline\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"7\" y=\"27\" width=\"18\" height=\"2\"></rect>\n\t<path d=\"M21,3v13c0,2.762-2.238,5-5,5s-5-2.238-5-5V3H7v13c0,4.971,4.029,9,9,9s9-4.029,9-9V3H21z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: unlock-nonsecure (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"unlock-nonsecure\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"19.293,15.293 16,18.586 12.707,15.293 11.293,16.707 14.586,20 11.293,23.293 12.707,24.707 16,21.414 \n\t\t19.293,24.707 20.707,23.293 17.414,20 20.707,16.707 \t\"></polygon>\n\t<path d=\"M16,9c-2.215,0-4.273,0.661-6,1.788V9c0-3.309,2.691-6,6-6c1.654,0,3.154,0.673,4.241,1.759l1.416-1.416\n\t\tC20.209,1.895,18.209,1,16,1c-4.419,0-8,3.582-8,8v3.467C6.145,14.436,5,17.082,5,20c0,6.074,4.926,11,11,11\n\t\tc6.076,0,11-4.926,11-11S22.076,9,16,9z M16,29c-4.971,0-9-4.029-9-9s4.029-9,9-9c4.971,0,9,4.029,9,9S20.971,29,16,29z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: unread (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"unread\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M1,12v16h30V12H1z M29,26H3V14.066L16,21l13-6.934V26z\"></path>\n</svg>\n<!--\n\t  icon: upload-export (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"upload-export\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"15,5.414 15,22 17,22 17,5.414 23.293,11.707 24.707,10.293 16,1.585 7.293,10.293 8.707,11.707 \t\"></polygon>\n\t<polygon points=\"29,19 29,27 3,27 3,19 1,19 1,27 1,31 3,31 29,31 31,31 31,27 31,19 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: user (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"user\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,21c5.523,0,10-4.477,10-10S21.523,1,16,1S6,5.477,6,11S10.477,21,16,21z M16,3c4.411,0,8,3.589,8,8s-3.589,8-8,8\n\t\ts-8-3.589-8-8S11.589,3,16,3z\"></path>\n\t<path d=\"M24,23H8c-2.209,0-4,1.791-4,4v4h24v-4C28,24.791,26.209,23,24,23z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: user-profile (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"user-profile\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,21c5.523,0,10-4.477,10-10S21.523,1,16,1S6,5.477,6,11S10.477,21,16,21z M16,3c4.411,0,8,3.589,8,8s-3.589,8-8,8\n\t\ts-8-3.589-8-8S11.589,3,16,3z\"></path>\n\t<path d=\"M24,23H8c-2.209,0-4,1.791-4,4v4h24v-4C28,24.791,26.209,23,24,23z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: video (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"video\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"11,13 11,23 21,18 \t\"></polygon>\n\t<path d=\"M1,4v4v20h30V8V4H1z M29,26H3V10h26V26z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: videofile (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"videofile\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M3,3v22v4h26v-4V3H3z M5,5h22v18H5V5z\"></path>\n\t<polygon points=\"10,20 22,14 10,8 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: view (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"view\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,11c-3.314,0-6,2.685-6,6s2.686,6,6,6c3.315,0,6-2.685,6-6S19.315,11,16,11z M16,19c-1.106,0-2-0.895-2-2s0.894-2,2-2\n\t\ts2,0.895,2,2S17.105,19,16,19z\"></path>\n\t<path d=\"M16,8C9.269,8,4.147,11.625,1,17c3.147,5.375,8.269,9,15,9s11.854-3.625,15-9C27.854,11.625,22.73,8,16,8z M16,24\n\t\tc-5.164,0-9.612-2.475-12.642-7c3.029-4.525,7.477-7,12.642-7s9.612,2.475,12.642,7C25.612,21.525,21.164,24,16,24z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: warning (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"warning\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,3L1,29h30L16,3z M16,7.002L27.537,27H4.463L16,7.002z\"></path>\n\t<polygon points=\"15,14 15,16 15.5,21 16.5,21 17,16 17,14 \t\"></polygon>\n\t<circle cx=\"16\" cy=\"23\" r=\"1\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: watch-clock-time (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"watch-clock-time\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"21.646,9.646 16.354,14.939 13.707,12.293 12.293,13.707 14.939,16.354 13.646,17.646 14.354,18.354 15.646,17.06 \n\t\t17.293,18.707 18.707,17.293 17.06,15.646 22.354,10.354 \t\"></polygon>\n\t<path d=\"M27.949,15C27.652,11.402,25.77,8.263,23,6.268V1H9v5.268C5.977,8.445,4,11.988,4,16s1.977,7.555,5,9.732V31h14v-5.268\n\t\tc2.77-1.995,4.652-5.135,4.949-8.732H29v-2H27.949z M16,26c-5.514,0-10-4.486-10-10S10.486,6,16,6s10,4.486,10,10S21.514,26,16,26z\n\t\t\"></path>\n</g>\n</svg>\n<!--\n\t  icon: watson-globe (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"watson-globe\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M16,6c0.3,0,0.6-0.3,0.6-0.6V1.6C16.6,1.3,16.4,1,16,1s-0.6,0.3-0.6,0.6v3.8C15.4,5.8,15.7,6.1,16,6z\"></path>\n\t<path d=\"M22.1,7.5c0.1,0,0.2,0.1,0.3,0c0.2,0,0.5-0.1,0.6-0.3l1.6-3.4c0-0.1,0-0.2,0-0.3c0-0.2-0.1-0.5-0.3-0.6c-0.1,0-0.2,0-0.3,0\n\t\tc-0.2,0-0.4,0.1-0.6,0.3l-1.6,3.4c0,0.1,0,0.2,0,0.3C21.8,7.1,21.9,7.4,22.1,7.5z\"></path>\n\t<path d=\"M8.9,7.2C9,7.4,9.2,7.5,9.4,7.5c0.1,0,0.2,0,0.3,0C9.9,7.4,10,7.2,10,6.9c0-0.1,0-0.2,0-0.3L8.3,3.2C8.2,3,8,2.9,7.8,2.9\n\t\tc-0.1,0-0.2,0-0.3,0C7.3,3,7.2,3.3,7.2,3.5c0,0.1,0,0.2,0.1,0.3L8.9,7.2z\"></path>\n\t<path d=\"M4.9,11.6c0.2,0,0.4-0.1,0.5-0.3c0.1-0.1,0.1-0.2,0.1-0.3c0-0.2-0.1-0.4-0.3-0.5l-3.2-2c-0.1,0-0.2-0.1-0.3-0.1\n\t\tc-0.2,0-0.4,0.1-0.5,0.3C1,8.8,1,8.8,1,9c0,0.2,0.1,0.4,0.3,0.5l3.2,2C4.6,11.5,4.7,11.6,4.9,11.6z\"></path>\n\t<path d=\"M30.9,8.6c-0.1-0.2-0.3-0.3-0.5-0.3c-0.1,0-0.3,0-0.3,0.1l-3.2,2c-0.2,0.1-0.3,0.3-0.3,0.5c0,0.1,0,0.3,0.1,0.3\n\t\tc0.1,0.2,0.3,0.3,0.5,0.3c0.1,0,0.3,0,0.3-0.1l3.2-2C30.9,9.4,31,9.2,31,9C31,8.8,31,8.7,30.9,8.6z\"></path>\n\t<path d=\"M27.5,17.6L27.5,17.6C27.5,17.6,27.5,17.5,27.5,17.6C26.6,12,21.8,7.8,16,7.8C9.6,7.8,4.4,13,4.4,19.4c0,0.6,0,1.2,0.1,1.8\n\t\tl0,0c0,0,0,0,0,0.1C5.5,26.8,10.3,31,16,31c3,0,5.8-1.2,7.9-3.1c0.1-0.1,0.3-0.2,0.4-0.4l0,0c2.1-2.1,3.4-5,3.4-8.2\n\t\tC27.7,18.8,27.6,18.2,27.5,17.6z M23.7,26.8c-0.1,0.2-0.3,0.3-0.5,0.4c-1.5,1.1-4,1.1-6.6,0.1c1-0.5,2.1-1.1,3.1-1.8\n\t\tc0.2,0.2,0.5,0.3,0.9,0.3c0.9,0,1.5-0.7,1.5-1.5c0-0.2-0.1-0.4-0.1-0.6c0.9-0.9,1.6-1.8,2.2-2.7C25,23.3,24.9,25.5,23.7,26.8z\n\t\t M8.4,12c0.1-0.1,0.1-0.1,0.2-0.2c1.4-1.4,4.1-1.4,6.8-0.1c-1.3,0.6-2.5,1.4-3.7,2.4c-0.1,0.1-0.2,0.2-0.3,0.2\n\t\tc-0.1-0.1-0.3-0.1-0.5-0.1c-0.5,0-0.8,0.4-0.8,0.8c0,0.1,0,0.3,0.1,0.4c-0.9,1-1.7,2-2.4,3C7,15.8,7.1,13.4,8.4,12z M25,16.3\n\t\tc-0.5-0.1-1-0.1-1.5-0.1c-0.1-0.7-0.7-1.3-1.4-1.3c-0.2,0-0.3,0-0.5,0.1c-0.2-0.2-0.4-0.4-0.6-0.6c-0.4-0.4-0.8-0.8-1.2-1.1\n\t\tc0-0.8,0-1.6,0-2.2c1.8-0.1,3.4,0.4,4.3,1.4c0.2,0.2,0.4,0.5,0.6,0.7C25.1,14,25.2,15.1,25,16.3z M26,15.7c0.1,0.3,0.2,0.6,0.3,0.9\n\t\tc-0.1,0-0.2-0.1-0.4-0.1C26,16.2,26,15.9,26,15.7z M21.3,22.9c-0.2-0.1-0.5-0.2-0.8-0.2c-0.9,0-1.5,0.7-1.5,1.5\n\t\tc0,0.2,0,0.4,0.1,0.6c-0.8,0.5-1.5,1-2.3,1.4c0.5-1.3,1.1-2.7,1.5-4.4c1.3-0.3,3.2-0.7,4.9-1.2C22.6,21.4,22,22.2,21.3,22.9z\n\t\t M12.9,25.8c0.6,0.5,1.2,0.9,1.8,1.2c-0.6,0.2-1.2,0.3-1.8,0.4C12.9,27,12.9,26.4,12.9,25.8z M11,23c-0.1,0-0.3,0-0.4,0.1\n\t\tc-0.1-0.1-0.2-0.3-0.3-0.4c0.7,0,1.4-0.1,2-0.1c-0.1,0.7-0.2,1.4-0.3,2c-0.1-0.1-0.3-0.2-0.4-0.3c0.1-0.1,0.1-0.2,0.1-0.4\n\t\tC11.8,23.4,11.5,23,11,23z M10.5,15.6c0.1,0.1,0.3,0.2,0.5,0.2c0.5,0,0.8-0.4,0.8-0.8c0-0.2,0-0.3-0.1-0.4c0.1-0.1,0.1-0.1,0.2-0.2\n\t\tc1.1-0.9,2.2-1.6,3.4-2.1c-0.4,0.9-0.8,1.9-1.2,3.1c-1,0-1.7,0.8-1.7,1.8c0,0.1,0,0.3,0,0.4c-1.3,0.3-2.7,0.6-4.1,1.1\n\t\tC8.9,17.5,9.6,16.5,10.5,15.6z M19.3,12.8c-0.7-0.5-1.4-1-2-1.3c0.7-0.2,1.4-0.3,2-0.4C19.3,11.6,19.3,12.2,19.3,12.8z M17,21.1\n\t\tc-0.2-0.4-0.7-0.7-1.2-0.7c-0.7,0-1.2,0.5-1.3,1.1c-0.4,0-0.7,0.1-1.1,0.1c0.2-0.9,0.4-1.9,0.6-2.8c1,0,1.7-0.8,1.7-1.7\n\t\tc0.4-0.1,0.7-0.1,1-0.1c0.1,0.2,0.3,0.4,0.6,0.4c0.3,0,0.6-0.3,0.6-0.6c0.3,0,0.6-0.1,0.9-0.1c-0.1,0.4-0.1,0.8-0.2,1.2\n\t\tc-0.4,0-0.7,0.4-0.7,0.8c0,0.3,0.2,0.6,0.4,0.7c-0.1,0.2-0.1,0.4-0.2,0.7c-0.1,0.3-0.1,0.5-0.2,0.8C17.8,21,17.4,21,17,21.1z\n\t\t M18.8,20L18.8,20c0-0.2,0.1-0.3,0.1-0.5c0.5,0,0.8-0.4,0.8-0.8c0-0.3-0.2-0.6-0.5-0.7c0.1-0.4,0.2-0.9,0.2-1.3\n\t\tc0.4,0,0.9,0,1.3-0.1c0.2,0.6,0.7,1.1,1.4,1.1c0.1,0,0.3,0,0.4-0.1c0.4,0.6,0.8,1.2,1.1,1.8c-1.3,0.5-2.9,0.9-4.9,1.3\n\t\tC18.7,20.6,18.7,20.3,18.8,20z M20.7,16.3c-0.4,0-0.8,0.1-1.2,0.1c0.1-0.6,0.2-1.2,0.2-1.8c0.2,0.2,0.4,0.4,0.6,0.5\n\t\tc0.2,0.2,0.4,0.4,0.5,0.6C20.8,15.8,20.7,16,20.7,16.3z M19,16.4c-0.3,0-0.6,0.1-0.9,0.1c-0.1-0.2-0.3-0.4-0.6-0.4\n\t\tc-0.3,0-0.6,0.3-0.6,0.6c-0.5,0.1-0.8,0.1-1,0.1c-0.1-0.5-0.4-0.9-0.8-1.2c0.4-1.2,0.9-2.5,1.3-3.5c1,0.5,1.9,1.2,2.9,1.9\n\t\tC19.2,14.8,19.1,15.6,19,16.4z M8.2,19.2c1.1-0.5,2.6-1,4.3-1.4c0.1,0.3,0.4,0.6,0.7,0.8c0,0,0,0.1,0,0.1c-0.2,1.1-0.4,2.1-0.6,3\n\t\tc-1.1,0.1-2.1,0.1-2.9,0.1C9,21,8.5,20.1,8.2,19.2z M9.1,21.8c-0.8,0-1.5-0.1-2-0.2c0.1-0.7,0.4-1.4,0.7-2.1\n\t\tC8.1,20.3,8.6,21.1,9.1,21.8z M13.3,22.6c0.5,0,1-0.1,1.5-0.2c0.2,0.3,0.6,0.5,1.1,0.5c0.6,0,1-0.4,1.2-0.9c0.2,0,0.4-0.1,0.7-0.1\n\t\tc-0.5,1.6-1.2,3.3-1.9,4.6c-0.2,0.1-0.4,0.1-0.6,0.2c-0.8-0.4-1.6-0.9-2.4-1.5C13.1,24.5,13.2,23.5,13.3,22.6z M23.3,17.1\n\t\tc0.1-0.1,0.1-0.2,0.2-0.3c0.5,0,1,0.1,1.4,0.2c-0.1,0.6-0.4,1.2-0.6,1.8C24,18.1,23.6,17.6,23.3,17.1z M20.8,10.3\n\t\tc-0.3,0-0.7,0-1,0.1c-0.1-0.4-0.1-0.7-0.2-1c0.8,0.3,1.5,0.6,2.2,1C21.4,10.3,21.1,10.3,20.8,10.3z M18.6,9.1L18.6,9.1\n\t\tc0.3,0.1,0.4,0.6,0.5,1.3c-0.7,0.1-1.5,0.3-2.3,0.6C17.5,9.8,18.1,9.1,18.6,9.1z M6.4,21.5c-0.5-0.1-0.8-0.3-0.9-0.5l0,0h0\n\t\tc-0.2-0.3,0.4-0.8,1.6-1.4C6.9,20.3,6.6,20.9,6.4,21.5z M6.2,22.4c0,0.3-0.1,0.6-0.1,0.8c-0.1-0.3-0.2-0.6-0.3-1\n\t\tC5.9,22.3,6.1,22.4,6.2,22.4z M7,22.6c0.8,0.1,1.8,0.2,2.8,0.2c0.2,0.2,0.3,0.4,0.5,0.6c-0.1,0.1-0.2,0.3-0.2,0.5\n\t\tc0,0.4,0.3,0.8,0.8,0.8c0.2,0,0.3-0.1,0.5-0.1c0.2,0.2,0.4,0.4,0.6,0.5c-0.1,1-0.1,1.8-0.1,2.5c-1.4,0.1-2.6-0.1-3.4-0.7\n\t\tc-0.2-0.2-0.5-0.5-0.7-0.7l0,0C7.1,25.3,6.8,24,7,22.6z M12.1,28.5c0.1,0.3,0.1,0.6,0.2,0.8c-0.6-0.2-1.2-0.5-1.7-0.8\n\t\tC11,28.5,11.5,28.6,12.1,28.5z M13.5,29.7L13.5,29.7c-0.3-0.2-0.4-0.6-0.5-1.2c0.7-0.1,1.5-0.3,2.3-0.6\n\t\tC14.5,29.1,13.9,29.9,13.5,29.7z M25.8,17.2c0.4,0.1,0.6,0.3,0.7,0.4c0,0.1,0,0.1,0,0.2l0,0c0,0.2-0.4,0.6-1.3,1\n\t\tC25.5,18.2,25.7,17.7,25.8,17.2z M17.3,8.8c-0.4,0.4-0.9,1.1-1.4,2c-1.6-0.7-3.1-1-4.5-1c1.4-0.7,3-1.1,4.7-1.1\n\t\tC16.5,8.8,16.9,8.8,17.3,8.8z M6.5,14.7c0,1.3,0.3,2.7,0.9,4.2c-0.8,0.3-1.5,0.6-2,1c0-0.2,0-0.3,0-0.5C5.4,17.7,5.8,16.1,6.5,14.7\n\t\tz M16,30c-0.5,0-1,0-1.5-0.1c0.5-0.5,1-1.2,1.5-2.2c1.5,0.7,3.1,1.1,4.4,1.2v0c0.1,0,0.2,0,0.3,0C19.4,29.6,17.7,30,16,30z\n\t\t M25.6,24c0-1.2-0.2-2.6-0.8-4c0.7-0.3,1.4-0.6,1.8-1c0,0.1,0,0.2,0,0.4C26.7,21,26.3,22.6,25.6,24z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: wikis (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"wikis\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<path d=\"M16,2C8.268,2,2,8.268,2,16s6.268,14,14,14s14-6.268,14-14S23.732,2,16,2z M20.928,20.221L16.707,16l8.111-8.111\n\tc0.002,0.002,0.004,0.004,0.006,0.007C25.372,12.539,23.982,16.953,20.928,20.221z M11.072,11.779L15.293,16l-8.111,8.111\n\tc-0.002-0.002-0.004-0.004-0.006-0.007C6.628,19.461,8.018,15.047,11.072,11.779z M24.111,7.182L16,15.293l-4.225-4.225\n\tc2.775-2.592,6.443-4.027,10.406-4.027c0.635,0,1.273,0.05,1.91,0.123C24.098,7.17,24.104,7.176,24.111,7.182z M7.889,24.818\n\tL16,16.707l4.225,4.225c-2.775,2.592-6.443,4.027-10.405,4.027c-0.635,0-1.274-0.05-1.911-0.123\n\tC7.902,24.83,7.896,24.824,7.889,24.818z M22.723,6.065c-0.181-0.006-0.361-0.024-0.541-0.024c-4.229,0-8.148,1.54-11.113,4.32\n\tl-3.18-3.18C10.027,5.213,12.871,4,16,4C18.489,4,20.803,4.763,22.723,6.065z M7.182,7.889l3.174,3.174\n\tc-2.895,3.09-4.421,7.286-4.296,11.652C4.76,20.797,4,18.486,4,16C4,12.871,5.213,10.027,7.182,7.889z M9.277,25.935\n\tc0.181,0.006,0.362,0.024,0.542,0.024c4.229,0,8.148-1.539,11.112-4.32l3.18,3.18C21.973,26.787,19.129,28,16,28\n\tC13.511,28,11.197,27.237,9.277,25.935z M24.818,24.111l-3.174-3.174c2.895-3.09,4.421-7.286,4.296-11.652\n\tC27.24,11.203,28,13.514,28,16C28,19.129,26.787,21.973,24.818,24.111z\"></path>\n</svg>\n<!--\n\t  icon: workspace (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"workspace\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M1,6v2h2v18h12V8h12v18h2V8h2V6H1z M13,14H5v-4h8V14z M5,24v-8h8v8H5z\"></path>\n\t<circle cx=\"9\" cy=\"12\" r=\"1\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: world-globe (from Object-based)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"world-globe\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M8.575,18.925C10.625,20.975,13.312,22,16,22c2.531,0,5.055-0.922,7.054-2.74l0.018,0.018l0.707-0.707l-0.018-0.019\n\t\tc3.748-4.119,3.645-10.497-0.336-14.477C21.375,2.025,18.688,1,16,1c-2.531,0-5.055,0.922-7.054,2.74L8.929,3.722L8.222,4.429\n\t\tl0.018,0.019C4.491,8.567,4.595,14.944,8.575,18.925z M16,3c2.271,0,4.405,0.885,6.011,2.489c3.194,3.195,3.3,8.316,0.335,11.649\n\t\tL10.36,5.152C11.917,3.767,13.896,3,16,3z M21.64,17.848C20.083,19.233,18.104,20,16,20c-2.271,0-4.405-0.885-6.011-2.489\n\t\tc-3.194-3.194-3.3-8.315-0.335-11.649L21.64,17.848z\"></path>\n\t<path d=\"M26.253,1.247l-1.414,1.414C27.2,5.022,28.5,8.16,28.5,11.5s-1.3,6.479-3.661,8.839C22.479,22.699,19.34,24,16,24\n\t\ts-6.479-1.301-8.839-3.661l-1.414,1.414C8.484,24.492,12.126,26,16,26s7.516-1.508,10.253-4.247\n\t\tc2.738-2.738,4.247-6.38,4.247-10.253S28.991,3.985,26.253,1.247z\"></path>\n\t<rect x=\"11\" y=\"28\" width=\"10\" height=\"3\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: zoomin (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"zoomin\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12,1C5.926,1,1,5.926,1,12c0,6.074,4.926,11,11,11c6.074,0,11-4.926,11-11C23,5.926,18.074,1,12,1z M12,21\n\t\tc-4.962,0-9-4.038-9-9s4.038-9,9-9c4.962,0,9,4.038,9,9S16.962,21,12,21z\"></path>\n\t<rect x=\"23.879\" y=\"21.05\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -10.7696 26)\" width=\"4.243\" height=\"9.899\"></rect>\n\t<circle cx=\"21\" cy=\"21\" r=\"1\"></circle>\n\t<polygon points=\"13,6 11,6 11,11 6,11 6,13 11,13 11,18 13,18 13,13 18,13 18,11 13,11 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: zoomout (from Action-based)\n  -->\n<svg version=\"1.1\" id=\"zoomout\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12,1C5.926,1,1,5.926,1,12c0,6.074,4.926,11,11,11c6.074,0,11-4.926,11-11C23,5.926,18.074,1,12,1z M12,21\n\t\tc-4.963,0-9-4.038-9-9s4.037-9,9-9c4.963,0,9,4.038,9,9S16.963,21,12,21z\"></path>\n\t<rect x=\"23.879\" y=\"21.05\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -10.7696 26)\" width=\"4.243\" height=\"9.899\"></rect>\n\t<circle cx=\"21\" cy=\"21\" r=\"1\"></circle>\n\t<rect x=\"6\" y=\"11\" width=\"12\" height=\"2\"></rect>\n</g>\n</svg>\n</iron-iconset-svg>\n";addDomNodes(domNodesContainer);var domNodesContainer$1="\n<iron-iconset-svg name=\"ibm-medium\" size=\"64\">\n \n<!--\n\t  icon: buildings (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"buildings\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"21.3\" y=\"10\" width=\"6\" height=\"6\"></rect>\n\t<rect x=\"31.4\" y=\"10\" width=\"6\" height=\"6\"></rect>\n\t<rect x=\"41.4\" y=\"10\" width=\"6\" height=\"6\"></rect>\n\t<rect x=\"41.4\" y=\"20\" width=\"6\" height=\"6\"></rect>\n\t<rect x=\"41.4\" y=\"30\" width=\"6\" height=\"6\"></rect>\n\t<rect x=\"41.4\" y=\"40\" width=\"6\" height=\"6\"></rect>\n\t<path d=\"M14.3,2v18H8.5v42h29.2v-6h17.8V2H14.3z M21.1,56h-8v-8h8V56z M21.1,44h-8v-8h8V44z M21.1,32h-8v-8h8V32z M33.1,56h-8v-8h8\n\t\tV56z M33.1,44h-8v-8h8V44z M33.1,32h-8v-8h8V32z M52.5,53H37.7V20H17.3V5h35.2V53z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: difference-noted (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"difference-noted\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M32,5.999L2,58.001h60L32,5.999z M32,10.001l26.537,46H5.463L32,10.001z\"></path>\n\t<polygon points=\"30,28.001 30,32 31,42.001 33,42.001 34,32 34,28.001 \t\"></polygon>\n\t<circle cx=\"32\" cy=\"46\" r=\"2\"></circle>\n</g>\n</svg>\n<!--\n\t  icon: ok (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"ok\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"28,37.172 21.414,30.586 18.586,33.414 28,42.829 45.414,25.415 42.586,22.585 \t\"></polygon>\n\t<path d=\"M32,4C16.538,4,4,16.538,4,32s12.538,28,28,28c15.463,0,28-12.538,28-28S47.463,4,32,4z M32,58.001\n\t\tC17.663,58.001,6,46.337,6,32S17.663,6,32,6s26,11.663,26,26S46.337,58.001,32,58.001z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: reserve (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"reserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M52.2,10V7c0-1.1-0.9-2-2-2s-2,0.9-2,2v3h-32V7c0-1.1-0.9-2-2-2s-2,0.9-2,2v3h-10v50h60V10H52.2z M59.2,57h-54V20h54V57z\"></path>\n\t<rect x=\"11.2\" y=\"24.9\" width=\"12\" height=\"12\"></rect>\n\t<rect x=\"11.2\" y=\"39.9\" width=\"12\" height=\"12\"></rect>\n\t<path d=\"M36.2,26.9v8h-8v-8H36.2 M38.2,24.9h-12v12h12V24.9L38.2,24.9z\"></path>\n\t<rect x=\"26.2\" y=\"39.9\" width=\"12\" height=\"12\"></rect>\n\t<path d=\"M51.2,26.9v8h-8v-8H51.2 M53.2,24.9h-12v12h12V24.9L53.2,24.9z\"></path>\n\t<rect x=\"41.2\" y=\"39.9\" width=\"12\" height=\"12\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: service-request (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"service-request\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"2\" y=\"48.1\" width=\"60\" height=\"5.9\"></rect>\n\t<path d=\"M33,17v-3h5v-4H26v4h5v3C16.1,17.5,4,30,4,45c0.8,0,55.2,0,56,0C60,30,47.9,17.5,33,17z M13.7,26.6\n\t\tc4.9-5,11.5-7.7,18.3-7.7s13.4,2.7,18.3,7.7c4.5,4.5,7.1,10.2,7.6,16.4H6.1C6.6,36.9,9.2,31.1,13.7,26.6z\"></path>\n</g>\n</svg>\n\n</iron-iconset-svg>\n";addDomNodes(domNodesContainer$1);var domNodesContainer$2="\n<iron-iconset-svg name=\"ibm-large\" size=\"128\">\n \n<!--\n\t  icon: graph-in-progress (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"graph-in-progress\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"128px\" height=\"128px\" viewBox=\"0 0 128 128\" enable-background=\"new 0 0 128 128\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path d=\"M47.591,47.65c6.678,0,8.616,4.899,8.616,10.77c0,5.6-2.369,10.823-8.616,10.823c-6.516,0-8.723-4.847-8.723-10.662\n\t\t\tC38.868,52.819,40.968,47.65,47.591,47.65z M47.43,66.281c4.093,0,4.738-4.523,4.738-7.861c0-3.178-0.538-7.809-4.577-7.809\n\t\t\tc-3.984,0-4.685,4.631-4.685,7.862C42.906,61.597,43.391,66.281,47.43,66.281z M73.008,46.95h4.577L48.668,87.013h-4.631\n\t\t\tL73.008,46.95z M74.192,64.882c6.677,0,8.615,4.899,8.615,10.77c0,5.6-2.369,10.823-8.615,10.823\n\t\t\tc-6.516,0-8.724-4.847-8.724-10.662C65.469,70.051,67.569,64.882,74.192,64.882z M74.031,83.513c4.092,0,4.738-4.523,4.738-7.861\n\t\t\tc0-3.178-0.539-7.809-4.577-7.809c-3.984,0-4.685,4.631-4.685,7.862C69.508,78.828,69.992,83.513,74.031,83.513z\"></path>\n\t</g>\n\t<g>\n\t\t<path d=\"M61.136,17.377c27.188,0,49.306,22.119,49.306,49.307c0,27.188-22.118,49.308-49.306,49.308\n\t\t\tc-27.188,0-49.307-22.119-49.307-49.308C11.829,39.496,33.948,17.377,61.136,17.377 M61.136,13.377\n\t\t\tc-29.44,0-53.307,23.867-53.307,53.307c0,29.44,23.866,53.308,53.307,53.308s53.306-23.867,53.306-53.308\n\t\t\tC114.441,37.244,90.576,13.377,61.136,13.377L61.136,13.377z\"></path>\n\t</g>\n\t<path d=\"M61,8.009v15.061C85,23.57,104.859,43,105.11,67h15.061C119.919,35,93,8.513,61,8.009z\"></path>\n</g>\n</svg>\n\n<!--\n\t  icon: review (from Custom)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"review\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"128px\" height=\"128px\" viewBox=\"0 0 128 128\" enable-background=\"new 0 0 128 128\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M64,64c-13.254,0-24,10.738-24,24s10.746,24,24,24c13.262,0,24-10.738,24-24S77.262,64,64,64z M64,96c-4.422,0-8-3.58-8-8\n\t\ts3.578-8,8-8s8,3.58,8,8S68.422,96,64,96z\"></path>\n\t<rect x=\"48\" y=\"28.009\" width=\"32\" height=\"4\"></rect>\n\t<rect x=\"48\" y=\"36.009\" width=\"32\" height=\"4\"></rect>\n\t<path d=\"M96,59.946V4H32v55.987C20,66.326,10.993,76.084,4.019,88c12.586,21.5,33.069,36,59.991,36c26.921,0,47.428-14.5,60.014-36\n\t\tC117.033,76.06,108,66.283,96,59.946z M36,8h56v49.941C84,54.124,74.326,52,64.037,52C53.718,52,44,54.137,36,57.976V8z M64,120\n\t\tc-22.888,0-42.451-11.341-55.327-32C21.549,67.341,41.112,56,64,56c22.889,0,42.451,11.341,55.327,32\n\t\tC106.451,108.659,86.889,120,64,120z\"></path>\n</g>\n</svg>\n</iron-iconset-svg>\n";addDomNodes(domNodesContainer$2);var domNodesContainer$3="\n<iron-iconset-svg name=\"ibm-glyphs\" size=\"24\">\n \n<!--\n\t  icon: accessibility (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"accessibility\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<path d=\"M21.4,17.7l-0.7,0.7l-3.6-3.6v0H9.8v-1.8h4.1v-1.5H9.8V7.2c1.4-0.3,2.5-1.6,2.5-3.1c0-1.7-1.4-3.2-3.2-3.2S5.9,2.4,5.9,4.2\n\tc0,1.2,0.7,2.3,1.8,2.8C3.9,7.6,1,10.9,1,14.9C1,19.4,4.6,23,9.1,23c3.8,0,7-2.7,7.8-6.2l3.7,3.7l0,0l0.1,0.1l1.8-1.8L21.4,17.7z\n\t M9.1,2.4c1,0,1.8,0.8,1.8,1.8s-0.8,1.8-1.8,1.8S7.3,5.1,7.3,4.2S8.1,2.4,9.1,2.4z M9.1,21.6c-3.7,0-6.7-3-6.7-6.7\n\tc0-3.4,2.6-6.3,5.9-6.6v8h0.2h1.2h5.8C14.9,19.3,12.2,21.6,9.1,21.6z\"></path>\n</svg>\n<!-- \n\ticon: add-new (from TRIRIGA)\n -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"add-new\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n\t<path d=\"M12,1C5.9,1,1,5.9,1,12s4.9,11,11,11s11-4.9,11-11S18.1,1,12,1z M17,13h-4v4h-2v-4H7v-2h4V7h2v4h4V13z\"></path>\n</svg>\n\n<!--\n\t  icon: assets (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"assets\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<path d=\"M23,20L22.963,1H1v19h8v2.015l-2,0.003V23h10v-1l-2,0.003V20H23z M3,3h18v13H3V3z\"></path>\n</svg>\n<!--\n\t  icon: back (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"back\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<polygon points=\"16.83,1 18.25,2.421 8.592,12.082 18.092,21.579 16.672,23 5.75,12.082 \"></polygon>\n</svg>\n<!--\n\t  icon: backward (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"backward\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<polygon points=\"1,12 12,23 13.4,21.6 4.8,13 23,13 23,11 4.8,11 13.4,2.4 12,1 \"></polygon>\n</svg>\n<!--\n\t  icon: bar-code (from TRIRIGA)\n  -->\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg version=\"1.1\" id=\"bar-code\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 22 22\" enable-background=\"new 0 0 22 22\" xml:space=\"preserve\">\n\t<g>\n\t\t<rect x=\"4.7\" y=\"4.7\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"1.8\" height=\"12.8\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"11.1,17.5 12.9,17.5 12.9,4.7 11.1,4.7\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"9.2,17.5 10.2,17.5 10.2,4.7 9.2,4.7\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"7.4,17.5 8.3,17.5 8.3,4.7 7.4,4.7\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"13.8,17.5 15.7,17.5 15.7,4.7 13.8,4.7\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"16.6,17.5 17.5,17.5 17.5,4.7 16.6,4.7\"/>\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.8,2.8v4.6H1V2.8V1h6.4v1.8H2.8z\"/>\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2,2.8v4.6h-1.8V2.8h-4.6V1h6.4V2.8z\"/>\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.8,19.3h4.6v1.8H2.8H1v-6.4h1.8V19.3z\"/>\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.3,19.3v-4.6h1.8v4.6v1.8h-6.4v-1.8H19.3z\"/>\n\t</g>\n</svg>\n<!--\n\t  icon: calendar (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"calendar\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M19,4V2.352c0-0.553-0.447-1-1-1s-1,0.447-1,1V4H7V2.352c0-0.553-0.448-1-1-1s-1,0.447-1,1V4H1v18h16.727L23,17.285V4H19z\n\t\t M21,16h-4v4H3V9h18V16z\"></path>\n\t<path d=\"M12.828,14.588c-0.254,0.224-0.529,0.43-0.834,0.623c-0.301,0.193-0.591,0.394-0.87,0.598\n\t\tc-0.576,0.396-1.035,0.859-1.369,1.391c-0.334,0.536-0.506,1.16-0.515,1.877h5.854v-1.258h-4.176\n\t\tc0.056-0.19,0.162-0.366,0.32-0.536c0.152-0.17,0.335-0.331,0.541-0.485c0.211-0.158,0.437-0.313,0.683-0.471\n\t\tc0.246-0.154,0.488-0.32,0.735-0.492c0.245-0.172,0.481-0.357,0.71-0.553c0.229-0.201,0.435-0.416,0.611-0.65\n\t\tc0.181-0.23,0.322-0.487,0.43-0.767c0.105-0.279,0.159-0.593,0.159-0.936c0-0.279-0.045-0.576-0.133-0.885\n\t\tc-0.093-0.306-0.245-0.592-0.46-0.854c-0.217-0.264-0.502-0.482-0.851-0.654c-0.352-0.172-0.791-0.259-1.311-0.259\n\t\tc-0.482,0-0.908,0.086-1.271,0.251c-0.361,0.169-0.669,0.403-0.925,0.697c-0.251,0.298-0.442,0.646-0.569,1.054\n\t\tc-0.124,0.407-0.188,0.849-0.188,1.327h1.396c0.006-0.307,0.037-0.588,0.09-0.854c0.054-0.261,0.137-0.488,0.246-0.682\n\t\tc0.108-0.193,0.258-0.345,0.441-0.458c0.183-0.108,0.415-0.165,0.69-0.165c0.305,0,0.547,0.053,0.737,0.153\n\t\tc0.187,0.105,0.335,0.233,0.44,0.383c0.106,0.152,0.176,0.315,0.215,0.494c0.035,0.175,0.055,0.343,0.055,0.497\n\t\tc-0.01,0.335-0.095,0.634-0.258,0.893C13.289,14.126,13.083,14.369,12.828,14.588z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: catering (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"catering\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<path d=\"M13.3,12l2.9-2.9c0.3,0.1,0.6,0.2,0.9,0.2l0,0l0,0l0,0l0,0c0.4,0,0.9-0.1,1.3-0.2l4.4-4.4l-0.5-0.5L18.4,8l0,0\n\tc-0.5,0-1-0.2-1.5-0.5l4.4-4.4l-0.5-0.5L16.4,7c-0.3-0.4-0.5-0.9-0.5-1.4l3.9-3.9l-0.5-0.5l-4.5,4.4c-0.2,0.4-0.3,0.8-0.2,1.3\n\tc0,0.2,0.1,0.5,0.1,0.7l-3,3L9,7.7c0.4-0.9,0.2-2.1-0.6-2.8L5.5,2c-1-1-2.7-1-3.8,0s-1,2.7,0,3.8l2.9,2.9c0.8,0.8,1.9,1,2.8,0.6\n\tl2.8,2.8l-9.1,9.1l0,0c-0.4,0.4-0.4,1.1,0,1.6c0.4,0.4,1.1,0.4,1.6,0l9.1-9.1l9.1,9.1l0,0c0.4,0.4,1.1,0.4,1.6,0\n\tc0.4-0.4,0.4-1.1,0-1.6L13.3,12z\"></path>\n</svg>\n<!--\n\t  icon: clear-input (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"clear-input\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"18.801,4.002 12,10.804 5.2,4.002 4,5.2 10.801,12 4,18.8 5.2,19.998 12,13.198 18.801,19.998 20,18.8 13.201,12 \n\t\t20,5.2 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: close-cancel-error (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"close-cancel-error\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<path d=\"M12,1C5.9,1,1,5.9,1,12c0,6.1,4.9,11,11,11c6.1,0,11-4.9,11-11C23,5.9,18.1,1,12,1z M17.148,15.8l-1.5,1.5l-3.698-3.801\n\tL8.149,17.3l-1.5-1.5l3.801-3.801L6.749,8.2l1.5-1.5l3.801,3.799L15.852,6.7l1.5,1.5l-3.901,3.799L17.148,15.8z\"></path>\n</svg>\n<!--\n\t  icon: connection-status\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"connection-status\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<g fill-rule=\"evenodd\">\n\t\t<path d=\"M12.467,0 C9.415,0 6.827,2.24088717 6.326,5.15044227 C6.053,5.10946262 5.776,5.08947255 5.5,5.08847304 C2.467,5.08847304 0,7.53425846 0,10.5407654 C0,13.5472724 2.467,15.5333017 5.5,15.5333017 L6.75846699,15.5333017 L6.75846699,18.0099487 L4.55133057,18.0099487 L9,22 L13.5356445,18.0099487 L11.25,18.0099487 L11.25,12.0420199 L9,12.0420199 L13.5356445,7.94679822 L18.0855103,12.0420199 L15.7792969,12.0420199 L15.7792969,15.5333017 L16.5,15.5333017 C19.533,15.5333017 22,13.5462729 22,10.5397659 C22,8.34885392 20.683,6.37183572 18.661,5.52625564 C18.335,2.38981321 15.705,0 12.467,0 Z\"></path>\n\t</g>\n</svg>\n<!--\n\t  icon: details (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"details\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g display=\"none\">\n\t<rect display=\"inline\" fill=\"#F0F0F0\" width=\"24\" height=\"24\"></rect>\n</g>\n<g>\n\t<path d=\"M20,17v-1V1H4v22h9h1L20,17z M18,16h-5v5H6V3h12V16z\"></path>\n\t<rect x=\"9\" y=\"9\" width=\"6\" height=\"2\"></rect>\n\t<rect x=\"9\" y=\"6\" width=\"6\" height=\"2\"></rect>\n\t<rect x=\"9\" y=\"12\" width=\"6\" height=\"2\"></rect>\n</g>\n<g idisplay=\"none\">\n\t<g display=\"inline\">\n\t\t<path fill=\"#FFCCCC\" d=\"M23,1v22H1V1H23 M24,0H0v24h24V0L24,0z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: drag-handle (from TRIRIGA)\n-->\n<svg id=\"drag-handle\" width=\"6px\" height=\"22px\" viewBox=\"0 0 6 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n\t\t<rect x=\"0\" y=\"12\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"4\" y=\"12\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"0\" y=\"8\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"4\" y=\"8\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"0\" y=\"4\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"4\" y=\"4\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"0\" y=\"0\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"4\" y=\"0\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"0\" y=\"16\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"4\" y=\"16\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"0\" y=\"20\" width=\"2\" height=\"2\"></rect>\n\t\t<rect x=\"4\" y=\"20\" width=\"2\" height=\"2\"></rect>\n\t</g>\n</svg>\n<!--\n\t  icon: drag-handle-small (from TRIRIGA)\n-->\n<svg id=\"drag-handle-small\" width=\"6px\" height=\"14px\" viewBox=\"0 0 6 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<g stroke-width=\"1\" fill-rule=\"evenodd\" opacity=\"0.795177641\">\n\t\t<rect x=\"0\" y=\"12\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"4\" y=\"12\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"0\" y=\"8\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"4\" y=\"8\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"0\" y=\"4\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"4\" y=\"4\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"0\" y=\"0\" width=\"2\" height=\"2\"/>\n\t\t<rect x=\"4\" y=\"0\" width=\"2\" height=\"2\"/>\n\t</g>\n</svg>\n<!-- \n\ticon: edit \n-->\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg version=\"1.1\" id=\"edit\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" enable-background=\"new 0 0 16 16\" xml:space=\"preserve\">\n\t<g>\n\t\t<rect x=\"1.843\" y=\"6.379\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -3.8137 7.7929)\" width=\"11.314\" height=\"4.243\"/>\n\t\t<rect x=\"12.086\" y=\"0.379\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 2.1863 10.2782)\" width=\"2.828\" height=\"4.243\"/>\n\t\t<polygon points=\"0,16 3,15 1,13\"/>\n\t</g>\n</svg>\n<!--\n\t  icon: equals (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"equals\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"6.5\" y=\"8.5\" width=\"11\" height=\"2\"></rect>\n\t<rect x=\"6.5\" y=\"13.5\" width=\"11\" height=\"2\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: equipment (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"equipment\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M22.244,7.384c-0.908-2.137-3.012-3.395-5.199-3.336L15.75,1l-3.611,1.533l1.285,3.021\n\t\tc-1.61,1.529-2.194,3.949-1.275,6.114l2.546-1.081c0.459,0.996,1.449,1.638,2.553,1.638c0.379,0,0.75-0.076,1.1-0.225\n\t\tc0.695-0.295,1.232-0.843,1.516-1.542c0.268-0.669,0.266-1.397,0.004-2.065L22.244,7.384z M17.975,11.12\n\t\tc-0.238,0.101-0.484,0.148-0.727,0.148c-0.695,0-1.348-0.399-1.666-1.058l3.406-1.445C19.332,9.691,18.893,10.73,17.975,11.12z\"></path>\n\t<path d=\"M11.401,18.762l-6.398-6.398c0.004-0.049,0.015-0.096,0.015-0.146c0-0.099-0.012-0.195-0.029-0.289l5.295-5.294\n\t\tc0.1,0.02,0.202,0.031,0.309,0.031c0.9,0,1.628-0.73,1.628-1.633c0-0.899-0.728-1.63-1.628-1.63c-0.903,0-1.632,0.73-1.632,1.63\n\t\tc0,0.068,0.012,0.134,0.02,0.2l-5.377,5.376c-0.072-0.01-0.143-0.021-0.217-0.021c-0.9,0-1.63,0.73-1.63,1.63\n\t\tc0,0.902,0.729,1.631,1.63,1.631c0.122,0,0.241-0.016,0.355-0.041l5.811,5.811c-0.343,0.399-0.558,0.906-0.582,1.469H6.647V23\n\t\th9.566v-1.913h-2.402C13.754,19.798,12.701,18.767,11.401,18.762z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: expand-close (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"expand-close\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<polygon points=\"4.213,19.662 19.688,4.299 19.787,19.701 \"></polygon>\n</svg>\n<!--\n\t  icon: expand-open (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"expand-open\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<polygon points=\"7.17,23 5.75,21.579 15.408,11.918 5.908,2.421 7.328,1 18.25,11.918 \"></polygon>\n</svg>\n<!--\n\t  icon: filter (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"filter\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<path d=\"M23,1H1v2.934l8.801,8.8L9.8,23l4.402-4.396v-2.48c0.538,0.616,1.313,1.012,2.194,1.011c1.623,0.001,2.938-1.313,2.938-2.93\n\tc0-1.623-1.313-2.937-2.938-2.937c-0.306,0-0.604,0.061-0.886,0.149l7.487-7.483L23,1L23,1z M17.867,14.202\n\tc0,0.808-0.658,1.462-1.471,1.462c-0.807,0-1.465-0.654-1.465-1.462c0-0.813,0.657-1.47,1.465-1.468\n\tC17.21,12.732,17.867,13.391,17.867,14.202z M12.022,12.11L3.757,3.863l16.509,0.006L12.022,12.11z\"></path>\n</svg>\n<!--\n\t  icon: floorplan (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"floorplan\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<polygon points=\"1,1 1,23 7.346,23 7.346,21 3,21 3,13 6.951,13 6.951,11 3,11 3,3 21,3 21,11 14.947,11 14.947,7.591 12.947,7.591 \n\t12.947,16.409 14.947,16.409 14.947,13 21,13 21,21 12.897,21 12.897,23 23,23 23,1 \"></polygon>\n</svg>\n<!--\n\t  icon: forward (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"forward\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<polygon points=\"12,1 10.6,2.4 19.2,11 1,11 1,13 19.2,13 10.6,21.6 12,23 23,12 \"></polygon>\n</svg>\n<!--\n\t  icon: home (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"home\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12.1,0.8L1.2,11.6l2.3,2.3V24h17V13.9l2.3-2.3L12.1,0.8z M19.1,22.5H5.1V12.4l7-7l7,7V22.5z\"></path>\n</g>\n</svg>\n<!-- \n\ticon: incomplete \n-->\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg id=\"incomplete\" width=\"22px\" height=\"22px\" viewBox=\"0 0 22 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<path d=\"M11,20 C15.9705627,20 20,15.9705627 20,11 C20,6.02943725 15.9705627,2 11,2 C6.02943725,2 2,6.02943725 2,11 C2,15.9705627 6.02943725,20 11,20 Z M11,22 C4.92486775,22 0,17.0751322 0,11 C0,4.92486775 4.92486775,0 11,0 C17.0751322,0 22,4.92486775 22,11 C22,17.0751322 17.0751322,22 11,22 Z\"></path>\n</svg>\n<!--\n\t  icon: incremental-input-add (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"incremental-input-add\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<polygon points=\"13,11 13,1 11,1 11,11 1,11 1,13 11,13 11,23 13,23 13,13 23,13 23,11 \"></polygon>\n</svg>\n<!--\n\t  icon: incremental-input-minus (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"incremental-input-minus\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<rect x=\"1\" y=\"11\" width=\"22\" height=\"2\"></rect>\n</svg>\n<!--\n\t  icon: list-view (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"list-view \" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<path d=\"M1,2v20h22V2H1z M21,20H3v-3h18V20z M21,15H3v-3h18V15z M21,10H3V7h18V10z\"></path>\n</svg>\n<!--\n\t  icon: location (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"location\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g display=\"none\">\n\t<rect display=\"inline\" fill=\"#F0F0F0\" width=\"24\" height=\"24\"></rect>\n</g>\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M18.363,3.578C16.738,1.987,14.489,1,12,1S7.262,1.987,5.637,3.578C4.01,5.167,3,7.367,3,9.8\n\t\t\t\tc0,2.571,1.01,4.904,2.637,6.591L12,23l6.363-6.609C19.99,14.704,21,12.371,21,9.8C21,7.367,19.99,5.167,18.363,3.578z M12,13\n\t\t\t\tc-1.661,0-3-1.34-3-3.001C9,8.34,10.339,7,12,7s3,1.34,3,2.999C15,11.66,13.661,13,12,13z\"></path>\n\t\t</g>\n\t</g>\n</g>\n<g display=\"none\">\n\t<g display=\"inline\">\n\t\t<path fill=\"#FFCCCC\" d=\"M23,1v22H1V1H23 M24,0H0v24h24V0L24,0z\"></path>\n\t</g>\n</g>\n</svg>\n<!-- \n\ticon: locked \n-->\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg id=\"locked\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24px\" height=\"24px\">\n\t<path d=\"M18 7c0-3.24-2.759-6-6-6-3.243 0-6 2.76-6 6v2.723A7.957 7.957 0 0 0 4 15c0 4.416 3.584 8 8.001 8S20 19.416 20 15a7.958 7.958 0 0 0-2-5.278V7zM8 7c0-2.131 1.869-4 4-4 2.131 0 4 1.869 4 4v1.079a7.954 7.954 0 0 0-8 .001V7zm2.5 12.414l-3.707-3.707 1.414-1.414 2.293 2.293 5.293-5.293 1.414 1.414-6.707 6.707z\"></path>\n</svg>\n<!-- \n\ticon: mail \n-->\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg id=\"mail\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24px\" height=\"24px\">\n\t<path d=\"M12 3L1 9v12h22V9L12 3zm0 14.145l-9.486-5.271.972-1.748L12 14.856l8.515-4.729.971 1.748L12 17.145z\"></path>\n</svg>\n<!--\n\t  icon: maximize (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"maximize\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n\t<path d=\"M23 22V2H1v20h22zM13 8V6h7v7h-2V9.5l-4.75 4.75-1.5-1.5L16.5 8H13z\"></path>\n</svg>\n<!--\n\t  icon: menu (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"menu\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"2\" y=\"4\" width=\"20\" height=\"3\"></rect>\n\t<rect x=\"2\" y=\"11\" width=\"20\" height=\"3\"></rect>\n\t<rect x=\"2\" y=\"18\" width=\"20\" height=\"3\"></rect>\n</g>\n</svg>\n<!--\n\t  icon: minimize (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"minimize\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n\t<path d=\"M1 2v20h22V2H1zm10 15v2H4v-7h2v3.5l4.75-4.75 1.5 1.5L7.5 17H11z\"></path>\n</svg>\n<!--\n\t  icon: pan-zoom (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"pan-zoom\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<polygon points=\"13,7 11,7 11,8.9 9.1,8.9 9.1,10.8 11,10.8 11,12.8 13,12.8 13,10.8 14.9,10.8 14.9,8.9 13,8.9 \t\t\t\"></polygon>\n\t\t</g>\n\t</g>\n\t<g>\n\t\t<g>\n\t\t\t<polygon points=\"9.1,14.2 9.1,16.1 14.9,16.1 14.9,14.2 \t\t\t\"></polygon>\n\t\t</g>\n\t</g>\n\t<polygon points=\"3.8,12 4.5,11.3 6.5,9.2 5.1,7.9 1,12 5.1,16.1 6.5,14.8 4.5,12.7 \t\"></polygon>\n\t<polygon points=\"18.9,7.9 17.5,9.2 19.5,11.3 20.2,12 19.5,12.7 17.5,14.8 18.9,16.1 23,12 \t\"></polygon>\n\t<polygon points=\"12.7,19.5 12,20.2 11.3,19.5 9.2,17.5 7.9,18.9 12,23 16.1,18.9 14.8,17.5 \t\"></polygon>\n\t<polygon points=\"11.3,4.5 12,3.8 12.7,4.5 14.8,6.5 16.1,5.1 12,1 7.9,5.1 9.2,6.5 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: phone-call (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"phone-call\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g display=\"none\">\n\t<rect display=\"inline\" fill=\"#F0F0F0\" width=\"24\" height=\"24\"></rect>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M18,1l-4.533,5.133l1.466,2.2l-6.599,6.601l-2.201-1.467L1,17l2,6c3.666-1.466,8.267-4.399,11.933-8.066\n\t\t\tC18.601,11.267,21.533,6.667,23,3L18,1z\"></path>\n\t</g>\n</g>\n<g display=\"none\">\n\t<g display=\"inline\">\n\t\t<path fill=\"#FFCCCC\" d=\"M23,1v22H1V1H23 M24,0H0v24h24V0L24,0z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: popup-close (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"popup-close\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<polygon points=\"17.2,8.2 15.8,6.8 12,10.6 8.2,6.8 6.8,8.2 10.6,12 6.8,15.8 8.2,17.2 12,13.4 15.8,17.2 17.2,15.8 13.4,12 \"></polygon>\t \n</svg>\n<!--\n\t  icon: popup-close-filled (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"popup-close-filled\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<path d=\"M12,1C5.9,1,1,5.9,1,12s4.9,11,11,11s11-4.9,11-11S18.1,1,12,1z\"></path>\n<polygon fill=\"white\" points=\"17.2,8.2 15.8,6.8 12,10.6 8.2,6.8 6.8,8.2 10.6,12 6.8,15.8 8.2,17.2 12,13.4 15.8,17.2 17.2,15.8 13.4,12\"></polygon>\n</svg>\n<!--\n\t  icon: projector (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"projector\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<circle cx=\"8.556\" cy=\"10.945\" r=\"3\"></circle>\n\t<path d=\"M1,4v16h2v1h4v-1h10v1h4v-1h2V4H1z M8.555,15.945c-2.763,0-4.999-2.24-4.999-5c0-2.76,2.236-5,4.999-5s5.001,2.241,5.001,5\n\t\tC13.557,13.704,11.318,15.945,8.555,15.945z M21,17h-5v-1h5V17z M21,15h-5v-1h5V15z M21,13h-5v-1h5V13z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: qr-code (from TRIRIGA)\n  -->\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg version=\"1.1\" id=\"qr-code\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 22 22\" enable-background=\"new 0 0 22 22\" xml:space=\"preserve\">\n\t<g transform=\"translate(11.000000, 11.000000) rotate(-90.000000) translate(-11.000000, -11.000000)\">\n\t\t<path d=\"M11.8,10.2V4.6h5.6v5.6H11.8z M12.8,5.6v3.6h3.6V5.6H12.8z\"/>\n\t\t<rect x=\"14.6\" y=\"11.1\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 3.5 28.4167)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"2.8\" height=\"2.8\"/>\n\t\t<rect x=\"7.2\" y=\"7.4\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 -0.1666 17.4167)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"2.8\" height=\"2.8\"/>\n\t\t<rect x=\"4.5\" y=\"4.7\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 -0.1667 11.9167)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"2.8\" height=\"2.8\"/>\n\t\t<rect x=\"10.9\" y=\"14.8\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 -3.8333 28.4167)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"2.8\" height=\"2.8\"/>\n\t\t<rect x=\"10.9\" y=\"11.1\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 -0.1666 24.75)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"2.8\" height=\"2.8\"/>\n\t\t<path d=\"M4.5,17.5V12H10v5.6H4.5z M5.5,13v3.6H9V13H5.5z\"/>\n\t\t<rect x=\"6.3\" y=\"13.8\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 -7.5 22)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"1.8\" height=\"1.8\"/>\n\t\t<rect x=\"13.7\" y=\"6.5\" transform=\"matrix(-2.535182e-06 -1 1 -2.535182e-06 7.1667 22)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" width=\"1.8\" height=\"1.8\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"0.8,1 0.8,7.4 2.7,7.4 2.7,2.8 7.3,2.8 7.3,1\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"19.2,14.8 19.2,19.3 14.6,19.3 14.6,21.2 21,21.2 21,14.8\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"14.6,2.8 19.2,2.8 19.2,7.4 21,7.4 21,1 14.6,1\"/>\n\t\t<polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" points=\"0.8,14.8 0.8,21.2 7.3,21.2 7.3,19.3 2.7,19.3 2.7,14.8\"/>\n\t</g>\n</svg>\n<!-- \n\ticon: remove (from TRIRIGA)\n -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"remove\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n\t<g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n\t\t<g transform=\"translate(-3557.000000, -649.000000)\">\n\t\t\t<g transform=\"translate(3557.000000, 649.000000)\">\n\t\t\t\t<rect fill=\"currentColor\" fill-rule=\"nonzero\" x=\"6\" y=\"10\" width=\"10\" height=\"2\"></rect>\n\t\t\t\t<circle stroke=\"currentColor\" stroke-width=\"2\" cx=\"11\" cy=\"11\" r=\"10\"></circle>\n\t\t\t</g>\n\t\t</g>\n\t</g>\n</svg>\n<!--\n\t  icon: room-function (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"room-function\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"1\" y=\"8.153\" width=\"22\" height=\"7.897\"></rect>\n\t<ellipse cx=\"4.518\" cy=\"20.361\" rx=\"2.672\" ry=\"2.639\"></ellipse>\n\t<ellipse cx=\"19.748\" cy=\"20.361\" rx=\"2.672\" ry=\"2.639\"></ellipse>\n\t<ellipse cx=\"12.133\" cy=\"20.361\" rx=\"2.672\" ry=\"2.639\"></ellipse>\n\t<ellipse cx=\"4.518\" cy=\"3.639\" rx=\"2.672\" ry=\"2.639\"></ellipse>\n\t<ellipse cx=\"19.748\" cy=\"3.639\" rx=\"2.672\" ry=\"2.639\"></ellipse>\n\t<ellipse cx=\"12.133\" cy=\"3.639\" rx=\"2.672\" ry=\"2.639\"></ellipse>\n</g>\n</svg>\n<!--\n\t  icon: search (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"search\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g display=\"none\">\n\t<rect display=\"inline\" fill=\"#F0F0F0\" width=\"24\" height=\"24\"></rect>\n</g>\n<g>\n\t<path d=\"M9,3c3.309,0,6,2.691,6,6s-2.691,6-6,6s-6-2.691-6-6S5.691,3,9,3 M9,1C4.582,1,1,4.582,1,9c0,4.417,3.582,8,8,8\n\t\ts8-3.583,8-8C17,4.582,13.418,1,9,1L9,1z\"></path>\n\t<rect x=\"16.879\" y=\"15.464\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -7.8701 19)\" width=\"4.243\" height=\"7.071\"></rect>\n\t<path d=\"M9,3c3.309,0,6,2.691,6,6s-2.691,6-6,6s-6-2.691-6-6S5.691,3,9,3 M9,1C4.582,1,1,4.582,1,9c0,4.417,3.582,8,8,8\n\t\ts8-3.583,8-8C17,4.582,13.418,1,9,1L9,1z\"></path>\n\t<rect x=\"16.879\" y=\"15.464\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -7.8701 19)\" width=\"4.243\" height=\"7.071\"></rect>\n</g>\n<g display=\"none\">\n\t<g display=\"inline\">\n\t\t<path fill=\"#FFCCCC\" d=\"M23,1v22H1V1H23 M24,0H0v24h24V0L24,0z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: select-area (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"select-area\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"19.2,1.4 17.2,1.4 17.2,3.4 19.2,3.4 19.2,1.4 \t\"></polygon>\n\t<polygon points=\"15.2,1.4 13.2,1.4 13.2,3.4 15.2,3.4 15.2,1.4 \t\"></polygon>\n\t<polygon points=\"11.2,1.4 9.2,1.4 9.2,3.4 11.2,3.4 11.2,1.4 \t\"></polygon>\n\t<polygon points=\"7.2,1.4 5.2,1.4 5.2,3.4 7.2,3.4 7.2,1.4 \t\"></polygon>\n\t<polygon points=\"7.2,17.4 5.2,17.4 5.2,19.4 7.2,19.4 7.2,17.4 \t\"></polygon>\n\t<polygon points=\"3.2,1.4 1.2,1.4 1.2,3.4 3.2,3.4 3.2,1.4 \t\"></polygon>\n\t<polygon points=\"3.2,5.4 1.2,5.4 1.2,7.4 3.2,7.4 3.2,5.4 \t\"></polygon>\n\t<polygon points=\"3.2,9.4 1.2,9.4 1.2,11.4 3.2,11.4 3.2,9.4 \t\"></polygon>\n\t<polygon points=\"3.2,13.4 1.2,13.4 1.2,15.4 3.2,15.4 3.2,13.4 \t\"></polygon>\n\t<polygon points=\"3.2,17.4 1.2,17.4 1.2,19.4 3.2,19.4 3.2,17.4 \t\"></polygon>\n\t<polygon points=\"11.2,17.4 9.2,17.4 9.2,19.4 11.2,19.4 11.2,17.4 \t\"></polygon>\n\t<polygon points=\"19.2,9.4 17.2,9.4 17.2,11.4 19.2,11.4 19.2,9.4 \t\"></polygon>\n\t<polygon points=\"19.2,5.4 17.2,5.4 17.2,7.4 19.2,7.4 19.2,5.4 \t\"></polygon>\n\t<polygon points=\"22.8,21.6 19.1,17.9 21.2,15.9 13.8,13.9 15.7,21.3 17.7,19.4 21.4,23 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: sign-out (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"sign-out\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"16.781,6.272 15.367,7.391 19.271,11 7,11 7,13 19.361,13 15.367,17.291 16.781,18.853 23.145,12.563 \t\"></polygon>\n\t<polygon points=\"3,3 12,3 12,1 1,1 1,23 12,23 12,21 3,21 \t\"></polygon>\n</g>\n</svg>\n<!--\n\t  icon: tile-view (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"tile-view\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g>\n\t<rect x=\"15\" y=\"1\" width=\"8\" height=\"8\"></rect>\n\t<path d=\"M13,1h-2H1v10v2v10h10h2h10V13v-2H13V1z M11,21H3v-8h8V21z M21,13v8h-8v-8H21z M3,11V3h8v8H3z\"></path>\n</g>\n</svg>\n<!-- \n\ticon: unlocked \n-->\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg id=\"unlocked\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24px\" height=\"24px\">\n\t<path d=\"M12.001 7A7.96 7.96 0 0 0 8 8.08V7c0-2.131 1.869-4 4-4 1.065 0 2.065.467 2.8 1.201l1.416-1.416C15.121 1.689 13.621 1 12 1 8.757 1 6 3.76 6 7v2.723A7.957 7.957 0 0 0 4 15c0 4.416 3.584 8 8.001 8S20 19.416 20 15a8 8 0 0 0-7.999-8zm3.706 10.293l-1.414 1.414L12 16.414l-2.293 2.293-1.414-1.414L10.586 15l-2.293-2.293 1.414-1.414L12 13.586l2.293-2.293 1.414 1.414L13.414 15l2.293 2.293z\"></path>\n</svg>\n<!--\n\t  icon: user (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"user\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g display=\"none\">\n\t<rect display=\"inline\" fill=\"#F0F0F0\" width=\"24\" height=\"24\"></rect>\n</g>\n<g>\n\t<g>\n\t\t<circle cx=\"12\" cy=\"8.001\" r=\"7\"></circle>\n\t</g>\n\t<path d=\"M18,17H6c-1.616,0-3,1.382-3,3v3h18v-3C21,18.382,19.617,17,18,17z\"></path>\n\t<g>\n\t\t<circle cx=\"12\" cy=\"8.001\" r=\"7\"></circle>\n\t</g>\n\t<path d=\"M18,17H6c-1.616,0-3,1.382-3,3v3h18v-3C21,18.382,19.617,17,18,17z\"></path>\n</g>\n<g display=\"none\">\n\t<g display=\"inline\">\n\t\t<path fill=\"#FFCCCC\" d=\"M23,1v22H1V1H23 M24,0H0v24h24V0L24,0z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: video (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"video\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<g display=\"none\">\n\t<rect display=\"inline\" fill=\"#F0F0F0\" width=\"24\" height=\"24\"></rect>\n</g>\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M1,4v16h22V4H1z M8,16V8l8,4L8,16z\"></path>\n\t\t</g>\n\t</g>\n</g>\n<g display=\"none\">\n\t<g display=\"inline\">\n\t\t<path fill=\"#FFCCCC\" d=\"M23,1v22H1V1H23 M24,0H0v24h24V0L24,0z\"></path>\n\t</g>\n</g>\n</svg>\n<!--\n\t  icon: warning\n  -->\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg version=\"1.1\" id=\"warning\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n\t<path d=\"M12,2L1,22h22L12,2z M12,19.2c-0.6,0-1-0.4-1-1c0-0.6,0.4-1,1-1s1,0.4,1,1C13,18.8,12.6,19.2,12,19.2z M12.5,16.2h-1l-0.5-5v-2h2v2L12.5,16.2z\"/>\n</svg>\n<!--\n\t  icon: watson-globe (from TRIRIGA)\n  -->\n<svg version=\"1.1\" id=\"watson-globe\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M12,4.7c0.3,0,0.4-0.2,0.4-0.4V1.4C12.5,1.2,12.3,1,12,1s-0.4,0.2-0.4,0.4v2.8C11.6,4.5,11.8,4.7,12,4.7z\"></path>\n\t<path d=\"M16.5,5.7c0.1,0,0.1,0.1,0.2,0c0.2,0,0.3-0.1,0.4-0.3L18.3,3c0-0.1,0-0.1,0-0.2c0-0.2-0.1-0.3-0.3-0.4c-0.1,0-0.1,0-0.2,0\n\t\tc-0.2,0-0.3,0.1-0.4,0.3l-1.2,2.5c0,0.1,0,0.1,0,0.2C16.2,5.5,16.3,5.7,16.5,5.7z\"></path>\n\t<path d=\"M6.8,5.5C6.8,5.7,7,5.8,7.2,5.8c0.1,0,0.1,0,0.2,0c0.2-0.1,0.3-0.2,0.2-0.4c0-0.1,0-0.1,0-0.2L6.4,2.6\n\t\tC6.3,2.5,6.1,2.4,6,2.4c-0.1,0-0.1,0-0.2,0C5.6,2.5,5.5,2.7,5.5,2.8c0,0.1,0,0.1,0.1,0.2L6.8,5.5z\"></path>\n\t<path d=\"M3.8,8.8c0.2,0,0.3-0.1,0.4-0.2c0.1-0.1,0.1-0.2,0.1-0.3C4.3,8.1,4.2,8,4,7.9L1.7,6.4c-0.1,0-0.2-0.1-0.3-0.1\n\t\tc-0.2,0-0.3,0.1-0.4,0.2C1,6.7,1,6.8,1,6.8C1,7,1.1,7.1,1.2,7.2l2.4,1.5C3.7,8.7,3.7,8.8,3.8,8.8z\"></path>\n\t<path d=\"M22.9,6.6c-0.1-0.2-0.2-0.2-0.4-0.2c-0.1,0-0.2,0-0.3,0.1L20,7.9c-0.2,0.1-0.2,0.2-0.2,0.4c0,0.1,0,0.2,0.1,0.3\n\t\tc0.1,0.2,0.2,0.2,0.4,0.2c0.1,0,0.2,0,0.3-0.1l2.4-1.5C22.9,7.2,23,7,23,6.8C23,6.8,23,6.7,22.9,6.6z\"></path>\n\t<path d=\"M20.4,13.2L20.4,13.2C20.5,13.1,20.4,13.1,20.4,13.2C19.8,9,16.2,6,12,6c-4.7,0-8.5,3.8-8.5,8.5c0,0.4,0,0.9,0.1,1.3l0,0\n\t\tc0,0,0,0,0,0C4.3,19.9,7.8,23,12,23c2.2,0,4.2-0.9,5.8-2.3c0.1-0.1,0.2-0.2,0.3-0.3l0,0c1.5-1.5,2.5-3.7,2.5-6\n\t\tC20.5,14,20.5,13.6,20.4,13.2z M17.6,19.9c-0.1,0.1-0.2,0.2-0.3,0.3c-1.1,0.8-2.9,0.8-4.9,0.1c0.8-0.3,1.5-0.8,2.3-1.3\n\t\tc0.2,0.1,0.4,0.2,0.6,0.2c0.6,0,1.1-0.5,1.1-1.1c0-0.2,0-0.3-0.1-0.5c0.6-0.6,1.2-1.3,1.6-2C18.6,17.3,18.5,19,17.6,19.9z M6.4,9.1\n\t\tc0,0,0.1-0.1,0.1-0.1c1.1-1,3-1,5-0.1c-0.9,0.4-1.9,1-2.7,1.8c-0.1,0.1-0.1,0.1-0.2,0.2c-0.1-0.1-0.2-0.1-0.3-0.1\n\t\tc-0.3,0-0.6,0.3-0.6,0.6c0,0.1,0,0.2,0.1,0.3C7.1,12.2,6.5,13,6,13.7C5.4,11.8,5.5,10.1,6.4,9.1z M18.6,12.2\n\t\tc-0.3,0-0.7-0.1-1.1-0.1c0-0.5-0.5-1-1-1c-0.1,0-0.2,0-0.3,0.1c-0.1-0.1-0.3-0.3-0.4-0.4c-0.3-0.3-0.6-0.6-0.9-0.8\n\t\tc0-0.6,0-1.1,0-1.6c1.3-0.1,2.5,0.3,3.2,1c0.1,0.2,0.3,0.3,0.4,0.5C18.7,10.5,18.8,11.3,18.6,12.2z M19.4,11.8\n\t\tc0.1,0.2,0.1,0.4,0.2,0.6c-0.1,0-0.2-0.1-0.3-0.1C19.3,12.1,19.3,12,19.4,11.8z M15.9,17.1c-0.2-0.1-0.4-0.2-0.6-0.2\n\t\tc-0.6,0-1.1,0.5-1.1,1.1c0,0.1,0,0.3,0.1,0.4c-0.6,0.4-1.1,0.7-1.7,1c0.4-0.9,0.8-2,1.1-3.2c1-0.2,2.3-0.5,3.6-0.9\n\t\tC16.9,16,16.4,16.5,15.9,17.1z M9.8,19.2c0.4,0.3,0.9,0.6,1.3,0.9c-0.5,0.1-0.9,0.2-1.3,0.3C9.7,20,9.7,19.6,9.8,19.2z M8.3,17.2\n\t\tc-0.1,0-0.2,0-0.3,0.1C8,17.1,7.9,17,7.8,16.9c0.5,0,1,0,1.5-0.1c-0.1,0.5-0.1,1-0.2,1.4C9,18.2,8.9,18.1,8.8,18\n\t\tc0-0.1,0.1-0.2,0.1-0.3C8.9,17.4,8.7,17.2,8.3,17.2z M7.9,11.7c0.1,0.1,0.2,0.1,0.4,0.1c0.3,0,0.6-0.3,0.6-0.6c0-0.1,0-0.2-0.1-0.3\n\t\tc0.1,0,0.1-0.1,0.2-0.1c0.8-0.6,1.6-1.2,2.5-1.5c-0.3,0.7-0.6,1.4-0.9,2.3c-0.7,0-1.3,0.6-1.3,1.3c0,0.1,0,0.2,0,0.3\n\t\tc-0.9,0.2-2,0.5-3,0.8C6.8,13.1,7.3,12.4,7.9,11.7z M14.4,9.7c-0.5-0.4-1-0.7-1.5-1c0.5-0.1,1-0.2,1.5-0.3\n\t\tC14.4,8.8,14.4,9.2,14.4,9.7z M12.8,15.7c-0.2-0.3-0.5-0.5-0.8-0.5c-0.5,0-0.9,0.3-0.9,0.8c-0.3,0-0.5,0.1-0.8,0.1\n\t\tc0.1-0.7,0.3-1.4,0.4-2c0.7,0,1.2-0.6,1.3-1.3c0.3,0,0.5-0.1,0.8-0.1c0.1,0.2,0.2,0.3,0.4,0.3c0.2,0,0.4-0.2,0.5-0.4\n\t\tc0.2,0,0.4,0,0.6-0.1c0,0.3-0.1,0.6-0.1,0.9c-0.3,0-0.5,0.3-0.5,0.6c0,0.2,0.1,0.4,0.3,0.5c0,0.2-0.1,0.3-0.1,0.5\n\t\tc0,0.2-0.1,0.4-0.2,0.6C13.3,15.6,13,15.7,12.8,15.7z M14,15L14,15c0-0.1,0.1-0.2,0.1-0.3c0.3,0,0.6-0.3,0.6-0.6\n\t\tc0-0.2-0.1-0.4-0.3-0.5c0.1-0.3,0.1-0.6,0.2-1c0.3,0,0.6,0,0.9,0c0.1,0.4,0.5,0.8,1,0.8c0.1,0,0.2,0,0.3,0c0.3,0.4,0.6,0.9,0.8,1.3\n\t\tc-0.9,0.3-2.1,0.7-3.6,1C13.9,15.3,14,15.1,14,15z M15.4,12.2c-0.3,0-0.6,0-0.8,0.1c0.1-0.5,0.1-0.9,0.2-1.3\n\t\tc0.1,0.1,0.3,0.3,0.4,0.4c0.1,0.1,0.3,0.3,0.4,0.4C15.5,11.9,15.4,12,15.4,12.2z M14.2,12.3c-0.2,0-0.5,0-0.7,0.1\n\t\tc-0.1-0.2-0.2-0.3-0.4-0.3c-0.2,0-0.4,0.2-0.5,0.4c-0.4,0-0.6,0.1-0.7,0.1c-0.1-0.4-0.3-0.7-0.6-0.9c0.3-0.9,0.6-1.8,1-2.5\n\t\tc0.7,0.4,1.4,0.9,2.1,1.4C14.3,11.1,14.3,11.7,14.2,12.3z M6.2,14.3c0.8-0.3,1.9-0.7,3.2-1c0.1,0.2,0.3,0.4,0.5,0.6c0,0,0,0,0,0.1\n\t\tc-0.2,0.8-0.3,1.5-0.5,2.2c-0.8,0.1-1.5,0.1-2.1,0.1C6.9,15.6,6.5,15,6.2,14.3z M6.9,16.3c-0.6,0-1.1-0.1-1.5-0.1\n\t\tc0.1-0.5,0.3-1,0.5-1.5C6.2,15.2,6.6,15.7,6.9,16.3z M10,16.8c0.4,0,0.8-0.1,1.1-0.1c0.2,0.2,0.4,0.4,0.8,0.4\n\t\tc0.4,0,0.8-0.3,0.9-0.6c0.1,0,0.3-0.1,0.5-0.1c-0.4,1.2-0.9,2.4-1.4,3.4c-0.1,0.1-0.3,0.1-0.4,0.2c-0.6-0.3-1.2-0.7-1.8-1.1\n\t\tC9.8,18.2,9.9,17.5,10,16.8z M17.3,12.8c0-0.1,0.1-0.2,0.1-0.2c0.4,0,0.8,0.1,1.1,0.1c-0.1,0.4-0.3,0.9-0.5,1.3\n\t\tC17.8,13.6,17.6,13.2,17.3,12.8z M15.5,7.8c-0.2,0-0.5,0-0.8,0c0-0.3-0.1-0.5-0.2-0.8c0.6,0.2,1.1,0.4,1.6,0.8\n\t\tC15.9,7.8,15.7,7.8,15.5,7.8z M13.9,7L13.9,7c0.2,0.1,0.3,0.4,0.4,0.9c-0.5,0.1-1.1,0.2-1.7,0.4C13.1,7.5,13.6,6.9,13.9,7z M5,16.1\n\t\tc-0.4-0.1-0.6-0.2-0.7-0.3l0,0h0c-0.2-0.2,0.3-0.6,1.2-1C5.3,15.1,5.1,15.6,5,16.1z M4.8,16.7c0,0.2-0.1,0.4-0.1,0.6\n\t\tc-0.1-0.2-0.2-0.5-0.2-0.7C4.6,16.6,4.7,16.7,4.8,16.7z M5.4,16.8c0.6,0.1,1.3,0.1,2.1,0.1c0.1,0.1,0.2,0.3,0.4,0.4\n\t\tc-0.1,0.1-0.1,0.2-0.1,0.4c0,0.3,0.3,0.6,0.6,0.6c0.1,0,0.2,0,0.3-0.1c0.1,0.1,0.3,0.3,0.4,0.4C9,19.4,9,20,9,20.5\n\t\tc-1,0.1-1.9-0.1-2.5-0.5c-0.2-0.2-0.3-0.4-0.5-0.5l0,0C5.5,18.8,5.3,17.9,5.4,16.8z M9.1,21.2c0,0.2,0.1,0.4,0.1,0.6\n\t\tc-0.4-0.2-0.9-0.4-1.3-0.6C8.3,21.2,8.7,21.2,9.1,21.2z M10.2,22L10.2,22c-0.2-0.1-0.3-0.5-0.4-0.9c0.5-0.1,1.1-0.2,1.7-0.4\n\t\tC10.9,21.6,10.4,22.2,10.2,22z M19.2,12.8c0.3,0.1,0.5,0.2,0.5,0.3c0,0,0,0.1,0,0.1l0,0c0,0.2-0.3,0.5-0.9,0.8\n\t\tC19,13.6,19.1,13.2,19.2,12.8z M13,6.7c-0.3,0.3-0.7,0.8-1,1.5c-1.2-0.5-2.3-0.8-3.3-0.7c1-0.5,2.2-0.8,3.4-0.8\n\t\tC12.3,6.7,12.7,6.7,13,6.7z M5,11c0,0.9,0.2,2,0.7,3.1c-0.6,0.2-1.1,0.5-1.5,0.7c0-0.1,0-0.2,0-0.3C4.2,13.2,4.5,12.1,5,11z\n\t\t M12,22.3c-0.4,0-0.7,0-1.1-0.1c0.3-0.3,0.7-0.9,1.1-1.6c1.1,0.5,2.2,0.8,3.2,0.8v0c0.1,0,0.2,0,0.2,0C14.5,22,13.3,22.3,12,22.3z\n\t\t M19.1,17.8c0-0.9-0.2-1.9-0.6-2.9c0.5-0.2,1-0.5,1.3-0.7c0,0.1,0,0.2,0,0.3C19.8,15.7,19.6,16.8,19.1,17.8z\"></path>\n</g>\n</svg>\n<!--\n\t  icon: whiteboard (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"whiteboard\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<g>\n\t<polygon points=\"11.9,11.3 11.9,12.2 13.5,12.2 14.1,11.8 12.7,10.5 \t\"></polygon>\n\t<path d=\"M19.7,1.3l-3.3,3.3H1v13.2v2.4V23h1.5v-2.7h19V23H23v-2.8v-2.3V4.7L19.7,1.3z M15.4,7.3C15.4,7.3,15.4,7.3,15.4,7.3L19.7,3\n\t\tl1.5,1.5l-4.7,4.7l-1.1,0.5l-0.9-0.9L15,7.7L15.4,7.3z M21.5,17.9v0.8h-19v-0.9h0V6.2h12.4l-1,1l-1,2.5l2,2l2.3-1.1l4.3-4.3V17.9z\"></path>\n</g>\n<rect x=\"2.3\" y=\"15.9\" width=\"19.7\" height=\"1.4\"></rect>\n</svg>\n<!--\n\t  icon: wired (from TRIRIGA)\n  -->\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<svg version=\"1.1\" id=\"wired\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\">\n<polygon points=\"14.7,5.7 14.7,4.2 9.2,4.2 9.2,5.7 6.1,5.7 6.1,16 7.3,16 7.3,21.4 11,21.4 11,20.5 8.3,20.5 8.3,16 8.3,16 8.3,16 \n\t8.3,16 8.3,13.6 10.1,13.6 10.1,11.7 13.8,11.7 13.8,13.6 15.7,13.6 15.7,16 15.7,16 15.7,16 15.7,20.5 12.9,20.5 12.9,21.4 \n\t16.6,21.4 16.6,16 17.7,16 17.7,5.7 \"></polygon>\n<rect x=\"10.1\" y=\"18.5\" width=\"1\" height=\"4.5\"></rect>\n<rect x=\"12.9\" y=\"18.5\" width=\"1\" height=\"4.5\"></rect>\n<polygon points=\"0.8,0.7 0.8,23.2 6.1,23.2 6.1,22.2 1.7,22.2 1.7,1.7 22.3,1.7 22.3,22.2 17.7,22.2 17.7,23.2 23.2,23.2 23.2,0.7 \n\t\"></polygon>\n</svg>\n\t<!--\n\t\ticon: notes (from TRIRIGA)\n\t-->\n<svg id=\"notes\" width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\t<g stroke-width=\"1\" fill-rule=\"evenodd\">\n\t\t<polygon points=\"13.5664062 4.04272461 15.6190186 1.9901123 0.0192871094 1.9901123 0.0192871094 21.9539795 15.0847168 21.9539795 20.0236206 17.0150757 20.0236206 6.3927002 17.9618835 8.45443726 17.9618835 16.0015869 14.0479736 16.0015869 14.0479736 20.0328369 1.98608398 20.0328369 1.98608398 4.04272461\"></polygon>\n\t\t<path d=\"M8,11 L16,3 L19,6 L11,14 L8,11 Z M17,2 L19,0 L22,3 L20,5 L17,2 Z M6,16 L9,15 L7,13 L6,16 Z\"></path>\n\t</g>\n</svg>\n</iron-iconset-svg>\n";addDomNodes(domNodesContainer$3);Polymer({_template:html(_templateObject25_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-icon",properties:{/**
    * Class property to be applied to this element and its children.
    *
    **/class:String,/**
    * Description property to be applied to aria-label for assistive tool to read out description for this icon.
    *
    **/description:String,/**
    * Icon from the icon set to be displayed. See demo page for list of valid values. The icon set prefix does not 
    * need to be specified unless the same icon exists in multiple icon sets. 
    *
    **/icon:{type:String,reflectToAttribute:true},/**
    * Mirror property which acts as a flag. When used it will mirror the icon.
    *
    **/mirror:{type:Boolean,value:false},/**
    * Value to be applied to the tabindex attribute.
    *
    */tabIndex:Number,iconsets:{type:Array,value:new IronMeta({type:"iconset"}).list}},attached:function attached(){if(this.mirror&&document.querySelector('body').getAttribute('dir')=="rtl"){this._setStyle("transform: scaleX(-1)");}var svgElement=this.$.triCustomIcon.querySelector("svg");if(svgElement){//Microsoft Edge cause unnecessary tabing on svg elements that inside the triplat-icon.
//Setting svg to not focusable avoid duplicated tabbing
dom(svgElement).setAttribute("focusable","false");}},_setIcon:function _setIcon(val,iconsets){if(!assertParametersAreDefined(arguments)){return;}if(!val){return"";}if(!this.description){this.set("description",val.replace(/-/g," "));}// if the user already specified an icon set, then just use that
if(val.indexOf(":")!=-1){return val;}var fulliconname="ibm:"+val;for(var i=0;i<this.iconsets.length;i++){//NOTE: precedent of the search is based on the import order
if(this.iconsets[i].name.indexOf("ibm")!=-1){var names=this.iconsets[i].getIconNames();var fqval=this.iconsets[i].name+":"+val;if(names.indexOf(fqval)!=-1){fulliconname=fqval;break;}}}return fulliconname;},_setStyle:function _setStyle(style){this.$.triCustomIcon.style.cssText=style;},_resetClassMap:function _resetClassMap(){for(var myclass in this.$.triCustomIcon._classMap){this.$.triCustomIcon._classMap[myclass]=false;}},_cleanClassMap:function _cleanClassMap(){var returnClassArray=[];for(var myclass in this.$.triCustomIcon._classMap){if(!this.$.triCustomIcon._classMap[myclass]){returnClassArray.push(myclass);delete this.$.triCustomIcon._classMap[myclass];}}return returnClassArray;},_isNewClassInMap:function _isNewClassInMap(newclass){if(typeof this.$.triCustomIcon._classMap=='undefined'){this.$.triCustomIcon._classMap={};this.$.triCustomIcon._classMap[newclass]=true;return true;}else{if(newclass in this.$.triCustomIcon._classMap){this.$.triCustomIcon._classMap[newclass]=true;return false;}else{this.$.triCustomIcon._classMap[newclass]=true;return true;}}},_setClass:function _setClass(myclass){if(!assertParametersAreDefined(arguments)){return;}if(!myclass){return;}this._resetClassMap();var arr=myclass.split(" ");// add in new addition class
for(var i=0;i<arr.length;i++){if(this._isNewClassInMap(arr[i])){this.$.triCustomIcon.classList.add(arr[i]);}}// remove unused class
var deleteClasses=this._cleanClassMap();for(var i=0;i<deleteClasses.length;i++){this.$.triCustomIcon.classList.remove(deleteClasses[i]);}this.$.triCustomIcon.classList.remove("flex");for(var i=1;i<13;i++){this.$.triCustomIcon.classList.remove("flex-"+i);}},_keyPressHandler:function _keyPressHandler(event){var code=event.keyCode;// accept enter or spacebar
if(code==13||code==32){this.fire("tap",event.currentTarget,event);}}});/*
    @license
    IBM Confidential - OCO Source Materials - (C) COPYRIGHT IBM CORP. 2018 - The source code for this program is not published or otherwise divested of its trade secrets, irrespective of what has been deposited with the U.S. Copyright Office.
    */ /**
        * `TriDirBehavior` can be used to provide text directional context to the element.
        *
        * @polymerBehavior
        */var TriDirBehavior={properties:{/**
     * The text directional value
     */dir:{type:String,readonly:true,reflectToAttribute:true,value:function value(){return document.querySelector('body').getAttribute('dir');}}}};_exports.TriDirBehavior=TriDirBehavior;var tricoreDirBehavior={__proto__:null,TriDirBehavior:TriDirBehavior};_exports.$tricoreDirBehavior=tricoreDirBehavior;var importJsPromise=importJs(["../web-animations-js/web-animations-next-lite.min.js"],"triblock-popup/triblock-popup.js");importJsPromise.then(function(){/*
  `triblock-popup` is a pop-up component that handles the responsive pop-up display on the small screen width and the large screen width. The component implements `triBlockViewResponsiveBehavior` and `paperDialogBehavior`. Similar to `paper-dialog`, the component pops up at the center of the page by default. However, when the component is opened in the small screen width, the component covers the whole page. 
  
    Example:
  
    ```html
    <triblock-popup>
  	<h2>Header</h2>
  	<div class="body">
  	  Lorem ipsum...
  	</div>  
    </triblock-popup>
    ```
  
    The following custom properties and mixins are available for styling:
  
    Custom property | Description | Default
    ----------------|-------------|----------
    `--triblock-popup-background-color` | Pop-up background color |  --tri-primary-content-background-color
    `--triblock-popup` | Mixin applied to the pop-up | `{}`
    `--triblock-popup-close-button` | Mixin applied to the pop-up close button | `{}`
    
    @demo demo/index.html
  */Polymer({_template:html(_templateObject26_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triblock-popup",behaviors:[TriBlockViewResponsiveBehavior,PaperDialogBehavior,TriDirBehavior],properties:{/**
        * The last node inside the popup that can receive focus.
        * It is used to cycle the focus from the last node to the first node when `with-backdrop` or `modal` is true.
        */lastNode:{type:Object},/**
        * The title that will be displayed in the `triblock-app-layout` component banner label when the `smallScreenWidth` property is true. 
        */title:{type:String,reflectToAttribute:true},/**
        * Set to true, will prevent the popup from close when the application is implemented `triblock-app-layout-banner-popup-behavior` behavior. It can be used to handle the banner back button when is clicked.  
        */manualClose:{type:Boolean,value:false}},observers:['_onSmallScreenChanged(smallScreenWidth)','_popupClosed(opened)'],attached:function attached(){this._noCancelOnOutsideClick=this.noCancelOnOutsideClick;this._noCancelOnEscKey=this.noCancelOnEscKey;this._withBackdrop=this.withBackdrop;if(navigator.userAgent.match('CriOS'))this._chromeiOS=true;},get _focusableNodes(){if(this.lastNode){return[this.$.xbtn,this.lastNode];}else{// Get the original focusableNodes from IronOverlayBehaviorImpl.
var propertyDescriptor=Object.getOwnPropertyDescriptor(IronOverlayBehaviorImpl,"_focusableNodes");var focusableNodes=propertyDescriptor.get.apply(this);// If there is at least 1 node, add the close button as the first item of the focusableNodes array.
if(!focusableNodes||focusableNodes.length==0){return this.$.xbtn;}else{focusableNodes.unshift(this.$.xbtn);return focusableNodes;}}},/**
    * Open the pop-up.
    **/openPopup:function openPopup(){if(this.smallScreenWidth){this._openOnSmallScreen();}else{this._openOnNotSmallScreen();}},_onSmallScreenChanged:function _onSmallScreenChanged(){if(this.smallScreenWidth){if(this.opened){this._openOnSmallScreen();}}else{if(this.opened){this._openOnNotSmallScreen();}}},_openOnSmallScreen:function _openOnSmallScreen(){if(this.modal){this.set('modal',false);this._modalIsUsed=true;}this.set('noCancelOnOutsideClick',true);this.set('noCancelOnEscKey',true);this.set('withBackdrop',false);this.open();this._handleChomeiOS();},_openOnNotSmallScreen:function _openOnNotSmallScreen(){if(this._modalIsUsed){this.set('modal',true);}this.set('noCancelOnOutsideClick',this._noCancelOnOutsideClick);this.set('noCancelOnEscKey',this._noCancelOnEscKey);this.set('withBackdrop',this._withBackdrop);this.open();this._handleChomeiOS();},_handleChomeiOS:function _handleChomeiOS(){if(this._chromeiOS){this.close();this.async(function(){this.open();});}},/**
    * Close the pop-up.
    **/closePopup:function closePopup(){this.close();},_popupClosed:function _popupClosed(e){if(!this.opened){this.closePopup();this.fire("popup-opened",{element:null});}else{this.fire("popup-opened",{element:this});}},_addDisablePopupMoveClass:function _addDisablePopupMoveClass(){var css='.__triBlockPopupDisablePopupMove {display: relative !important; overflow: hidden !important;}';var head=document.getElementsByTagName('head')[0];var style=document.createElement('style');style.type='text/css';if(style.styleSheet){style.styleSheet.cssText=css;}else{style.appendChild(document.createTextNode(css));}head.appendChild(style);this._disablePopupMoveClassAdded=true;}});});Polymer({_template:html(_templateObject27_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triblock-toast",properties:{/**
    * The types of the toast.
    * The valid values are:
    *  - success
    *  - warning
    *  - major-warning
    *  - error
    *  - info
    */type:{type:String,reflectToAttribute:true,value:"info"},/**
    * The element to fit `this` into. For more details, see paper-toast.
    */fitInto:{type:Object,value:window},/**
    * The duration in milliseconds to show the toast.
    * To disable the toast auto-closing, set to `0`, a negative number, or `Infinity`.
    */duration:{type:Number,value:5000},/**
    * The orientation against which to align the toast content
    * horizontally relative to `positionTarget`. For more details, see paper-toast.
    */horizontalAlign:{type:String,value:"left"},/**
    * The message to display in the toast.
    */text:{type:String,value:""},/**
    * The title to display in the toast.
    */title:{type:String,reflectToAttribute:true,value:''},/**
    * True if the toast is currently displayed.
    */opened:{type:Boolean,value:false,notify:true},/**
     * Set to true to allow clicks outside this toast message to
     * close the overlay below.
     */allowClickThrough:{type:Boolean},/**
    * The icon to display in the toast.
    */_icon:{type:String}},/**
  * Opens the toast box.
  */open:function open(){this.$.toast.open();},/**
  * Closes the toast box.
  */close:function close(){this.$.toast.close();},_getIcon:function _getIcon(type){if(!assertParametersAreDefined(arguments)){return;}var icon="status-info";switch(type){case"success":icon="ibm:status-success";break;case"warning":icon="ibm:status-warning";break;case"major-warning":icon="ibm:status-warning-major";break;case"error":icon="ibm:status-error";break;case"info":icon="ibm:status-info";}return icon;}});Polymer({is:"tricore-context-path",properties:{/**
     * Property retrieve the current context path. This will not work if the 
     * context has not yet been initialized.
     */getPath:{type:String,notify:true,readOnly:true,value:function value(){return this._getPath();}}},_getPath:function _getPath(){var contextPathInputElement=document.querySelector("#contextPath");var newContextPath=null;if(contextPathInputElement){newContextPath=contextPathInputElement.getAttribute("value");}if(newContextPath&&newContextPath.length>0&&newContextPath.slice(newContextPath.length-1,newContextPath.length)=="/"){newContextPath=newContextPath.slice(0,newContextPath.length-1);}return newContextPath;}});Polymer({is:"tricore-url",properties:{/**
     * The URL without the context path to use to construct the bind URL.
     */rawUrl:{type:String,notify:false,readOnly:false},/**
     * Use this attibute for getting the output of the URL with the context path.
     */bindUrl:{type:String,notify:true,readOnly:true},_demoBaseUrl:{type:String,readOnly:true}},observers:["_computeUrl(rawUrl)"],_getContextPath:function _getContextPath(){if(!this._contextPath){var contextPathElement=document.createElement("tricore-context-path");this._contextPath=contextPathElement.getPath;}return this._contextPath;},_computeUrl:function _computeUrl(rawUrl){if(!assertParametersAreDefined(arguments)){return;}this._setBindUrl(this.getUrl(rawUrl));},/**
   * Returns a URL from the given rawUrl that will contain 
   * the context path.
   * 
   * @param {String} rawUrl
   * @return {String} The URL with the context path.
   */getUrl:function getUrl(rawUrl){var demoBaseUrl=this._getDemoBasedUrl();if(demoBaseUrl){var fileName="demo"+rawUrl.match(/[^\?]+/)[0].replace(/\//g,".")+".json";return demoBaseUrl+"/"+fileName;}else{return this._getContextPath()+rawUrl;}},_getDemoBasedUrl:function _getDemoBasedUrl(){if(!this._demoBaseUrl){var ironMeta=document.createElement("iron-meta");ironMeta.type="tri";this._set_demoBaseUrl(ironMeta.byKey("demoBaseUrl"));}return this._demoBaseUrl;}});Polymer({_template:html(_templateObject28_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"tricore-properties",properties:{ssoSet:{type:Boolean,notify:false,readOnly:false,observer:"_initSso"},sso:{type:Boolean,notify:true,readOnly:true}},ready:function ready(){this._setSso(this.$.meta.byKey("sso"));},_initSso:function _initSso(sso){this.$.meta.set("value",sso);}});Polymer({_template:html(_templateObject29_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-signout",properties:{/**
     * The name of the home application. 
     * This is used to redirect the user to the home application after signing out from the current application.  
     */homeApp:String},signout:function signout(){if(this.sso){window.location.href=this.ssoUrl;}else{this.$.ajax.generateRequest();}},/**
  * Call this method to sign out of TRIRIGA.
  */_handleRespone:function _handleRespone(){if(this.homeApp){var homeUrl=this.$.homeUrl.getUrl("/p/web/"+this.homeApp);window.location.href=homeUrl;}else{// Regular expression that matches everything from the start of the current url
// until the first # or / after the UX app context path (/p/web/).
var rootOfCurrentApp=/.*\/p\/web\/[^\/#]*(?=[\/#])/.exec(window.location.href);if(rootOfCurrentApp&&rootOfCurrentApp.length>0){window.location.href=rootOfCurrentApp[0];}else{//If there is no match then it is already in the application root, so just reload it
window.location.reload();}}}});Polymer({_template:html(_templateObject30_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"tricore-error",properties:{/**
     * The title of the error message.
     */title:{type:String,reflectToAttribute:true},/**
     * The first line of the error message.
     */message_line1Label:String,/**
     * The second line of the error message.
     */message_line2Label:String,/** 
      * Optional. Boolean value to indicate whether to include a sign in link. The "Go back to Sign In." link will be displayed at the third line.
      */includeSignin:{type:Boolean,value:false},/**
     * Whether or not the message panel is elevated. "1" for elevated and "0" for not elevated.
     */elevation:{type:String,notify:false,readOnly:false,value:"1"}},ready:function ready(){var __dictionary__signin="Go back to Sign In.";this.set("_signIn",__dictionary__signin);},_signout:function _signout(){this.$.signout.signout();}});var tristylesIBMPlexFonts="\n<dom-module id=\"tristyles-ibm-plex-fonts\">\n\t<template>\n\t\t<style>\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 700;\n\t\t\t\tsrc: local(\"IBM Plex Sans Bold\"), local(\"IBMPlexSans-Bold\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Bold.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Bold.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 700;\n\t\t\t\tsrc: local(\"IBM Plex Sans Bold Italic\"), local(\"IBMPlexSans-BoldItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-BoldItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-BoldItalic.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 200;\n\t\t\t\tsrc: local(\"IBM Plex Sans ExtraLight\"), local(\"IBMPlexSans-ExtraLight\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-ExtraLight.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-ExtraLight.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 200;\n\t\t\t\tsrc: local(\"IBM Plex Sans ExtraLight Italic\"), local(\"IBMPlexSans-ExtraLightItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-ExtraLightItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-ExtraLightItalic.woff\") format(\"woff\"); }\n\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tsrc: local(\"IBM Plex Sans Italic\"), local(\"IBMPlexSans-Italic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Italic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Italic.woff\") format(\"woff\"); }\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 300;\n\t\t\t\tsrc: local(\"IBM Plex Sans Light\"), local(\"IBMPlexSans-Light\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Light.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Light.woff\") format(\"woff\"); }\n\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 300;\n\t\t\t\tsrc: local(\"IBM Plex Sans Light Italic\"), local(\"IBMPlexSans-LightItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-LightItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-LightItalic.woff\") format(\"woff\"); }\n\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tsrc: local(\"IBM Plex Sans Medium\"), local(\"IBMPlexSans-Medium\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Medium.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Medium.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tsrc: local(\"IBM Plex Sans Medium Italic\"), local(\"IBMPlexSans-MediumItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-MediumItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-MediumItalic.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tsrc: local(\"IBM Plex Sans\"), local(\"IBMPlexSans\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Regular.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Regular.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tsrc: local(\"IBM Plex Sans SemiBold\"), local(\"IBMPlexSans-SemiBold\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-SemiBold.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-SemiBold.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tsrc: local(\"IBM Plex Sans SemiBold Italic\"), local(\"IBMPlexSans-SemiBoldItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-SemiBoldItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-SemiBoldItalic.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 450;\n\t\t\t\tsrc: local(\"IBM Plex Sans Text\"), local(\"IBMPlexSans-Text\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Text.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Text.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 450;\n\t\t\t\tsrc: local(\"IBM Plex Sans Text Italic\"), local(\"IBMPlexSans-TextItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-TextItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-TextItalic.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 100;\n\t\t\t\tsrc: local(\"IBM Plex Sans Thin\"), local(\"IBMPlexSans-Thin\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-Thin.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-Thin.woff\") format(\"woff\"); }\n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-weight: 100;\n\t\t\t\tsrc: local(\"IBM Plex Sans Thin Italic\"), local(\"IBMPlexSans-ThinItalic\"), url(\"../fonts/IBM-Plex-Sans/woff2/IBMPlexSans-ThinItalic.woff2\") format(\"woff2\"), url(\"../fonts/IBM-Plex-Sans/woff/IBMPlexSans-ThinItalic.woff\") format(\"woff\"); }\n\t\t</style>\n\t</template>\n</dom-module>\n";addDomStyleModule(tristylesIBMPlexFonts,"trioutlook-room-reservation/styles/tristyles-ibm-plex.js");var carbonLayoutStyles="\n<dom-module id=\"carbon-style\">\n\t<template>\n\t\t<style>\n\t\t\tpaper-button[outlook-primary],\n\t\t\tpaper-button[outlook-secondary] {\n\t\t\t\tborder: 1px solid transparent;\n\t\t\t\toutline: none;\n\t\t\t\tcolor: var(--carbon-text-04);\n\t\t\t\tmin-width: auto;\n\t\t\t\tpadding: 7px 16px;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tline-height: 18px;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tletter-spacing: .16px;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\ttext-align: center;\n\t\t\t\ttext-transform: none;\n\t\t\t\tmargin: 0 5px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-primary] {\n\t\t\t\tbackground-color: var(--carbon-interactive-01);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-primary]:hover {\n\t\t\t\tbackground-color: var(--carbon-hover-primary);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-primary][pressed] {\n\t\t\t\tbackground-color: var(--carbon-active-primary);\n\t\t\t}\n\t\t\t\n\t\t\tpaper-button[outlook-primary][disabled],\n\t\t\tpaper-button[outlook-secondary][disabled]  {\n\t\t\t\tbackground-color: var(--carbon-disabled-02);\n\t\t\t\tcolor: var(--carbon-disabled-03);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-primary][focused],\n\t\t\tpaper-button[outlook-secondary][focused]  {\n\t\t\t\tborder-color: var(--carbon-ui-02);\n\t\t\t\toutline: 2px solid var(--carbon-focus);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-secondary] {\n\t\t\t\tbackground-color: var(--carbon-interactive-02);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-secondary]:hover {\n\t\t\t\tbackground-color: var(--carbon-hover-secondary);\n\t\t\t}\n\n\t\t\tpaper-button[outlook-secondary][pressed] {\n\t\t\t\tbackground-color: var(--carbon-active-secondary);\n\t\t\t}\n\n\t\t\tpaper-icon-button[outlook-secondary] {\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\theight: 16px;\n\t\t\t\twidth: 16px;\n\t\t\t\tpadding: 0;\n\t\t\t\tcolor: var(--carbon-interactive-02);\n\t\t\t}\n\n\t\t\tpaper-icon-button[outlook-secondary]:hover {\n\t\t\t\tcolor: var(--carbon-hover-secondary);\n\t\t\t}\n\n\t\t\tpaper-icon-button[outlook-secondary]:[pressed] {\n\t\t\t\tcolor: var(--carbon-active-secondary);\n\t\t\t}\n\n\t\t\tpaper-icon-button[outlook-secondary][disabled]  {\n\t\t\t\tcolor: var(--carbon-disabled-02);\n\t\t\t}\n\n\t\t\t.top-16 {\n\t\t\t\tmargin-top: 16px;\n\t\t\t}\n\n\t\t\t.top-8 {\n\t\t\t\tmargin-top: 8px;\n\t\t\t}\n\n\t\t\t.bottom-40 {\n\t\t\t\tmargin-bottom: 40px;\n\t\t\t}\n\t\t\t.bottom-32 {\n\t\t\t\tmargin-bottom: 32px;\n\t\t\t}\n\n\t\t\t.bottom-20 {\n\t\t\t\tmargin-bottom: 20px;\n\t\t\t}\n\n\t\t\t.bottom-16 {\n\t\t\t\tmargin-bottom: 16px;\n\t\t\t}\n\n\t\t\t.bottom-8 {\n\t\t\t\tmargin-bottom: 8px;\n\t\t\t}\n\n\t\t\t.productive-heading-01 {\n\t\t\t\tcolor: var(--carbon-text-01);\n\t\t\t\tfont-size: 14px;\n\t\t\t\tline-height: 18px;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tletter-spacing: .16px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.productive-heading-02 {\n\t\t\t\tcolor: var(--carbon-text-01);\n\t\t\t\tfont-size: 16px;\n\t\t\t\tline-height: 22px;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tletter-spacing: 0px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.productive-heading-03 {\n\t\t\t\tcolor: var(--carbon-text-01);\n\t\t\t\tfont-size: 20px;\n\t\t\t\tline-height: 26px;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tletter-spacing: 0px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.productive-heading-05 {\n\t\t\t\tcolor: var(--carbon-text-01);\n\t\t\t\tfont-size: 32px;\n\t\t\t\tline-height: 40px;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tletter-spacing: 0px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\t\t\t\n\t\t\t.body-short-01 {\n\t\t\t\tcolor: var(--carbon-text-01);\n\t\t\t\tfont-size: 14px;\n\t\t\t\tline-height: 18px;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tletter-spacing: .16px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.label-01 {\n\t\t\t\tcolor: var(--carbon-text-02);\n\t\t\t\tfont-size: 12px;\n\t\t\t\tline-height: 16px;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tletter-spacing: .32px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.helper-text-01 {\n\t\t\t\tcolor: var(--carbon-text-01);\n\t\t\t\tfont-size: 12px;\n\t\t\t\tline-height: 16px;\n\t\t\t\tfont-weight: 400;\n\t\t\t\tletter-spacing: .32px;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.link-01 {\n\t\t\t\tcolor: var(--carbon-interactive-01);\n\t\t\t\tcursor: pointer;\n\t\t\t\tfont-family: var(--carbon-font-family);\n\t\t\t}\n\n\t\t\t.link-01:focus {\n\t\t\t\tcolor: var(--carbon-focus);\n\t\t\t}\n\n\t\t\t.link-01:hover {\n\t\t\t\tcolor: var(--carbon-hover-primary-text);\n\t\t\t}\n\t\t</style>\n\t</template>\n</dom-module>\n";addDomStyleModule(carbonLayoutStyles,"trioutlook-room-reservation/styles/tristyles-carbon-theme.js");var carbonThemeStyles="\n\t<custom-style>\n\t\t<style is=\"carbon-theme-gray-10\" include=\"tristyles-ibm-plex-fonts\">\n\n\t\t\thtml {\n\t\t\t\t--carbon-blue-10: #edf4ff;\n\t\t\t\t--carbon-blue-20: #c9deff;\n\t\t\t\t--carbon-blue-30: #97c1ff;\n\t\t\t\t--carbon-blue-40: #6ea6ff;\n\t\t\t\t--carbon-blue-50: #408bfc;\n\t\t\t\t--carbon-blue-60: #0062ff;\n\t\t\t\t--carbon-blue-60-hover: #0353e9;\n\t\t\t\t--carbon-blue-70: #054ada;\n\t\t\t\t--carbon-blue-80: #0530ad;\n\t\t\t\t--carbon-blue-90: #061f80;\n\t\t\t\t--carbon-blue-100: #051243;\n\n\t\t\t\t--carbon-gray-10: #f3f3f3;\n\t\t\t\t--carbon-gray-10-hover: #e5e5e5;\n\t\t\t\t--carbon-gray-20: #dcdcdc;\n\t\t\t\t--carbon-gray-30: #bebebe;\n\t\t\t\t--carbon-gray-40: #a4a4a4;\n\t\t\t\t--carbon-gray-50: #8c8c8c;\n\t\t\t\t--carbon-gray-60: #6f6f6f;\n\t\t\t\t--carbon-gray-70: #565656;\n\t\t\t\t--carbon-gray-80: #3d3d3d;\n\t\t\t\t--carbon-gray-80-hover: #4c4c4c;\n\t\t\t\t--carbon-gray-90: #282828;\n\t\t\t\t--carbon-gray-100: #171717;\n\n\t\t\t\t--carbon-green-10: #dafbe4;\n\t\t\t\t--carbon-green-20: #9deeb2;\n\t\t\t\t--carbon-green-30: #56d679;\n\t\t\t\t--carbon-green-40: #3dbb61;\n\t\t\t\t--carbon-green-50: #24a148;\n\t\t\t\t--carbon-green-60: #198038;\n\t\t\t\t--carbon-green-70: #10642a;\n\t\t\t\t--carbon-green-80: #054719;\n\t\t\t\t--carbon-green-90: #01330f;\n\t\t\t\t--carbon-green-100: #081b09;\n\n\t\t\t\t--carbon-red-50: #fb4b53;\n\n\t\t\t\t--carbon-white: #FFFFFF;\n\n\t\t\t\t--carbon-font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;\n\n\t\t\t\tfont-family: var(--carbon-font-family);\n\n\t\t\t\t--carbon-active-primary: var(--carbon-blue-80);\n\t\t\t\t--carbon-active-secondary: var(--carbon-gray-60);\n\n\t\t\t\t--carbon-disabled-02: var(--carbon-gray-30);\n\t\t\t\t--carbon-disabled-03: var(--carbon-gray-50);\n\n\t\t\t\t--carbon-field-01: white;\n\n\t\t\t\t--carbon-focus: var(--carbon-blue-60);\n\n\t\t\t\t--carbon-icon-01: var(--carbon-gray-100);\n\t\t\t\t--carbon-icon-02: var(--carbon-gray-70);\n\n\t\t\t\t--carbon-interactive-01: var(--carbon-blue-60);\n\t\t\t\t--carbon-interactive-02: var(--carbon-gray-80);\n\t\t\t\t--carbon-interactive-04: var(--carbon-blue-60);\n\n\t\t\t\t--carbon-inverse-01: white;\n\n\t\t\t\t--carbon-hover-primary: var(--carbon-blue-60-hover);\n\t\t\t\t--carbon-hover-secondary: var(--carbon-gray-80-hover);\n\n\t\t\t\t--carbon-hover-primary-text: var(--carbon-blue-70);\n\t\t\t\t--carbon-hover-field: var(--carbon-gray-10-hover);\n\n\t\t\t\t--carbon-highlight: var(--carbon-blue-20);\n\t\t\t\t--carbon-highlight-hover: var(--carbon-blue-30);\n\n\t\t\t\t--carbon-link-01: var(--carbon-blue-60);\n\n\t\t\t\t--carbon-overlay-01: rgba(23, 23, 23, 0.7);\n\n\t\t\t\t--carbon-text-01: var(--carbon-gray-100);\n\t\t\t\t--carbon-text-02: var(--carbon-gray-70);\n\t\t\t\t--carbon-text-04: white;\n\n\t\t\t\t--carbon-ui-background: var(--carbon-gray-10);\n\t\t\t\t--carbon-ui-01: var(--carbon-white);\n\t\t\t\t--carbon-ui-02: var(--carbon-gray-10);\n\t\t\t\t--carbon-ui-03: var(--carbon-gray-20);\n\t\t\t\t--carbon-ui-04: var(--carbon-gray-50);\n\t\t\t\t--carbon-ui-05: var(--carbon-gray-100);\n\n\t\t\t\t--carbon-support-02: var(--carbon-green-50);\n\t\t\t\t--carbon-support-04: var(--carbon-blue-70);\n\n\t\t\t\t--carbon-inverse-support-01: var(--carbon-red-50);\n\t\t\t\t--carbon-inverse-support-02: var(--carbon-green-40);\n\t\t\t\t--carbon-inverse-support-04: var(--carbon-blue-50);\n\t\t\t}\n\t\t</style>\n\t</custom-style>\n";addCustomStyle(carbonThemeStyles);var TrioutlookLoginUI=/*#__PURE__*/function(_PolymerElement2){babelHelpers.inherits(TrioutlookLoginUI,_PolymerElement2);function TrioutlookLoginUI(){var _this34;babelHelpers.classCallCheck(this,TrioutlookLoginUI);_this34=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TrioutlookLoginUI).call(this));_this34._loadedLowRes=false;_this34._loadedHighRes=false;return _this34;}babelHelpers.createClass(TrioutlookLoginUI,[{key:"showAlreadyLoggedMessage",value:function showAlreadyLoggedMessage(){var _this35=this;this.shadowRoot.querySelector("#message").open();this._logging=false;setTimeout(function(){_this35.shadowRoot.querySelector("#forceLogin").focus();},100);}},{key:"showUnauthorizedMessage",value:function showUnauthorizedMessage(){this._unauthorized=true;this._logging=false;}},{key:"showErrorMessage",value:function showErrorMessage(){this._error=true;this._logging=false;}},{key:"_handleLoginTap",value:function _handleLoginTap(e){e.stopPropagation();this._logging=true;this._unauthorized=false;this._error=false;this.dispatchEvent(new CustomEvent("login",{detail:e,bubbles:false,composed:false}));this.shadowRoot.querySelector("#loginButton").focus();}},{key:"_handleForceLogin",value:function _handleForceLogin(e){e.stopPropagation();this.dispatchEvent(new CustomEvent("force-login",{detail:e,bubbles:false,composed:false}));}},{key:"_keyPressHandler",value:function _keyPressHandler(e){var code=e.keyCode;if(code==13){this._handleLoginTap(e);this.shadowRoot.querySelector("#loginButton").focus();}}},{key:"_closeDialog",value:function _closeDialog(){this.$.message.close();}},{key:"_computeShowError",value:function _computeShowError(unauthorize,error){return unauthorize?false:error;}},{key:"_populateFields",value:function _populateFields(username,password){this.set("username",username);this.set("password",password);}},{key:"_handleLoadLowRes",value:function _handleLoadLowRes(){this._loadedLowRes=true;this._computeImagesLoaded();}},{key:"_computeImagesLoaded",value:function _computeImagesLoaded(){var _this36=this;if(this._loadedLowRes&&this._loadedHighRes)setTimeout(function(){return _this36._imagesLoaded=true;},1000);}},{key:"_handleLoadHighRes",value:function _handleLoadHighRes(){this._loadedHighRes=true;this._computeImagesLoaded();}}],[{key:"is",get:function get(){return"trioutlook-login-ui";}},{key:"template",get:function get(){return html(_templateObject31_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{username:{type:String,notify:true,value:""},password:{type:String,notify:true,value:""},loginTitle:{type:String,value:"Log in"},loginButtonOnly:{type:Boolean,value:false},_imagesLoaded:{type:Boolean,value:false},_unauthorized:{type:Boolean,value:false},_logging:{type:Boolean,value:false},_error:{type:Boolean,value:false}};}},{key:"importMeta",get:function get(){return getModuleUrl("trioutlook-room-reservation/login/trioutlook-login-ui.js");}}]);return TrioutlookLoginUI;}(PolymerElement);window.customElements.define(TrioutlookLoginUI.is,TrioutlookLoginUI);var contextRegistry=[];var routesByName={};var routesById={};var pathData;var handlePathChange=function handlePathChange(){var path=window.location.hash;pathData={};if(path.search(/#\!\/.*$/)==-1){pathData.parts=[];pathData.path="/";}else{pathData.path=path.substr(2);pathData.parts=[];var matches=pathData.path.match(/([^\/]+)/g);if(matches){matches.forEach(function(part){pathData.parts.push(part);});}}contextRegistry.forEach(function(context){context._onPathChange(pathData);});};window.addEventListener("hashchange",function(e){handlePathChange();});handlePathChange();function getRouteByName(routeName){return routesByName[routeName];};function getRouteById(routeId){return routesById[routeId];};var TriPlatRouteContextBehavior={properties:{_parentContext:{type:Object,notify:false,readOnly:true},_parentRouteContainer:{type:Object,notify:false,readOnly:true},_contextInitialized:{type:Boolean,notify:true,readOnly:true,value:false},_isInitializedPromise:{type:Object,notify:false,readOnly:true},_isInitializedPromiseResolve:{type:Function,notify:false,readOnly:true},_pathData:{type:Object,notify:true,readOnly:true}},get _isContained(){return this._parentContext&&this._parentRouteContainer;},get _isRoot(){return!this._isContained;},attached:function attached(){this._set_isInitializedPromise(new Promise(function(resolve){this._set_isInitializedPromiseResolve(resolve);}.bind(this)));var node=this;var routeName=null;var routeContextSelector=null;var routeContextContainer=null;while(node){node=dom(node).parentNode;if(node&&node.nodeType!==Node.ELEMENT_NODE){node=node.host;}if(node&&node.hasAttribute("route")){routeContextContainer=node;routeName=node.getAttribute("route");}if(node&&node.tagName=="TRIPLAT-ROUTE-SELECTOR"){routeContextSelector=node;break;}}if(routeContextSelector&&routeContextContainer){// we found a parent route context
this._set_parentContext(routeContextSelector);this._set_parentRouteContainer(routeContextContainer);}this._initializeContext();},detached:function detached(){this._unregisterContext();},_initializeContext:function _initializeContext(){if(this._isRoot){this._doSetInitialized();}else{this._parentContext._isInitialzied().then(this._doSetInitialized.bind(this));}},_doSetInitialized:function _doSetInitialized(){this._registerContext();this._set_contextInitialized(true);this._onPathChange(pathData);this._isInitializedPromiseResolve(true);},_isInitialzied:function _isInitialzied(){return this._isInitializedPromise;},_registerContext:function _registerContext(){contextRegistry.push(this);},_unregisterContext:function _unregisterContext(){var index=contextRegistry.indexOf(this);if(index<0){return;}contextRegistry.splice(index,1);},_onPathChange:function _onPathChange(pathData){this._set_pathData(pathData);},_registerRoute:function _registerRoute(){if(this.name in routesByName){console.warn("A duplicate route has been defined. [routeName="+this.name+"]");return;}routesByName[this.name]=this;if(this.id&&!(this.id in routesById)){routesById[this.id]=this;}},_unregisterRoute:function _unregisterRoute(){delete routesByName[this.name];},_getRouteByName:function _getRouteByName(routeName){return routesByName[routeName];},_navigate:function _navigate(path,replaceUrl){if(replaceUrl&&history.replaceState){history.replaceState({},"",window.location.pathname+"#!"+path);handlePathChange();}else{window.location.hash="!"+path;}}};_exports.TriPlatRouteContextBehavior=TriPlatRouteContextBehavior;var triplatRouteContextBehavior={__proto__:null,getRouteByName:getRouteByName,getRouteById:getRouteById,TriPlatRouteContextBehavior:TriPlatRouteContextBehavior};_exports.$triplatRouteContextBehavior=triplatRouteContextBehavior;Polymer({_template:html(_templateObject32_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-route-selector",/**
  * Fired before navigating.
  *
  * @event triplat-route-selector-before-navigate
  */properties:{/**
     * The name of the currently selected route.
     */selected:{type:String,notify:true,readOnly:true},_activeRoute:{type:Object,notify:false,readOnly:true},_activeItem:{type:Object,notify:false,readOnly:true},_selectionDelegate:{type:Object,notify:false,readOnly:true},/**
     * When true, no route is initially selected.  A route must be explicitly navigated or marked as `default-route` so that it is selected and rendered.
     * This property is ignored if there is a route marked as `default-route`.
     */noInitialRoute:{type:Boolean,value:false}},behaviors:[TriPlatRouteContextBehavior],observers:["_updateRoute(_pathData, _contextInitialized, _selectionDelegate)"],attached:function attached(){this._set_selectionDelegate(this._findSelectionDelegate());},detached:function detached(){this._set_activeRoute(null);this._set_activeItem(null);this._set_selectionDelegate(null);},select:function select(){this._updateRoute(this._pathData,this._contextInitialized,this._selectionDelegate);},_isActiveRoute:function _isActiveRoute(routeItem){if(!this._isActive()){return false;}return routeItem==this._activeItem;},_isActive:function _isActive(){if(this._isRoot){return true;}return this._parentContext._isActiveRoute(this._parentRouteContainer);},_findSelectionDelegate:function _findSelectionDelegate(){return dom(this).children[0];},_updateRoute:function _updateRoute(pathData,contextInitialized,selectionDelegate){if(!assertParametersAreDefined(arguments)){return;}if(!contextInitialized||!selectionDelegate){return;}if(!this._isActive()){this._clearRoute();return;}var matchedRoute=null;var matchedStrength=0;var matchedIndex=-1;var matchedDynamicCount=1000;var matchedRouteName=null;var matchedItem=null;var matchedRoute=null;var children=dom(this._selectionDelegate).children;for(var i=0;i<children.length;i++){var child=children[i];if(!child.hasAttribute("route")){continue;}var routeName=child.getAttribute("route");var routePath=child.getAttribute("route-path");var routeContext=[];if(routePath){routePath.match(/([^\/]+)/g).forEach(function(routeContextPart){routeContext.push(routeContextPart);});}var route=this._getRouteByName(routeName);if(route==null){continue;}if(matchedStrength==0&&route._route.length==0&&!this.noInitialRoute){// do a special check for a 'root' route.
matchedIndex=i;matchedDynamicCount=0;matchedRouteName=route.name;matchedItem=child;matchedRoute=route;}else{var strength=this._getMatchStrength(route._route,pathData.parts,routeContext);var dynamicCount=this._getDynaiceCount(route._route);if(matchedIndex==-1&&this.noInitialRoute&&strength==0){continue;}if(strength>matchedStrength||strength==matchedStrength&&dynamicCount<matchedDynamicCount){matchedStrength=strength;matchedIndex=i;matchedDynamicCount=dynamicCount;matchedRouteName=route.name;matchedItem=child;matchedRoute=route;}}}if(matchedIndex==-1){this._selectDefault();}else{this._selectRoute(matchedIndex,matchedRouteName,matchedItem,matchedRoute);}},_selectDefault:function _selectDefault(){var defaultIndex=-1;var routePath=null;var children=dom(this._selectionDelegate).children;var routeName=null;for(var i=0;i<children.length;i++){if(children[i].hasAttribute("default-route")){defaultIndex=i;routeElement=children[i];routeName=children[i].getAttribute("route");routePath=children[i].getAttribute("route-path");break;}}if(defaultIndex==-1){this._clearRoute();return;}if(!routeName){console.warn("The default route of a triplat-route-selector does not have a route name.");return;}var routeElement=this._getRouteByName(routeName);if(routeElement&&routePath){routeElement.navigate(routeElement.getParamsFromPath(routePath));}else if(routeElement&&routeElement.path.indexOf(":")==-1){routeElement.navigate({});}else{this._selectionDelegate.selected=defaultIndex;}this._setSelected(routeName);},_getMatchStrength:function _getMatchStrength(route,parts,routeContext){var strength=0;for(var i=0;i<route.length;i++){if(parts.length<=i){return 0;}if(route[i].type=="dynamic"){if(routeContext.length>i){if(parts[i]==routeContext[i]){strength++;continue;}else{return 0;}}else{strength++;continue;}}if(route[i].part!=parts[i]){return 0;}strength++;}return strength;},_getDynaiceCount:function _getDynaiceCount(route){var dynamicCount=0;route.forEach(function(route){if(route.type=="dynamic"){dynamicCount++;}});return dynamicCount;},_selectRoute:function _selectRoute(routeIndex,routeName,routeItem,route){if(routeItem&&this._activeItem&&routeItem==this._activeItem){/*
       * Getting here means that the URL changed, but the selected route did not.
       * Although, the selected route isn't changing, the paramaters might have, 
       * so we still need to update the route with new parameters.
       */if(route){// make sure to tell the route not to fire a route-active event
route._markActive(this._pathData,true);}return;}this.fire("triplat-route-selector-before-navigate",{currentIndex:this._selectionDelegate.selected,nextIndex:routeIndex});if(routeItem){this.fire("triplat-route-before-navigate-to",{},{bubbles:false,cancelable:false,node:routeItem});}this._leaveRoute();this._selectionDelegate.selected=routeIndex;this._setSelected(routeName);this._set_activeItem(routeItem);this._set_activeRoute(route);if(route){route._markActive(this._pathData);}if(routeItem&&routeItem._onNavigateTo){routeItem._onNavigateTo(route.params);this.fire("triplat-route-navigate-to",route.params,{bubbles:false,cancelable:false,node:routeItem});}if(routeItem&&routeItem.setupDialogPromise){routeItem.setupDialogPromise(routeItem);}},_clearRoute:function _clearRoute(){this._leaveRoute();// TODO this causes an issue if an neon-animatable-page is used
// this._selectionDelegate.selected = -1;
this._setSelected(null);this._set_activeItem(null);this._set_activeRoute(null);},_leaveRoute:function _leaveRoute(){if(this._activeRoute){this._activeRoute._markInactive();}if(this._activeItem&&this._activeItem._onNavigateAway){this._activeItem._onNavigateAway();this.fire("triplat-route-navigate-away",{},{bubbles:false,cancelable:false,node:this._activeItem});}if(this._activeItem&&this._activeItem.clearDialogPromise){this._activeItem.clearDialogPromise();}}});/*
    @license
    IBM Confidential - OCO Source Materials - (C) COPYRIGHT IBM CORP. 2015-2018 - The source code for this program is not published or otherwise divested of its trade secrets, irrespective of what has been deposited with the U.S. Copyright Office.
    */var trackValue={};var changeStatus={};var customMessage="Unsaved data";var checkEnable=true;var _useModernDialog=null;var _availableDs={};var TriPlatChangeTrackerBehavior={_getDataSourceFromContext:function _getDataSourceFromContext(context){var contextParts=context.split('/');var retDsName;var indexValue=-1;for(dsName in _availableDs){if(contextParts.indexOf(dsName)>indexValue){retDsName=dsName;indexValue=contextParts.indexOf(dsName);}}if(indexValue!=-1)return retDsName;//console.log("can't find data source in context (" + context +")");
return"";},_markDataSourceDirty:function _markDataSourceDirty(context){var dataSource=this._getDataSourceFromContext(context);changeStatus[dataSource]=true;//console.log("_markDataSourceDirty: " + dataSource + " is marked dirty");
},_isPageStatusDirty:function _isPageStatusDirty(routeName){for(dataSource in changeStatus){if(changeStatus[dataSource])return true;}return false;},_resetPageStatus:function _resetPageStatus(){for(item in changeStatus){changeStatus[item]=false;}for(item in trackValue){delete trackValue[item];}for(item in _availableDs){delete _availableDs[item];}},_setCheckEnable:function _setCheckEnable(value){checkEnable=value;},_isUnsaveCheckEnable:function _isUnsaveCheckEnable(){return checkEnable;},_setCustomMessage:function _setCustomMessage(message){customMessage=message;},_getCustomMessage:function _getCustomMessage(){return customMessage;},_isDeepPathValueChange:function _isDeepPathValueChange(dataName,value){if(JSON.stringify(value.base)===JSON.stringify(value.value)){// init load
if(dataName.localeCompare(value.path)==0){// clone the object
trackValue[dataName]=JSON.parse(JSON.stringify(value.base));}return false;}else{var rootPath=value.path.split('.')[0];if(rootPath.localeCompare(dataName)){console.log("error: _trackChange dataName("+dataName+") cannot be found in value = "+rootPath);return false;}if(JSON.stringify(trackValue[rootPath])!==JSON.stringify(value.base)){// clone the object
trackValue[rootPath]=JSON.parse(JSON.stringify(value.base));return true;}else{return false;}}},_notEqualOperator:function _notEqualOperator(oldValue,newValue,valueType){if(valueType==='object')return JSON.stringify(newValue)!==JSON.stringify(oldValue);if(valueType==='string')return newValue.localeCompare(oldValue)!==0;return newValue!==oldValue;},_copyValue:function _copyValue(value,valueType){if(valueType==='object')return JSON.parse(JSON.stringify(value));if(valueType==='string')return value.toString();return value;},_isSinglePathValueChange:function _isSinglePathValueChange(dataName,value){if(typeof value==='undefined'){// exit page
delete trackValue[dataName];return false;}if(dataName in trackValue){if(this._notEqualOperator(trackValue[dataName],value,babelHelpers.typeof(value))){trackValue[dataName]=this._copyValue(value,babelHelpers.typeof(value));return true;}return false;}else{// init load
trackValue[dataName]=this._copyValue(value,babelHelpers.typeof(value));return false;}},_isDeepPathValue:function _isDeepPathValue(value){if(value&&typeof value.base!=='undefined'&&typeof value.path!=='undefined'&&typeof value.value!=='undefined')return true;return false;},_isValueChange:function _isValueChange(dataName,value){if(typeof dataName==='undefined'){error.log("error in _trackChange argument");return false;}if(this._isDeepPathValue(value)){return this._isDeepPathValueChange(dataName,value);}else{return this._isSinglePathValueChange(dataName,value);}},/**
    * Called by app
    * useCustomChanges: if true it will use a custom validation 
    * customChanges: if true it means that there're unsaved changes 
    */trackChange:function trackChange(dataSourceName,dataName,value,useCustomChanges,customChanges){_availableDs[dataSourceName]=true;if(this._isUnsaveCheckEnable()){if(useCustomChanges){if(customChanges){this._markDataSourceDirty(dataSourceName);}else{this._resetPageStatus();}}else{if(this._isValueChange(dataName,value)){this._markDataSourceDirty(dataSourceName);}}}},// called by triplat-ds-container-behavior
markDataSourceClean:function markDataSourceClean(context){if(this._isUnsaveCheckEnable()){var dataSource=this._getDataSourceFromContext(context);if(dataSource in changeStatus){changeStatus[dataSource]=false;//console.log("_markDataSourceClean: " + dataSource + " is marked clean");
}}},// called by triplat-route using javascript built-in confirm method
// return false when there is unsaved data and user confirm cancel
unsaveCheck:function unsaveCheck(){var retValue=true;if(this._isUnsaveCheckEnable()){if(this._isPageStatusDirty()){var message=this._getCustomMessage();var res=confirm(message);if(res){this._resetPageStatus();}else{retValue=false;}}}return retValue;},// return true for using paper-dialog
// return false for using built-in confirm dialog
_isDialogPromiseRegister:function _isDialogPromiseRegister(){if(_useModernDialog){return true;}else{return false;}},_registerDialogPromise:function _registerDialogPromise(dialogInfo){_useModernDialog=dialogInfo;},/**
    * useCustomDialog: if true it will use a custom dialog, otherwise it will try to use triplat-change-tracker
    * customDialogId: the ID of the custom dialog 
    * Important: if a customDialogId is not set, it will look for a dialog with ID 'alertDialog'. 
    * Also, the confirm and dismiss button must have, respectivelly, the IDs: 'confirm' and 'dismiss' 
    */setupDialogPromise:function setupDialogPromise(node,useCustomDialog,customDialogId){var dialogId=customDialogId?customDialogId:"alertDialog";var queryElement=useCustomDialog?node.querySelector("#"+dialogId):node.querySelector("triplat-change-tracker");if(queryElement){var disabled=queryElement.hasAttribute("disabled");if(disabled){this._setCheckEnable(false);}var dialogIdData={'node':node,'dialogId':dialogId,'dismissButtonId':'dismiss','confirmButtonId':'confirm'};this._registerDialogPromise(dialogIdData);}},getDialogPromise:function getDialogPromise(){var _dialogPromise=new Promise(function(resolve,reject){var dialogElement=_useModernDialog.node.querySelector("#"+_useModernDialog.dialogId);var dismissButton=_useModernDialog.node.querySelector("#"+_useModernDialog.dismissButtonId);var confirmButton=_useModernDialog.node.querySelector("#"+_useModernDialog.confirmButtonId);var _rejectFunction=function _rejectFunction(){reject();dismissButton.removeEventListener('tap',_rejectFunction);};var _resolveFunction=function _resolveFunction(){resolve();confirmButton.removeEventListener('tap',_resolveFunction);};dismissButton.addEventListener('tap',_rejectFunction);confirmButton.addEventListener('tap',_resolveFunction);dialogElement.opened=true;});return _dialogPromise;},// called by TriplatWebContextIdBehavior._endContext
unsaveCheckBeforeUnload:function unsaveCheckBeforeUnload(){var message="";if(this._isUnsaveCheckEnable()){if(this._isPageStatusDirty()){message=this._getCustomMessage();}}return message;},// api to allow force clean dirty view
forceClean:function forceClean(){this._resetPageStatus();},// called by triplat-route-selector to reset dialog promise
resetDialogPromise:function resetDialogPromise(){this._setCheckEnable(true);this._registerDialogPromise(null);}};_exports.TriPlatChangeTrackerBehavior=TriPlatChangeTrackerBehavior;var triplatChangeTrackerBehavior={__proto__:null,TriPlatChangeTrackerBehavior:TriPlatChangeTrackerBehavior};_exports.$triplatChangeTrackerBehavior=triplatChangeTrackerBehavior;Polymer({is:"triplat-route",properties:{/**
     * The name of the route.
     */name:{type:String,notify:false,readOnly:false},/**
     * The path of the route.
     */path:{type:String,notify:false,readOnly:false},/**
     * The params of an active route.
     */params:{type:Object,notify:true,readOnly:true},/**
     * Whether the route is active or not.
     */active:{type:Boolean,notify:true,readOnly:true,value:false},greedy:{type:Boolean,notify:false,readOnly:false,value:false},_route:{type:Array,notify:true,readOnly:true},_delegateRoute:{type:Object,notify:false,readOnly:true},_delegateRouteActiveHandler:{type:Object,notify:false,readOnly:true},_routeInitialized:{type:Boolean,notify:true,readOnly:true}},get _isPathDefined(){return this.path;},get _isPassiveRoute(){return!this._isPathDefined;},behaviors:[TriPlatRouteContextBehavior,TriPlatChangeTrackerBehavior],observers:["_handlePathDataChanged(_pathData, _route)"],attached:function attached(){if(this._isPathDefined){this._registerRoute();}this._handleInit();},detached:function detached(){if(this._isPathDefined){this._unregisterRoute();}if(this._delegateRoute&&this._delegateRouteActiveHandler){this._delegateRoute.removeEventListener("route-active",this._delegateRouteActiveHandler);}this._set_delegateRoute(null);},_startNavigate:function _startNavigate(params,replaceUrl){var path=this._resolvePath(params);if(!path||path.length==0){path="/";}this._navigate(path,replaceUrl);},navigate:function navigate(params,replaceUrl){if(this._isPassiveRoute){this._delegateRoute.navigate(params,replaceUrl);return;}if(this._isDialogPromiseRegister&&this._isDialogPromiseRegister()){if(this._isUnsaveCheckEnable&&this._isUnsaveCheckEnable()&&this._isPageStatusDirty()){this.getDialogPromise().then(function(){//console.log("user confirm to discard the changes");
this._resetPageStatus();this._startNavigate(params);}.bind(this),function(){//console.log("user cancel navigation");
});}else{this._startNavigate(params);}}else{if(this.unsaveCheck){if(!this.unsaveCheck())return;}this._startNavigate(params,replaceUrl);}},_resolvePath:function _resolvePath(params){if(!params){params={};}var computedParams=this._getParamsFromPath(this._pathData);Base.mixin(computedParams,params);var path="";this._route.forEach(function(route){path+="/";if(route.type=="dynamic"){path+=computedParams[route.name];}else{path+=route.part;}});return path;},getParamsFromPath:function getParamsFromPath(path){var parts=[];path.match(/([^\/]+)/g).forEach(function(part){parts.push(part);});var params={};for(var i=0;i<this.route.length;i++){if(this.route[i].type=="dynamic"){params[this.route[i].name]=parts[i];}}return params;},_handleInit:function _handleInit(){if(this._isPassiveRoute){var delegateRoute=this._getRouteByName(this.name);if(!delegateRoute){console.warn("Cannot initialize passive route as no route found with name. "+"[routeName="+this.name+"]");return;}var delegateRouteActiveHandler=this._handleDelegateRouteActive.bind(this);if(delegateRoute.active){this._setParams(delegateRoute.params);this._setActive(true);this.fire("route-active",{active:true,params:this.params});}delegateRoute.addEventListener("route-active",delegateRouteActiveHandler);this._set_delegateRouteActiveHandler(delegateRouteActiveHandler);this._set_delegateRoute(delegateRoute);this._set_routeInitialized(true);return;}var fullPath=this._calculatePath();var route=[];if(fullPath=="/"){// this is a 'root' route
this._set_route(route);return;}fullPath.match(/([^\/]+)/g).forEach(function(match){if(match.search(/\:.*$/)!=-1){var name=match.match(/([^:]+)/g)[0];route.push({type:"dynamic",name:name});}else{route.push({type:"static",part:match});}});this._set_route(route);this._set_routeInitialized(true);},_calculatePath:function _calculatePath(){if(this._isPassiveRoute){console.warn("_calculatePath should not be called on a passive route.");return;}if(this._isRoot){return this.path;}var parentRouteName=this._parentRouteContainer.getAttribute("route");var parentRouteElement=this._getRouteByName(parentRouteName);if(!parentRouteElement){console.warn("Cannot calculate route path as the parent route could not be found. "+"[routeName="+parentRouteName+"]");return;}return parentRouteElement._calculatePath()+this.path;},// called by plat-route-selector
_markActive:function _markActive(pathData,doNotFireEvent){this._setParams(this._getParamsFromPath(pathData));this._setActive(true);if(!doNotFireEvent){this.fire("route-active",{active:true,params:this.params});}},// called by plat-route-selector
_markInactive:function _markInactive(){this._setParams({});this._setActive(false);this.fire("route-active",{active:false,params:this.params});},_getParamsFromPath:function _getParamsFromPath(pathData){var params={};for(var i=0;i<this._route.length;i++){if(this._route[i].type!="dynamic"){continue;}params[this._route[i].name]=pathData.parts[i];}return params;},_isActive:function _isActive(){if(this._isRoot){return true;}return this._parentContext._isActiveRoute(this._parentRouteContainer);},_handleDelegateRouteActive:function _handleDelegateRouteActive(e){this._setParams(e.detail.params);this._setActive(e.detail.active);this.fire("route-active",e.detail);},_handlePathDataChanged:function _handlePathDataChanged(pathData){if(!assertParametersAreDefined(arguments)){return;}if(!this.greedy){return;}this._setParams(this._getParamsFromPath(pathData));}});/* IBM Confidential‌ - OCO Source Materials‌ - (C) COPYRIGHT IBM CORP. 2019 - The source code for this program is not published or otherwise‌ divested of its trade secrets, irrespective of what has been‌ deposited with the U.S. Copyright Office. */var registry={rootInstances:[],subscribers:[]};var loadingMap=new Map();var loadingListeners=[];function computeGeneralLoading(){var generalLoading=false;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=loadingMap.values()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var loadingValue=_step.value;if(loadingValue)generalLoading=true;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return generalLoading;}function setLoadingValue(loadingKey,loadingValue){loadingMap.set(loadingKey,loadingValue);notifyLoadingListeners();}function notifyLoadingListeners(){var generalLoading=computeGeneralLoading();loadingListeners.forEach(function(listener){return listener(generalLoading);});}function addLoadingListener(listener){loadingListeners.push(listener);}function getService(serviceName){return registry.rootInstances[serviceName];}var TrimixinService=function TrimixinService(superClass){return(/*#__PURE__*/function(_superClass6){babelHelpers.inherits(_class3,_superClass6);babelHelpers.createClass(_class3,null,[{key:"properties",get:function get(){return{_isRootInstance:{type:Boolean,value:false,readOnly:true},_rootInstance:{type:Object,readOnly:true},_propertiesToPropagate:{type:Array,readOnly:true,value:function value(){return[];}},_serviceReady:{type:Boolean,value:false,readOnly:true}};}}]);function _class3(){var _this37;babelHelpers.classCallCheck(this,_class3);_this37=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(_class3).call(this));_this37._computePropertiesToPropagate();if(registry.rootInstances[_this37.serviceName]==null){registry.rootInstances[_this37.serviceName]=babelHelpers.assertThisInitialized(_this37);registry.subscribers[_this37.serviceName]=[];_this37._set_isRootInstance(true);}else{_this37._registerSubscriber();}_this37._addObservers();_this37._set_serviceReady(true);return _this37;}babelHelpers.createClass(_class3,[{key:"_registerSubscriber",value:function _registerSubscriber(){this._set_rootInstance(registry.rootInstances[this.serviceName]);registry.subscribers[this.serviceName].push(this);this._syncFromRootInstance();}},{key:"_syncFromRootInstance",value:function _syncFromRootInstance(){var _this38=this;this._propertiesToPropagate.forEach(function(property){_this38[property.name]=_this38._rootInstance[property.name];},this);}},{key:"_returnDataFromResponse",value:function _returnDataFromResponse(response){return response!=null?response.data:null;}},{key:"_returnCountFromResponse",value:function _returnCountFromResponse(response){return response!=null?response.totalSize:null;}},{key:"_computePropertiesToPropagate",value:function _computePropertiesToPropagate(){var superProperties=Object.getPrototypeOf(this).constructor.properties;for(var propName in superProperties){if(superProperties[propName].notify){this._propertiesToPropagate.push({name:propName,def:superProperties[propName]});}}}},{key:"_addObservers",value:function _addObservers(){var _this39=this;this._propertiesToPropagate.forEach(function(property){_this39["_propagatePath".concat(property.name)]=_this39._propagatePath.bind(_this39,property.name);_this39._createMethodObserver("_propagatePath".concat(property.name,"(").concat(property.name,".*)"));},this);}},{key:"_propagatePath",value:function _propagatePath(propName,changeRecord){if(this._isRootInstance){registry.subscribers[this.serviceName].forEach(function(subscriber){subscriber.notifyPath(changeRecord.path,changeRecord.value);},this);}else{this._rootInstance.notifyPath(changeRecord.path,changeRecord.value);}}},{key:"_dispatchServiceEvent",value:function _dispatchServiceEvent(event){this.dispatchEvent(event);registry.subscribers[this.serviceName].forEach(function(subscriber){return subscriber.dispatchEvent(event);});}},{key:"_isAnyArgumentTruthy",value:function _isAnyArgumentTruthy(){for(var i=0;i<arguments.length;++i){if(arguments[i])return true;}return false;}},{key:"_handleLoadingChanged",value:function _handleLoadingChanged(){if(this._isRootInstance){this.loading=this._isAnyArgumentTruthy.apply(this,arguments);setLoadingValue(this.serviceName,this.loading);}}},{key:"serviceName",get:function get(){return Object.getPrototypeOf(this).constructor.is;}}]);return _class3;}(superClass));};_exports.TrimixinService=TrimixinService;var trimixinService={__proto__:null,computeGeneralLoading:computeGeneralLoading,setLoadingValue:setLoadingValue,addLoadingListener:addLoadingListener,getService:getService,TrimixinService:TrimixinService};_exports.$trimixinService=trimixinService;function getTriroutesApp(){return getService(TriroutesApp.is);};var TriroutesApp=/*#__PURE__*/function(_TrimixinService){babelHelpers.inherits(TriroutesApp,_TrimixinService);function TriroutesApp(){babelHelpers.classCallCheck(this,TriroutesApp);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriroutesApp).apply(this,arguments));}babelHelpers.createClass(TriroutesApp,[{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(TriroutesApp.prototype),"connectedCallback",this).call(this);if(this._isRootInstance){this.shadowRoot.querySelector("#rootInstanceIf").render();}}}],[{key:"is",get:function get(){return"triroutes-app";}},{key:"template",get:function get(){return html(_templateObject33_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{roomSearchRouteActive:{type:Boolean,notify:true},roomDetailRouteActive:{type:Boolean,notify:true},roomDetailParams:{type:Object,notify:true},floorplanRouteActive:{type:Boolean,notify:true},floorplanParams:{type:Object,notify:true},ssoRouteActive:{type:Boolean,notify:true}};}}]);return TriroutesApp;}(TrimixinService(PolymerElement));;window.customElements.define(TriroutesApp.is,TriroutesApp);var triroutesApp={__proto__:null,getTriroutesApp:getTriroutesApp};_exports.$triroutesApp=triroutesApp;function getTriroutesRoomSearch(){return getService(TriroutesRoomSearch.is);};var TriroutesRoomSearch=/*#__PURE__*/function(_TrimixinService2){babelHelpers.inherits(TriroutesRoomSearch,_TrimixinService2);function TriroutesRoomSearch(){babelHelpers.classCallCheck(this,TriroutesRoomSearch);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriroutesRoomSearch).apply(this,arguments));}babelHelpers.createClass(TriroutesRoomSearch,[{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(TriroutesRoomSearch.prototype),"connectedCallback",this).call(this);if(this._isRootInstance){this.shadowRoot.querySelector("#rootInstanceIf").render();}}},{key:"openRoomResults",value:function openRoomResults(){if(this._isRootInstance){this.shadowRoot.querySelector("#resultsRoute").navigate();}else{this._rootInstance.openRoomFilters();}}},{key:"openRoomFilters",value:function openRoomFilters(){if(this._isRootInstance){this.shadowRoot.querySelector("#filtersRoute").navigate();}else{this._rootInstance.openRoomFilters();}}},{key:"openNotSupported",value:function openNotSupported(){if(this._isRootInstance){this.shadowRoot.querySelector("#notSupportedRoute").navigate();}else{this._rootInstance.openNotSupported();}}}],[{key:"is",get:function get(){return"triroutes-room-search";}},{key:"template",get:function get(){return html(_templateObject34_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{resultsRouteActive:{type:Boolean,notify:true},filtersRouteActive:{type:Boolean,notify:true}};}}]);return TriroutesRoomSearch;}(TrimixinService(PolymerElement));;window.customElements.define(TriroutesRoomSearch.is,TriroutesRoomSearch);var triroutesRoomSearch={__proto__:null,getTriroutesRoomSearch:getTriroutesRoomSearch};_exports.$triroutesRoomSearch=triroutesRoomSearch;function getTriserviceApplicationSettings(){return getService(TriserviceApplicationSettings.is);}var TriserviceApplicationSettings=/*#__PURE__*/function(_TrimixinService3){babelHelpers.inherits(TriserviceApplicationSettings,_TrimixinService3);function TriserviceApplicationSettings(){babelHelpers.classCallCheck(this,TriserviceApplicationSettings);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceApplicationSettings).apply(this,arguments));}babelHelpers.createClass(TriserviceApplicationSettings,[{key:"refreshApplicationSettings",value:function refreshApplicationSettings(force){var _this40=this;if(this._isRootInstance){if(force||!this.applicationSettings){this.shadowRoot.querySelector("#applicationSettingsDS").refresh().then(function(response){_this40.isReady=true;return _this40._returnDataFromResponse(response);}).catch(function(error){_this40.isReady=true;return Promise.reject(error);});}else{return Promise.resolve(this.applicationSettings);}}else{this._rootInstance.refreshApplicationSettings(force);}}}],[{key:"is",get:function get(){return"triservice-application-settings";}},{key:"template",get:function get(){return html(_templateObject35_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{applicationSettings:{type:Object,notify:true},isReady:{type:Number,value:false,notify:true},_loadingApplicationSettings:{type:Boolean,value:false}};}},{key:"observers",get:function get(){return["_handleLoadingChanged(_loadingApplicationSettings)"];}}]);return TriserviceApplicationSettings;}(TrimixinService(PolymerElement));window.customElements.define(TriserviceApplicationSettings.is,TriserviceApplicationSettings);var triserviceApplicationSettings={__proto__:null,getTriserviceApplicationSettings:getTriserviceApplicationSettings};_exports.$triserviceApplicationSettings=triserviceApplicationSettings;var TriplatDsChangeBehavior={listeners:{"triplat-ds-request-change-notification":"_onTriplatDsRequestChangeNotification"},created:function created(){this._parentDsChange=null;this._interestedDescendants=[];},attached:function attached(){this.fire("triplat-ds-request-change-notification",null,{node:this,bubbles:true,cancelable:true});},detached:function detached(){if(this._parentDsChange){this._parentDsChange.stopResizeNotificationsFor(this);}},notifyDsInfoChanged:function notifyDsInfoChanged(dsInfo){this._interestedDescendants.forEach(function(interestedDescendant){interestedDescendant.notifyDsInfoChanged(dsInfo);});this.fire("triplat-ds-change",dsInfo,{node:this,bubbles:false});},assignParentDsChange:function assignParentDsChange(parentDsChange){this._parentDsChange=parentDsChange;},stopResizeNotificationsFor:function stopResizeNotificationsFor(target){var index=this._interestedDescendants.indexOf(target);if(index>-1){this._interestedDescendants.splice(index,1);}},_onTriplatDsRequestChangeNotification:function _onTriplatDsRequestChangeNotification(event){var target=event.path?event.path[0]:event.target;if(target===this){return;}if(this._interestedDescendants.indexOf(target)===-1){this._interestedDescendants.push(target);}target.assignParentDsChange(this);event.stopPropagation();}};_exports.TriplatDsChangeBehavior=TriplatDsChangeBehavior;var triplatDsChangeBehavior={__proto__:null,TriplatDsChangeBehavior:TriplatDsChangeBehavior};_exports.$triplatDsChangeBehavior=triplatDsChangeBehavior;var TriplatQueryPageBehaviorImpl={/**
   * Fired when the page changes.
   *
   * @event triplat-query-page-change
   */properties:{from:{type:Number,notify:true,readOnly:false},size:{type:Number,notify:false,readOnly:false},page:{type:Object,notify:true,readOnly:true,observer:"_pageChanged"}},observers:["_init(from, size)"],_init:function _init(from,size){if(!assertParametersAreDefined(arguments)){return;}this._setPage({from:from,size:size});},_pageChanged:function _pageChanged(page){this.fire("triplat-query-page-change",page);},reset:function reset(){}};_exports.TriplatQueryPageBehaviorImpl=TriplatQueryPageBehaviorImpl;var TriplatQueryPageBehavior=[TriplatQueryPageBehaviorImpl,TriplatDsChangeBehavior];_exports.TriplatQueryPageBehavior=TriplatQueryPageBehavior;var triplatQueryPageBehavior={__proto__:null,TriplatQueryPageBehaviorImpl:TriplatQueryPageBehaviorImpl,TriplatQueryPageBehavior:TriplatQueryPageBehavior};_exports.$triplatQueryPageBehavior=triplatQueryPageBehavior;Polymer({is:"triplat-query-page",behaviors:[TriplatQueryPageBehavior],properties:{/**
     * The number of the current page retrieved from the server. The methods reset, prev, and next can be used to change this.
     */currentPage:{type:Number,notify:true,readOnly:false,value:1},/**
     * The total number of pages available from the server.
     */totalPages:{type:Number,notify:true,readOnly:true},/**
      * The total number of records available from the server.
      */totalSize:{type:Number,notify:true,readOnly:true},/**
     * The number of records that you want to represent a page.
     */size:{type:Number}},observers:["_totalSizeChanged(totalSize, size)","_currentPageChanged(currentPage, size)"],listeners:{"triplat-ds-change":"_dsChanged"},_totalSizeChanged:function _totalSizeChanged(totalSize,size){if(!assertParametersAreDefined(arguments)){return;}this._setTotalPages(Math.max(Math.ceil(totalSize/size),1));},_currentPageChanged:function _currentPageChanged(currentPage,size){if(!assertParametersAreDefined(arguments)){return;}if(this._ignoreCurrentPageChanged){return;}if(currentPage<1){this.set("currentPage",1);return;}if(this.totalPages!=undefined&&this.totalPages!=null&&currentPage>this.totalPages){this.set("currentPage",this.totalPages);return;}this.set("from",(currentPage-1)*size);},_dsChanged:function _dsChanged(e){this._setTotalSize(e.detail.totalSize);},/**
   * Resets the current page to one.
   */reset:function reset(){this.set("currentPage",1);},/**
   * Retrieves the next page of records.
   */next:function next(){this.set("currentPage",this.currentPage+1);},/**
   * Retrieves the previous page of records.
   */prev:function prev(){this.set("currentPage",this.currentPage-1);}});Polymer({is:"triplat-query-scroll-page",properties:{/**
     * This element contains the data items on the page, whose scroll event is responsible for triggering this pagination request.
     */scroller:{type:Object,notify:false,readOnly:false,observer:"_initScroller"},/**
      * The number of pixels from the current scroll position to the bottom of the scroller that will trigger a pagination request. 
      */threshold:{type:Number,notify:false,readOnly:false,value:250},/**
      * The total number of records that have been retrieved from the server.
      */dataSize:{type:Number,notify:true,readOnly:true},/**
      * The total number of records available from the server.
      */totalSize:{type:Number,notify:true,readOnly:true},/**
     * The number of records that you want to represent a page.
     */size:{type:Number},/**
     * By default, the triplat-query-scroll-page will listen to dom-change events from 
     * the scroller container. When a dom-change from a dom-repeat occurs, it will check if the 
     * currently retrieved records activated the scrollbar on the scroller container. 
     * If there is no scrollbar yet and there are more records to be retrieved, the 
     * triplat-query-scroll-page will trigger the triplat-ds to fetch more records until the 
     * scrollbar is activated on the scroller or all records have been retrieved.
     * This logic prevents the scenario where the first page of records are retrieved and there are more 
     * records to be retrieved, but the scroller container does not have a scrollbar to trigger 
     * the retrieval of remaining records.
     * If <b>disableAutoFetch</b> is true it will disable this auto-fetch logic.
     */disableAutoFetch:{type:Boolean,value:false},/**
     * Deprecated. Use the <b>disableAutoFetch</b> property instead.
     */acceptModernSearch:{type:Boolean,value:false},/**
     * If true, the <b>triplat-query-scroll-page</b> will react to the movement of scroller's horizontal 
     * scrollbar. Otherwise, it will react to the movement of scroller's vertical scrollbar.
     */horizontalScroll:{type:Boolean,value:false}},behaviors:[TriplatQueryPageBehavior],listeners:{"triplat-ds-change":"_onDsChanged"},/**
   * Sets the scroller to null.
   */detached:function detached(){this.set("scroller",null);},_initScroller:function _initScroller(newScroller,oldScroller){if(oldScroller){this.unlisten(oldScroller,"scroll","_onScroll");}if(newScroller){if(this._isAutoFetchEnabled()){this.listen(newScroller,"dom-change","_scrollerDataPopulationComplete");}this.set("from",0);// TODO this might cause problems if the scroller is switched
this.listen(newScroller,"scroll","_onScroll");}},_onScroll:function _onScroll(e){if(this._disable){return;}if(this.horizontalScroll){var initial=this.scroller.scrollLeft;var opposite=initial+this.scroller.offsetWidth;var size=this.scroller.scrollWidth;}else{var initial=this.scroller.scrollTop;var opposite=initial+this.scroller.offsetHeight;var size=this.scroller.scrollHeight;}if(size-opposite<this.threshold){this._nextPage();}},_onDsChanged:function _onDsChanged(e){this._disable=false;this._setTotalSize(e.detail.totalSize);this._setDataSize(e.detail.size);if(this.scroller&&this._isAutoFetchEnabled()){this.listen(this.scroller,"dom-change","_scrollerDataPopulationComplete");}},/**
   * Sets the 'from' to zero.
   */reset:function reset(){this.set("from",0);},_scrollerDataPopulationComplete:function _scrollerDataPopulationComplete(event){if(event.target!=null&&event.target.is!==undefined&&event.target.is=="dom-repeat"){var canScroll=true;flush$1();if(this.horizontalScroll){if(this.scroller&&this.scroller.clientWidth>0&&this.scroller.scrollWidth>0&&this.scroller.scrollWidth<=this.scroller.clientWidth){canScroll=false;}}else{if(this.scroller&&this.scroller.clientHeight>0&&this.scroller.scrollHeight>0&&this.scroller.scrollHeight<=this.scroller.clientHeight){canScroll=false;}}if(canScroll){this.unlisten(this.scroller,"dom-change","_scrollerDataPopulationComplete");}else{this._nextPage();}}},_nextPage:function _nextPage(){this._disable=true;if(this.totalSize!=null&&this.dataSize!=null&&this.dataSize<this.totalSize){this.set("from",this.from+this.size);}},_isAutoFetchEnabled:function _isAutoFetchEnabled(){return!this.disableAutoFetch&&!this.acceptModernSearch;}});Polymer({is:"triplat-query-sort",/**
   * Fired when the sort changes.
   *
   * @event triplat-query-sort-changed
   */properties:{/**
     * The name of the data source field to be used for this sort.
     */name:{type:String,notify:false,readOnly:false},/**
     * If specified, the sort order will be descending. Otherwise it will be ascending.
     */desc:{type:Boolean,notify:false,readOnly:false,value:false},/**
     * If specified, the client query will attempt to convert the operands to the specified type before applying the filter.
     * The supported types are:
     *  - DATE
     *  - DATE_TIME
     *  - STRING_WITH_ID
     */type:{type:String,value:""},/** 
     * A representation of 'name' and 'desc' in a single object. 
     */sort:{type:Object,notify:true,readOnly:true,observer:"_sortChanged"}},observers:["_initBoth(name, desc, type)"],_initBoth:function _initBoth(name,desc,type){if(!assertParametersAreDefined(arguments)){return;}this._setSort({name:name,desc:desc,type:type});},_sortChanged:function _sortChanged(sort){this.fire("triplat-query-sort-changed",sort);}});Polymer({is:"triplat-query-resource-calendar",/**
   * Fired after the availability object changes.
   *
   * @event triplat-query-resource-calendar-changed
   */properties:{/**
     * The start date for the range that you want to search. This must be in ISO format.  
     */startDate:{type:String,observer:"_startDateChanged",required:true},/**
     * The end date for the range that you want to search. This must be in ISO format.
     */endDate:{type:String,observer:"_endDateChanged",required:true},/**
      * The resource identifier of the calendar you want to query. If not specified, then the context-id will be used.
      */id:{type:Number,observer:"_idChanged"},/**
      * The calendar set name that you want to be used. If not specified, then the calendar set name specified in the 
      * Query Name field of that data source model will be used.
      */name:{type:String,observer:"_nameChanged"},/** 
     * A representation of 'startDate', 'endDate' , 'id' and 'name' in a single object. 
     */availability:{type:Object,notify:true,readOnly:true,observer:"_availabilityChanged"}},observers:["_initAll(startDate, endDate, id, name)"],_initAll:function _initAll(startDate,endDate,id,name){if(!assertParametersAreDefined(arguments)){return;}this._setAvailability({startDate:startDate,endDate:endDate,id:id,name:name});},_availabilityChanged:function _availabilityChanged(availability){this.debounce("availabilityChanged",function(){this.fire("triplat-query-resource-calendar-changed",availability);});},_startDateChanged:function _startDateChanged(e){this._setAvailability({startDate:this.startDate,endDate:this.endDate,id:this.id,name:this.name});},_endDateChanged:function _endDateChanged(e){this._setAvailability({startDate:this.startDate,endDate:this.endDate,id:this.id,name:this.name});},_idChanged:function _idChanged(e){this._setAvailability({startDate:this.startDate,endDate:this.endDate,id:this.id,name:this.name});},_nameChanged:function _nameChanged(e){this._setAvailability({startDate:this.startDate,endDate:this.endDate,id:this.id,name:this.name});}});var TriplatQueryWorkPlanner=/*#__PURE__*/function(_PolymerElement3){babelHelpers.inherits(TriplatQueryWorkPlanner,_PolymerElement3);function TriplatQueryWorkPlanner(){babelHelpers.classCallCheck(this,TriplatQueryWorkPlanner);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriplatQueryWorkPlanner).apply(this,arguments));}babelHelpers.createClass(TriplatQueryWorkPlanner,[{key:"_handleQueryWorkPlannerChanged",value:function _handleQueryWorkPlannerChanged(startDate,endDate,contextId){var _this41=this;if(!startDate||!endDate){return;}this._debounceWorkPlannerChanged=Debouncer.debounce(this._debounceWorkPlannerChanged,microTask,function(){_this41.dispatchEvent(new CustomEvent("triplat-query-work-planner-changed",{detail:_this41.config,bubbles:true,composed:true}));});}},{key:"_getContextId",value:function _getContextId(){var contextIdObject=this.contextId;var single=!Array.isArray(contextIdObject);if(single){return this._getContextIdFromObject(contextIdObject);}else{var contextIds=[];for(var indexContext in contextIdObject){var contextId=this._getContextIdFromObject(contextIdObject[indexContext]);if(contextId){contextIds.push(contextId);}else{console.warn("Skipped non numeric context id value: "+contextIdObject[indexContext]);}}return contextIds.length>0?contextIds:null;}}},{key:"_getContextIdFromObject",value:function _getContextIdFromObject(contextIdObject){if(!contextIdObject){return null;}var contextId=null;if(babelHelpers.typeof(contextIdObject)==="object"){contextId=contextIdObject._id?parseInt(contextIdObject._id):null;}else{contextId=parseInt(contextIdObject);}if(!isNaN(contextId)){return contextId;}else{console.warn("Non numeric context id value: "+contextId);return null;}}},{key:"config",get:function get(){var extractedContextId=this._getContextId();if(!this.startDate&&!this.endDate&&!extractedContextId){return null;}return{startDate:this.startDate,endDate:this.endDate,contextId:extractedContextId};}}],[{key:"is",get:function get(){return"triplat-query-work-planner";}},{key:"properties",get:function get(){return{/**
       * The start date for the range that you want to search. This must be in ISO format.
       */startDate:{type:String},/**
       * The end date for the range that you want to search. This must be in ISO format.
       */endDate:{type:String},/**
       * An object that holds a context ID or an array of context IDs for the work planner data source. If not specified, then the context-id from the triplat-ds-context will be used.
       */contextId:{type:Object}};}},{key:"observers",get:function get(){return["_handleQueryWorkPlannerChanged(startDate, endDate, contextId)"];}}]);return TriplatQueryWorkPlanner;}(PolymerElement);window.customElements.define(TriplatQueryWorkPlanner.is,TriplatQueryWorkPlanner);var TriplatQueryReserveContext=/*#__PURE__*/function(_PolymerElement4){babelHelpers.inherits(TriplatQueryReserveContext,_PolymerElement4);function TriplatQueryReserveContext(){babelHelpers.classCallCheck(this,TriplatQueryReserveContext);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriplatQueryReserveContext).apply(this,arguments));}babelHelpers.createClass(TriplatQueryReserveContext,[{key:"_handleQueryReserveContextChanged",value:function _handleQueryReserveContextChanged(startDate,endDate,resultsLimit,recurrenceAvailabilityPercentage,recurrenceChange){var _this42=this;if(!startDate||!endDate){return;}this._debounceReserveContextChanged=Debouncer.debounce(this._debounceReserveContextChanged,microTask,function(){_this42.dispatchEvent(new CustomEvent("triplat-query-reserve-context-changed",{detail:_this42.config,bubbles:true,composed:true}));});}},{key:"config",get:function get(){if(!this.startDate&&!this.endDate){return null;}var config={startDate:this.startDate,endDate:this.endDate,resultsLimit:this.resultsLimit,recurrence:this.recurrence};if(this.recurrenceAvailabilityPercentage!=null&&this.recurrenceAvailabilityPercentage>0&&this.recurrenceAvailabilityPercentage<=100){config.availabilityThreshold=this.recurrenceAvailabilityPercentage/100;}return config;}}],[{key:"is",get:function get(){return"triplat-query-reserve-context";}},{key:"properties",get:function get(){return{/**
       * The start date for the range that is searched. This must be in ISO format.
       */startDate:{type:String},/**
       * The end date for the range that is searched. This must be in ISO format.
       */endDate:{type:String},/**
       * The maximum number of resources that is returned by the reserve query. 
       * If this property is not set or has a value that equals zero, it returns the entire set of query results.
       */resultsLimit:{type:Number},/**
       * The minimum percentage of the time that a resource can be available for a recurring reservation. 
       * For example, if you specify 90, the query will return only resources that are available 90% of the recurring instances. 
       * In this case, a resource that is available 4 of 5 days is not shown as available.
       * This property is only used if you set the <b>recurrence</b> property.
       * It must be a integer between 1 and 100.
       */recurrenceAvailabilityPercentage:{type:Number},/**
       * The recurrence properties that are applied to the reserve query.
       */recurrence:{type:Object}};}},{key:"observers",get:function get(){return["_handleQueryReserveContextChanged(startDate, endDate, resultsLimit, recurrenceAvailabilityPercentage, recurrence.*)"];}}]);return TriplatQueryReserveContext;}(PolymerElement);window.customElements.define(TriplatQueryReserveContext.is,TriplatQueryReserveContext);Polymer({is:"triplat-query-filter",/**
   * Fired when the filter changes.
   *
   * @event triplat-query-filter-change
   */properties:{/**
     * The name of the data source field to be used for this filter.
     */name:{type:String,notify:false,readOnly:false},/**
     * The operator to be used for this comparison. The list of supported values for operator can be found on the triplat-query documentation page.
     */operator:{type:String,notify:false,readOnly:false},/**
     * The value to which the field will be evaluated. 
     */value:{type:Object,notify:false,readOnly:false},/**
     * If specified and when the value is empty, this entire filter will be ignored.
     */ignoreIfBlank:{type:Boolean,notify:false,readOnly:false,value:false},/**
     * If specified, then this filter will be required.
     */required:{type:Boolean,notify:false,readOnly:false,value:false},/**
     * An internal representation of the filter.
     */filter:{type:Object,notify:true,readOnly:true,observer:"_filterChanged"},/**
     * If specified, the client query will attempt to convert the operands to the specified type before applying the filter.
     * The supported types are:
     *  - DATE
     *  - DATE_TIME
     *  - STRING_WITH_ID
     */type:{type:String,value:""}},observers:["_init(name, operator, value, ignoreIfBlank, type)"],_init:function _init(name,operator,value,ignoreIfBlank,type){if(!assertParametersAreDefined(arguments)){return;}this._setFilter({name:name,operator:operator,value:value,ignoreIfBlank:ignoreIfBlank,type:type});},_filterChanged:function _filterChanged(filter){this.fire("triplat-query-filter-change",filter);}});var TriplatQuery={getFieldValueByName:function getFieldValueByName(record,fieldName){var fieldNameParts=fieldName.split(".");var currentValue=record;for(var i=0;i<fieldNameParts.length;i++){if(currentValue==null||currentValue==undefined){return null;}var fieldNamePart=fieldNameParts[i];currentValue=currentValue[fieldNamePart];}return currentValue;},castValue:function castValue(value,type){var result=value;if(type!==undefined&&type!=null&&value!==undefined&&value!=null){switch(type){case"DATE":var date=new Date(value.substring(0,10));if(!isNaN(date)){result=date.getTime();}break;case"DATE_TIME":var dateTime=new Date(value);if(!isNaN(dateTime)){result=dateTime.getTime();}break;case"STRING_WITH_ID":result=babelHelpers.typeof(value)==='object'?value.value:value;break;}}return result;}};_exports.TriplatQuery=TriplatQuery;TriplatQuery.FilterToken=function(){this.leaf=true;this.precedence=4;};TriplatQuery.FilterToken.prototype.execute=function(record){console.warn("woops, token needs implementing");};TriplatQuery.RecordValue=function(fieldName){TriplatQuery.FilterToken.call(this);this.fieldName=fieldName;};TriplatQuery.RecordValue.prototype=Object.create(TriplatQuery.FilterToken.prototype);TriplatQuery.RecordValue.constructor=TriplatQuery.RecordValue;TriplatQuery.RecordValue.prototype.execute=function(record,type){var value=TriplatQuery.getFieldValueByName(record,this.fieldName);return TriplatQuery.castValue(value,type);};TriplatQuery.LiteralValue=function(value){TriplatQuery.FilterToken.call(this);this.value=value;};TriplatQuery.LiteralValue.prototype=Object.create(TriplatQuery.FilterToken.prototype);TriplatQuery.LiteralValue.constructor=TriplatQuery.LiteralValue;TriplatQuery.LiteralValue.prototype.execute=function(record,type){return TriplatQuery.castValue(this.value,type);};TriplatQuery.Operator=function(){TriplatQuery.FilterToken.call(this);this.leaf=false;this.precedence=3;};TriplatQuery.Operator.prototype=Object.create(TriplatQuery.FilterToken.prototype);TriplatQuery.Operator.constructor=TriplatQuery.Operator;TriplatQuery.Operator.prototype.execute=function(record){console.warn("woops, operator needs implementing");};TriplatQuery.OrOperator=function(){TriplatQuery.Operator.call(this);this.precedence=1;};TriplatQuery.OrOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.OrOperator.constructor=TriplatQuery.OrOperator;TriplatQuery.OrOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record);if(leftSideValue==null){return false;// we want to ignore the filter, so when the parent is an OR, that means treating the filter as FALSE
}if(leftSideValue==true){return true;}var rightSideValue=this.rightSideOperator.execute(record);if(rightSideValue==null){return false;// we want to ignore the filter, so when the parent is an OR, that means treating the filter as FALSE
}if(rightSideValue==true){return true;}else{return false;}};TriplatQuery.AndOperator=function(){TriplatQuery.Operator.call(this);this.precedence=2;};TriplatQuery.AndOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.AndOperator.constructor=TriplatQuery.AndOperator;TriplatQuery.AndOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record);if(leftSideValue==null){return true;// we want to ignore the filter, so when the parent is an AND, that means treating the filter as TRUE
}if(leftSideValue==false){return false;}var rightSideValue=this.rightSideOperator.execute(record);if(rightSideValue==null){return true;// we want to ignore the filter, so when the parent is an AND, that means treating the filter as TRUE
}if(rightSideValue==true){return true;}else{return false;}};TriplatQuery.OpenParenthesisOperator=function(){TriplatQuery.Operator.call(this);};TriplatQuery.OpenParenthesisOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.OpenParenthesisOperator.constructor=TriplatQuery.OpenParenthesisOperator;TriplatQuery.OpenParenthesisOperator.prototype.execute=function(record){//TBD
return true;};TriplatQuery.CloseParenthesisOperator=function(){TriplatQuery.Operator.call(this);};TriplatQuery.CloseParenthesisOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.CloseParenthesisOperator.constructor=TriplatQuery.CloseParenthesisOperator;TriplatQuery.CloseParenthesisOperator.prototype.execute=function(record){//TBD
return true;};TriplatQuery.ContainsOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.ContainsOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.ContainsOperator.constructor=TriplatQuery.ContainsOperator;TriplatQuery.ContainsOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type)||"";var rightSideValue=this.rightSideOperator.execute(record,this.type)||"";leftSideValue=typeof leftSideValue=="string"?leftSideValue:leftSideValue+"";rightSideValue=typeof rightSideValue=="string"?rightSideValue:rightSideValue+"";if(rightSideValue===""&&leftSideValue!=""){return false;// return false if the filter value is blank to match server side filtering
}return leftSideValue.toLowerCase().indexOf(rightSideValue.toLowerCase())>=0;};TriplatQuery.EqualsOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.EqualsOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.EqualsOperator.constructor=TriplatQuery.EqualsOperator;TriplatQuery.EqualsOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,this.type);if(this.ignoreIfBlank==true&&rightSideValue===""){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(leftSideValue==null&&rightSideValue===""){return true;// return true if the comparison is null = blank to match server side filtering
}return leftSideValue==rightSideValue;};TriplatQuery.NotEqualsOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.NotEqualsOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.NotEqualsOperator.constructor=TriplatQuery.NotEqualsOperator;TriplatQuery.NotEqualsOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,this.type);if(this.ignoreIfBlank==true&&rightSideValue===""){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(leftSideValue==null){leftSideValue="";}if(rightSideValue==null){rightSideValue="";}return leftSideValue!=rightSideValue;};TriplatQuery.StartsWithOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.StartsWithOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.StartsWithOperator.constructor=TriplatQuery.StartsWithOperator;TriplatQuery.StartsWithOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type)||"";var rightSideValue=this.rightSideOperator.execute(record,this.type)||"";leftSideValue=typeof leftSideValue=="string"?leftSideValue:leftSideValue+"";rightSideValue=typeof rightSideValue=="string"?rightSideValue:rightSideValue+"";if(rightSideValue===""&&leftSideValue!=""){return false;// return false if the filter value is blank to match server side filtering
}return leftSideValue.toLowerCase().startsWith(rightSideValue.toLowerCase());};TriplatQuery.LessThanOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.LessThanOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.LessThanOperator.constructor=TriplatQuery.LessThanOperator;TriplatQuery.LessThanOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,this.type);if((this.type=="DATE"||this.type=="DATE_TIME")&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(this.ignoreIfBlank==true&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(leftSideValue==null){return false;// return false if the value is null to match the server side filtering
}if(typeof leftSideValue=="number"&&typeof rightSideValue!="number"){rightSideValue=parseFloat(rightSideValue);}return leftSideValue<rightSideValue;};TriplatQuery.LessThanOrEqualsOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.LessThanOrEqualsOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.LessThanOrEqualsOperator.constructor=TriplatQuery.LessThanOrEqualsOperator;TriplatQuery.LessThanOrEqualsOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,this.type);if((this.type=="DATE"||this.type=="DATE_TIME")&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(this.ignoreIfBlank==true&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(leftSideValue==null&&rightSideValue!=null){return false;// return false to match the server side filtering
}if(typeof leftSideValue=="number"&&typeof rightSideValue!="number"){rightSideValue=parseFloat(rightSideValue);}return leftSideValue<=rightSideValue;};TriplatQuery.GreaterThanOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.GreaterThanOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.GreaterThanOperator.constructor=TriplatQuery.GreaterThanOperator;TriplatQuery.GreaterThanOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,this.type);if((this.type=="DATE"||this.type=="DATE_TIME")&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(this.ignoreIfBlank==true&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(leftSideValue==null){return false;// return false to match the server side filtering
}if(typeof leftSideValue=="number"&&typeof rightSideValue!="number"){rightSideValue=parseFloat(rightSideValue);}return leftSideValue>rightSideValue;};TriplatQuery.GreaterThanOrEqualsOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.GreaterThanOrEqualsOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.GreaterThanOrEqualsOperator.constructor=TriplatQuery.GreaterThanOrEqualsOperator;TriplatQuery.GreaterThanOrEqualsOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,this.type);if((this.type=="DATE"||this.type=="DATE_TIME")&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(this.ignoreIfBlank==true&&(rightSideValue==null||rightSideValue==="")){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(leftSideValue==null&&rightSideValue!=null){return false;// return false to match the server side filtering
}if(typeof leftSideValue=="number"&&typeof rightSideValue!="number"){rightSideValue=parseFloat(rightSideValue);}return leftSideValue>=rightSideValue;};TriplatQuery.InOperator=function(precedence){TriplatQuery.Operator.call(this);};TriplatQuery.InOperator.prototype=Object.create(TriplatQuery.Operator.prototype);TriplatQuery.InOperator.constructor=TriplatQuery.InOperator;TriplatQuery.InOperator.prototype.execute=function(record){var leftSideValue=this.leftSideOperator.execute(record,this.type);var rightSideValue=this.rightSideOperator.execute(record,null);if(this.ignoreIfBlank==true&&(rightSideValue==null||rightSideValue===""||Array.isArray(rightSideValue)&&rightSideValue.length==0)){if(this.isRoot){return true;// this is the only filter, so return TRUE to ignore it (matching server-side filtering)
}else{return null;// null will cause the 'and' or 'or' operator to ignore this filter
}}if(!Array.isArray(rightSideValue)){return leftSideValue==TriplatQuery.castValue(rightSideValue,this.type);}for(var _i80=0;_i80<rightSideValue.length;_i80++){if(leftSideValue==TriplatQuery.castValue(rightSideValue[_i80],this.type)){return true;}}return false;};TriplatQuery.Operators={"or":TriplatQuery.OrOperator,"and":TriplatQuery.AndOperator,"open parenthesis":TriplatQuery.OpenParenthesisOperator,"close parenthesis":TriplatQuery.CloseParenthesisOperator,"contains":TriplatQuery.ContainsOperator,"equals":TriplatQuery.EqualsOperator,"not equals":TriplatQuery.NotEqualsOperator,"starts with":TriplatQuery.StartsWithOperator,"less than":TriplatQuery.LessThanOperator,"less than or equals":TriplatQuery.LessThanOrEqualsOperator,"greater than":TriplatQuery.GreaterThanOperator,"greater than or equals":TriplatQuery.GreaterThanOrEqualsOperator,"in":TriplatQuery.InOperator};TriplatQuery.Query=function(page,filters,sorts,calendar,searchColumn,workPlanner,reserveContext){this.page=page;this.filters=filters;this.sorts=sorts;this.calendar=calendar;this.searchColumn=searchColumn;this.workPlanner=workPlanner;this.reserveContext=reserveContext;};TriplatQuery.Query.prototype.buildOperationTree=function(){if(!this.operationTree){var root=null;var parenthesisOpen=0;for(var i=0;i<this.filters.length;i++){var filter=this.filters[i];var operatorType=TriplatQuery.Operators[filter.operator];var operator=new operatorType();if(filter.operator=="open parenthesis"){parenthesisOpen++;continue;// no additional processing is needed for the parenthesis
}if(filter.operator=="close parenthesis"){parenthesisOpen--;continue;// no additional processing is needed for the parenthesis
}if(parenthesisOpen>0){// if we are within parenthesis, then make this operator a higher precedence. 
// use this formula to ensure within the  parenthesis the relatve precedence is honored
operator.precedence=operator.precedence+parenthesisOpen*5;}if(filter.name){operator.leftSideOperator=new TriplatQuery.RecordValue(filter.name);operator.rightSideOperator=new TriplatQuery.LiteralValue(filter.value);operator.type=filter.type;operator.isRoot=false;operator.ignoreIfBlank=filter.ignoreIfBlank;}if(root==null){root=operator;continue;}var parentOperator=null;var visitingOperator=root;while(true){if(!visitingOperator){parentOperator.rightSideOperator=operator;break;}if(operator.precedence<visitingOperator.precedence){if(parentOperator){parentOperator.rightSideOperator=operator;}else{root=operator;}operator.leftSideOperator=visitingOperator;break;}parentOperator=visitingOperator;visitingOperator=visitingOperator.rightSideOperator;}}if(root!=null){root.isRoot=true;}this.operationTree=root;}return this.operationTree;};TriplatQuery.Query.prototype.filterRecords=function(records){if(!records){return null;}var operationTree=this.buildOperationTree();if(operationTree==null){return records.slice();}return records.filter(function(record){var result=operationTree.execute(record);return result;});};TriplatQuery.Query.prototype.sortRecords=function(records){if(!records){return;}var sorts=this.sorts;if(!sorts||sorts.length==0){return;}records.sort(function(a,b){for(var i=0;i<sorts.length;i++){var sort=sorts[i];var x1=sort.desc?TriplatQuery.getFieldValueByName(b,sort.name):TriplatQuery.getFieldValueByName(a,sort.name);var x2=sort.desc?TriplatQuery.getFieldValueByName(a,sort.name):TriplatQuery.getFieldValueByName(b,sort.name);x1=TriplatQuery.castValue(x1,sort.type);x2=TriplatQuery.castValue(x2,sort.type);if(x1!=undefined&&x1!=null&&typeof x1=="string"){x1=x1.toLowerCase();}else if(x1==null||x1==undefined){if(typeof x2=="string")x1="";if(typeof x2=="number")x1=0;}if(x2!=undefined&&x2!=null&&typeof x2=="string"){x2=x2.toLowerCase();}else if(x2==null||x2==undefined){if(typeof x1=="string")x2="";if(typeof x1=="number")x2=0;}if(x1<x2){return-1;}if(x1>x2){return 1;}}return 0;});};TriplatQuery.Query.prototype.applyQuery=function(records){if(!records){return null;}var appliedRecords=this.filterRecords(records);this.sortRecords(appliedRecords);return appliedRecords;};TriplatQuery.Query.prototype.areFiltersEqual=function(that){if(!that||!babelHelpers.instanceof(that,TriplatQuery.Query)){return false;}if(!this.filters&&!that.filters){// both filters are null
return true;}if(!this.filters||!that.filters){// only one is null
return false;}if(this.filters.length!=that.filters.length){// the number of filters are different
return false;}for(var i=0;i<this.filters.length;i++){var thisFilter=this.filters[i];var thatFilter=that.filters[i];if(thisFilter.name!=thatFilter.name){return false;}if(thisFilter.operator!=thatFilter.operator){return false;}if(thisFilter.value!=thatFilter.value){// TODO this works fine for string... could be an object in the future?
if(Array.isArray(thisFilter)&&Array.isArray(thatFilter)&&!this.areArraysEqual(thisFilter,thatFilter)){return false;}return false;}}return true;};TriplatQuery.Query.prototype.areArraysEqual=function(a,b){if(a===b)return true;if(a==null||b==null)return false;if(a.length!=b.length)return false;for(var i=0;i<a.length;++i){if(a[i]!==b[i])return false;}return true;};TriplatQuery.Query.prototype.areSortsEqual=function(that){if(!that||!babelHelpers.instanceof(that,TriplatQuery.Query)){return false;}if(!this.sorts&&!that.sorts){// both filters are null
return true;}if(!this.sorts||!that.sorts){// only one is null
return false;}if(this.sorts.length!=that.sorts.length){// the number of sorts are different
return false;}for(var i=0;i<this.sorts.length;i++){var thisSort=this.sorts[i];var thatSort=that.sorts[i];if(thisSort.name!=thatSort.name){return false;}if(thisSort.desc!=thatSort.desc){return false;}if(thisSort.type!=thatSort.type){return false;}}return true;};TriplatQuery.Query.prototype.isPageEqual=function(that){if(!that||!babelHelpers.instanceof(that,TriplatQuery.Query)){return false;}if(!this.page&&!this.page){return true;}if(!this.page||!that.page){return false;}return this.page.from==that.page.from&&this.page.size==that.page.size;};TriplatQuery.Query.prototype.isCalendarEqual=function(that){if(!that||!babelHelpers.instanceof(that,TriplatQuery.Query)){return false;}if(!this.calendar&&!that.calendar){return true;}if(!this.calendar||!that.calendar){return false;}return this.calendar.startDate==that.calendar.startDate&&this.calendar.endDate==that.calendar.endDate&&this.calendar.id==that.calendar.id&&this.calendar.name==that.calendar.name;};TriplatQuery.Query.prototype.isWorkPlannerEqual=function(that){if(!that||!babelHelpers.instanceof(that,TriplatQuery.Query)){return false;}if(!this.workPlanner&&!that.workPlanner){return true;}if(!this.workPlanner||!that.workPlanner){return false;}var isContextIdEqual=false;if(Array.isArray(this.workPlanner.contextId)&&Array.isArray(that.workPlanner.contextId)){if(this.workPlanner.length!=that.workPlanner.length){isContextIdEqual=false;}else{isContextIdEqual=true;for(var _i81=0;_i81<this.workPlanner.length&&isContextIdEqual;++_i81){if(this.workPlanner[_i81]!==that.workPlanner[_i81]){isContextIdEqual=false;}}}}else{isContextIdEqual=this.workPlanner.contextId==that.workPlanner.contextId;}return this.workPlanner.startDate==that.workPlanner.startDate&&this.workPlanner.endDate==that.workPlanner.endDate&&isContextIdEqual;};TriplatQuery.Query.prototype.isReserveContextEqual=function(that){if(!that||!babelHelpers.instanceof(that,TriplatQuery.Query)){return false;}if(!this.reserveContext&&!that.reserveContext){return true;}if(!this.reserveContext||!that.reserveContext){return false;}return this.reserveContext.startDate==that.reserveContext.startDate&&this.reserveContext.endDate==that.reserveContext.endDate&&this.reserveContext.resultsLimit==that.reserveContext.resultsLimit&&this.reserveContext.availabilityThreshold==that.reserveContext.availabilityThreshold&&JSON.stringify(this.reserveContext.recurrence)==JSON.stringify(that.reserveContext.recurrence);};/*
   A component for paging, filtering and sorting triplat-ds component data.
   
   There are two main ways that the filtering and sorting are performed: client and server. If there 
   is a page specified, then the filtering and sorting are performed on the server. If there is no 
   page specified or if triplat-ds is not the parent, then the filtering and sorting are performed on the client.
   
   ### Server query with traditional pagination
   
   	 <triplat-ds id="peopleDs" name="people" data="{{people}}">
   	   <triplat-query>
   		 <triplat-query-page id="peopleDsPage" 
   			 size="50" 
   			 current-page="{{currentPage}}" 
   			 total-pages="[[totalPages]]"></triplat-query-page>
   		 <triplat-query-filter 
   			 name="firstName" 
   			 operator="contains" 
   			 value="{{searchValue}}"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-sort name="firstName"></triplat-query-sort>
   	   </triplat-query>
   	 </triplat-ds>
   
   	 <div id="peopleContent" class="people-content">
   		<template id="itemsTemplate" is="dom-repeat" items="{{people}}">
   		   <span style="padding-left: 5px;">{{item.name}}</span>
   		</template>
   	 </div>
   
   	 ...
   
   	 // go to the next page
   	 this.$.peopleDsPage.next();
   
   	 // go to the previous page
   	 this.$.peopleDsPage.prev();
   
   ### Server query with scrolling pagination
   
   	 <triplat-ds id="peopleDs" name="people" data="{{people}}">
   	   <triplat-query>
   		 <triplat-query-scroll-page 
   			 scroller="{{scrollerPeople}}" 
   			 size="50"></triplat-query-scroll-page>
   		 <triplat-query-filter 
   			 name="firstName" 
   			 operator="contains" 
   			 value="{{searchValue}}"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-sort name="firstName"></triplat-query-sort>
   	   </triplat-query>
   	 </triplat-ds>
   
   	 <div id="peopleContent" class="people-scroll-content">
   		<template id="itemsTemplate" is="dom-repeat" items="{{people}}">
   		   <span style="padding-left: 5px;">{{item.name}}</span>
   		</template>
   	 </div>
   
   	 ...
   	 
   	 attached : function() {
   		//Bind the scroller to the element that has the scroll. 
   		//As user scroll this element, the next data is retrieved.
   		this.set('scrollerPeople', this.$.peopleContent);
   	 }
   	 
   ### Client query
   
   Note that for client filtering/sorting, bind to filtered-data.
   
   	 <triplat-ds id="peopleDs" name="people" filtered-data="{{people}}">
   	   <triplat-query>
   		 <triplat-query-filter 
   			 name="firstName" 
   			 operator="contains" 
   			 value="{{searchValue}}"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-sort name="firstName"></triplat-query-sort>
   	   </triplat-query>
   	 </triplat-ds>
   
   ### Client query - complex filtering
   
   Note that for client filtering/sorting, bind to filtered-data.
   
   	 <triplat-ds id="peopleDs" name="people" filtered-data="{{people}}">
   	   <triplat-query>
   		 <triplat-query-filter 
   			 name="org" 
   			 operator="contains" 
   			 value="development"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-and></triplat-query-and>
   		 <triplat-query-filter 
   			 name="firstName" 
   			 operator="contains" 
   			 value="{{searchValue}}"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-sort name="firstName"></triplat-query-sort>
   	   </triplat-query>
   	 </triplat-ds>
   
   ### Client query - complex filtering with parentheses
   
   Note that for client filtering/sorting, bind to filtered-data.
   
   This code represents the following expression:
   
   org contains development AND (firstName contains {{searchValue}} OR lastName contains {{searchValue}})
   
   	 <triplat-ds id="peopleDs" name="people" filtered-data="{{people}}">
   	   <triplat-query>
   		 <triplat-query-filter 
   			 name="org" 
   			 operator="contains" 
   			 value="development"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-and></triplat-query-and>
   		 <triplat-query-open-paren></triplat-query-open-paren>
   		 <triplat-query-filter 
   			 name="firstName" 
   			 operator="contains" 
   			 value="{{searchValue}}"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-or></triplat-query-or>
   		 <triplat-query-filter 
   			 name="lastName" 
   			 operator="contains" 
   			 value="{{searchValue}}"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-close-paren></triplat-query-close-paren>
   		 <triplat-query-sort name="firstName"></triplat-query-sort>
   	   </triplat-query>
   	 </triplat-ds>
   
   ### Client query without a triplat-ds parent
   
   Note that for filtering independent of triplat-ds, the 'data' is the input and 'filtered-data-out' is the output/filtered data.
   'data' does not have to be a data source, it can be any array. 'triplat-query-page' and 'triplat-query-scroll-page' are ignored.
   
   	<triplat-ds id="peopleDs" name="people" data="{{people}}"></triplat-ds>
   
   	<triplat-query data="{{people}}" filtered-data-out="{{filteredResults}}">
   	  <triplat-query-filter 
   		name="firstName" 
   		operator="contains" 
   		value="{{searchValue}}"
   		ignore-if-blank></triplat-query-filter>
   	  <triplat-query-sort name="firstName"></triplat-query-sort>
   	</triplat-query>
   
   ### Client query - specifying the data type 
   
   Note that for client filtering/sorting, bind to filtered-data.
   <div style="background-color:#FFFFCC">
   	<div style="padding:20px;">
   		<b>Important:</b> Note that for client filtering of date, datetime and String_With_ID fields, it is important to set the type of the values being compared. If the <b>type</b> property is not specified, the comparison will be held between String types and may return unexpected results.
   	</div>
   </div>
   
   	 <triplat-ds id="assetDs" name="asset" filtered-data="{{asset}}">
   	   <triplat-query>
   		 <triplat-query-filter 
   			 name="serviceDate" 
   			 operator="greater than or equals" 
   			 value="{{initialServiceDate}}"
   			 type="DATE"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-and></triplat-query-and>
   		 <triplat-query-filter 
   			 name="assignedDateTime" 
   			 operator="greater than" 
   			 value="{{initialAssignedDateTime}}"
   			 type="DATE_TIME"
   			 ignore-if-blank></triplat-query-filter>
   		 <triplat-query-filter 
   			 name="status" 
   			 operator="equals" 
   			 value="Active"
   			 type="STRING_WITH_ID"
   			 ignore-if-blank></triplat-query-filter>
   	   <triplat-query-sort name="firstName"></triplat-query-sort>
   	   <triplat-query-sort name="status" type="STRING_WITH_ID"></triplat-query-sort>
   	   </triplat-query>
   	 </triplat-ds>
   
   ### Resource Calendar Query
   
   See the triplat-query-resource-calendar documentation
   
   ### Work Planner Query
   
   See the triplat-query-work-planner documentation
   
   ### Reserve Query
   
   See the triplat-query-reserve-context documentation
   
   ### Filter Types (specified in the operator property)
   
   Filter Name | Description
   ------------|------------
   contains | Case insensitive contains filter.
   equals | Equals filter.
   not equals | Not equals filter.
   starts with | Case insensitive starts with filter.
   less than | Less than filter.
   less than or equals | Less than or equals filter.
   greater than | Greater than filter.
   greater than or equals | Greater than or equals filter.
   in | In filter that allows you to test whether a specified value matches any value in an array.
   */Polymer({_template:html(_templateObject36_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-query",/**
  * Fired when the query changes. This event is deprecated, use triplat-query-changed.
  *
  * @event trplat-query-changed
  */ /**
      * Fired when the query changes.
      *
      * @event triplat-query-changed
      */properties:{/**
     * An object that has all the query information. This includes the page, filters and 
     * sorting.
     */query:{type:Object,notify:true,readOnly:true},/**
     * The amount of delay between the time (milliseconds) a filter value, sort order or 
     * page is changed and the time the query changed event is fired.
     * 
     * This delay is needed so we can wait a bit after a change in case there are more 
     * changes. For example as a user types a filter, we don't need to immediately send a 
     * new request for each character typed.
     */delay:{type:Number,notify:false,readOnly:false,value:100},/**
     * Whether this query is paginated or not.
     */paginated:{type:Boolean,notify:true,readOnly:true},/**
     * When triplat-query is not a child of triplat-ds, then this represents the data that 
     * you want to be filtered.
     */data:{type:Object,notify:true},/**
     * When triplat-query is not a child of triplat-ds, then this represents the data that 
     * has been filtered.
     */filteredDataOut:{type:Object,notify:true,readOnly:true},/**
     * If this is a paginated query, appendPage tells you whether the pagination should 
     * append or not.
     */appendPage:{type:Boolean,notify:true,readOnly:true},/**
     * If this query is used for doing search by using the new search input, 
     * this binding is needed. Make sure it is bound to the same property as
     * the related "triplat-search-input".
     */appendFilters:{type:Array},/**
     * If this is server-side filter without pagination, this tells you the maximum number of entries returned.
     */forceServerFilteringSize:{type:Number,value:10000},/**
     * If the query is used for a search, this tells the column name
     */searchColumn:{type:String},_filterMeta:{type:Array,notify:false,readOnly:true},_query:{type:Object,notify:false,readOnly:true},_deferredHandleDataChange:{type:Boolean,value:false},_appendFilterIndexLookup:{type:Object,value:function value(){return{};}}},get _intDelay(){return parseInt(this.delay);},listeners:{"triplat-query-page-change":"_pageChanged","triplat-query-sort-changed":"_sortChanged","triplat-query-resource-calendar-changed":"_resourceCalendarChanged","triplat-query-work-planner-changed":"_workPlannerChanged","triplat-query-reserve-context-changed":"_reserveContextChanged","triplat-query-filter-change":"_filterChanged"},observers:["_queryChanged(_query.*)","_handleDataChange(data.*)","_appendFiltersChanged(appendFilters.*)"],get _validPage(){if(!this._query.page){return false;}var page=this._query.page;var from=parseInt(page.from);if(isNaN(from)){return false;}var size=parseInt(page.size);if(isNaN(size)){return false;}return true;},attached:function attached(){this.async(function(){this._init();if(this._deferredHandlDataChange){this._handleDataChange();this._deferredHandlDataChange=false;}});},_init:function _init(){var query={};var pageElement=dom(this).querySelector("triplat-query-page,triplat-query-scroll-page");var paginated=pageElement!=undefined;if(pageElement){if(pageElement.page){query.page=pageElement.page;}if(pageElement.tagName=="TRIPLAT-QUERY-SCROLL-PAGE"){this._setAppendPage(true);}else{this._setAppendPage(false);}}var sortElements=dom(this).querySelectorAll("triplat-query-sort");query.sorts=new Array(sortElements.length);for(var i=0;i<sortElements.length;i++){var sortElement=sortElements[i];this._setIndex(sortElement,i);if(sortElement.sort){query.sorts[i]=sortElement.sort;}}var filterElements=dom(this).querySelectorAll("triplat-query-filter,triplat-query-and,triplat-query-or,triplat-query-open-paren,triplat-query-close-paren");query.filters=new Array(filterElements.length);this._set_filterMeta([]);for(var i=0;i<filterElements.length;i++){var filterElement=filterElements[i];this._buildFilterMeta(filterElement,i,query);}var calendarElement=dom(this).querySelector("triplat-query-resource-calendar");if(calendarElement){query.calendar=new Object();if(calendarElement.availability){query.calendar=calendarElement.availability;}}var workPlannerElement=dom(this).querySelector("triplat-query-work-planner");if(workPlannerElement){if(workPlannerElement.config){query.workPlanner=workPlannerElement.config;}}var reserveContextElement=dom(this).querySelector("triplat-query-reserve-context");if(reserveContextElement){if(reserveContextElement.config){query.reserveContext=reserveContextElement.config;}}this._setPaginated(paginated);this._set_query(query);},_setIndex:function _setIndex(element,index){dom(element).setAttribute("triplat-query-index",index);},_getIndex:function _getIndex(element){return element.getAttribute("triplat-query-index");},_pageChanged:function _pageChanged(e){e.stopPropagation();this.set("_query.page",e.detail);},_sortChanged:function _sortChanged(e){e.stopPropagation();var index=this._getIndex(e.target);this.set("_query.sorts."+index,e.detail);},_resourceCalendarChanged:function _resourceCalendarChanged(e){e.stopPropagation();this.set("_query.calendar",e.detail);},_workPlannerChanged:function _workPlannerChanged(e){e.stopPropagation();this.set("_query.workPlanner",e.detail);},_reserveContextChanged:function _reserveContextChanged(e){e.stopPropagation();this.set("_query.reserveContext",e.detail);},_filterChanged:function _filterChanged(e){e.stopPropagation();var index=this._getIndex(e.target);if(this._query!=undefined&&this._query.filters!=undefined){this.set("_query.filters."+index,e.detail);}},_queryChanged:function _queryChanged(change){if(!assertParametersAreDefined(arguments)){return;}if(this._delayHandle!=undefined&&this._delayHandle!=null){this.cancelAsync(this._delayHandle);}if(change.path.indexOf("_query.filters")==0){this._delayHandle=this.async(this._doQueryChanged,this._intDelay);}else if(change.path.indexOf("_query.page")==0&&this.appendPage==true){// the page was updated and is in append page mode, so don't delay the update
this._doQueryChanged();}else if(change.path.indexOf("_query.calendar")==0){this._doQueryChanged();}else if(change.path.indexOf("_query.workPlanner")==0){this._doQueryChanged();}else if(change.path.indexOf("_query.reserveContext")==0){this._doQueryChanged();}else{// TODO should we only delay for filter changes?
// this._doQueryChanged();
this._delayHandle=this.async(this._doQueryChanged,this._intDelay);}},_handleDataChange:function _handleDataChange(){if(!assertParametersAreDefined(arguments)){return;}if(this.query==undefined||this.query==null){this._deferredHandleDataChange=true;return;}if(this.data){this._setFilteredDataOut(this.query.applyQuery(this.data));}else{this._setFilteredDataOut(null);}},_doQueryChanged:function _doQueryChanged(){var page=null;if(this.paginated){if(!this._validPage){return;}page=this._query.page;}var filters=[];for(var i=0;i<this._query.filters.length;i++){var filter=this._query.filters[i];if(filter==undefined){//return;
continue;}var meta=this._filterMeta[i];filters.push(filter);if(!meta.required&&!meta.ignoreIfBlank){continue;}var blankValue=false;if(filter.value===undefined||filter.value===""||filter.value!=null&&Array.isArray(filter.value)&&filter.value.length==0){blankValue=true;}if(meta.required&&blankValue){return;}if(meta.ignoreIfBlank&&blankValue){filters.pop();// remove the filter
// if this is the last filter, then remove the boolean operator to its left
if(i==this._query.filters.length-1){filters.pop();}else{var _nextFilter=this._query.filters[i+1];if(_nextFilter.operator=="and"||_nextFilter.operator=="or")i++;// skip the boolean operator that would have been to the right of this ignored filter
}}}var filterIndex=0;while(filterIndex<filters.length){var currentFilter=filters[filterIndex];var nextFilter=null;if(filterIndex<filters.length-1){nextFilter=filters[filterIndex+1];}// 1) cannot start with operator nor close parenthesis
if(filterIndex==0){if(currentFilter.operator=="close parenthesis"||currentFilter.operator=="and"||currentFilter.operator=="or"){filters.splice(0,1);continue;}}// 2) cannot end with operator nor open parenthesis
if(nextFilter==null){if(currentFilter.operator=="or"||currentFilter.operator=="and"||currentFilter.operator=="open parenthesis"){filters.splice(filterIndex,1);filterIndex=0;continue;}else{// must be a valid filter to end the statement, like close paren or a condition
break;}}// 3) operator and must have condition following it
if(currentFilter.operator=="and"||currentFilter.operator=="or"){if(nextFilter.operator=="and"||nextFilter.operator=="or"||nextFilter.operator=="close parenthesis"){filters.splice(filterIndex,1);filterIndex=0;continue;}}// 4) close parenthesis must have operator following it
if(currentFilter.operator=="close parenthesis"){if(nextFilter.operator=="and"||nextFilter.operator=="or"){// valid
}else{filters.splice(filterIndex,1);filterIndex=0;continue;}}if(currentFilter.operator=="open parenthesis"){if(nextFilter!=null&&(nextFilter.operator=="and"||nextFilter.operator=="or")){// remove open and the following boolean operator
filters.splice(filterIndex,2);filterIndex=0;continue;}}// 6) open parenthesis must have a non 'close parenthesis' operator right after it
if(currentFilter.operator=="open parenthesis"){if(nextFilter!=null&&nextFilter.operator=="close parenthesis"){// if there is no operator between the parenthesis then remove the parenthesis
filters.splice(filterIndex,2);filterIndex=0;continue;}}filterIndex++;}var sorts=this._query.sorts==null?null:this._query.sorts.slice();if(page==undefined||page==null){page=new Object();page.from=0;page.size=this.forceServerFilteringSize;}var calendar=this._query.calendar==null?null:this._query.calendar;var workPlanner=this._query.workPlanner==null?null:this._query.workPlanner;var reserveContext=this._query.reserveContext==null?null:this._query.reserveContext;var query=new TriplatQuery.Query(page,filters,sorts,calendar,this.searchColumn,workPlanner,reserveContext);if(this.query&&this.query.page&&this.query.page.from!=0&&(!this.query.areFiltersEqual(query)||!this.query.areSortsEqual(query))){var pageElement=dom(this).querySelector("triplat-query-page,triplat-query-scroll-page");this.async(function(){pageElement.reset();});this._setQuery(query);}else{this._setQuery(query);if(this.data){this._setFilteredDataOut(this.query.applyQuery(this.data));}else{this.fire("trplat-query-changed",{query:query,append:this.appendPage,paginated:this.paginated});this.fire("triplat-query-changed",{query:query,append:this.appendPage,paginated:this.paginated});}}},_appendFiltersChanged:function _appendFiltersChanged(change){if(!assertParametersAreDefined(arguments)){return;}if(change.path=="appendFilters.splices"){// Should clone for assignment later
var queryJson=JSON.parse(JSON.stringify(this.query));var pageElement=this.queryEffectiveChildren("triplat-query-page,triplat-query-scroll-page");if(pageElement){this.async(function(){pageElement.reset();});}var query=new TriplatQuery.Query(queryJson.page,queryJson.filters,queryJson.sorts,queryJson.calendar,queryJson.searchColumn,queryJson.workPlanner,queryJson.reserveContext);var indexSplice=change.value.indexSplices[0];var removed=indexSplice.removed;if(removed.length>1){this._removeFilters(query);}else if(removed.length==1){var lookup=removed[0].isUniversal?"_universalFilter":removed[0].name;this._removeFilter(lookup,query);}for(var i=0;i<indexSplice.addedCount;i++){var added=indexSplice.object[indexSplice.index+i];var currentIndex=query.filters.length;if(added.isUniversal){this._addUniversalFilter(added.filters,currentIndex,query);}else{this._appendFilterIndexLookup[added.name]={start:currentIndex,elemStart:currentIndex};if(currentIndex>0){var filterElementName=added.appendWithAnd?"triplat-query-and":"triplat-query-or";this._addFilterElement(filterElementName,currentIndex,query);currentIndex++;}this._addFilterElement("triplat-query-filter",currentIndex,query,added);}}this._set_query(query);this._setQuery(query);}},_addUniversalFilter:function _addUniversalFilter(filters,currentIndex,query){this._appendFilterIndexLookup["_universalFilter"]={start:currentIndex,elemStart:currentIndex};if(currentIndex>0){this._addFilterElement("triplat-query-and",currentIndex,query);currentIndex++;}this._addFilterElement("triplat-query-open-paren",currentIndex,query);currentIndex++;for(var i=0;i<filters.length;i++){var filter=filters[i];if(!filter.appendWithAnd){this._addFilterElement("triplat-query-or",currentIndex,query);currentIndex++;}var filterElement=this._createFilterElement("triplat-query-filter",filter,filter.value,currentIndex);this._buildFilterMeta(filterElement,currentIndex,query);currentIndex++;}this._addFilterElement("triplat-query-close-paren",currentIndex,query);currentIndex++;this._appendFilterIndexLookup["_universalFilter"].end=currentIndex;this._appendFilterIndexLookup["_universalFilter"].elemEnd=currentIndex;},_adjustFilterLookup:function _adjustFilterLookup(filterRemoved){var filters=Object.keys(this._appendFilterIndexLookup);for(var filter in filters){var filterObj=this._appendFilterIndexLookup[filters[filter]];if(filterObj.end<=filterRemoved.start){continue;}var amountToAdjust=filterRemoved.end-filterRemoved.start;filterObj.start-=amountToAdjust;filterObj.end-=amountToAdjust;}},_removeFilter:function _removeFilter(lookup,query){var indexRemoved=this._appendFilterIndexLookup[lookup];query.filters.splice(indexRemoved.start,indexRemoved.end-indexRemoved.start);this._removeFilterElement(lookup);delete this._appendFilterIndexLookup[lookup];this._adjustFilterLookup(indexRemoved);},_removeFilters:function _removeFilters(query){var start=query.filters.length;var filters=Object.keys(this._appendFilterIndexLookup);for(var filter in filters){var lookup=filters[filter];var candidate=this._appendFilterIndexLookup[lookup].start;if(candidate<start){start=candidate;}this._removeFilterElement(lookup);}query.filters.splice(start,query.filters.length-start);},_removeFilterElement:function _removeFilterElement(lookup){var filterStart=this._appendFilterIndexLookup[lookup].elemStart;var filterEnd=this._appendFilterIndexLookup[lookup].elemEnd;for(var i=filterStart;i<filterEnd;i++){this._removeChildQueryElement(i);}},_removeChildQueryElement:function _removeChildQueryElement(removeIndex){var tagElem=dom(this).querySelector("[triplat-query-index='"+removeIndex+"']:not(triplat-query-sort)");if(tagElem){dom(this).removeChild(tagElem);}},_addFilterElement:function _addFilterElement(elementName,currentIndex,query,filterProps){if(filterProps){var isGroup=filterProps.value.length>1;if(isGroup){this._addFilterElement("triplat-query-open-paren",currentIndex,query);currentIndex++;}filterProps.value.forEach(function(value,index){if(index>0){this._addFilterElement("triplat-query-or",currentIndex,query);currentIndex++;}var filterElement=this._createFilterElement(elementName,filterProps,value,currentIndex);this._buildFilterMeta(filterElement,currentIndex,query);currentIndex++;},this);if(isGroup){this._addFilterElement("triplat-query-close-paren",currentIndex,query);currentIndex++;}this._appendFilterIndexLookup[filterProps.name].end=currentIndex;this._appendFilterIndexLookup[filterProps.name].elemEnd=currentIndex;}else{var filterElement=document.createElement(elementName);dom(this).appendChild(filterElement);this._buildFilterMeta(filterElement,currentIndex,query);}},_createFilterElement:function _createFilterElement(elementName,filterProps,value,currentIndex){var filterElement=document.createElement(elementName);var name=filterProps.isStringWithId?filterProps.name+".value":filterProps.name;filterElement.name=name;filterElement.operator=filterProps.operator;filterElement.value=value;dom(this).appendChild(filterElement);return filterElement;},_buildFilterMeta:function _buildFilterMeta(filterElement,currentIndex,query){this._setIndex(filterElement,currentIndex);var meta={required:false,ignoreIfBlank:false};if(filterElement.tagName==="TRIPLAT-QUERY-AND"){query.filters[currentIndex]={operator:"and"};}else if(filterElement.tagName==="TRIPLAT-QUERY-OR"){query.filters[currentIndex]={operator:"or"};}else if(filterElement.tagName==="TRIPLAT-QUERY-OPEN-PAREN"){query.filters[currentIndex]={operator:"open parenthesis",required:true};}else if(filterElement.tagName==="TRIPLAT-QUERY-CLOSE-PAREN"){query.filters[currentIndex]={operator:"close parenthesis",required:true};}else{if(filterElement.ignoreIfBlank){meta.ignoreIfBlank=true;}if(filterElement.required){meta.required=true;}if(filterElement.filter){query.filters[currentIndex]=filterElement.filter;}}this.push("_filterMeta",meta);}});var triplatQuery={__proto__:null,TriplatQuery:TriplatQuery};_exports.$triplatQuery=triplatQuery;Polymer({is:"triplat-ds-context",/**
   * Fired when the context changes.
   *
   * @event triplat-ds-context-changed
   */properties:{/**
     * The data source name. 
     */name:{type:String},/**
     * An object that holds a context ID or an array of context IDs. Use an array of context IDs only with the parent data source.
     */contextId:{type:Object},_index:{type:Number}},observers:["_initIndex(_index)","_initContextId(contextId.*)"],_initIndex:function _initIndex(){if(!assertParametersAreDefined(arguments)){return;}if(this.contextId!=undefined&&this.contextId!=null){this.fire("triplat-ds-context-changed");}},_initContextId:function _initContextId(){if(!assertParametersAreDefined(arguments)){return;}if(this._index!=undefined&&this._index!=null){this.fire("triplat-ds-context-changed");}}});Polymer({is:"triplat-ds-instance",/**
   * Fired when the instance Id changes.
   *
   * @event triplat-ds-instance-changed
   */properties:{instanceId:{type:Number,notify:false,readOnly:false,observer:"_handleInstanceIdChanged"}},_handleInstanceIdChanged:function _handleInstanceIdChanged(instanceId){this.fire("triplat-ds-instance-changed",{instanceId:instanceId});}});var TriPlatDs={};_exports.TriPlatDs=TriPlatDs;TriPlatDs.RefreshType=function(){};TriPlatDs.RefreshType.NONE=new TriPlatDs.RefreshType();TriPlatDs.RefreshType.SERVER=new TriPlatDs.RefreshType();TriPlatDs.RefreshType.CLIENT=new TriPlatDs.RefreshType();TriPlatDs.RefreshType.BOTH=new TriPlatDs.RefreshType();/*
                                                          triplat-ds is a component that is used to access data source on the TRIRIGA server.
                                                          
                                                          ### Declaring Examples
                                                          
                                                          The below examples will use this data source structure:
                                                          
                                                          	 - people (multiple records)
                                                          		  - spacesForPerson (multiple records)
                                                          			   - assetsForSpace (multiple records)
                                                          	 - assetsForPerson (multiple records)
                                                          
                                                          Example of accessing a top level data source. This will retrieve the data in the people data source.
                                                          
                                                          	 <triplat-ds id="peopleDs" name="people" data="{{people}}"></triplat-ds>
                                                          
                                                          Example of accessing a child data source. This will retrieve all the spaces for a single person.
                                                          
                                                          	 <triplat-ds name="spacesForPerson" data="{{spacesForPerson}}">
                                                          		  <triplat-ds-context name="people" 
                                                          					context-id="{{person._id}}"></triplat-ds-context>
                                                          	 </triplat-ds>
                                                          
                                                          Example of accessing a deeper child data source. This will retrieve all the assets for a space.
                                                          
                                                          	 <triplat-ds name="assetsForSpace" data="{{assetsForSpace}}">
                                                          		  <triplat-ds-context name="people" 
                                                          					context-id="{{person._id}}"></triplat-ds-context>
                                                          		  <triplat-ds-context name="spacesForPerson" 
                                                          					context-id="{{space._id}}"></triplat-ds-context>
                                                          	 </triplat-ds>
                                                          
                                                          Example of accessing a single record of a multiple record data source. This will retrieve only 
                                                          one space record with the ID specified in the triplat-ds-instance tag.
                                                          
                                                          	 <triplat-ds name="spacesForPerson" data="{{spacesForPerson}}">
                                                          		  <triplat-ds-context name="people" 
                                                          					context-id="{{person._id}}"></triplat-ds-context>
                                                          		  <triplat-ds-instance instance-id="{{space._id}}"></triplat-ds-instance>
                                                          	 </triplat-ds>
                                                          
                                                          Example of accessing a top level data source with a different context. This will retrieve all assets 
                                                          for a single person. This data source would probably be a query data source that has a $$RECORDID$$ filter 
                                                          using a supplied person ID.
                                                          
                                                          	 <triplat-ds name="assetForPerson" data="{{assetForPerson}}" ignore-app-context>
                                                          		  <triplat-ds-context context-id="{{person._id}}"></triplat-ds-context>
                                                          	 </triplat-ds>
                                                          
                                                          Example of accessing a child data source for several context IDs. This will retrieve all of the spaces for the selected people. Both BUSINESS_OBJECT and QUERY data source types support 
                                                          multiple context IDs. For BUSINESS_OBJECT type the data source will include related association. If QUERY type is used, the  data source query would probably have a $$RECORDID$$ filter using a supplied person ID.
                                                          When providing several context IDs for the parent data source, a single request is sent to the server. The server executes the request against
                                                          each of the context IDs and returns the appended results. Be advised that the number of context IDs should be limited because the server executes the 
                                                          query for each context ID. Also, data source pagination should not be used with multiple context IDs.
                                                          
                                                          	 <triplat-ds name="spacesForPeople" data="{{spacesForPeople}}">
                                                          		  <triplat-ds-context name="people" 
                                                          					context-id="{{selectedPeople}}"></triplat-ds-context>
                                                          	 </triplat-ds>
                                                          
                                                          
                                                          ### Update Examples
                                                          
                                                          Example of creating a record in a data source. This will create a single person record for the people data 
                                                          source. It will also fire the "create" action. This will also append the new record to the end of the data 
                                                          source because we specified CLIENT refresh type.
                                                          
                                                          	 // create a single person
                                                          	 var newPerson = {firstName: "Pete", lastName: "Carroll"};
                                                          	 this.$.peopleDs.createRecord(newPerson, TriPlatDs.RefreshType.CLIENT, 
                                                          		 "actions", "create");
                                                          
                                                          Example of creating multiple people.
                                                          
                                                          	 // create multiple people records
                                                          	 var newPeople = [
                                                          		 {firstName: "Pete", lastName: "Carroll"}, 
                                                          		 {firstName: "Marshawn", lastName: "Lynch"}
                                                          	 ];
                                                          	 this.$.peopleDs.createRecord(newPeople, TriPlatDs.RefreshType.CLIENT, 
                                                          		 "actions", "create");
                                                          
                                                          Example of deleting a record in a data source. This will delete that record from the data source and trigger the 
                                                          action BEFORE the delete is done. You can also pass in an array of ID's to delete multiple records.
                                                          
                                                          	 // find the person to delete
                                                          	 var personToDelete = this._findPersonToDelete() // this is just an example
                                                          	 this.$.peopleDs.deleteRecord(personToDelete._id, TriPlatDs.RefreshType.CLIENT, 
                                                          		 "actions", "delete");
                                                          
                                                          Example of updating an existing record in the data source. This finds a record in the data source, makes a change 
                                                          to it, then sends the updated data to the server. We can also pass an array of instance ID's to update multiple 
                                                          records.
                                                          
                                                          	 // get a handle to a record that you want to update
                                                          	 var personToUpdate = this._findPersonToUpdate();
                                                          
                                                          	 // make a change to the person record
                                                          	 personToUpdate.firstName = "changed name";
                                                          
                                                          	 // now that the change was made to the record in the data source
                                                          	 // we just need to tell the data source which record to send to 
                                                          	 // the server.
                                                          	 this.$.peopleDs.updateRecord(personToUpdate._id, TriPlatDs.RefreshType.CLIENT, 
                                                          		 "actions", "update");
                                                          
                                                          Example of performing an action on an existing record in the data source. This finds a person in the data source, 
                                                          then sends the data to the server to perform the action. Optionally, we can pass workflow parameters for the key and value to the workflow that is been executed.
                                                          The key is the same parameter name as is defined in the workflow itself. The value can be a single instance ID, an array of instance IDs, 
                                                          an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
                                                          
                                                          	 // get a handle to a person record you want to move
                                                          	 var personToUpdate = this._findPersonToUpdate();
                                                          
                                                          	 // Example of defining workflow parameters instance IDs values
                                                          	 // space (a single instance ID)
                                                          	 var spaceForPerson = 15843402; 
                                                          	 // assets (an array of instance IDs)
                                                          	 var assetsForSpace = [15855623, 15860809, 15820111, 15860895]; 
                                                          	 // department (a single object with '_id' property)
                                                          	 var department = {_id:15820333, name:"Accounting", 
                                                          					   description:"Accounting department"}; 
                                                          	 // contracts (an array of objects with '_id' properties)
                                                          	 var contracts = [{_id:15820111}, {_id:15860895}]; 
                                                          
                                                          	 // create a workflow parameters map for the key and value
                                                          	 var wfParams = {};
                                                          	 wfParams.space = spaceForPerson;
                                                          	 wfParams.assets = assetsForSpace;
                                                          	 wfParams.department = department;
                                                          	 wfParams.contracts = contracts;
                                                          
                                                          	 // we just need to tell the data source which record to send to 
                                                          	 // the server and optionally pass the workflow parameters.
                                                          	 this.$.peopleDs.performAction(personToUpdate._id, TriPlatDs.RefreshType.BOTH, 
                                                          		 "actions", "move", wfParams);
                                                          
                                                          Example of adding an existing record to a data source. This can also be thought of as "associating" records. We can 
                                                          also pass an array of records to be added here.  You can specify an action here also, but this is an example of how actions
                                                          are optional.
                                                          
                                                          	 // get the person to add to the data source
                                                          	 var personToAdd = this._findPersonToAdd();
                                                          	 this.$.peopleDs.addRecord(personToAdd, TriPlatDs.RefreshType.CLIENT);
                                                          
                                                          Example of removing an existing record from a data source. This can also be thought of as "de-associating" records. We can 
                                                          also pass an array of records to be removed here.  You can specify an action here also, but this is an example of how actions
                                                          are optional.
                                                          
                                                          	 // get the person to add to the data source
                                                          	 var personToRemove = this._findPersonToRemove();
                                                          	 this.$.peopleDs.removeRecord(personToRemove, TriPlatDs.RefreshType.CLIENT);
                                                          
                                                          ### Reusing Components
                                                          
                                                          You can declare the same data source in multiple areas of your application. If the data source is accessing the same information,
                                                          it will be shared across all instances.
                                                          
                                                          Take this example:
                                                          
                                                          	 <triplat-ds id="peopleDs1" name="people" data="{{people}}"></triplat-ds>
                                                          	 <triplat-ds id="peopleDs2" name="people" data="{{people}}"></triplat-ds>
                                                          
                                                          Even though we are declaring two data sources for the same info, only one request will be made to the server. Also any changes to
                                                          one of the data sources will automatically be reflected in the other.
                                                          
                                                          ### Refreshing
                                                          
                                                          All methods take a refresh type argument that allows you to control how the data source is updated because of the action.
                                                          
                                                          RefreshType | Description
                                                          ------------|------------
                                                          TriPlatDs.RefreshType.NONE | No refresh will be done.
                                                          TriPlatDs.RefreshType.SERVER | The server will return the FULL data source on completion of the action.
                                                          TriPlatDs.RefreshType.CLIENT | The client will attempt to update the model value with what was supplied in the method call.
                                                          TriPlatDs.RefreshType.BOTH | Both server and client strategies will be applied.
                                                          
                                                          ### Retrieving the total number of results without the data
                                                          
                                                          You can retrieve the total number of results of a multiple records query data source without retrieving the data. To do that, declare the data source with <b>count-only</b>. The server will return the query total size without the data.
                                                          When you need the data, change the data source <b>countOnly</b> property to false and the data will be loaded.
                                                          This is useful when several data sources are loaded at once but only the total number of results of a data source is needed at that point.
                                                            
                                                          Example:
                                                          
                                                          	<triplat-ds id="employeesDS" name="employees" data="{{employeesData}}" 
                                                          	  count-only query-total-size="{{employeesTotalSize}}">
                                                          	</triplat-ds>
                                                          	
                                                          	...
                                                          
                                                          	getEmployeesData: function(){
                                                          		this.$.employeesDS.countOnly = false; 
                                                          	},
                                                          
                                                          ### Retrieving metadata of fields in Datasource
                                                          
                                                          You can retrieve metadata of the fields in Datasource. Only default value and size defined in Data Modeler is accessible at this point, and supports both primary and non primary data sources.  
                                                          Other metadata will be added in future.
                                                          
                                                          Example:
                                                          
                                                          	<triplat-ds metadata="{{myCustomDsFields}}" include-metadata id="peopleDs1" name="people" data="{{people}}"></triplat-ds>
                                                            
                                                          If triNameTX is the Field Name of one of the fields in datasource, it's default value (if defined in Data Modeler) can be accessed in html context:
                                                          
                                                          	<paper-input label="Size" value="{{myCustomDsFields.fieldMetaData.triFirstNameTX.size}}"></paper-input>
                                                          	<paper-input label="Default Value" value="{{myCustomDsFields.fieldMetaData.triFirstNameTX.defaultValue}}"></paper-input>
                                                             
                                                          or in Javascript context as:
                                                          
                                                          	validateField: function(){
                                                          	  alert("Input value of size" + this.myCustomDsFields.fieldMetaData.triFirstNameTX.size + " is not allowed"); 
                                                          	},
                                                          
                                                          Note: Only Text, List, Number, Date and Datetime fields are supported at this time. Support for other field types will be added later.     
                                                          	
                                                          
                                                          ### Paging, Filtering and Sorting
                                                          
                                                          See triplat-query documentation for detail.
                                                          
                                                          ### Best Practices
                                                          <div style="background-color:#FFFFCC">
                                                          	<div style="padding:20px;">
                                                            <b>Note:</b> You may want to refer to the `triplat-query` documentation page if you're not sure how to differentiate client-side and server-side filtering. The following best practices assume that you have some prior knowledge of data sources, queries, filters, and pagination.
                                                            </div>
                                                          </div>
                                                          #### 1. Think about the way you want to manage data.
                                                          Handling large data sets (100k+) will become slow because of the resources loaded onto the network. If that is the case, you should try 
                                                          rethinking your design to make sure you really need that much data loaded at once and <b>you are willing to accept a slower performance</b>.
                                                          
                                                          <b>Server-side filters</b> can help you.
                                                          If your data is big enough, you should consider using <b>server-side</b> filters and <b>paginate</b> the data.
                                                          Use filters to fine-tune the data set, which reduces the number of records handled by the query and processed, and only get the data that is necessary for your application. This improves the execution time on the server.
                                                          
                                                          Use <b>pagination</b> to only retrieve a subset of the filtered data (not all at once). This is useful when displaying data in the page, rendering a small set of records at a time and displaying more records when needed.
                                                          There are two ways to paginate data: traditional pagination (triplat-query-page) and scrolling pagination (triplat-query-scroll-page).
                                                          See examples of a server query with traditional pagination and a server query with scrolling pagination in the triplat-query documentation.
                                                          
                                                          #### 2. Loading data.
                                                          By default, the data source retrieves the data when the page is loaded. You can avoid initial loading by setting the data source to <b>disable</b>. 
                                                          When you need the data, change the data source <b>disable</b> property to false and the data will be loaded. This is useful when several pages are loaded at once but not all of the data sources are needed at that point.
                                                          
                                                          Example:
                                                          	
                                                          	<triplat-ds id="spaceDs" name="space" data="{{space}}" disable>
                                                          	</triplat-ds>
                                                          	
                                                          	...
                                                          
                                                          	loadSpaceDS: function() {
                                                          		this.$.spaceDs.disable = false;
                                                          	}
                                                          
                                                          #### 3. Data sources and defined fields. 
                                                          The data source should only define fields that are necessary for the application. 
                                                          While the number of fields and field types should not impact the performance with a small data set, it can decrease performance with a large data set. 
                                                          Retrieving large data sets (100k+) with tens of fields for each record will slow performance.
                                                          
                                                          #### 4. Defining data source reports   . 
                                                          Be careful when you define a report for your data source query and tune it up for best performance. Add filters when possible. Be aware of joined tables.
                                                          
                                                          */Polymer({_template:html(_templateObject37_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-ds",/**
  * Fired after a get or refresh is complete.
  *
  * @event ds-get-complete
  */ /**
      * Fired if a get or refresh results in an error.
      *
      * @event ds-get-error
      */ /**
          * Fired after a create is complete.
          * If wfParameters parameter is not provided in the createRecord(), then the event detail only includes the created record ID(s). Otherwise, 
          * the event detail includes the created record ID(s) and action information such as the action group, action, and workflow parameters map.
          * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
          *
          * @event ds-create-complete
          */ /**
              * Fired if a create results in an error.
              *
              * @event ds-create-error
              */ /**
                  * Fired after a delete is complete.
                  * The event detail includes action information such as the action group, action, and workflow parameters map.
                  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
                  *
                  * @event ds-delete-complete
                  */ /**
                      * Fired if a delete results in an error.
                      *
                      * @event ds-delete-error
                      */ /**
                          * Fired after an update is complete.
                          * The event detail includes action information such as the action group, action, and workflow parameters map.
                          * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
                          *
                          * @event ds-update-complete
                          */ /**
                              * Fired if an update results is an error.
                              *
                              * @event ds-update-error
                              */ /**
                                  * Fired after a perform action is complete.
                                  * The event detail includes action information such as the action group, action, and workflow parameters map.
                                  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
                                  *
                                  * @event ds-perform-action-complete
                                  */ /**
                                      * Fired if a perform action results in an error.
                                      *
                                      * @event ds-perform-action-error
                                      */ /**
                                          * Fired after an add is complete.
                                          * The event detail includes action information such as the action group, action, and workflow parameters map.
                                          * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
                                          *
                                          * @event ds-add-complete
                                          */ /**
                                              * Fired if an add results in an error.
                                              *
                                              * @event ds-add-error
                                              */ /**
                                                  * Fired after a remove is complete.
                                                  * The event detail includes action information such as the action group, action, and workflow parameters map.
                                                  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
                                                  *
                                                  * @event ds-remove-complete
                                                  */ /**
                                                      * Fired if a remove results in an error.
                                                      *
                                                      * @event ds-remove-error
                                                      */behaviors:[TriplatDsChangeBehavior],properties:{/**
     * The data source name that will be retrieved.
     */name:{type:String,nofity:true,readOnly:false},/**
     * A flag to enable the data source from requesting field metadata properies set in Data Modeler.
     */includeMetadata:{type:Boolean,value:false,notify:true},/*
     * The data object to which the metadata of the fields in data source values can be bound.
     */metadata:{type:Object,notify:true,readOnly:true},/**
     * The data object which the query metadata will be set after calling getQueryMetadata().
    */queryMetadata:{type:Object,notify:true,readOnly:false},/*
     * The data object to which the data source values can be bound.
     */data:{type:Object,notify:true,readOnly:false},/*
     * The transition information object provides information about the available state transition actions and sub actions for the current state of the record.<br>
     * If the data source type is BUSINESS_OBJECT for a single record, then this transition information is populated for that record.
     * If the data source type is BUSINESS_OBJECT or QUERY for multiple records, then this transition information is populated for a given record from that data source.
     */transitionInfo:{type:Object,notify:true,readOnly:false},/**
     * When using a triplat-query that does not paginate, this is 
     * populated with the filtered and sorted values.
     */filteredData:{type:Object,notify:true,readOnly:true},/**
     * Used to access the currently applied query if a 
     * triplat-query is used.
     */query:{type:Object,notify:true,readOnly:true,observer:"_handleQueryChanged"},/**
     * A flag to disable the retrieval of records.
     */disable:{type:Boolean,notify:false,readOnly:false,value:false,observer:"_onDisableChanged"},/**
     * A flag to prevent the data source from requesting data when the context or the query changes.
     */manual:{type:Boolean,value:false},/**
     * When using a paginated query, this flag will tell you whether 
     * the pages will append to the result or not.
     */appendPage:{type:Boolean,notify:true,readOnly:true},/**
     * This will give you the total number of results of a multiple records query data source.
     */queryTotalSize:{type:Number,notify:true,readOnly:true},/**
     * A flag that can be used to be notified when this data 
     * source is requesting data from the server.
     */loading:{type:Boolean,notify:true,readOnly:true,value:false},/**
     * Can be used to get the context path for this data source.
     */context:{type:String,notify:true,readOnly:true,observer:"_handleContextStringChanged"},/**
     * Can be used to get the parent path for this data source 
     * when an instance is specified.
     */parentContext:{type:String,notify:true,readOnly:true},/**
     * Use this flag to tell the data source you will providing 
     * your own application instance ID instead of using the ID 
     * configured in metadata.
     */ignoreAppContext:{type:Boolean,notify:false,readOnly:false},/**
     * Use this flag to indicate that you want server-side filtering
     * even though pagination is not being used.
     */forceServerFiltering:{type:Boolean,value:false},/** 
     * This flag should only be used when the query called by the data source is of type RESERVE.
     * Use this flag to indicate that you want both available and unavailable resources. 
     */reserveIncludeUnavailable:{type:Boolean,value:false},_serverFiltering:{type:Boolean,value:false},_container:{type:Object,notify:true,readOnly:false},_contexts:{type:Array,notify:true,readOnly:true},_instanceId:{type:Number},_hasInstance:{type:Boolean},_hasQuery:{type:Boolean,notify:false,readOnly:true},_isQueryPaginated:{type:Boolean,notify:false,readOnly:true},_registered:{type:Boolean,notify:false,readOnly:true,value:false},_offlineMode:{type:String},/**
     * Use this flag to indicate that you only want to retrieve the total number of results of a multiple records query data source without retrieving the data.
     */countOnly:{type:Boolean,notify:false,readOnly:false,value:false,observer:"_onCountOnlyChanged"}},observers:["_handleContextChanged(name, _contexts.*)","_handleDataChange(data.*)","_dsInfoChanged(queryTotalSize, data.length)"],listeners:{"triplat-ds-context-changed":"_handleChildDsContextChanged","triplat-ds-instance-changed":"_handleChildDsInstanceChanged"},_getBoFieldsMetaData:function _getBoFieldsMetaData(){var self=this;if(this.includeMetadata===true){var returnValue;var boFieldsAjax=this._boFieldsAjax;if(!boFieldsAjax){boFieldsAjax=document.createElement("iron-ajax");boFieldsAjax.url=this._contextPath+"/p/webapi/rest/v2/meta/dsfieldmeta";boFieldsAjax.addEventListener("response",function(resp){self._setMetadata(boFieldsAjax.lastResponse);});boFieldsAjax.addEventListener("error",function(err){console.log("Error occured while retrieving datasourse metadata");});boFieldsAjax.method="GET";boFieldsAjax.contentType="application/json";boFieldsAjax.generateRequest();}}},attached:function attached(){var node=this;var container=null;while(node){node=dom(node).parentNode;if(node&&node.nodeType!==Node.ELEMENT_NODE){node=node.host;}if(node&&node.isTriplatDsContainer===true){container=node;break;}}if(!container){console.warn("No triplat-ds container found.");console.warn(this);return;}this.set("_container",container);this.async(this._initContext);this.set("_serverFiltering",this.forceServerFiltering);var serverFilteringElement=dom(this).querySelector("triplat-query-page,triplat-query-scroll-page,triplat-query-resource-calendar, triplat-query-work-planner, triplat-query-reserve-context");if(serverFilteringElement){this.set("_serverFiltering",true);}this._getBoFieldsMetaData();},detached:function detached(){if(this._container&&this.context){this._unregister(this.context);}this.set("_context",null);},/**
  * Refreshes the data for this data source and returns a promise that can be used to be notified when the request is complete.
  *
  * @return {Promise} 
  */refresh:function refresh(){return new Promise(function(resolve,reject){this._container.refresh(this,this.context,resolve,reject,this._getOfflineMode());}.bind(this));},// Called by triplat-ds-container-behavior
_onGetComplete:function _onGetComplete(e){this.fire("ds-get-complete",e);},// Called by triplat-ds-container-behavior
_onGetError:function _onGetError(e){this.fire("ds-get-error",e);},/**
   * Get the query metadata for this data source and returns a promise that can be used to be notified when the request is complete.
   * 
   * @return {Promise}
   */getQueryMetadata:function getQueryMetadata(){return new Promise(function(resolve,reject){this._container.getQueryMetadata(this,this.context,resolve,reject,this._getOfflineMode());}.bind(this));},// Called by triplat-ds-container-behavior
_onGetQueryMetadataComplete:function _onGetQueryMetadataComplete(e){this.fire("ds-get-query-metadata-complete",e);},// Called by triplat-ds-container-behavior
_onGetQueryMetadataError:function _onGetQueryMetadataError(e){this.fire("ds-get-query-metadata-error",e);},/**
  * Creates a record for this data source and returns a promise that can be used to be notified when the request is complete. 
  * If wfParameters parameter is not provided in the createRecord(), then the return promise only includes the created record ID(s). Otherwise, 
  * the return promise includes the created record ID(s) and action information such as the action group, action, and workflow parameters map.
  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
  *
  * @param {Object | Array} data The data that will be created.
  * @param {TriPlatDs.RefreshType} refreshType (Optional) The refresh type used to refresh after the operation.
  * @param {String} actionGroup (Optional) The action group name for triggering an action with this operation.
  * @param {String} action (Optional) The action name for triggering an action with this operation.
  * @param {Map <String, Object>} wfParameters (Optional) The workflow parameters map for the key and value.
  * Each key-and-value pair represents a workflow parameter.
  * The key is the workflow parameter name.
  * The value can be a single instance ID, an array of instance IDs, an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
  * @return {Promise}
  */createRecord:function createRecord(data,refreshType,actionGroup,action,wfParameters,appContext){if(this._hasInstance){console.warn("createRecord is not suppored for instance triplat-ds elements.");return;}var wfParametersMap=this._getWFParametersMap(wfParameters);return new Promise(function(resolve,reject){this._container.createRecord(this,this.context,data,refreshType,actionGroup,action,resolve,reject,wfParametersMap,this._getOfflineMode(),appContext);}.bind(this));},// Called by triplat-ds-container-behavior
_onCreateComplete:function _onCreateComplete(detail){this.fire("ds-create-complete",detail);},// Called by triplat-ds-container-behavior
_onCreateError:function _onCreateError(e){this.fire("ds-create-error",e);},/**
  * Deletes a record for this data source and returns a promise that can be used to be notified when the request is complete. 
  * The return promise includes action information such as the action group, action, and workflow parameters map.
  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
  *
  * @param {Number | Array} instanceId The ID(s) to be deleted.
  * @param {TriPlatDs.RefreshType} refreshType (Optional) The refresh type used to refresh after the operation.
  * @param {String} actionGroup (Optional) The action group name for triggering an action with this operation.
  * @param {String} action (Optional) The action name for triggering an action with this operation.
  * @param {Map <String, Object>} wfParameters (Optional) The workflow parameters map for the key and value.
  * Each key-and-value pair represents a workflow parameter.
  * The key is the workflow parameter name.
  * The value can be a single instance ID, an array of instance IDs, an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
  * @return {Promise}
  */deleteRecord:function deleteRecord(instanceId,refreshType,actionGroup,action,wfParameters,appContext){if(this._hasInstance){console.warn("deleteRecord is not suppored for instance triplat-ds elements.");return;}var wfParametersMap=this._getWFParametersMap(wfParameters);return new Promise(function(resolve,reject){this._container.deleteRecord(this,this.context,instanceId,refreshType,actionGroup,action,resolve,reject,wfParametersMap,this._getOfflineMode(),appContext);}.bind(this));},// Called by triplat-ds-container-behavior
_onDeleteComplete:function _onDeleteComplete(e){this.fire("ds-delete-complete",e);},// Called by triplat-ds-container-behavior
_onDeleteError:function _onDeleteError(e){this.fire("ds-delete-error",e);},/**
  * Updates a record for this data source and returns a promise that can be used to be notified when the request is complete. 
  * The return promise includes action information such as the action group, action, and workflow parameters map.
  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
  * 
  * @param {Number | Array} instanceId (Optional) The ID(s) to be updated. Can be omitted if this is a single 
  * record datasource.
  * @param {TriPlatDs.RefreshType} refreshType (Optional) The refresh type used to refresh after the operation.
  * Defaults to TriPlat.RefreshType.NONE.
  * @param {String} actionGroup (Optional) The action group name for triggering an action with this operation.
  * @param {String} action (Optional) The action name for triggering an action with this operation.
  * @param {Map <String, Object>} wfParameters (Optional) The workflow parameters map for the key and value.
  * Each key-and-value pair represents a workflow parameter.
  * The key is the workflow parameter name.
  * The value can be a single instance ID, an array of instance IDs, an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
  * @return {Promise} 
  */updateRecord:function updateRecord(instanceId,refreshType,actionGroup,action,wfParameters,appContext){var args=this._getUpdateInstanceIdArguments(arguments);if(args==null){console.warn("Can't perform update as no Instance ID was found or supplied.");return;}var wfParametersMap=this._getWFParametersMap(args.wfParameters);return new Promise(function(resolve,reject){this._container.updateRecord(this,this.context,args.instanceId,args.refreshType,args.actionGroup,args.action,"_onUpdateComplete","_onUpdateError",false,/* not ID's only */resolve,reject,wfParametersMap,this._getOfflineMode(),appContext);}.bind(this));},// Called by triplat-ds-container-behavior
_onUpdateComplete:function _onUpdateComplete(e){this.fire("ds-update-complete",e);},// Called by triplat-ds-container-behavior
_onUpdateError:function _onUpdateError(e){this.fire("ds-update-error",e);},/**
  * Performs an action on one or more records in this data source and returns a promise that can be used to be notified when the request is complete. 
  * The return promise includes action information such as the action group, action, and workflow parameters map.
  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
  * 
  * @param {Number | Array} instanceId (Optional) The ID(s) to fire actions on. Can be omitted if this is a single 
  * record datasource.
  * @param {TriPlatDs.RefreshType} refreshType (Optional) The refresh type used to refresh after the operation.
  * Defaults to TriPlat.RefreshType.NONE.
  * @param {String} actionGroup (Optional) The action group name for triggering an action with this operation.
  * @param {String} action (Optional) The action name for triggering an action with this operation.
  * @param {Map <String, Object>} wfParameters (Optional) The workflow parameters map for the key and value.
  * Each key-and-value pair represents a workflow parameter.
  * The key is the workflow parameter name.
  * The value can be a single instance ID, an array of instance IDs, an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
  * @return {Promise} 
  */performAction:function performAction(instanceId,refreshType,actionGroup,action,wfParameters,appContext){var args=this._getUpdateInstanceIdArguments(arguments);if(args==null){console.warn("Can't perform action as no Instance ID was found or supplied.");return;}var wfParametersMap=this._getWFParametersMap(args.wfParameters);return new Promise(function(resolve,reject){this._container.updateRecord(this,this.context,args.instanceId,args.refreshType,args.actionGroup,args.action,"_onPerformActionComplete","_onPerformActionError",true,/* ID's only */resolve,reject,wfParametersMap,this._getOfflineMode(),appContext);}.bind(this));},// Called by triplat-ds-container-behavior
_onPerformActionComplete:function _onPerformActionComplete(e){this.fire("ds-perform-action-complete",e);},// Called by triplat-ds-container-behavior
_onPerformActionError:function _onPerformActionError(e){this.fire("ds-perform-action-error",e);},/**
  * Adds a record to this data source and returns a promise that can be used to be notified when the request is complete. 
  * The return promise includes action information such as the action group, action, and workflow parameters map.
  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
  * 
  * @param {Object | Array} data The records to be added to this data source.
  * @param {TriPlatDs.RefreshType} refreshType (Optional) The refresh type used to refresh after the operation.
  * @param {String} actionGroup (Optional) The action group name for triggering an action with this operation.
  * @param {String} action (Optional) The action name for triggering an action with this operation.
  * @param {Map <String, Object>} wfParameters (Optional) The workflow parameters map for the key and value.
  * Each key-and-value pair represents a workflow parameter.
  * The key is the workflow parameter name.
  * The value can be a single instance ID, an array of instance IDs, an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
  * @return {Promise} 		 
  */addRecord:function addRecord(data,refreshType,actionGroup,action,wfParameters,appContext){if(this._hasInstance){console.warn("addRecord is not suppored for instance triplat-ds elements.");return;}var wfParametersMap=this._getWFParametersMap(wfParameters);return new Promise(function(resolve,reject){this._container.addRecord(this,this.context,data,refreshType,actionGroup,action,resolve,reject,wfParametersMap,this._getOfflineMode(),appContext);}.bind(this));},// Called by triplat-ds-container-behavior
_onAddComplete:function _onAddComplete(e){this.fire("ds-add-complete",e);},// Called by triplat-ds-container-behavior
_onAddError:function _onAddError(e){this.fire("ds-add-error",e);},/**
  * Removes a record from this data source and returns a promise that can be used to be notified when the request is complete. 
  * The return promise includes action information such as the action group, action, and workflow parameters map.
  * The workflow parameters map includes parameters that are sent to the server (wfParameters) and parameters that are returned by the workflow (if any exist).
  * 
  * @param {Object | Array} data The records to be removed from this data source.
  * @param {TriPlatDs.RefreshType} refreshType (Optional) The refresh type used to refresh after the operation.
  * @param {String} actionGroup (Optional) The action group name for triggering an action with this operation.
  * @param {String} action (Optional) The action name for triggering an action with this operation.
  * @param {Map <String, Object>} wfParameters (Optional) The workflow parameters map for the key and value.
  * Each key-and-value pair represents a workflow parameter.
  * The key is the workflow parameter name.
  * The value can be a single instance ID, an array of instance IDs, an object with the '_id' property that holds the instance ID, or an array of objects that each have the '_id' property.
  * @return {Promise} 
  */removeRecord:function removeRecord(data,refreshType,actionGroup,action,wfParameters,appContext){if(this._hasInstance){console.warn("removeRecord is not suppored for instance triplat-ds elements.");return;}var wfParametersMap=this._getWFParametersMap(wfParameters);return new Promise(function(resolve,reject){this._container.removeRecord(this,this.context,data,refreshType,actionGroup,action,resolve,reject,wfParametersMap,this._getOfflineMode(),appContext);}.bind(this));},// Called by triplat-ds-container-behavior
_onRemoveComplete:function _onRemoveComplete(e){this.fire("ds-remove-complete",e);},// Called by triplat-ds-container-behavior
_onRemoveError:function _onRemoveError(e){this.fire("ds-remove-error",e);},_initContext:function _initContext(){var queryElement=dom(this).querySelector("triplat-query");if(queryElement){this._set_hasQuery(true);if(queryElement.query){this._setQuery(queryElement.query);}if(queryElement.appendPage){this._setAppendPage(true);}else{this._setAppendPage(false);}this.listen(queryElement,"triplat-query-changed","_handleQueryChangedEvent");}else{this._set_hasQuery(false);}var dsInstances=Array.from(dom(this).querySelectorAll("triplat-ds-instance"));var hasInstance;if(dsInstances.length==0){// means not an instance
hasInstance=false;}else if(dsInstances.length==1){hasInstance=true;this.set("_instanceId",dsInstances[0].instanceId);}else{hasInstance=false;console.warn("Only one triplat-ds-instance can be defined for a triplat-ds.");}this.set("_hasInstance",hasInstance);var index=0;var dsContexts=Array.from(dom(this).querySelectorAll("triplat-ds-context"));this._set_contexts(new Array(dsContexts.length));dsContexts.forEach(function(dsContext){dsContext.set("_index",index);index++;});},_handleQueryChangedEvent:function _handleQueryChangedEvent(e){this._set_isQueryPaginated(e.detail.paginated);this._setAppendPage(e.detail.append);this._setQuery(e.detail.query);},_handleQueryChanged:function _handleQueryChanged(query){this._doUpdateDsIfNeeded();this._applyQuery();},_handleChildDsContextChanged:function _handleChildDsContextChanged(e){e.stopPropagation();var dsContext=e.target;if(dsContext.contextId){//dsContext.contextId is an object and can hold a single contextId or an array of contextIds
var contextIds=this._getContextIdsFromObject(dsContext.contextId);var contextId=null;if(contextIds!=null&&contextIds.length>0){contextId=contextIds[0];if(this.context!=null&&this.context.indexOf(""+contextId)>-1){//set a different contextId from the array in order to generate a different url (context) as array values can changed
contextId=contextIds[contextIds.length-1];}}this._contexts[dsContext._index]={name:dsContext.name,contextId:contextId,contextIds:contextIds};this._handleContextChanged();}else{this._contexts[dsContext._index]=null;this._handleContextChanged();}},_handleChildDsInstanceChanged:function _handleChildDsInstanceChanged(e){e.stopPropagation();if(!this._hasInstance){return;}this.set("_instanceId",e.detail.instanceId);this._handleContextChanged();},_handleContextChanged:function _handleContextChanged(){if(!assertParametersAreDefined(arguments)){return;}var context="";if(!this.ignoreAppContext){context+="/"+this._container.modelAndView+"/"+this._container.instanceId;}for(var i=0;i<this._contexts.length;i++){var contextObject=this._contexts[i];if(contextObject==null||contextObject.contextId==null){this._setParentContext(null);this._setContext(null);this._setLoading(false);return;}var name=i==0&&this.ignoreAppContext?this._container.modelAndView:contextObject.name;context+="/"+name+"/"+contextObject.contextId;}context+="/"+this.name;if(this._hasInstance){if(this._instanceId==undefined||this._instanceId==null){this._setParentContext(null);this._setContext(null);this._setLoading(false);return;}this._setParentContext(context);context+="/"+this._instanceId;}this._setContext(context);},_handleContextStringChanged:function _handleContextStringChanged(newValue,oldValue){if(oldValue){this._unregister(oldValue);}if(newValue){this._doUpdateDsIfNeeded();}},_onDisableChanged:function _onDisableChanged(disable){if(disable){this._unregister(this.context);}else{this._doUpdateDsIfNeeded();}},_onCountOnlyChanged:function _onCountOnlyChanged(newValue,oldValue){if(this._container){this._container.updateCountOnly(this,this.context,newValue);if(!this.disable&&!this.manual){this.refresh();}}},_unregister:function _unregister(context){this._setDsDataInternal(null);if(this._container){this._container.unregisterContext(this,context);}this._set_registered(false);},_doUpdateDsIfNeeded:function _doUpdateDsIfNeeded(){if(this.context==undefined||this.context==null||this.context.length<=0){return;}if(this.disable){return;}if(!this._container){return;}if(this._hasQuery&&this._isQueryPaginated==undefined){return;}if(!this._hasQuery||!this._serverFiltering&&!this._isQueryPaginated){if(this._registered){// already register... so just skip
}else{this._container.registerContext(this,this.context,this.parentContext,this.manual,null,null,this._getOfflineMode(),this.countOnly);this._set_registered(true);}return;}if(!this.query){return;}if(!this._registered){this._container.registerContext(this,this.context,this.parentContext,this.manual,this.query,this.appendPage,this._getOfflineMode(),this.countOnly);this._set_registered(true);}else{this._container.updateQuery(this,this.context,this.query,this.manual,this._getOfflineMode());}},_applyQuery:function _applyQuery(){if(!this._serverFiltering&&(!this._hasQuery||this._isQueryPaginated)){return;}if(!this.data){if(this.filteredData){this._setFilteredData(null);}return;}if(!this.query){return;}this._setFilteredData(this.query.applyQuery(this.data));},// Called by triplat-ds-container-behavior
_setDsData:function _setDsData(data){this._setDsDataInternal(data);},_setDsTransitionInfo:function _setDsTransitionInfo(transitionInfo){this.set("transitionInfo",transitionInfo);},_setDsDataInternal:function _setDsDataInternal(data){this._internalSetData=true;this.set("data",data);this._internalSetData=false;},_setDsQueryMetadata:function _setDsQueryMetadata(data){this.set("queryMetadata",data);},_notifyDsDataAppended:function _notifyDsDataAppended(records){var data=this.get("data");if(records.length>0){this.notifySplices("data",[{index:data.length-records.length,removed:[],addedCount:records.length,object:data,type:'splice'}]);}},_handleDataChange:function _handleDataChange(change){if(!assertParametersAreDefined(arguments)){return;}this._applyQuery();if(change.path==="data"){// do nothing
if(!this._internalSetData){this._container.dsChanged(this,this.context,this.data);}}else if(change.path==="data.splices"){this._container.dataChanged(this,this.context,change);}else{this._container.dataChanged(this,this.context,change);}},_notifyDsDataChange:function _notifyDsDataChange(change){if(change.path==="data"){// do nothing
}else if(change.path==="data.splices"){this.notifyPath(change.path,this.get(change.path));}else{this.notifyPath(change.path,this.get(change.path));}},_canFindInstanceIdForUpdate:function _canFindInstanceIdForUpdate(){if(!this.data){return false;}if(Array.isArray(this.data)){return false;}return this._isNumber(this.data._id);},_isNumber:function _isNumber(value){var numberValue=parseInt(value);return!isNaN(numberValue);},_isNumberOrArray:function _isNumberOrArray(value){if(Array.isArray(value)){return true;}if(this._isNumber(value)){return true;}return false;},_getUpdateInstanceIdArguments:function _getUpdateInstanceIdArguments(args){var instanceId=this._getInstanceIdFromArgs(args);if(instanceId==null){return null;}var returnArgs={instanceId:instanceId};returnArgs.refreshType=this._getRefreshTypeFromArgs(args);var actionArgs=this._getActionArgsFromArgs(args);if(actionArgs.length>=2){returnArgs.actionGroup=actionArgs[0];returnArgs.action=actionArgs[1];returnArgs.wfParameters=actionArgs[2];}return returnArgs;},_getInstanceIdFromArgs:function _getInstanceIdFromArgs(args){if(args.length>0&&this._isNumberOrArray(args[0])){return args[0];}if(!this._canFindInstanceIdForUpdate()){return null;}return this.data._id;},_getRefreshTypeFromArgs:function _getRefreshTypeFromArgs(args){var refreshType=null;for(var i=0;i<args.length;i++){if(i>1){break;}if(babelHelpers.instanceof(args[i],TriPlatDs.RefreshType)){refreshType=args[i];break;}}return refreshType==null?TriPlatDs.RefreshType.NONE:refreshType;},_getActionArgsFromArgs:function _getActionArgsFromArgs(args){//The first two strings variables that can not be numeric are the actionGroup and action variables.
//The next variable after the action variable is the wfParameters. wfParameters variable is optional and can be string, numeric, array or object.
var actionArgs=[];for(var i=0;i<args.length;i++){if(actionArgs.length==2){//wfParameters variable
actionArgs.push(args[i]);break;}if(typeof args[i]!=="string"){continue;}if(this._isNumberOrArray(args[i])){continue;}actionArgs.push(args[i]);}return actionArgs;},_getWFParametersMap:function _getWFParametersMap(wfParameters){if(wfParameters==undefined||wfParameters==null){return null;}var keys=Object.keys(wfParameters);if(keys.length==0){return null;}var wfParametersMap={};for(var indexKey in keys){var paramName=keys[indexKey];var paramObject=wfParameters[paramName];if(paramObject==null){continue;}else if(Array.isArray(paramObject)){var numberValues=[];for(var indexValue in paramObject){var value=paramObject[indexValue];if(value==null){continue;}else if(babelHelpers.typeof(value)==='object'&&value._id!=null){var numberValue=parseInt(value._id);numberValues.push(numberValue);}else if(this._isNumber(value)){var numberValue=parseInt(value);numberValues.push(numberValue);}else{console.warn("Skip non integer workflow parameter value: "+value);}}if(numberValues.length>0){wfParametersMap[paramName]=numberValues;}}else if(babelHelpers.typeof(paramObject)==='object'&&paramObject._id!=null){var numberValue=parseInt(paramObject._id);wfParametersMap[paramName]=numberValue;}else if(this._isNumber(paramObject)){var numberValue=parseInt(paramObject);wfParametersMap[paramName]=numberValue;}else{console.warn("Skip mapping workflow parameter name '"+paramName+"' as its value '"+paramObject+"' is not an instance id integer.");}}return wfParametersMap;},_dsInfoChanged:function _dsInfoChanged(queryTotalSize,dataLength){if(!assertParametersAreDefined(arguments)){return;}this.notifyDsInfoChanged({totalSize:queryTotalSize,size:dataLength});},_getContextIdsFromObject:function _getContextIdsFromObject(contextIdObject){if(contextIdObject==undefined||contextIdObject==null){return null;}var contextIds=[];var single=!Array.isArray(contextIdObject);if(single){if(babelHelpers.typeof(contextIdObject)==='object'&&contextIdObject._id!=null){contextIds.push(parseInt(contextIdObject._id));}else if(this._isNumber(contextIdObject)){contextIds.push(parseInt(contextIdObject));}else{console.warn("Non numeric context id value: "+contextId);}}else{for(var indexContext in contextIdObject){var contextId=contextIdObject[indexContext];if(contextId==null){continue;}else if(babelHelpers.typeof(contextId)==='object'&&contextId._id!=null){contextIds.push(parseInt(contextId._id));}else if(this._isNumber(contextId)){contextIds.push(parseInt(contextId));}else{console.warn("Skip non numeric context id value: "+contextId);}}}return contextIds;},//Called by triplat-ds-offline
_getHierarchyPath:function _getHierarchyPath(){var hierarchyPath="";var dsContexts=Array.from(dom(this).querySelectorAll("triplat-ds-context"));for(var i=0;i<dsContexts.length;i++){var contextObject=dsContexts[i];hierarchyPath+="/"+contextObject.name;}hierarchyPath+="/"+this.name;return hierarchyPath;},//Called by triplat-ds-offline
_getModelAndView:function _getModelAndView(){return this._container.modelAndView;},//Called by triplat-ds-offline
_getDSContext:function _getDSContext(instanceId){var context="/"+this._container.modelAndView+"/"+this._container.instanceId;context+=this._getDSPath();if(instanceId!=null){context+="/"+instanceId;}return context;},//Called by triplat-ds-offline
_getDSPath:function _getDSPath(){var dsPath="";for(var i=0;i<this._contexts.length;i++){var contextObject=this._contexts[i];if(contextObject==null||contextObject.contextId==null){return null;}var name=i==0&&this.ignoreAppContext?this._container.modelAndView:contextObject.name;dsPath+="/"+name+"/"+contextObject.contextId;}dsPath+="/"+this.name;return dsPath;},_getOfflineMode:function _getOfflineMode(){if(!this._offlineMode){var dsOfflineElement=this.queryEffectiveChildren("triplat-ds-offline");if(dsOfflineElement){this._offlineMode=dsOfflineElement.mode;}}return this._offlineMode;}});var triplatDs={__proto__:null,TriPlatDs:TriPlatDs};/* IBM Confidential‌ - OCO Source Materials‌ - (C) COPYRIGHT IBM CORP. 2019 - The source code for this program is not published or otherwise‌ divested of its trade secrets, irrespective of what has been‌ deposited with the U.S. Copyright Office. */_exports.$triplatDs=triplatDs;function isEmptyArray(array){return!array||!Array.isArray(array)||!array.length||array.length===0;}function isEmptyObj(obj){return!obj||Object.keys(obj).length===0&&obj.constructor===Object;}function isIEorEdgeBrowser(){return /Edge|Trident/.test(navigator.userAgent);}function isSafariBrowser(){return /Mac OS X.+?AppleWebKit/.test(navigator.userAgent)&&navigator.userAgent.indexOf("Chrome")<0;}function capitalizeString(string){return string&&string[0].toUpperCase()+string.slice(1);}function toLowerCase(str){return str!=null&&str.toLowerCase?str.toLowerCase():"";}var triutilsUtilities={__proto__:null,isEmptyArray:isEmptyArray,isEmptyObj:isEmptyObj,isIEorEdgeBrowser:isIEorEdgeBrowser,isSafariBrowser:isSafariBrowser,capitalizeString:capitalizeString,toLowerCase:toLowerCase};_exports.$triutilsUtilities=triutilsUtilities;var TriplatRequiresWebContextIdBehavior={properties:{/**
     * The web context ID for communicating with the server.
     */webContextId:{type:String,notify:true,observer:"_webContextIdChanged"},/**
     * Set this property to prevent the web context ID from being looked up with the 
     * element is attached.
     */preventWebContextIdLookupOnAttach:{type:Boolean,value:false}},/**
   * Fired when the webContextId is changed. The detail of the even contains the webContextId.
   *
   * @event triplat-web-context-id-changed
   */listeners:{"triplat-ds-web-context-id-parent-found":"_foundWebContextIdParent"},attached:function attached(){if(this.preventWebContextIdLookupOnAttach){return;}this.lookupWebContextId();},/**
   * Looks up the web context ID and set it to the webContextId property.
   */lookupWebContextId:function lookupWebContextId(){this.fire("triplat-ds-web-context-id-search",{sourceElement:this});},_foundWebContextIdParent:function _foundWebContextIdParent(e){var parentEl=e.detail;parentEl.getWebContextId().then(function(webContextId){this.set("webContextId",webContextId);}.bind(this));},_webContextIdChanged:function _webContextIdChanged(webContextId){this.fire("triplat-web-context-id-changed",webContextId);}};_exports.TriplatRequiresWebContextIdBehavior=TriplatRequiresWebContextIdBehavior;var triplatRequiresWebContextIdBehavior={__proto__:null,TriplatRequiresWebContextIdBehavior:TriplatRequiresWebContextIdBehavior};_exports.$triplatRequiresWebContextIdBehavior=triplatRequiresWebContextIdBehavior;Polymer({_template:html(_templateObject38_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-ds-core",behaviors:[TriplatRequiresWebContextIdBehavior],properties:{/**
     * The context of the data source request.  The format should be:
     * 
     *      /{modelAndViewName}/{instanceId}/{dataSourceName}
     *      or
     *      /{modelAndViewName}/{instanceId}/{dataSourceName}
     *                                      /{recordId}
     * 
     * The {dataSourceName}/{recordId} can repeat for nested data sources. This value 
     * must be set before making a request.
     */context:{type:String},/**
     * The type of request being made. Possible values are:
     * 
     *      GET | CREATE | DELETE | SAVE | ADD | REMOVE
     * 
     * This value must be set before making a request.
     */type:{type:String},/**
     * Whether to retrieve the values of the data source on the response of the request.
     */refresh:{type:Boolean},/**
     * The action name if an action should be performed with the request.
     */action:{type:String},/**
     * The action group name if an action should be performed with the request.
     */actionGroup:{type:String},/**
     * If the request needs to have a query (filters, pagination, sorting), set this 
     * object with the query details. The triplat-query component can be used to build up 
     * this object. Example of the query object:
     *
     *      {
     *         page: {
     *            from: 0,
     *            size: 100
     *         },
     *         filters: [
     *            {
     *               name: "firstName",
     *               operator: "contains",
     *               value: "foo"
     *            },
     *            {operator: "and"},
     *            {operator: "open parenthesis"},
     *            {
     *               name: "lastName",
     *               operator: "contains",
     *               value: "foo"
     *            },
     *            {operator: "or"},
     *            {
     *               name: "lastName",
     *               operator: "contains",
     *               value: "bar"
     *            },
     *            {operator: "close parenthesis"}
     *         ],
     *         sorts: [
     *            {name: "lastName", desc: false},
     *            {name: "firstName", desc: false}
     *         ]
     *      }
     */query:{type:Object},/**
     * The data that will be sent to the server as part of the request. This will be 
     * different for each request type. For GET requests, this property is ignored.
     * 
     * For CREATE, DELETE, SAVE and ADD requests, this property can be either an array of record 
     * objects or just a single data object. It is important that the record ID is set as 
     * "_id" in each record object.
     */dataOut:{type:Object},/**
     * An object that will be put on each request made. This allows the application to 
     * put a context on the request. In some cases when the request is sent in a small window of 
     * time, the response order may not be the same as the request order. This property 
     * comes in handy so you can put an ID on the request that will show up in the response.
     */appContext:{type:Object},/**
     * Whether to save the response records to the offline cache. This property is only effective
     * when the current application is registered for offline support using the <b>triplat-offline-manager</b> component.
     *
     * <b style="color:red;">Experimental:</b> This is an experimental property and is not yet supported. The API may change.
     */cacheResponse:{type:Boolean,value:false}},/**
  * Fired when a successful response is received. The detail of the event object is:
  * 
  *      {
  *         // The data payload of the response (records)
  *         data: Object | Array,
  * 
  *         // The iron-ajax response object
  *         response: Object,
  * 
  *         // The request params used in the request
  *         requestParams: Object
  *      }
  *
  * @event triplat-ds-core-response
  */ /**
      * Fired when a request results in an error. The detail of the event object is:
      * 
      *      {
      *         // The HTTP status of the response
      *         status: String,
      *      
      *         // The request params used in the request
      *         requestParams: Object
      *      } 
      *
      * @event triplat-ds-core-error
      */ /**
         * Generates the request and sends it to the server.
         * 
         * @return {Promise} The resolve value will be the same as the detail of the response 
         *                   event. The reject value will be the same as the detail of the error 
         *                   event.
         */generateRequest:function generateRequest(){var requestParams={webContextId:this.webContextId,context:this.context,type:this.type,refresh:this.refresh,action:this.action,actionGroup:this.actionGroup,query:this.query,dataOut:this.dataOut,appContext:this.appContext};return this._doRequest(requestParams);},_doRequest:function _doRequest(requestParams){return new Promise(function(resolve,reject){this._doRequestInPromise(requestParams,resolve,reject);}.bind(this));},_doRequestInPromise:function _doRequestInPromise(requestParams,resolve,reject){if(!this._validateParams(requestParams)){reject();return;}var ajax=this.$.ajax;ajax.method=this._getMethod(requestParams);ajax.url=this._getRequestUrl(requestParams);ajax.params=this._getParams(requestParams);ajax.headers=this._getHeaders(requestParams);ajax.contentType=this._getContentType(requestParams);ajax.body=this._getBody(requestParams);var request=ajax.generateRequest();request._triplatDsCore={resolve:resolve,reject:reject,requestParams:requestParams};},_onResponse:function _onResponse(e){var detail=e.detail;var triplatDsCore=detail._triplatDsCore;var resolve=triplatDsCore.resolve;var requestParams=triplatDsCore.requestParams;var response=detail.response;var data=null;if(response.data){data=response.data;}else if(response.refresh){data=response.refresh.data;}var result={data:data,response:response,requestParams:requestParams};resolve(result);this.fire("triplat-ds-core-response",result);},_onError:function _onError(e){var detail=e.detail;var request=detail.request;var triplatDsCore=request._triplatDsCore;var requestParams=triplatDsCore.requestParams;var reject=triplatDsCore.reject;var result={status:request.status,requestParams:requestParams};reject(result);this.fire("triplat-ds-core-error",result);},_validateParams:function _validateParams(requestParams){if(!requestParams.type){console.warn("triplat-ds-core requires a type. Possible values:");console.log("     GET");console.log("     CREATE");console.log("     DELETE");console.log("     SAVE");console.log("     ADD");console.log("     REMOVE");console.error("triplat-ds-core requires a type");return false;}if(!requestParams.context){console.error("triplat-ds-core context param is requried.");return false;}// TODO do validation for specifc types
return true;},_getMethod:function _getMethod(requestParams){var method;switch(requestParams.type){case"GET":if(requestParams.query){method="POST";}else{method="GET";}break;case"SAVE":case"ADD":case"REMOVE":method="PUT";break;case"CREATE":case"DELETE":method="POST";break;}return method;},_getRequestUrl:function _getRequestUrl(requestParams){return this._getUrl("/p/webapi/rest/v2"+requestParams.context);},_getParams:function _getParams(requestParams){var params={};switch(requestParams.type){case"CREATE":case"SAVE":case"ADD":case"REMOVE":case"DELETE":if(requestParams.actionGroup){params.actionGroup=requestParams.actionGroup;}if(requestParams.action){params.action=requestParams.action;}if(requestParams.refresh){params.refresh="true";}break;}switch(requestParams.type){case"GET":if(requestParams.query){params.query="true";}break;case"ADD":params.type="add";break;case"REMOVE":params.type="remove";break;case"DELETE":params.method="delete";break;}return params;},_getHeaders:function _getHeaders(requestParams){var headers={"triWebContextId":requestParams.webContextId};if(this.cacheResponse){headers["tri-save-on-cache"]="true";}return headers;},_getContentType:function _getContentType(requestParams){var contentType="";switch(requestParams.type){case"GET":if(!requestParams.query){break;}case"CREATE":case"SAVE":case"ADD":case"REMOVE":case"DELETE":contentType="application/json";break;}return contentType;},_getBody:function _getBody(requestParams){var body=null;switch(requestParams.type){case"GET":if(requestParams.query){body=JSON.stringify(requestParams.query);}break;case"CREATE":case"DELETE":case"SAVE":case"ADD":case"REMOVE":var bodyObject={data:requestParams.dataOut};if(requestParams.query){bodyObject.query=requestParams.query;}body=JSON.stringify(bodyObject);break;}return body;},_getUrl:function _getUrl(url){return this.$.url.getUrl(url);}});var tristylesFonts="\n<dom-module id=\"tristyles-fonts\">\n\t<template>\n\t\t<style>\n\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tsrc: url('IBMPlex/IBMPlexSans-Light.woff2') format('woff2'),\n\t\t\t\t\t url('IBMPlex/IBMPlexSans-Light.woff') format('woff');\n\t\t\t\tfont-weight: 100;\n\t\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tsrc: url('IBMPlex/IBMPlexSans-Regular.woff2') format('woff2'),\n\t\t\t\t\t url('IBMPlex/IBMPlexSans-Regular.woff') format('woff');\n\t\t\t\tfont-weight: 400;\n\t\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tsrc: url('IBMPlex/IBMPlexSans-Medium.woff2') format('woff2'),\n\t\t\t\t\t url('IBMPlex/IBMPlexSans-Medium.woff') format('woff');\n\t\t\t\tfont-weight: 500;\n\t\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: 'IBM Plex Sans';\n\t\t\t\tsrc: url('IBMPlex/IBMPlexSans-SemiBold.woff2') format('woff2'),\n\t\t\t\t\t url('IBMPlex/IBMPlexSans-SemiBold.woff') format('woff');\n\t\t\t\tfont-weight: 900;\n\t\t\t}\n\t\t\n\t\t</style>\n\t</template>\n</dom-module>\n";addDomStyleModule(tristylesFonts,"triplat-theme/triplat-theme.js");var tristylesTheme="\n<dom-module id=\"tristyles-theme\">\n\t<template>\n\t\t<style>\n\t\t\t/*\n\t\t\t* Overrides for Work Task Portal\n\t\t\t*/\n\t\t\ttricomp-portal-services {\n\t\t\t\tbackground-color: #282828;\n\t\t\t}\n\n\t\t\tdiv.service-item-container:hover {\n\t\t\t\tbackground-color: rgb(61,61,61);\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Overrides for Work Planner\n\t\t\t */\n\t\t\ttricomp-task-status-tab-item {\n\t\t\t\tborder-color: var(--tri-primary-dark-color);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-gray-80);\n\t\t\t}\n\n\t\t\ttricomp-task-status-tab-item:hover {\n\t\t\t\tbackground-color: #e5e5e5;\n\t\t\t\tcolor: var(--ibm-gray-100);\n\t\t\t}\n\n\t\t\ttricomp-task-status-tab-item.iron-selected {\n\t\t\t\tbackground-color: var(--tri-primary-dark-color);\n\t\t\t\tcolor: white;\n\t\t\t}\n\n\t\t\tdiv.name-initials {\n\t\t\t\tbackground-color: var(--ibm-magenta-70);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Overrides for Work Task\n\t\t\t */\n\t\t\t.filter-optional > .toggle, .status > .toggle {\n\t\t\t\tmargin-top: -10px;\n\t\t\t\t--paper-toggle-button-unchecked-bar: {\n\t\t\t\t\topacity: 1;\n\t\t\t\t\tbackground-color: var(--ibm-gray-50);\n\t\t\t\t\tborder-radius: 0.9375rem;\n\t\t\t\t\twidth: 48px;\n\t\t\t\t\theight: 24px;\n\t\t\t\t\tmargin: 0px;\n\t\t\t\t};\n\t\t\t\t--paper-toggle-button-checked-bar: {\n\t\t\t\t\topacity: 1;\n\t\t\t\t\tbackground-color: var(--ibm-green-50);\n\t\t\t\t}\n\t\t\t\t--paper-toggle-button-checked-button-color: white;\n\t\t\t\t--paper-toggle-button-unchecked-button-color: var(--ibm-gray-20);\n\t\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\t\tbackground-color: var(--ibm-gray-20);\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: 3px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbox-shadow: none;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host([dir=\"rtl\"]) .filter-optional > .toggle, :host([dir=\"rtl\"]) .status > .toggle {\n\t\t\t\tmargin-top: -10px;\n\t\t\t\t--paper-toggle-button-unchecked-bar: {\n\t\t\t\t\topacity: 1;\n\t\t\t\t\tbackground-color: var(--ibm-gray-50);\n\t\t\t\t\tborder-radius: 0.9375rem;\n\t\t\t\t\twidth: 48px;\n\t\t\t\t\theight: 24px;\n\t\t\t\t\tmargin: 0px;\n\t\t\t\t};\n\t\t\t\t--paper-toggle-button-checked-bar: {\n\t\t\t\t\topacity: 1;\n\t\t\t\t\tbackground-color: var(--ibm-green-50);\n\t\t\t\t}\n\t\t\t\t--paper-toggle-button-checked-button-color: white;\n\t\t\t\t--paper-toggle-button-unchecked-button-color: var(--ibm-gray-20);\n\t\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\t\tbackground-color: var(--ibm-gray-20);\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: -9px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbox-shadow: none;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t.filter-optional > .toggle[disabled]:not([checked]), \n\t\t\t.status > .toggle[disabled]:not([checked]) {\n\t\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: 3px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tbackground-color: var(--ibm-cool-neutral-2) !important;\n\t\t\t\t\tborder: none;\n\t\t\t\t\topacity: 1;\n\t\t\t\t\tbox-shadow: none;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host([dir=\"rtl\"]) .filter-optional > .toggle[disabled]:not([checked]), \n\t\t\t:host([dir=\"rtl\"]) .status > .toggle[disabled]:not([checked]) {\n\t\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: -9px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tbackground-color: var(--ibm-cool-neutral-2) !important;\n\t\t\t\t\tborder: none;\n\t\t\t\t\topacity: 1;\n\t\t\t\t\tbox-shadow: none;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t.filter-optional > .toggle[disabled][checked],\n\t\t\t.status > .toggle[disabled][checked] {\n\t\t\t\t--paper-toggle-button-checked-button-color: var(--ibm-cool-neutral-2);\n\t\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: 3px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tbackground-color: var(--ibm-cool-neutral-2) !important;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbox-shadow: none;\n\t\t\t\t\t-webkit-transform: translate(24px, 0) !important; \n\t\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\t\tbackground-image: url(\"images/ready-disabled.svg\");\n\t\t\t\t\tbackground-size: contain;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host([dir=\"rtl\"]) .filter-optional > .toggle[disabled][checked],\n\t\t\t:host([dir=\"rtl\"]) .status > .toggle[disabled][checked] {\n\t\t\t\t--paper-toggle-button-checked-button-color: var(--ibm-cool-neutral-2);\n\t\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: -9px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tbackground-color: var(--ibm-cool-neutral-2) !important;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbox-shadow: none;\n\t\t\t\t\t-webkit-transform: translate(24px, 0) !important; \n\t\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\t\tbackground-image: url(\"images/ready-disabled.svg\");\n\t\t\t\t\tbackground-size: contain;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t.filter-optional > .hide-toggle {\n\t\t\t\t--paper-toggle-button-checked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: 3px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbackground-color: white !important;\n\t\t\t\t\t-webkit-transform: translate(24px, 0) !important; \n\t\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host([dir=\"rtl\"]) .filter-optional > .hide-toggle {\n\t\t\t\t--paper-toggle-button-checked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: -9px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbackground-color: white !important;\n\t\t\t\t\t-webkit-transform: translate(24px, 0) !important; \n\t\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t.status > .toggle-step {\n\t\t\t\t--paper-toggle-button-checked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: 3px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbackground-color: var(--ibm-green-50) !important;\n\t\t\t\t\t-webkit-transform: translate(24px, 0) !important; \n\t\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\t\tbackground-image: url(\"images/ready.svg\");\n\t\t\t\t\tbackground-size: contain;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host([dir=\"rtl\"]) .status > .toggle-step {\n\t\t\t\t--paper-toggle-button-checked-button: {\n\t\t\t\t\ttop: 3px;\n\t\t\t\t\tleft: -9px;\n\t\t\t\t\theight: 18px;\n\t\t\t\t\twidth: 18px;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbackground-color: var(--ibm-green-50) !important;\n\t\t\t\t\t-webkit-transform: translate(24px, 0) !important; \n\t\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\t\tbackground-image: url(\"images/ready.svg\");\n\t\t\t\t\tbackground-size: contain;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host(:not([small-layout])) tricomp-task-list-filter-item {\n\t\t\t\tcolor: var(--ibm-gray-80);\n\t\t\t\tborder-color: var(--tri-primary-dark-color);\n\t\t\t}\n\n\t\t\t:host(:not([small-layout])) tricomp-task-list-filter-item:hover {\n\t\t\t\tbackground-color: #e5e5e5;\n\t\t\t\tcolor: var(--ibm-gray-100);\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t:host(:not([small-layout])) tricomp-task-list-filter-item.iron-selected {\n\t\t\t\tbackground-color: var(--tri-primary-dark-color);\n\t\t\t\tcolor: white;\n\t\t\t}\n\n\t\t\t.container > .filter-bar paper-radio-button {\n\t\t\t\t--paper-radio-button-checked-color: var(--tri-primary-dark-color);\n\t\t\t\t--paper-radio-button-unchecked-color: var(--tri-primary-dark-color);\n\t\t\t\t--paper-radio-button-label-color: var(--tri-primary-dark-color);\n\t\t\t}\n\n\t\t\t/* \n\t\t\t * overrides triplat-ds-search\n\t\t\t */\n\t\t\t.footer-container .footer-loading-text, .footer-container .footer-loading-dots, .footer-container .footer-selected-text {\n\t\t\t\tcolor: white;\n\t\t\t}\n\t\t\t\n\t\t\t#main > .filters > .single {\n\t\t\t\tborder-bottom-color: var(--ibm-gray-40);\n\t\t\t}\n\n\t\t\tgraphic-actions[checked] {\n\t\t\t\tbackground-color: var(--ibm-blue-60);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* a (link tag) / class=\"tri-link\"\n\t\t\t*/\n\t\t\t a:not(.tri-disable-theme) {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t}\n\t\t\t .tri-link {\n\t\t\t\tcursor: pointer;\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t}\n\t\t\t a:not(.tri-disable-theme).underline,\n\t\t\t .tri-link.underline {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t\t a:not(.tri-disable-theme):hover,\n\t\t\t .tri-link:hover {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t\t/* footer */\n\t\t\t a:not(.tri-disable-theme).footer,\n\t\t\t a:not(.tri-disable-theme)[footer],\n\t\t\t .tri-link.footer,\n\t\t\t .tri-link[footer] {\n\t\t\t\tcolor: var(--ibm-blue-30);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* class=\"tri-h#\" / class=\"tri-fine-print\"\n\t\t\t* (<h#> and <small> elements are avoided here, since these elements have preset browser settings that we don't want)\n\t\t\t*/\n\t\t\t .tri-h1 {\n\t\t\t\tfont-size: 36px;\n\t\t\t\tfont-weight: 100;\n\t\t\t}\n\t\t\t .tri-h2 {\n\t\t\t\tfont-size: 22px;\n\t\t\t}\n\t\t\t .tri-h3 {\n\t\t\t\tfont-size: 18px;\n\t\t\t}\n\t\t\t .tri-fine-print {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tcolor: var(--ibm-gray-100);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* iron-icon\n\t\t\t*/\n\t\t\t/* primary */\n\t\t\t iron-icon:not(.tri-disable-theme)[primary],\n\t\t\t iron-icon:not(.tri-disable-theme).primary {\n\t\t\t\tcolor: var(--tri-primary-content-color);\n\t\t\t}\n\t\t\t/* secondary */\n\t\t\t iron-icon:not(.tri-disable-theme)[secondary],\n\t\t\t iron-icon:not(.tri-disable-theme).secondary {\n\t\t\t\tcolor: var(--tri-secondary-color);\n\t\t\t}\n\t\t\t/* info */\n\t\t\t iron-icon:not(.tri-disable-theme)[info],\n\t\t\t iron-icon:not(.tri-disable-theme).info {\n\t\t\t\tcolor: var(--tri-info-color);\n\t\t\t}\n\t\t\t/* success */\n\t\t\t iron-icon:not(.tri-disable-theme)[success],\n\t\t\t iron-icon:not(.tri-disable-theme).success {\n\t\t\t\tcolor: var(--tri-success-color);\n\t\t\t}\n\t\t\t/* warning */\n\t\t\t iron-icon:not(.tri-disable-theme)[warning],\n\t\t\t iron-icon:not(.tri-disable-theme).warning {\n\t\t\t\tcolor: var(--tri-warning-color);\n\t\t\t}\n\t\t\t/* major-warning */\n\t\t\t iron-icon:not(.tri-disable-theme)[major-warning],\n\t\t\t iron-icon:not(.tri-disable-theme).major-warning {\n\t\t\t\tcolor: var(--tri-major-warning-color);\n\t\t\t}\n\t\t\t/* danger */\n\t\t\t iron-icon:not(.tri-disable-theme)[danger],\n\t\t\t iron-icon:not(.tri-disable-theme).danger {\n\t\t\t\tcolor: var(--tri-danger-color);\n\t\t\t}\n\t\t\t/* error */\n\t\t\t iron-icon:not(.tri-disable-theme)[error],\n\t\t\t iron-icon:not(.tri-disable-theme).error {\n\t\t\t\tcolor: var(--tri-error-color);\n\t\t\t}\n\t\t\t/* footer */\n\t\t\t iron-icon:not(.tri-disable-theme)[footer],\n\t\t\t iron-icon:not(.tri-disable-theme).footer {\n\t\t\t\tcolor: var(--tri-footer-color);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* label\n\t\t\t*/\n\t\t\t label:not(.tri-disable-theme) {\n\t\t\t\tcolor: var(--tri-primary-content-label-color);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* paper-button\n\t\t\t*/\n\t\t\t/* default */\n\t\t\t paper-button:not(.tri-disable-theme) {\n\t\t\t\t@apply --layout-vertical;\n\t\t\t\t@apply --layout-center-center;\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t\tfont-weight: 400;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\ttext-align: center;\n\t\t\t\ttext-transform: none;\n\t\t\t\twidth: auto;\n\t\t\t\tmargin: 0 5px;\n\t\t\t\t@apply --tri-primary-button;\n\t\t\t\t\n\t\t\t}\n\t\t\t/* default hover */\n\t\t\t paper-button:not(.tri-disable-theme):hover {\n\t\t\t\t@apply --tri-primary-button-hover;\n\t\t\t}\n\t\t\t/* default pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[pressed] {\n\t\t\t\t@apply --tri-primary-button-press;\n\t\t\t}\n\t\t\t/* primary-outline */\n\t\t\tpaper-button:not(.tri-disable-theme)[primary-outline],\n\t\t\tpaper-button:not(.tri-disable-theme).primary-outline {\n\t\t\t\t@apply(--tri-primary-outline-button);\n\t\t\t}\n\t\t\t/* primary-outline hover */\n\t\t\tpaper-button:not(.tri-disable-theme)[primary-outline]:hover,\n\t\t\tpaper-button:not(.tri-disable-theme).primary-outline:hover {\n\t\t\t\t@apply(--tri-primary-outline-button-hover);\n\t\t\t}\n\t\t\t/* primary-outline pressed */\n\t\t\tpaper-button:not(.tri-disable-theme)[primary-outline][pressed],\n\t\t\tpaper-button:not(.tri-disable-theme).primary-outline[pressed] {\n\t\t\t\t@apply(--tri-primary-outline-button-press);\n\t\t\t}\n\t\t\t/* secondary */\n\t\t\t paper-button:not(.tri-disable-theme)[secondary],\n\t\t\t paper-button:not(.tri-disable-theme).secondary {\n\t\t\t\t@apply --tri-secondary-button;\n\t\t\t}\n\t\t\t/* secondary hover */\n\t\t\t paper-button:not(.tri-disable-theme)[secondary]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).secondary:hover {\n\t\t\t\t@apply --tri-secondary-button-hover;\n\t\t\t}\n\t\t\t/* secondary pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[secondary][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).secondary[pressed] {\n\t\t\t\t@apply --tri-secondary-button-press;\n\t\t\t}\n\t\t\t/* secondary disabled */\n\t\t\t paper-button:not(.tri-disable-theme)[secondary][disabled],\n\t\t\t paper-button:not(.tri-disable-theme).secondary[disabled] {\n\t\t\t\t@apply --tri-secondary-button-disabled;\n\t\t\t}\n\t\t\t/* info */\n\t\t\t paper-button:not(.tri-disable-theme)[info],\n\t\t\t paper-button:not(.tri-disable-theme).info {\n\t\t\t\t@apply --tri-info-button;\n\t\t\t}\n\t\t\t/* info hover */\n\t\t\t paper-button:not(.tri-disable-theme)[info]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).info:hover {\n\t\t\t\t@apply --tri-info-button-hover;\n\t\t\t}\n\t\t\t/* info pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[info][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).info[pressed] {\n\t\t\t\t@apply --tri-info-button-press;\n\t\t\t}\n\t\t\t/* info-outline */\n\t\t\t paper-button:not(.tri-disable-theme)[info-outline],\n\t\t\t paper-button:not(.tri-disable-theme).info-outline {\n\t\t\t\t@apply --tri-info-outline-button;\n\t\t\t}\n\t\t\t/* info-outline hover */\n\t\t\t paper-button:not(.tri-disable-theme)[info-outline]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).info-outline:hover {\n\t\t\t\t@apply --tri-info-outline-button-hover;\n\t\t\t}\n\t\t\t/* info-outline pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[info-outline][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).info-outline[pressed] {\n\t\t\t\t@apply --tri-info-outline-button-press;\n\t\t\t}\n\t\t\t/* success */\n\t\t\t paper-button:not(.tri-disable-theme)[success],\n\t\t\t paper-button:not(.tri-disable-theme).success {\n\t\t\t\t@apply --tri-success-button;\n\t\t\t}\n\t\t\t/* success hover */\n\t\t\t paper-button:not(.tri-disable-theme)[success]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).success:hover {\n\t\t\t\t@apply --tri-success-button-hover;\n\t\t\t}\n\t\t\t/* success pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[success][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).success[pressed] {\n\t\t\t\t@apply --tri-success-button-press;\n\t\t\t}\n\t\t\t/* success-outline */\n\t\t\t paper-button:not(.tri-disable-theme)[success-outline],\n\t\t\t paper-button:not(.tri-disable-theme).success-outline {\n\t\t\t\t@apply --tri-success-outline-button;\n\t\t\t}\n\t\t\t/* success-outline hover */\n\t\t\t paper-button:not(.tri-disable-theme)[success-outline]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).success-outline:hover {\n\t\t\t\t@apply --tri-success-outline-button-hover;\n\t\t\t}\n\t\t\t/* success-outline pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[success-outline][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).success-outline[pressed] {\n\t\t\t\t@apply --tri-success-outline-button-press;\n\t\t\t}\n\t\t\t/* warning */\n\t\t\t paper-button:not(.tri-disable-theme)[warning],\n\t\t\t paper-button:not(.tri-disable-theme).warning {\n\t\t\t\t@apply --tri-warning-button;\n\t\t\t}\n\t\t\t/* warning hover */\n\t\t\t paper-button:not(.tri-disable-theme)[warning]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).warning:hover {\n\t\t\t\t@apply --tri-warning-button-hover;\n\t\t\t}\n\t\t\t/* warning pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[warning][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).warning[pressed] {\n\t\t\t\t@apply --tri-warning-button-press;\n\t\t\t}\n\t\t\t/* warning-outline */\n\t\t\t paper-button:not(.tri-disable-theme)[warning-outline],\n\t\t\t paper-button:not(.tri-disable-theme).warning-outline {\n\t\t\t\t@apply --tri-warning-outline-button;\n\t\t\t}\n\t\t\t/* warning-outline hover */\n\t\t\t paper-button:not(.tri-disable-theme)[warning-outline]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).warning-outline:hover {\n\t\t\t\t@apply --tri-warning-outline-button-hover;\n\t\t\t}\n\t\t\t/* warning-outline pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[warning-outline][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).warning-outline[pressed] {\n\t\t\t\t@apply --tri-warning-outline-button-press;\n\t\t\t}\n\t\t\t/* major-warning */\n\t\t\t paper-button:not(.tri-disable-theme)[major-warning],\n\t\t\t paper-button:not(.tri-disable-theme).major-warning {\n\t\t\t\t@apply --tri-major-warning-button;\n\t\t\t}\n\t\t\t/* major-warning hover */\n\t\t\t paper-button:not(.tri-disable-theme)[major-warning]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).major-warning:hover {\n\t\t\t\t@apply --tri-major-warning-button-hover;\n\t\t\t}\n\t\t\t/* major-warning pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[major-warning][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).major-warning[pressed] {\n\t\t\t\t@apply --tri-major-warning-button-press;\n\t\t\t}\n\t\t\t/* major-warning-outline */\n\t\t\t paper-button:not(.tri-disable-theme)[major-warning-outline],\n\t\t\t paper-button:not(.tri-disable-theme).major-warning-outline {\n\t\t\t\t@apply --tri-major-warning-outline-button;\n\t\t\t}\n\t\t\t/* major-warning-outline hover */\n\t\t\t paper-button:not(.tri-disable-theme)[major-warning-outline]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).major-warning-outline:hover {\n\t\t\t\t@apply --tri-major-warning-outline-button-hover;\n\t\t\t}\n\t\t\t/* major-warning-outline pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[major-warning-outline][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).major-warning-outline[pressed] {\n\t\t\t\t@apply --tri-major-warning-outline-button-press;\n\t\t\t}\n\t\t\t/* danger */\n\t\t\t paper-button:not(.tri-disable-theme)[danger],\n\t\t\t paper-button:not(.tri-disable-theme).danger {\n\t\t\t\t@apply --tri-danger-button;\n\t\t\t}\n\t\t\t/* danger hover */\n\t\t\t paper-button:not(.tri-disable-theme)[danger]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).danger:hover {\n\t\t\t\t@apply --tri-danger-button-hover;\n\t\t\t}\n\t\t\t/* danger pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[danger][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).danger[pressed] {\n\t\t\t\t@apply --tri-danger-button-press;\n\t\t\t}\n\t\t\t/* danger-outline */\n\t\t\t paper-button:not(.tri-disable-theme)[danger-outline],\n\t\t\t paper-button:not(.tri-disable-theme).danger-outline {\n\t\t\t\t@apply --tri-danger-outline-button;\n\t\t\t}\n\t\t\t/* danger-outline hover */\n\t\t\t paper-button:not(.tri-disable-theme)[danger-outline]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).danger-outline:hover {\n\t\t\t\t@apply --tri-danger-outline-button-hover;\n\t\t\t}\n\t\t\t/* danger-outline pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[danger-outline][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).danger-outline[pressed] {\n\t\t\t\t@apply --tri-danger-outline-button-press;\n\t\t\t}\n\t\t\t/* footer */\n\t\t\t paper-button:not(.tri-disable-theme)[footer],\n\t\t\t paper-button:not(.tri-disable-theme).footer {\n\t\t\t\t@apply --tri-footer-button;\n\t\t\t}\n\t\t\t/* footer hover */\n\t\t\t paper-button:not(.tri-disable-theme)[footer]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).footer:hover {\n\t\t\t\t@apply --tri-footer-button-hover;\n\t\t\t}\n\t\t\t/* footer pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[footer][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).footer[pressed] {\n\t\t\t\t@apply --tri-footer-button-press;\n\t\t\t}\n\t\t\t/* footer secondary */\n\t\t\t paper-button:not(.tri-disable-theme)[footer-secondary],\n\t\t\t paper-button:not(.tri-disable-theme).footer-secondary {\n\t\t\t\t@apply --tri-footer-secondary-button;\n\t\t\t}\n\t\t\t/* footer secondary hover */\n\t\t\t paper-button:not(.tri-disable-theme)[footer-secondary]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).footer-secondary:hover {\n\t\t\t\t@apply --tri-footer-secondary-button-hover;\n\t\t\t}\n\t\t\t/* footer secondary pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[footer-secondary][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).footer-secondary[pressed] {\n\t\t\t\t@apply --tri-footer-secondary-button-press;\n\t\t\t}\n\t\t\t/* footer danger */\n\t\t\t paper-button:not(.tri-disable-theme)[footer-danger],\n\t\t\t paper-button:not(.tri-disable-theme).footer-danger {\n\t\t\t\t@apply --tri-footer-danger-button;\n\t\t\t}\n\t\t\t/* footer danger hover */\n\t\t\t paper-button:not(.tri-disable-theme)[footer-danger]:hover,\n\t\t\t paper-button:not(.tri-disable-theme).footer-danger:hover {\n\t\t\t\t@apply --tri-footer-danger-button-hover;\n\t\t\t}\n\t\t\t/* footer danger pressed */\n\t\t\t paper-button:not(.tri-disable-theme)[footer-danger][pressed],\n\t\t\t paper-button:not(.tri-disable-theme).footer-danger[pressed] {\n\t\t\t\t@apply --tri-footer-danger-button-press;\n\t\t\t}\n\t\t\t/* footer disabled */\n\t\t\t paper-button:not(.tri-disable-theme)[footer][disabled],\n\t\t\t paper-button:not(.tri-disable-theme)[footer-secondary][disabled],\n\t\t\t paper-button:not(.tri-disable-theme)[footer-danger][disabled],\n\t\t\t paper-button:not(.tri-disable-theme).footer[disabled],\n\t\t\t paper-button:not(.tri-disable-theme).footer-secondary[disabled],\n\t\t\t paper-button:not(.tri-disable-theme).footer-danger[disabled] {\n\t\t\t\t@apply --tri-footer-button-disabled;\n\t\t\t}\n\t\t\t/* default disabled */\n\t\t\t paper-button:not(.tri-disable-theme)[disabled] {\n\t\t\t\t@apply --tri-disabled-button;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* paper-checkbox\n\t\t\t*/\n\t\t\t paper-checkbox:not(.tri-disable-theme) {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* paper-icon-button\n\t\t\t*/\n\t\t\t/* primary */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[primary],\n\t\t\t paper-icon-button:not(.tri-disable-theme).primary {\n\t\t\t\tcolor: var(--tri-primary-icon-button-color);\n\t\t\t}\n\t\t\t/* primary hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[primary]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).primary:hover {\n\t\t\t\tcolor: var(--tri-primary-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* primary press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[primary][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).primary[pressed] {\n\t\t\t\tcolor: var(--tri-primary-icon-button-press-color);\n\t\t\t}\n\t\t\t/* secondary */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[secondary],\n\t\t\t paper-icon-button:not(.tri-disable-theme).secondary {\n\t\t\t\tcolor: var(--tri-secondary-icon-button-color);\n\t\t\t}\n\t\t\t/* secondary hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[secondary]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).secondary:hover {\n\t\t\t\tcolor: var(--tri-secondary-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* secondary press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[secondary][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).secondary[pressed] {\n\t\t\t\tcolor: var(--tri-secondary-icon-button-press-color);\n\t\t\t}\n\t\t\t/* info */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[info],\n\t\t\t paper-icon-button:not(.tri-disable-theme).info {\n\t\t\t\tcolor: var(--tri-info-icon-button-color);\n\t\t\t}\n\t\t\t/* info hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[info]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).info:hover {\n\t\t\t\tcolor: var(--tri-info-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* info press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[info][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).info[pressed] {\n\t\t\t\tcolor: var(--tri-info-icon-button-press-color);\n\t\t\t}\n\t\t\t/* success */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[success],\n\t\t\t paper-icon-button:not(.tri-disable-theme).success {\n\t\t\t\tcolor: var(--tri-success-icon-button-color);\n\t\t\t}\n\t\t\t/* success hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[success]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).success:hover {\n\t\t\t\tcolor: var(--tri-success-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* success press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[success][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).success[pressed] {\n\t\t\t\tcolor: var(--tri-success-icon-button-press-color);\n\t\t\t}\n\t\t\t/* warning */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[warning],\n\t\t\t paper-icon-button:not(.tri-disable-theme).warning {\n\t\t\t\tcolor: var(--tri-warning-icon-button-color);\n\t\t\t}\n\t\t\t/* warning hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[warning]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).warning:hover {\n\t\t\t\tcolor: var(--tri-warning-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* warning press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[warning][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).warning[pressed] {\n\t\t\t\tcolor: var(--tri-warning-icon-button-press-color);\n\t\t\t}\n\t\t\t/* major-warning */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[major-warning],\n\t\t\t paper-icon-button:not(.tri-disable-theme).major-warning {\n\t\t\t\tcolor: var(--tri-major-warning-icon-button-color);\n\t\t\t}\n\t\t\t/* major-warning hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[major-warning]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).major-warning:hover {\n\t\t\t\tcolor: var(--tri-major-warning-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* major-warning press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[major-warning][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).major-warning[pressed] {\n\t\t\t\tcolor: var(--tri-major-warning-icon-button-press-color);\n\t\t\t}\n\t\t\t/* danger */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[danger],\n\t\t\t paper-icon-button:not(.tri-disable-theme).danger {\n\t\t\t\tcolor: var(--tri-danger-icon-button-color);\n\t\t\t}\n\t\t\t/* danger hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[danger]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).danger:hover {\n\t\t\t\tcolor: var(--tri-danger-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* danger press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[danger][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).danger[pressed] {\n\t\t\t\tcolor: var(--tri-danger-icon-button-press-color);\n\t\t\t}\n\t\t\t/* error */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[error],\n\t\t\t paper-icon-button:not(.tri-disable-theme).error {\n\t\t\t\tcolor: var(--tri-error-icon-button-color);\n\t\t\t}\n\t\t\t/* error hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[error]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).error:hover {\n\t\t\t\tcolor: var(--tri-error-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* error press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[error][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).error[pressed] {\n\t\t\t\tcolor: var(--tri-error-icon-button-press-color);\n\t\t\t}\n\t\t\t/* footer */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[footer],\n\t\t\t paper-icon-button:not(.tri-disable-theme).footer {\n\t\t\t\tcolor: var(--tri-footer-icon-button-color);\n\t\t\t}\n\t\t\t/* footer hover */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[footer]:hover,\n\t\t\t paper-icon-button:not(.tri-disable-theme).footer:hover {\n\t\t\t\tcolor: var(--tri-footer-icon-button-hover-color);\n\t\t\t}\n\t\t\t/* footer press */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[footer][pressed],\n\t\t\t paper-icon-button:not(.tri-disable-theme).footer[pressed] {\n\t\t\t\tcolor: var(--tri-footer-icon-button-press-color);\n\t\t\t}\n\t\t\t/* disabled */\n\t\t\t paper-icon-button:not(.tri-disable-theme)[disabled],\n\t\t\t paper-icon-button:not(.tri-disable-theme).disabled {\n\t\t\t\t/*opacity: var(--tri-button-disabled-opacity);*/\n\t\t\t\tcolor: var(--tri-disabled-icon-button-color);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* paper-item\n\t\t\t*/\n\t\t\t paper-item:not(.tri-disable-theme) {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* paper-radio-button\n\t\t\t*/\n\t\t\t paper-radio-button:not(.tri-disable-theme) {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* paper-toast\n\t\t\t*/\n\t\t\t paper-toast:not(.tri-disable-theme) {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * paper-toggle-button\n\t\t\t */\n\t\t\tpaper-toggle-button:not(.tri-disable-theme):not([disabled]) {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* table\n\t\t\t*/\n\t\t\t div.tri-table:not(.tri-disable-theme),\n\t\t\t div[tri-table]:not(.tri-disable-theme) {\n\t\t\t\tdisplay: table;\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t\tborder-collapse: collapse;\n\t\t\t\tborder-spacing: 0;\n\t\t\t\tcolor: var(--tri-primary-content-color);\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-thead,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-thead] {\n\t\t\t\tdisplay: table-header-group;\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t\tborder-bottom: 1px solid var(--tri-primary-content-accent-color);\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-thead > div.tri-tr,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-thead] > div[tri-tr] {\n\t\t\t\tdisplay: table-row;\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-thead div.tri-th,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-thead] div[tri-th] {\n\t\t\t\tdisplay: table-cell;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\tline-height: 30px;\n\t\t\t\tpadding: 5px 10px 5px 0px;\n\t\t\t\ttext-align: left;\n\t\t\t\tmin-width: 100px;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-thead div.tri-th::before,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-thead] div[tri-th]::before {\n\t\t\t\tborder-left: 1px solid var(--tri-primary-content-accent-color);\n\t\t\t\tcontent: \"\";\n\t\t\t\tfont-size: 18px;\n\t\t\t\tpadding-right: 10px;\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-thead div.tri-th:first-child::before,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-thead] div[tri-th]:first-child::before {\n\t\t\t\tborder-left: none !important;\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-tbody,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-tbody] {\n\t\t\t\tdisplay: table-row-group;\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr] {\n\t\t\t\tdisplay: table-row;\n\t\t\t\tborder-bottom: 1px solid var(--tri-primary-content-accent-color);\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr:nth-child(odd),\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr]:nth-child(odd) {\n\t\t\t\tbackground-color: var(--tri-body-background-color);\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr:nth-child(even),\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr]:nth-child(even) {\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t}\n\t\t\t div.tri-table[clickable-rows]:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr:hover,\n\t\t\t div[tri-table][clickable-rows]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr]:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground-color: var(--tri-primary-content-accent-color);\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr[selected],\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr][selected] {\n\t\t\t\tbackground-color: var(--tri-primary-light-color) !important;\n\t\t\t}\n\t\t\t div.tri-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr > div.tri-td,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr] > div[tri-td] {\n\t\t\t\tdisplay: table-cell;\n\t\t\t\tvertical-align: middle;\n\t\t\t\theight: 45px;\n\t\t\t\tpadding: 10px;\n\t\t\t\tmin-width: 100px;\n\t\t\t\t/*position: relative;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t-webkit-line-clamp: 2;*/\n\t\t\t}\n\t\t\t/* div.tri-table:not(.tri-disable-theme) > tbody > tr > td > div:after,\n\t\t\t div[tri-table]:not(.tri-disable-theme) > tbody > tr > td > div:after {\n\t\t\t\tcontent: '...';\n\t\t\t\ttext-align: right;\n\t\t\t\tbottom: 0;\n\t\t\t\tright: 0;\n\t\t\t\twidth: 25%;\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\theight: 14px;\n\t\t\t\tbackground: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 75%);\n\t\t\t}*/\n\n\t\t\t/*\n\t\t\t* table - fixed header (requires defining your own column widths by wrapping tri-th's and tri-td's in <div>s with widths specified using --layout-flex-#)\n\t\t\t*/\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme),\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) {\n\t\t\t\t@apply --layout-vertical;\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t\tcolor: var(--tri-primary-content-color);\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] {\n\t\t\t\t@apply --layout-vertical;\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t\tborder-bottom: 1px solid var(--tri-primary-content-accent-color);\n\t\t\t\tmin-height: 0;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead > div.tri-tr,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] > div[tri-tr] {\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t\tcolor: var(--tri-primary-color);\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead div.tri-th,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] div[tri-th] {\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\t@apply --layout-center;\n\t\t\t\t/*white-space: nowrap;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;*/\n\t\t\t\tline-height: 30px;\n\t\t\t\theight: 30px;\n\t\t\t\tpadding: 5px 10px 5px 0px;\n\t\t\t\ttext-align: left;\n\t\t\t\tmin-width: 0;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead div.tri-th > span.tri-th-label,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] div[tri-th] > span[tri-th-label] {\n\t\t\t\tflex-shrink: 1;\n\t\t\t\t/*white-space: nowrap;*/\n\t\t\t\toverflow: hidden;\n\t\t\t\t/*text-overflow: ellipsis;*/\n\t\t\t\tmin-width: 0;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead > div.tri-tr > div,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] > div[tri-tr] > div {\n\t\t\t\tmin-width: 100px;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead div.tri-th::before,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] div[tri-th]::before {\n\t\t\t\tborder-left: 1px solid var(--tri-primary-content-accent-color);\n\t\t\t\tcontent: \"\";\n\t\t\t\tfont-size: 18px;\n\t\t\t\tpadding-right: 10px;\n\t\t\t\theight: 20px;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead > div.tri-tr > div.tri-th:first-child::before,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] > div[tri-tr] > div[tri-th]:first-child::before {\n\t\t\t\tborder-left: none !important;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-thead > div.tri-tr > div:first-child > div.tri-th::before,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-thead] > div[tri-tr] > div:first-child > div[tri-th]::before {\n\t\t\t\tborder-left: none !important;\n\t\t\t}\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] {\n\t\t\t\t@apply --layout-vertical;\n\t\t\t\t@apply --layout-flex;\n\t\t\t\t@apply --layout-scroll;\n\t\t\t\tmin-height: 0;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr] {\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\tborder-bottom: 1px solid var(--tri-primary-content-accent-color);\n\t\t\t\tflex-shrink: 0;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr:nth-child(odd),\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr]:nth-child(odd) {\n\t\t\t\tbackground-color: var(--tri-body-background-color);\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr:nth-child(even),\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr]:nth-child(even) {\n\t\t\t\tbackground-color: var(--tri-primary-content-background-color);\n\t\t\t}\n\t\t\t div.tri-fixed-table[clickable-rows]:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr:hover,\n\t\t\t div[tri-fixed-table][clickable-rows]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr]:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground-color: var(--tri-primary-content-accent-color);\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr[selected],\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr][selected] {\n\t\t\t\tbackground-color: var(--tri-primary-light-color) !important;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr div.tri-td,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr] div[tri-td] {\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\t@apply --layout-center;\n\t\t\t\theight: 45px;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\t\t\t div.tri-fixed-table:not(.tri-disable-theme) > div.tri-tbody > div.tri-tr > div,\n\t\t\t div[tri-fixed-table]:not(.tri-disable-theme) > div[tri-tbody] > div[tri-tr] > div {\n\t\t\t\tmin-width: 100px;\n\t\t\t\toverflow: hidden;\n\t\t\t\t/*position: relative;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t-webkit-line-clamp: 2;*/\n\t\t\t}\n\n\t\t\t[hidden] {\n\t\t\t\tdisplay: none !important;\n\t\t\t}\n\n\t\t\n\t\t</style>\n\t</template>\n</dom-module>\n";addDomStyleModule(tristylesTheme,"triplat-theme/triplat-theme.js");var customStyle0="\n<custom-style>\n\t<style is=\"custom-style\" include=\"tristyles-fonts\">\n\n\t\thtml {\n\t\t\t/*\n\t\t\t * IBM Colors\n\t\t\t */\n\t\t\t--ibm-blue-10: #edf5ff;\n\t\t\t--ibm-blue-20: #d0e2ff;\n\t\t\t--ibm-blue-30: #a6c8ff;\n\t\t\t--ibm-blue-40: #78a9ff;\n\t\t\t--ibm-blue-50: #4589ff;\n\t\t\t--ibm-blue-60: #0f62fe;\n\t\t\t--ibm-blue-70: #0043ce;\n\t\t\t--ibm-blue-80: #002d9c;\n\t\t\t--ibm-blue-90: #001d6c;\n\t\t\t--ibm-blue-100: #001141;\n\n\t\t\t--ibm-green-10: #defbe6;\n\t\t\t--ibm-green-20: #a7f0ba;\n\t\t\t--ibm-green-30: #6fdc8c;\n\t\t\t--ibm-green-40: #42be65;\n\t\t\t--ibm-green-50: #24a148;\n\t\t\t--ibm-green-60: #198038;\n\t\t\t--ibm-green-70: #0e6027;\n\t\t\t--ibm-green-80: #044317;\n\t\t\t--ibm-green-90: #022d0d;\n\t\t\t--ibm-green-100: #071908;\n\n\t\t\t--ibm-teal-10: #d9fbfb;\n\t\t\t--ibm-teal-20: #9ef0f0;\n\t\t\t--ibm-teal-30: #3ddbd9;\n\t\t\t--ibm-teal-40: #08bdba;\n\t\t\t--ibm-teal-50: #009d9a;\n\t\t\t--ibm-teal-60: #007d79;\n\t\t\t--ibm-teal-70: #005d5d;\n\t\t\t--ibm-teal-80: #004144;\n\t\t\t--ibm-teal-90: #022b30;\n\t\t\t--ibm-teal-100: #081a1c;\n\n\t\t\t--ibm-purple-10: #f6f2ff;\n\t\t\t--ibm-purple-20: #e8daff;\n\t\t\t--ibm-purple-30: #d4bbff;\n\t\t\t--ibm-purple-40: #be95ff;\n\t\t\t--ibm-purple-50: #a56eff;\n\t\t\t--ibm-purple-60: #8a3ffc;\n\t\t\t--ibm-purple-70: #6929c4;\n\t\t\t--ibm-purple-80: #491d8b;\n\t\t\t--ibm-purple-90: #31135e;\n\t\t\t--ibm-purple-100: #1c0f30;\n\n\t\t\t--ibm-magenta-10: #fff0f7;\n\t\t\t--ibm-magenta-20: #ffd6e8;\n\t\t\t--ibm-magenta-30: #ffafd2;\n\t\t\t--ibm-magenta-40: #ff7eb6;\n\t\t\t--ibm-magenta-50: #ee5396;\n\t\t\t--ibm-magenta-60: #d12771;\n\t\t\t--ibm-magenta-70: #9f1853;\n\t\t\t--ibm-magenta-80: #740937;\n\t\t\t--ibm-magenta-90: #510224;\n\t\t\t--ibm-magenta-100: #2a0a18;\n\n\t\t\t--ibm-red-10: #fff1f1;\n\t\t\t--ibm-red-20: #ffd7d9;\n\t\t\t--ibm-red-30: #ffb3b8;\n\t\t\t--ibm-red-40: #ff8389;\n\t\t\t--ibm-red-50: #fa4d56;\n\t\t\t--ibm-red-60: #da1e28;\n\t\t\t--ibm-red-70: #a2191f;\n\t\t\t--ibm-red-80: #750e13;\n\t\t\t--ibm-red-90: #520408;\n\t\t\t--ibm-red-100: #2d0709;\n\n\t\t\t--ibm-orange-10: #fff2e8;\n\t\t\t--ibm-orange-20: #ffd9Be;\n\t\t\t--ibm-orange-30: #ffb784;\n\t\t\t--ibm-orange-40: #ff832b;\n\t\t\t--ibm-orange-50: #eb6200;\n\t\t\t--ibm-orange-60: #ba4e00;\n\t\t\t--ibm-orange-70: #8a3800;\n\t\t\t--ibm-orange-80: #5e2900;\n\t\t\t--ibm-orange-90: #3e1a00;\n\t\t\t--ibm-orange-100: #231000;\n\n\t\t\t--ibm-yellow-10: #fcf4d6;\n\t\t\t--ibm-yellow-20: #fddc69;\n\t\t\t--ibm-yellow-30: #f1c21b;\n\t\t\t--ibm-yellow-40: #d2a106;\n\t\t\t--ibm-yellow-50: #b28600;\n\t\t\t--ibm-yellow-60: #8e6a00;\n\t\t\t--ibm-yellow-70: #684e00;\n\t\t\t--ibm-yellow-80: #483700;\n\t\t\t--ibm-yellow-90: #302400;\n\t\t\t--ibm-yellow-100: #1c1500;\n\n\t\t\t--ibm-gray-10: #f4f4f4;\n\t\t\t--ibm-gray-20: #e0e0e0;\n\t\t\t--ibm-gray-30: #c6c6c6;\n\t\t\t--ibm-gray-40: #a8a8a8;\n\t\t\t--ibm-gray-50: #8d8d8d;\n\t\t\t--ibm-gray-60: #6f6f6f;\n\t\t\t--ibm-gray-70: #525252;\n\t\t\t--ibm-gray-80: #393939;\n\t\t\t--ibm-gray-90: #262626;\n\t\t\t--ibm-gray-100: #161616;\n\n\t\t\t--ibm-cool-gray-10: #f2f4f8;\n\t\t\t--ibm-cool-gray-20: #dde1e6;\n\t\t\t--ibm-cool-gray-30: #c1c7cd;\n\t\t\t--ibm-cool-gray-40: #a2a9b0;\n\t\t\t--ibm-cool-gray-50: #878d96;\n\t\t\t--ibm-cool-gray-60: #697077;\n\t\t\t--ibm-cool-gray-70: #4d5358;\n\t\t\t--ibm-cool-gray-80: #343a3f;\n\t\t\t--ibm-cool-gray-90: #21272a;\n\t\t\t--ibm-cool-gray-100: #121619;\n\n\t\t\t--ibm-warm-gray-10: #f7f3f2;\n\t\t\t--ibm-warm-gray-20: #e5e0df;\n\t\t\t--ibm-warm-gray-30: #cac5c4;\n\t\t\t--ibm-warm-gray-40: #ada8a8;\n\t\t\t--ibm-warm-gray-50: #8f8b8b;\n\t\t\t--ibm-warm-gray-60: #736f6f;\n\t\t\t--ibm-warm-gray-70: #565151;\n\t\t\t--ibm-warm-gray-80: #3c3838;\n\t\t\t--ibm-warm-gray-90: #272525;\n\t\t\t--ibm-warm-gray-100: #171414;\n\t\n\t\t\t--ibm-neutral-1: rgb(253, 253, 253);\n\t\t\t--ibm-neutral-2: rgb(249, 249, 249);\n\t\t\t--ibm-neutral-3: rgb(244, 244, 244);\n\t\t\t--ibm-neutral-4: rgb(236, 236, 236);\n\t\n\t\t\t--ibm-cool-neutral-1: rgb(251, 253, 253);\n\t\t\t--ibm-cool-neutral-2: rgb(249, 249, 251);\n\t\t\t--ibm-cool-neutral-3: rgb(240, 242, 244);\n\t\t\t--ibm-cool-neutral-4: rgb(236, 240, 242);\n\t\n\t\t\t--ibm-warm-neutral-1: rgb(253, 251, 251);\n\t\t\t--ibm-warm-neutral-2: rgb(253, 251, 251);\n\t\t\t--ibm-warm-neutral-3: rgb(247, 245, 245);\n\t\t\t--ibm-warm-neutral-4: rgb(242, 238, 238);\n\t\n\t\t\t/*\n\t\t\t * Theme Colors\n\t\t\t */\n\t\t\t--tri-primary-dark-color: var(--ibm-gray-100);\n\t\t\t--tri-primary-color: var(--ibm-blue-60);\n\t\t\t--tri-primary-light-color: var(--ibm-blue-40);\n\t\n\t\t\t--tri-primary-color-10: var(--ibm-blue-10);\n\t\t\t--tri-primary-color-20: var(--ibm-blue-20);\n\t\t\t--tri-primary-color-30: var(--ibm-blue-30);\n\t\t\t--tri-primary-color-40: var(--ibm-blue-40);\n\t\t\t--tri-primary-color-50: var(--ibm-blue-50);\n\t\t\t--tri-primary-color-60: var(--ibm-blue-60);\n\t\t\t--tri-primary-color-70: var(--ibm-blue-70);\n\t\t\t--tri-primary-color-80: var(--ibm-blue-80);\n\t\t\t--tri-primary-color-90: var(--ibm-blue-90);\n\t\t\t--tri-primary-color-100: var(--ibm-blue-100);\n\t\n\t\t\t--tri-secondary-color: var(--ibm-gray-60);\n\t\t\t--tri-info-color: var(--ibm-blue-70);\n\t\t\t--tri-success-color: var(--ibm-green-50);\n\t\t\t--tri-warning-color: var(--ibm-yellow-30);\n\t\t\t--tri-major-warning-color: var(--ibm-orange-40);\n\t\t\t--tri-danger-color: var(--ibm-red-60);\n\t\t\t--tri-error-color: var(--ibm-red-60);\n\t\n\t\t\t--tri-disabled-dark-color: rgba(0,0,0,0.3); /* note: will not appear on black background */\n\t\t\t--tri-disabled-light-color: rgba(255,255,255,0.3); /* note: will not appear on white background */\n\t\n\t\t\t/*\n\t\t\t * Overwriting Polymer's theme variables\n\t\t\t */\n\t\t\t--primary-text-color: var(--tri-primary-content-color);\n\t\t\t--primary-background-color: var(--tri-primary-content-background-color);\n\t\t\t--secondary-text-color: var(--tri-primary-content-label-color);\n\t\t\t--disabled-text-color: var(--tri-disabled-light-color);\n\t\t\t--divider-color: var(--tri-primary-content-accent-color);\n\t\t\t--error-color: var(--tri-error-color);\n\t\t\t--primary-color: var(--tri-primary-color);\n\t\t\t--light-primary-color: var(--tri-primary-light-color);\n\t\t\t--dark-primary-color: var(--tri-primary-dark-color);\n\t\t\t--accent-color: var(--tri-primary-color);\n\t\t\t--light-accent-color: var(--tri-primary-light-color);\n\t\t\t--dark-accent-color: var(--tri-primary-dark-color);\n\n\t\t\t--triplat-date-picker-icon-color: var(--tri-primary-content-color);\n\t\t\t--triblock-tab-selected-band-color: rgb(15,98,254);\n\t\t\t--triblock-tab-selected-band-height: 3px;\n\t\t\t--triblock-tab-focused-band-height: 3px;\n\t\t\t--triblock-tab-focused-band-background-color: rgb(141,141,141);\n\t\t\t--triblock-tab-unselected-color : rgb(126,126,126);\n\t\t\t\n\t\t\t/*\n\t\t\t * Font\n\t\t\t */\n\t\t\t--tri-font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;\n\t\t\tfont-family: var(--tri-font-family);\n\t\t\tfont-size: 14px;\n\t\t\tcolor: var(--tri-primary-content-color);\n\t\t\t/*\n\t\t\t * General Content\n\t\t\t */\n\t\t\t/* body */\n\t\t\t--tri-body-background-color: var(--ibm-gray-10);\n\t\t\t/* header */\n\t\t\t--tri-header-background-color: var(--tri-primary-dark-color);\n\t\t\t--tri-header-color: white;\n\t\t\t/* footer */\n\t\t\t--tri-footer-background-color: rgb(0,0,0);\n\t\t\t--tri-footer-color: white;\n\t\t\t--tri-footer-button: {\n\t\t\t\tbackground-color: var(--ibm-blue-60);\n\t\t\t\tcolor: white;\n\t\t\t\theight:40px;\n\t\t\t};\n\t\t\t--tri-footer-button-hover: {\n\t\t\t\tbackground-color: var(--ibm-blue-70);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-button-press: {\n\t\t\t\tbackground-color: var(--ibm-blue-80);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-secondary-button: {\n\t\t\t\tbackground-color: var(--tri-secondary-color);\n\t\t\t\tcolor: white;\n\t\t\t\theight:40px\n\t\t\t};\n\t\t\t--tri-footer-secondary-button-hover: {\n\t\t\t\tbackground-color: rgb(76,76,76);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-secondary-button-press: {\n\t\t\t\tbackground-color: var(--ibm-blue-70);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-danger-button: {\n\t\t\t\tborder: 1px solid white;\n\t\t\t\tpadding: var(--tri-button-1px-border-padding);\n\t\t\t\tbackground-color: var(--tri-footer-background-color);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-danger-button-hover: {\n\t\t\t\tbackground-color: var(--ibm-orange-30);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-danger-button-press: {\n\t\t\t\tbackground-color: var(--tri-danger-color);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-footer-button-disabled: {\n\t\t\t\tborder-color: var(--ibm-gray-60);\n\t\t\t\tbackground-color: var(--ibm-gray-70);\n\t\t\t\tcolor: var(--ibm-gray-40);\n\t\t\t};\n\t\t\t--tri-footer-icon-button-color: var(--ibm-blue-30);\n\t\t\t--tri-footer-icon-button-hover-color: var(--ibm-blue-50);\n\t\t\t--tri-footer-icon-button-press-color: var(--ibm-blue-10);\n\t\t\t/* primary content */\n\t\t\t--tri-primary-content-background-color: white;\n\t\t\t--tri-primary-content-color: black;\n\t\t\t--tri-primary-content-accent-color: var(--ibm-gray-20);\n\t\t\t--tri-primary-content-label-color: var(--ibm-gray-60);\n\t\t\t/*\n\t\t\t * Buttons\n\t\t\t */\n\t\t\t--tri-button-padding: 12px 24px;\n\t\t\t--tri-button-1px-border-padding: 11px 23px; /* subtracting the 1px border from the default padding */\n\t\t\t--tri-button-2px-border-padding: 10px 22px; /* subtracting the 2px border from the default padding */\n\t\t\t--tri-button-3px-border-padding: 9px 21px; /* subtracting the 3px border from the default padding */\n\t\t\t/* primary */\n\t\t\t--tri-primary-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color:var(--ibm-blue-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-primary-button-hover: {\n\t\t\t\tbackground-color: #0353e9;\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-primary-button-press: {\n\t\t\t\tbackground-color: var(--ibm-blue-80);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* primary-outline */\n\t\t\t--tri-primary-outline-button: {\n\t\t\t\tborder: 1px solid var(--ibm-blue-60);\n\t\t\t\tpadding: var(--tri-button-1px-border-padding);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-blue-60);\n\t\t\t};\n\t\t\t--tri-primary-outline-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-blue-70);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-primary-outline-button-press: {\n\t\t\t\tbackground-color: var(--ibm-blue-70);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* secondary */\n\t\t\t--tri-secondary-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-gray-80);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-secondary-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: #4c4c4c;\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-secondary-button-press: {\n\t\t\t\tbackground-color: var(--ibm-gray-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-secondary-button-disabled: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-gray-30);\n\t\t\t\tcolor: var(--ibm-gray-40);\n\t\t\t};\n\t\t\t/* info */\n\t\t\t--tri-info-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-blue-30);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-info-button-hover: {\n\t\t\t\tbackground-color: var(--ibm-blue-20);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-info-button-press: {\n\t\t\t\tbackground-color: var(--ibm-blue-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* info-outline */\n\t\t\t--tri-info-outline-button: {\n\t\t\t\tborder: 2px solid var(--ibm-blue-30);\n\t\t\t\tpadding: var(--tri-button-2px-border-padding);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-blue-30);\n\t\t\t};\n\t\t\t--tri-info-outline-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-blue-30);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-info-outline-button-press: {\n\t\t\t\tbackground-color: var(--ibm-blue-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* success */\n\t\t\t--tri-success-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-green-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-success-button-hover: {\n\t\t\t\tbackground-color: var(--ibm-green-30);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-success-button-press: {\n\t\t\t\tbackground-color: var(--ibm-green-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* success-outline */\n\t\t\t--tri-success-outline-button: {\n\t\t\t\tborder: 2px solid var(--ibm-green-40);\n\t\t\t\tpadding: var(--tri-button-2px-border-padding);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-green-40);\n\t\t\t};\n\t\t\t--tri-success-outline-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-green-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-success-outline-button-press: {\n\t\t\t\tbackground-color: var(--ibm-green-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* warning */\n\t\t\t--tri-warning-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-yellow-30);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-warning-button-hover: {\n\t\t\t\tbackground-color: var(--ibm-yellow-20);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-warning-button-press: {\n\t\t\t\tbackground-color: var(--ibm-yellow-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* warning-outline */\n\t\t\t--tri-warning-outline-button: {\n\t\t\t\tborder: 2px solid var(--ibm-yellow-30);\n\t\t\t\tpadding: var(--tri-button-2px-border-padding);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-yellow-30);\n\t\t\t};\n\t\t\t--tri-warning-outline-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-yellow-30);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-warning-outline-button-press: {\n\t\t\t\tbackground-color: var(--ibm-yellow-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* major-warning */\n\t\t\t--tri-major-warning-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-orange-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-major-warning-button-hover: {\n\t\t\t\tbackground-color: var(--ibm-orange-20);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-major-warning-button-press: {\n\t\t\t\tbackground-color: var(--ibm-orange-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* major-warning-outline */\n\t\t\t--tri-major-warning-outline-button: {\n\t\t\t\tborder: 2px solid var(--ibm-orange-40);\n\t\t\t\tpadding: var(--tri-button-2px-border-padding);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-orange-40);\n\t\t\t};\n\t\t\t--tri-major-warning-outline-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-orange-40);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-major-warning-outline-button-press: {\n\t\t\t\tbackground-color: var(--ibm-orange-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* danger */\n\t\t\t--tri-danger-button: {\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-red-60);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-danger-button-hover: {\n\t\t\t\tbackground-color: #ba1b23;\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-danger-button-press: {\n\t\t\t\tbackground-color: var(--ibm-red-80);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* danger-outline */\n\t\t\t--tri-danger-outline-button: {\n\t\t\t\tborder: 1px solid var(--ibm-gray-30);\n\t\t\t\tpadding: var(--tri-button-1px-border-padding);\n\t\t\t\tbackground-color: white;\n\t\t\t\tcolor: var(--ibm-orange-50);\n\t\t\t};\n\t\t\t--tri-danger-outline-button-hover: {\n\t\t\t\tborder: none;\n\t\t\t\tpadding: var(--tri-button-padding);\n\t\t\t\tbackground-color: var(--ibm-orange-50);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t--tri-danger-outline-button-press: {\n\t\t\t\tbackground-color: var(--ibm-orange-70);\n\t\t\t\tcolor: white;\n\t\t\t};\n\t\t\t/* disabled */\n\t\t\t--tri-disabled-button: {\n\t\t\t\tpadding: var(--tri-button-2px-border-padding);\n\t\t\t\tbackground-color: var(--ibm-gray-30);\n\t\t\t\tcolor: var(--ibm-gray-40);\n\t\t\t};\n\t\n\t\t\t/*\n\t\t\t * Icon Buttons\n\t\t\t */\n\t\t\t/* primary */\n\t\t\t--tri-primary-icon-button-color: var(--ibm-gray-80);\n\t\t\t--tri-primary-icon-button-hover-color: #4c4c4c;\n\t\t\t--tri-primary-icon-button-press-color: var(--ibm-gray-60);\n\t\t\t/* secondary */\n\t\t\t--tri-secondary-icon-button-color: var(--ibm-gray-50);\n\t\t\t--tri-secondary-icon-button-hover-color: var(--ibm-gray-30);\n\t\t\t--tri-secondary-icon-button-press-color: var(--ibm-gray-70);\n\t\t\t/* info */\n\t\t\t--tri-info-icon-button-color: var(--ibm-blue-30);\n\t\t\t--tri-info-icon-button-hover-color: var(--ibm-blue-20);\n\t\t\t--tri-info-icon-button-press-color: var(--ibm-blue-40);\n\t\t\t/* success */\n\t\t\t--tri-success-icon-button-color: var(--ibm-green-40);\n\t\t\t--tri-success-icon-button-hover-color: var(--ibm-green-30);\n\t\t\t--tri-success-icon-button-press-color: var(--ibm-green-60);\n\t\t\t/* warning */\n\t\t\t--tri-warning-icon-button-color: var(--ibm-yellow-30);\n\t\t\t--tri-warning-icon-button-hover-color: var(--ibm-yellow-20);\n\t\t\t--tri-warning-icon-button-press-color: var(--ibm-yellow-40);\n\t\t\t/* major-warning */\n\t\t\t--tri-major-warning-icon-button-color: var(--ibm-orange-40);\n\t\t\t--tri-major-warning-icon-button-hover-color: var(--ibm-orange-20);\n\t\t\t--tri-major-warning-icon-button-press-color: var(--ibm-orange-60);\n\t\t\t/* danger */\n\t\t\t--tri-danger-icon-button-color: var(--ibm-orange-50);\n\t\t\t--tri-danger-icon-button-hover-color: var(--ibm-orange-30);\n\t\t\t--tri-danger-icon-button-press-color: var(--ibm-orange-70);\n\t\t\t/* error */\n\t\t\t--tri-error-icon-button-color: var(--ibm-red-50);\n\t\t\t--tri-error-icon-button-hover-color: var(--ibm-red-30);\n\t\t\t--tri-error-icon-button-press-color: var(--ibm-red-70);\n\t\t\t/* disabled */\n\t\t\t--tri-disabled-icon-button-color: var(--ibm-gray-30);\n\t\n\t\t\t/*\n\t\t\t * paper-button\n\t\t\t */\t\t\n\t\t\t--paper-button-flat-keyboard-focus: {\n\t\t\t\toutline: 3px double var(--ibm-gray-50);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t* triblock-app-layout drawer\n\t\t\t*/\n\t\n\t\t\t--triblock-app-layout-mobile-drawer-background-color: var(--tri-primary-dark-color);\n\t\t\t--triblock-app-layout-mobile-drawer-hover-background-color: rgb(61,61,61);\n\n\t\t\t/*\n\t\t\t* triblock-slide-animation\n\t\t\t*/\n\t\t\t--triblock-slide-animation-background-color: rgb(61,61,61);\n\t\t\t--triblock-side-nav-item-selected-color: rgb(61,61,61);\n\t\t\t--triblock-side-nav-item-selected: {\n\t\t\t\tbackground-color: rgb(61,61,61);\n\t\t\t};\n\t\n\t\t\t/*\n\t\t\t * paper-checkbox\n\t\t\t */\n\t\t\t--paper-checkbox-unchecked-color: var(--tri-primary-dark-color);\n\t\t\t--paper-checkbox-unchecked-ink-color: var(--tri-primary-dark-color);\n\t\t\t--paper-checkbox-checked-color: var(--tri-primary-dark-color);\n\t\t\t--paper-checkbox-checked-ink-color: var(--tri-primary-dark-color);\n\t\t\t--paper-checkbox-label-color: var(--tri-primary-dark-color);\n\t\n\t\t\t/*\n\t\t\t * paper-toggle-button\n\t\t\t */\n\t\t\t--paper-toggle-button-unchecked-bar: {\n\t\t\t\topacity: 1;\n\t\t\t\tbackground-color: var(--ibm-gray-50);\n\t\t\t\tborder-radius: 0.9375rem;\n\t\t\t\twidth: 48px;\n\t\t\t\theight: 24px;\n\t\t\t};\n\t\t\t--paper-toggle-button-unchecked-button-color: var(--ibm-gray-20);\n\t\t\t--paper-toggle-button-unchecked-button: {\n\t\t\t\tbackground-color: var(--ibm-gray-20);\n\t\t\t\ttop: 3px;\n\t\t\t\tleft: 3px;\n\t\t\t\theight: 18px;\n\t\t\t\twidth: 18px;\n\t\t\t\tbox-shadow: none;\n\t\t\t}\n\t\t\t--paper-toggle-button-checked-bar: {\n\t\t\t\topacity: 1;\n\t\t\t\tbackground-color: var(--ibm-green-50);\n\t\t\t};\n\t\t\t--paper-toggle-button-checked-button-color: white;\n\t\t\t--paper-toggle-button-checked-button: {\n\t\t\t\tbackground-color: white;\n\t\t\t\t-webkit-transform: translate(24px, 0) !important;\n\t\t\t\ttransform: translate(24px, 0) !important;\n\t\t\t\ttop: 3px;\n\t\t\t\tleft: 3px;\n\t\t\t\theight: 18px;\n\t\t\t\twidth: 18px;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * paper-dialog\n\t\t\t */\n\t\t\t--paper-dialog: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\t\t--paper-dialog-title: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\n\t\t\t/*\n\t\t\t * paper-icon-button\n\t\t\t */\n\t\t\t--paper-icon-button-disabled-text: var(--tri-disabled-dark-color);\n\t\n\t\t\t/*\n\t\t\t * paper-input\n\t\t\t */\n\t\t\t--paper-input-container-color: var(--tri-primary-content-label-color);\n\t\t\t--paper-input-container-input-color: var(--tri-primary-content-color);\n\t\t\t--paper-input-container-focus-color: var(--tri-primary-color);\n\t\t\t--paper-input-container-invalid-color: var(--tri-error-color);\n\t\t\t--paper-input-container-input: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\t\t--paper-input-container-label: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\n\t\t\t/*\n\t\t\t * paper-item\n\t\t\t */\n\t\t\t--paper-item: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\t\t--paper-item-disabled-color: var(--tri-disabled-dark-color);\n\t\t\t--triplat-select-input-paper-item: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\t\t\n\t\t\t/*\n\t\t\t * paper-radio-button\n\t\t\t */\n\t\t\t--paper-radio-button-unchecked-color: var(--tri-primary-dark-color);\n\t\t\t--paper-radio-button-unchecked-ink-color: var(--tri-primary-dark-color);\n\t\t\t--paper-radio-button-checked-color: var(--tri-primary-dark-color);\n\t\t\t--paper-radio-button-checked-ink-color: var(--tri-primary-dark-color);\n\t\t\t--paper-radio-button-label-color: var(--tri-primary-dark-color);\n\t\t\t\n\t\t\t/*\n\t\t\t * paper-spinner\n\t\t\t */\n\t\t\t--paper-spinner-layer-1-color: var(--tri-primary-color);\n\t\t\t--paper-spinner-layer-2-color: var(--tri-secondary-color);\n\t\t\t--paper-spinner-layer-3-color: var(--tri-primary-color);\n\t\t\t--paper-spinner-layer-4-color: var(--tri-secondary-color);\n\t\n\t\t\t/*\n\t\t\t * paper-toolbar\n\t\t\t */\n\t\t\t--paper-toolbar-height: 50px;\n\t\t\t--paper-toolbar-sm-height: 50px;\n\t\t\t--paper-toolbar-background: var(--tri-header-background-color);\n\t\t\t--paper-toolbar-color: var(--tri-header-color);\n\t\t\t--paper-toolbar-title: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t};\n\t\t\t--paper-toolbar-content: {\n\t\t\t\tpadding: 0 0 0 0;\n\t\t\t};\n\t\n\t\t\t/*\n\t\t\t * paper-tooltip\n\t\t\t */\n\t\t\t--paper-tooltip: {\n\t\t\t\tfont-family: var(--tri-font-family);\n\t\t\t\tfont-size: 14px;\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * triplat-ds-search-input\n\t\t\t */\n\t\t\t--triplat-ds-search-input-dropdown-item-hover-border-color: #0353e9;\n\t\t\t--triplat-ds-search-input-dropdown-item-background-color: var(--tri-body-background-color);\n\t\t\t--triplat-ds-search-input-dropdown-header-background-color: var(--ibm-gray-30);\n\t\t\t--triplat-ds-search-input-dropdown-header-text-color: var(--tri-primary-content-color);\n\t\t\t--triplat-ds-search-input-dropdown-item-border-color: var(--ibm-gray-40);\n\t\t\t--triplat-ds-search-input-primary-text-color: var(--tri-primary-content-color);\n\t\t\t--triplat-ds-search-input-expand-filters-background-color: var(--tri-body-background-color);\n\t\t\t--triplat-ds-search-input-expand-filters-remove-icon-color: var(--tri-primary-content-color);\n\t\t\t--triplat-ds-search-input-filter-operator-background-color: var(--ibm-gray-30);\n\t\t\t--triplat-ds-search-input-border-color: var(--tri-body-background-color);\n\t\t\t\n\t\t\t/*\n\t\t\t * triplat-search-input\n\t\t\t */\n\t\t\t--triplat-search-input-dropdown-item-hover-border-color: #0353e9;\n\t\t\t--triplat-search-input-dropdown-item-background-color: var(--tri-body-background-color);\n\t\t\t--triplat-search-input-dropdown-header-background-color: var(--ibm-gray-30);\n\t\t\t--triplat-search-input-dropdown-header-text-color: var(--tri-primary-content-color);\n\t\t\t--triplat-search-input-dropdown-item-border-color: var(--ibm-gray-40);\n\t\t\t--triplat-search-input-primary-text-color: var(--tri-primary-content-color);\n\t\t\t--triplat-search-input-expand-filters-background-color: var(--tri-body-background-color);\n\t\t\t--triplat-search-input-expand-filters-remove-icon-color: var(--tri-primary-content-color);\n\t\t\t--triplat-search-input-filter-operator-background-color: var(--ibm-gray-30);\n\t\t\t--triplat-search-input-border-color: var(--tri-body-background-color);\n\t\t\t\n\t\t\t/*\n\t\t\t * triplat-graphic-legend\n\t\t\t */\n\t\t\t--triplat-graphic-legend-checkbox-color:  var(--tri-primary-dark-color);\n\t\t\t--triplat-graphic-legend-radio-color:  var(--tri-primary-dark-color);\n\t\t}\n\t\n\t</style>\n</custom-style>\n";addCustomStyle(customStyle0);var TriplatInputContainerBehavior={properties:{/**
    * Internally set to a unique value so that aria will work properly
    */_labelId:{type:String,readOnly:true},/**
    * Internally set to a unique value so that label will work properly
    */_inputId:{type:String,readOnly:true}},ready:function ready(){this._set_labelId(this._generateInputId());this._set_inputId(this._generateInputId());},_generateInputId:function _generateInputId(){var d=new Date().getTime();var uid='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=(d+Math.random()*16)%16|0;d=Math.floor(d/16);return(c=='x'?r:r&0x7|0x8).toString(16);});return'input'+uid;}};_exports.TriplatInputContainerBehavior=TriplatInputContainerBehavior;var triplatInputContainerBehavior={__proto__:null,TriplatInputContainerBehavior:TriplatInputContainerBehavior};/*
   @license
   IBM Confidential - OCO Source Materials - (C) COPYRIGHT IBM CORP. 2016-2018 - The source code for this program is not published or otherwise divested of its trade secrets, irrespective of what has been deposited with the U.S. Copyright Office.
   */_exports.$triplatInputContainerBehavior=triplatInputContainerBehavior;var triPlatDuration={};_exports.triPlatDuration=triPlatDuration;triPlatDuration.Multiplier={};triPlatDuration.Multiplier.SECOND=1000;triPlatDuration.Multiplier.MINUTE=60*triPlatDuration.Multiplier.SECOND;triPlatDuration.Multiplier.HOUR=60*triPlatDuration.Multiplier.MINUTE;triPlatDuration.Multiplier.DAY=24*triPlatDuration.Multiplier.HOUR;triPlatDuration.Multiplier.WEEK=7*triPlatDuration.Multiplier.DAY;triPlatDuration.Multiplier.MONTH_DAY=365*triPlatDuration.Multiplier.DAY/12;triPlatDuration.Multiplier.MONTH=100000000000000;triPlatDuration.Symbol={};triPlatDuration.Symbol.MILLISECOND="S";triPlatDuration.Symbol.SECOND="s";triPlatDuration.Symbol.MINUTE="m";triPlatDuration.Symbol.HOUR="h";triPlatDuration.Symbol.DAY="d";triPlatDuration.Symbol.WEEK="w";triPlatDuration.Symbol.MONTH="M";triPlatDuration.Symbol.YEAR="y";triPlatDuration.Max={};triPlatDuration.Max.SECOND=59;triPlatDuration.Max.MINUTE=59;triPlatDuration.Max.HOUR=23;triPlatDuration.Max.DAY=6;triPlatDuration.Max.MONTH=11;/**
                                 * A behavior to support duration. 
                                 *
                                 * @polymerBehavior TriPlatDurationBehavior
                                 *
                                 */var TriPlatDurationBehavior={properties:{/*
     * Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.
     */yearMin:{type:Number,value:0},/*
     * Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.
     */yearMax:{type:Number},/*
     * Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.
     * If a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.
     */yearLoop:{type:Number,value:0},/*
     * Amount to add or subtract when incrementing or decrementing a year value.
     */yearStep:{type:Number,value:1},/*
     * Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.
     */monthMin:{type:Number,value:0},/*
     * Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.
     */monthMax:{type:Number,value:11},/*
     * Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.
     * If a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.
     */monthLoop:{type:Number,value:1},/*
     * Amount to add or subtract when incrementing or decrementing a month value.
     */monthStep:{type:Number,value:1},/*
     * Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.
     */weekMin:{type:Number,value:0},/*
     * Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.
     */weekMax:{type:Number},/*
     * Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.
     * If a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.
     */weekLoop:{type:Number,value:0},/*
     * Amount to add or subtract when incrementing or decrementing a week value.
     */weekStep:{type:Number,value:1},/*
     * Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.
     */dayMin:{type:Number,value:0},/*
     * Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.
     */dayMax:{type:Number,value:6},/*
     * Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.
     * If a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.
     */dayLoop:{type:Number,value:1},/*
     * Amount to add or subtract when incrementing or decrementing a day value.
     */dayStep:{type:Number,value:1},/*
     * Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.
     */hourMin:{type:Number,value:0},/*
     * Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.
     */hourMax:{type:Number,value:23},/*
     * Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.
     * If a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.
     */hourLoop:{type:Number,value:1},/*
     * Amount to add or subtract when incrementing or decrementing an hour value.
     */hourStep:{type:Number,value:1},/*
     * Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.
     */minuteMin:{type:Number,value:0},/*
     * Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.
     */minuteMax:{type:Number,value:59},/*
     * Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.
     * If a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.
     */minuteLoop:{type:Number,value:1},/*
     * Amount to add or subtract when incrementing or decrementing a minute value.
     */minuteStep:{type:Number,value:1},/*
     * Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.
     */secondMin:{type:Number,value:0},/*
     * Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.
     */secondMax:{type:Number,value:59},/*
     * Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.
     * If a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.
     */secondLoop:{type:Number,value:1},/*
     * Amount to add or subtract when incrementing or decrementing a second value.
     */secondStep:{type:Number,value:1},/*
     * Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.
     */millisecondMin:{type:Number,value:0},/*
     * Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.
     */millisecondMax:{type:Number,value:999},/*
     * Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled. 
     * Looping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.
     * If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.
     */millisecondLoop:{type:Number,value:1},/*
     * Amount to add or subtract when incrementing or decrementing a millisecond value.
     */millisecondStep:{type:Number,value:1}},/**
   * Return a formatted string duration to display (periods and values).
   * Only duration periods that have a value will be displayed.
   * Each duration period is followed by its period label (adjust to singular/plural).
   */formatDisplayedDuration:function formatDisplayedDuration(displayedDuration){if(displayedDuration==null){return"";}var formatedValue="";formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.years,"Year");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.months,"Month");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.weeks,"Week");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.days,"Day");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.hours,"Hour");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.minutes,"Minute");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.seconds,"Second");formatedValue=formatedValue+this.addDisplayedPeriod(displayedDuration.milliseconds,"Millisecond");return formatedValue.trim();},/**
   * Return a string duration to display a given period.
   */addDisplayedPeriod:function addDisplayedPeriod(periodValue,period){if(periodValue==null||period==null){return"";}var formatedValue="";if(periodValue>0){var periodLabel=period;if(periodValue>1){//get the plural translated value
periodLabel=periodLabel+"s";}formatedValue=periodValue+" "+this.handleTranslation(periodLabel)+" ";}return formatedValue;},/**
    * Process the numeric duration value and return an object that contains the duration values.
    * Only duration values that are part of the duration displayToken are returned.
    */getDisplayedDuration:function getDisplayedDuration(durationValue,displayTokens){//Convert to absolute value;
if(durationValue<0){durationValue=0-durationValue;}var displayedDuration={};displayedDuration.years;displayedDuration.months;displayedDuration.weeks;displayedDuration.days;displayedDuration.hours;displayedDuration.minutes;displayedDuration.seconds;displayedDuration.milliseconds;//Only calculate the Duartion Fields being displayed/visible.
if(this.isDisplayYears(displayTokens)||this.isDisplayMonths(displayTokens)){var tempval=Math.floor(durationValue/triPlatDuration.Multiplier.MONTH);durationValue=durationValue%triPlatDuration.Multiplier.MONTH;if(this.isDisplayYears(displayTokens)){displayedDuration.years=Math.floor(tempval/12);}else{displayedDuration.months=tempval;}if(this.isDisplayYears(displayTokens)&&this.isDisplayMonths(displayTokens)){displayedDuration.months=tempval%12;}}else{// Handle durationValue if months/years are no longer displayed on the duration field,
// but were once populated. This modifies the duration value to a number usable by
// weeks, days, hours, seconds, and milliseconds.
durationValue=this.handleDurationValueForNonDisplayedMonths(durationValue);}if(this.isDisplayWeeks(displayTokens)){displayedDuration.weeks=Math.floor(durationValue/triPlatDuration.Multiplier.WEEK);durationValue=durationValue%triPlatDuration.Multiplier.WEEK;}if(this.isDisplayDays(displayTokens)){displayedDuration.days=Math.floor(durationValue/triPlatDuration.Multiplier.DAY);durationValue=durationValue%triPlatDuration.Multiplier.DAY;}if(this.isDisplayHours(displayTokens)){displayedDuration.hours=Math.floor(durationValue/triPlatDuration.Multiplier.HOUR);durationValue=durationValue%triPlatDuration.Multiplier.HOUR;}if(this.isDisplayMinutes(displayTokens)){displayedDuration.minutes=Math.floor(durationValue/triPlatDuration.Multiplier.MINUTE);durationValue=durationValue%triPlatDuration.Multiplier.MINUTE;}if(this.isDisplaySeconds(displayTokens)){displayedDuration.seconds=Math.floor(durationValue/triPlatDuration.Multiplier.SECOND);}if(this.isDisplayMilliseconds(displayTokens)){displayedDuration.milliseconds=durationValue%triPlatDuration.Multiplier.SECOND;}return displayedDuration;},/**
   * Return an adjusted duration value (if the month was removed).
   */handleDurationValueForNonDisplayedMonths:function handleDurationValueForNonDisplayedMonths(durationValue){var nonDisplayedMonths=Math.floor(durationValue/triPlatDuration.Multiplier.MONTH);var ONE_MONTH=1;if(nonDisplayedMonths>=ONE_MONTH){durationValue=durationValue%triPlatDuration.Multiplier.MONTH+nonDisplayedMonths*triPlatDuration.Multiplier.MONTH_DAY;}return durationValue;},/**
  * Return a numeric calculated duration value for a given duration object.
  * This is the numeric value that can be saved.
  */calculateDurationValue:function calculateDurationValue(periods){var durationValue=0;if(periods==null){return"";}//verify positive numeric values
periods.year=this.isNumericPositiveValue(periods.year)?Number(periods.year):0;periods.month=this.isNumericPositiveValue(periods.month)?Number(periods.month):0;periods.week=this.isNumericPositiveValue(periods.week)?Number(periods.week):0;periods.day=this.isNumericPositiveValue(periods.day)?Number(periods.day):0;periods.hour=this.isNumericPositiveValue(periods.hour)?Number(periods.hour):0;periods.minute=this.isNumericPositiveValue(periods.minute)?Number(periods.minute):0;periods.second=this.isNumericPositiveValue(periods.second)?Number(periods.second):0;periods.millisecond=this.isNumericPositiveValue(periods.millisecond)?Number(periods.millisecond):0;//calculation formula base on Duration class
durationValue=triPlatDuration.Multiplier.MONTH*(periods.year*12+periods.month)+periods.week*triPlatDuration.Multiplier.WEEK+periods.day*triPlatDuration.Multiplier.DAY+periods.hour*triPlatDuration.Multiplier.HOUR+periods.minute*triPlatDuration.Multiplier.MINUTE+periods.second*triPlatDuration.Multiplier.SECOND+periods.millisecond;return durationValue;},/*
   * Return true if the loop value is 1, and return false if it is 0. Otherwise, keep the default loop setting.
   */isLoop:function isLoop(loopValue){if(loopValue!=undefined&&loopValue==1){return true;}else if(loopValue!=undefined&&loopValue==0){return false;}return;},/*
   * Return true if the value is numeric and positive. Otherwise, return false.
   */isNumericPositiveValue:function isNumericPositiveValue(value){if(isNaN(value)||value==null||value<0){return false;}else{return true;}},/**
  * Return true if the given display tokens include the symbol for the year. Otherwise, return false.
  */isDisplayYears:function isDisplayYears(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.YEAR)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the month. Otherwise, return false.
  */isDisplayMonths:function isDisplayMonths(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.MONTH)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the week. Otherwise, return false.
  */isDisplayWeeks:function isDisplayWeeks(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.WEEK)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the day. Otherwise, return false.
  */isDisplayDays:function isDisplayDays(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.DAY)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the hour. Otherwise, return false.
  */isDisplayHours:function isDisplayHours(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.HOUR)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the minute. Otherwise, return false.
  */isDisplayMinutes:function isDisplayMinutes(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.MINUTE)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the second. Otherwise, return false.
  */isDisplaySeconds:function isDisplaySeconds(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.SECOND)>-1?true:false;},/**
  * Return true if the given display tokens include the symbol for the millisecond. Otherwise, return false.
  */isDisplayMilliseconds:function isDisplayMilliseconds(displayTokens){return displayTokens!=null&&displayTokens.indexOf(triPlatDuration.Symbol.MILLISECOND)>-1?true:false;},/**
   * Return a translated period label.
   */handleTranslation:function handleTranslation(durationPeriod){//singular duration periods
var __dictionary__y="Year";var __dictionary__M="Month";var __dictionary__w="Week";var __dictionary__d="Day";var __dictionary__h="Hour";var __dictionary__m="Minute";var __dictionary__s="Second";var __dictionary__S="Millisecond";//plural duration periods
var __dictionary__yp="Years";var __dictionary__Mp="Months";var __dictionary__wp="Weeks";var __dictionary__dp="Days";var __dictionary__hp="Hours";var __dictionary__mp="Minutes";var __dictionary__sp="Seconds";var __dictionary__Sp="Milliseconds";if(durationPeriod==="Year")return __dictionary__y;if(durationPeriod==="Month")return __dictionary__M;if(durationPeriod==="Week")return __dictionary__w;if(durationPeriod==="Day")return __dictionary__d;if(durationPeriod==="Hour")return __dictionary__h;if(durationPeriod==="Minute")return __dictionary__m;if(durationPeriod==="Second")return __dictionary__s;if(durationPeriod==="Millisecond")return __dictionary__S;if(durationPeriod==="Years")return __dictionary__yp;if(durationPeriod==="Months")return __dictionary__Mp;if(durationPeriod==="Weeks")return __dictionary__wp;if(durationPeriod==="Days")return __dictionary__dp;if(durationPeriod==="Hours")return __dictionary__hp;if(durationPeriod==="Minutes")return __dictionary__mp;if(durationPeriod==="Seconds")return __dictionary__sp;if(durationPeriod==="Milliseconds")return __dictionary__Sp;}};_exports.TriPlatDurationBehavior=TriPlatDurationBehavior;var triplatDurationBehavior={__proto__:null,triPlatDuration:triPlatDuration,TriPlatDurationBehavior:TriPlatDurationBehavior};_exports.$triplatDurationBehavior=triplatDurationBehavior;Polymer({_template:html(_templateObject39_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-duration-period-counter",properties:{/**
     * Calculated numeric value for a duration field. 
     */value:{type:Number,notify:true},/**
      * String value to be used for the duration period label.
      */label:{type:String},/*
     * String value to be used for the increase icon ARIA label.
     */increaseAriaLabel:{type:String},/*
     * String value to be used for the decrease icon ARIA label.
     */decreaseAriaLabel:{type:String},/*
     * Optional minimum allowed for a value when a value is decreased. If a value is smaller than min, the value will immediately be changed to min.
     */min:{type:Number,value:0},/*
     * Optional maximum allowed for a value when a value is increased. If a value is greater than max, the value will immediately be changed to max.
     */max:{type:Number},/*
     * Optional loop when a value is increased or decreased (between min and max). If a value is greater than max, the value will immediately be changed to min.
     * If a value is smaller than min, the value will immediately be changed to max. Requires max value.
     */loop:{type:Boolean,value:false},/*
     * Amount to add or subtract when incrementing or decrementing.
     */step:{type:Number,value:1},/*
     * If true, the keyboard input is disabled and the user can only change the duration by using the minus and plus buttons.
     */disableKeyboardInput:{type:Boolean,value:false}},_disableDecrementButton:function _disableDecrementButton(loop,value){if(!assertParametersAreDefined(arguments)){return;}if(loop)return false;var value=Number(value);if(isNaN(value))return true;if(value<=Number(this.min))return true;return false;},_disableIncrementButton:function _disableIncrementButton(loop,value){if(!assertParametersAreDefined(arguments)){return;}if(loop)return false;var value=Number(value);if(isNaN(value))return true;if(value>=Number(this.max))return true;return false;},/**
  * Increase the value of a duration period by a given step.
  * If max value is set, duration value cannot exceed it.
  * If loop is set and duration value exceeds max, then set duration value to min.
  */increaseValue:function increaseValue(){this.value=Number(this.value)+Number(this.step);if(this.max!=null){if(this.loop){//loop value min to max
this.value=this.value>this.max?Number(this.min):this.value;}else{//value no bigger then max
this.value=this.value>this.max?Number(this.max):this.value;}}},/**
  * Decrease the value of a duration period by a given step.
  * Duration value cannot be smaller than min (or zero).
  * If loop is set and duration value is smaller than min, then set duration value to max.
  */decreaseValue:function decreaseValue(){this.value=Number(this.value)-Number(this.step);if(this.max!=null&&this.loop){//loop value min to max
this.value=this.value<this.min||this.value>this.max?Number(this.max):this.value;}else{//value no smaller then min
this.value=this.value<this.min?Number(this.min):this.value;}},_handleEdit:function _handleEdit(){var numberValue=parseInt(this.value);if(isNaN(numberValue)){//value not a number, set value to the min
this.value=this.min;}else{//Set typed value as numeric instead of string.
//It also handle the case of value contains mix of letter and number, set to number value
this.value=numberValue;}}});Polymer({_template:html(_templateObject40_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-duration-picker",behaviors:[IronOverlayBehavior,TriPlatDurationBehavior],properties:{/**
     * Calculated numeric value for a duration field. 
     */value:{type:Number,notify:true},/**
     * String value to indicate which duration periods to display.
     * Available duration periods are: <br>
     * y - year <br>
     * M - month <br>
     * w - week <br>
     * d - day <br>
     * h - hour <br>
     * m - minute <br>
     * s - second <br>
     * S - millisecond
     */displayTokens:{type:String,notify:false,value:"y:M:w:d:h:m:s"},invalidInput:{type:Boolean,value:false},year:{type:Number,value:0},month:{type:Number,value:0},week:{type:Number,value:0},day:{type:Number,value:0},hour:{type:Number,value:0},minute:{type:Number,value:0},second:{type:Number,value:0},millisecond:{type:Number,value:0}},attached:function attached(){var textDirectionValue=document.querySelector('body').getAttribute('dir');if(textDirectionValue==="rtl"){this.$.picker.classList.add('rtl-picker');this.$.doneButton.classList.add('rtl-done-button');}else{this.$.picker.classList.add('ltr-picker');this.$.doneButton.classList.add('ltr-done-button');}},ready:function ready(){//set translated values for aria-label periods counters buttons
var __dictionary__yi="Increase Years";var __dictionary__Mi="Increase Months";var __dictionary__wi="Increase Weeks";var __dictionary__di="Increase Days";var __dictionary__hi="Increase Hours";var __dictionary__mi="Increase Minutes";var __dictionary__si="Increase Seconds";var __dictionary__Si="Increase Milliseconds";var __dictionary__yd="Decrease Years";var __dictionary__Md="Decrease Months";var __dictionary__wd="Decrease Weeks";var __dictionary__dd="Decrease Days";var __dictionary__hd="Decrease Hours";var __dictionary__md="Decrease Minutes";var __dictionary__sd="Decrease Seconds";var __dictionary__Sd="Decrease Milliseconds";this.increaseYears=__dictionary__yi;this.increaseMonths=__dictionary__Mi;this.increaseWeeks=__dictionary__wi;this.increaseDays=__dictionary__di;this.increaseHours=__dictionary__hi;this.increaseMinutes=__dictionary__mi;this.increaseSeconds=__dictionary__si;this.increaseMilliseconds=__dictionary__Si;this.decreaseYears=__dictionary__yd;this.decreaseMonths=__dictionary__Md;this.decreaseWeeks=__dictionary__wd;this.decreaseDays=__dictionary__dd;this.decreaseHours=__dictionary__hd;this.decreaseMinutes=__dictionary__md;this.decreaseSeconds=__dictionary__sd;this.decreaseMilliseconds=__dictionary__Sd;},/**
  * Open the duration dialog and set the duration values.
  * If duration values exist, the dialog displays the duration values. Otherwise, duration values are set to zero.
  */openPicker:function openPicker(){//set picker periods values
this.invalidInput=false;if(this.value==null){//set periods to zero
this.year=0;this.month=0;this.week=0;this.day=0;this.hour=0;this.minute=0;this.second=0;this.millisecond=0;}else{//find the periods values for a given calculate duration value
var displayedDuration=this.getDisplayedDuration(this.value,this.displayTokens);this.year=this.isNumericPositiveValue(displayedDuration.years)?displayedDuration.years:0;this.month=this.isNumericPositiveValue(displayedDuration.months)?displayedDuration.months:0;this.week=this.isNumericPositiveValue(displayedDuration.weeks)?displayedDuration.weeks:0;this.day=this.isNumericPositiveValue(displayedDuration.days)?displayedDuration.days:0;this.hour=this.isNumericPositiveValue(displayedDuration.hours)?displayedDuration.hours:0;this.minute=this.isNumericPositiveValue(displayedDuration.minutes)?displayedDuration.minutes:0;this.second=this.isNumericPositiveValue(displayedDuration.seconds)?displayedDuration.seconds:0;this.millisecond=this.isNumericPositiveValue(displayedDuration.milliseconds)?displayedDuration.milliseconds:0;}//display picker
this.open();},_handleCancel:function _handleCancel(){//close picker (without changing the duration)
this.close();},_handleOk:function _handleOk(){this._handleEdit();if(!this.invalidInput){var newPeriods={};newPeriods.year=this.year;newPeriods.month=this.month;newPeriods.week=this.week;newPeriods.day=this.day;newPeriods.hour=this.hour;newPeriods.minute=this.minute;newPeriods.second=this.second;newPeriods.millisecond=this.millisecond;//calculate and set new duration value
var newDurationValue=this.calculateDurationValue(newPeriods);this.set("value",newDurationValue);//close picker
this.close();}},_handleEdit:function _handleEdit(e){//On field edit, verify duration periods are positive numeric values
if(this.isNumericPositiveValue(this.year)&&this.isNumericPositiveValue(this.month)&&this.isNumericPositiveValue(this.week)&&this.isNumericPositiveValue(this.day)&&this.isNumericPositiveValue(this.hour)&&this.isNumericPositiveValue(this.minute)&&this.isNumericPositiveValue(this.second)&&this.isNumericPositiveValue(this.millisecond)){//rollup periods value (if possible)
this._rollup();this.invalidInput=false;}else{//Disable the OK button.
//This should not happen as triplat-duration-period-counter force positive numeric value.
this.invalidInput=true;}},/**
  * Optimizes and rollup periods values (if possible). 
  * Does not rollup weeks to months, or days to months.
  */_rollup:function _rollup(){//rolls up milliseconds to seconds
if(this.millisecond>999&&this.isDisplaySeconds(this.displayTokens)){var divisor=Math.floor(this.millisecond/1000);var remainder=this.millisecond%1000;this.millisecond=remainder;this.second=Number(this.second)+divisor;}//rolls up seconds to minutes
if(this.second>59&&this.isDisplayMinutes(this.displayTokens)){var divisor=Math.floor(this.second/60);var remainder=this.second%60;this.second=remainder;this.minute=Number(this.minute)+divisor;}//rolls up minutes to hours
if(this.minute>59&&this.isDisplayHours(this.displayTokens)){var divisor=Math.floor(this.minute/60);var remainder=this.minute%60;this.minute=remainder;this.hour=Number(this.hour)+divisor;}//rolls up hours to days
if(this.hour>23&&this.isDisplayDays(this.displayTokens)){var divisor=Math.floor(this.hour/24);var remainder=this.hour%24;this.hour=remainder;this.day=Number(this.day)+divisor;}//rolls up days to weeks
if(this.day>6&&this.isDisplayWeeks(this.displayTokens)){var divisor=Math.floor(this.day/7);var remainder=this.day%7;this.day=remainder;this.week=Number(this.week)+divisor;}//rolls up months to years
if(this.month>11&&this.isDisplayYears(this.displayTokens)){var divisor=Math.floor(this.month/12);var remainder=this.month%12;this.month=remainder;this.year=Number(this.year)+divisor;}}});Polymer({_template:html(_templateObject41_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-duration",/**
  * Fired after a duration value change.
  *
  * @event triplat-duration-change
  */behaviors:[TriPlatDurationBehavior,TriplatInputContainerBehavior],properties:{/**
     * Calculated numeric value for a duration field. 
     */value:{type:Number,notify:true,observer:"_valueChanged"},/**
      * String value to be used for the duration label.
      */label:{type:String,value:null},/**
     * String value to indicate which duration periods to display.
     * Available duration periods are: <br>
     * y - year <br>
     * M - month <br>
     * w - week <br>
     * d - day <br>
     * h - hour <br>
     * m - minute <br>
     * s - second <br>
     * S - millisecond
     */displayTokens:{type:String,notify:false,value:"y:M:w:d:h:m:s"},/** 
      * Boolean value to indicate that this is a read-only duration value. Show
      * the value, but not the duration picker icon.
      */readonly:{type:Boolean,value:false},/** 
      * Set to true to disable the floating label.
      */noLabelFloat:{type:Boolean,value:false},/** 
      * Set to true to remove the underline.
      */noUnderline:{type:Boolean,value:false,reflectToAttribute:true}},attached:function attached(){if(dom(this.$$('#labelContent')).getDistributedNodes().length>0){this.label=" ";}},_openDurationPicker:function _openDurationPicker(){if(this.phone||this._isMobileDevice()){this._openInMobileDevice(this.$.durationPicker);}else{this._openInNonMobileDevice(this.$.durationPicker,this.$$("#durationPickerButton"));}this.$.durationPicker.openPicker();this._handleBrowserResize();},_openInNonMobileDevice:function _openInNonMobileDevice(durationPicker,durationPickerButton){durationPicker.style.position="fixed";durationPicker.style.top=durationPickerButton.getBoundingClientRect().top+"px";durationPicker.style.left=durationPickerButton.getBoundingClientRect().left+"px";//Cannot compute the actual size of a hidden element. Calculate height base on the number of periods displayed.
var numOfPeriods=durationPicker.displayTokens&&durationPicker.displayTokens.length>0?durationPicker.displayTokens.split(':').length:0;var durationPickerHeight=140+numOfPeriods*60;//140 is dialog padding, title and buttons
var durationPickerWidth=260;//position the dialog to the right of the picker button
var _top=durationPicker.style.top;var _left=durationPicker.style.left;var _position=durationPicker.style.position;//check if there is enough space on the right side of the picker button to display the dialog
if(window.innerWidth-durationPickerButton.getBoundingClientRect().left<durationPickerWidth){//display the dialog on the left side of the picker button
var newWPosition=durationPickerButton.getBoundingClientRect().left-durationPickerWidth;if(newWPosition<0){newWPosition=0;}durationPicker.style.left=newWPosition+"px";_left=durationPicker.style.left;}//check if there is enough space below the picker button to display the dialog
if(window.innerHeight-durationPickerButton.getBoundingClientRect().top<=durationPickerHeight){//display the dialog above the picker button
var newHPosition=durationPickerButton.getBoundingClientRect().top-durationPickerHeight;if(newHPosition<0){newHPosition=0;}durationPicker.style.top=newHPosition+"px";_top=durationPicker.style.top;}this._handleTriplatDurationPickerPosition(_top,_left,_position);},_openInMobileDevice:function _openInMobileDevice(durationPicker){//on small screen and mobile devices the dialog is displayed in the center
durationPicker.resetFit();durationPicker.style.position='';durationPicker.style.top='';durationPicker.style.left='';var _top=durationPicker.style.top;var _left=durationPicker.style.left;var _position=durationPicker.style.position;this._handleTriplatDurationPickerPosition(_top,_left,_position);},_handleTriplatDurationPickerPosition:function _handleTriplatDurationPickerPosition(_top,_left,_position){this.updateStyles({"--triplat-duration-picker-position-top":_top+" !important","--triplat-duration-picker-position-left":_left+" !important","--triplat-duration-picker-position":_position+" !important"});},_isMobileDevice:function _isMobileDevice(){if(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i)){return true;}else{return false;}},_displayValue:function _displayValue(durationValue){if(!assertParametersAreDefined(arguments)){return;}if(durationValue==null){return"";}var displayedDuration=this.getDisplayedDuration(durationValue,this.displayTokens);var formatDisplayedDuration=this.formatDisplayedDuration(displayedDuration);return formatDisplayedDuration;},_valueChanged:function _valueChanged(){this.fire("triplat-duration-change",{value:this.value});},_keyPressHandlerOpenDuration:function _keyPressHandlerOpenDuration(event){var code=event.keyCode;// accept enter or spacebar
if(code==13||code==32){this.$.durationPicker.openPicker();}},/**
  * Return a calculated end datetime for a given start datetime by adding the current duration periods.
  */getCalculatedEndDateTime:function getCalculatedEndDateTime(startDateTime){if(this.value==null){return startDateTime;}var displayedDuration=this.getDisplayedDuration(this.value,this.displayTokens);var endDateTime=new Date(startDateTime.getTime());//append each displayed duration period value to the date
if(displayedDuration.years>0){endDateTime.setFullYear(endDateTime.getFullYear()+displayedDuration.years);}if(displayedDuration.months>0){endDateTime.setMonth(endDateTime.getMonth()+displayedDuration.months);}if(displayedDuration.weeks>0){endDateTime.setHours(endDateTime.getHours()+displayedDuration.weeks*7*24);//there is no d.setWeeks()
}if(displayedDuration.days>0){endDateTime.setHours(endDateTime.getHours()+displayedDuration.days*24);//there is no d.setDays()
}if(displayedDuration.hours>0){endDateTime.setHours(endDateTime.getHours()+displayedDuration.hours);}if(displayedDuration.minutes>0){endDateTime.setMinutes(endDateTime.getMinutes()+displayedDuration.minutes);}if(displayedDuration.seconds>0){endDateTime.setSeconds(endDateTime.getSeconds()+displayedDuration.seconds);}if(displayedDuration.milliseconds>0){endDateTime.setMilliseconds(endDateTime.getMilliseconds()+displayedDuration.milliseconds);}return endDateTime;},_setPickerAriaLabel:function _setPickerAriaLabel(val){if(!assertParametersAreDefined(arguments)){return;}if(!val){return"";}return"Select "+val;},_handleBrowserResize:function _handleBrowserResize(){var self=this;window.onresize=function(){self._openInMobileDevice(self.$$("#durationPicker"));};}});var importJsPromise$1=importJs(["../jstimezonedetect/dist/jstz.min.js","../moment/moment.js","../moment-timezone/builds/moment-timezone-with-data-2012-2022.js","../moment-jdateformatparser/moment-jdateformatparser.min.js","../moment/min/locales.min.js"],"triplat-date-utilities/triplat-date-utilities.js");/**
                                                                                                                                                                                                                                                                                                                                 TriDateUtilities is a date utility component that allows user to convert and get date/datetime in ISO date string format.
                                                                                                                                                                                                                                                                                                                                 
                                                                                                                                                                                                                                                                                                                                 @demo demo/index.html
                                                                                                                                                                                                                                                                                                                                 @polymerBehavior
                                                                                                                                                                                                                                                                                                                                 */_exports.importJsPromise=importJsPromise$1;var TriDateUtilities={_getCurrentDateString:function _getCurrentDateString(){return this._getDateString(new Date());},_getCurrentDatetimeString:function _getCurrentDatetimeString(){return this._getDateTimeString(new Date());},/**
  * Returns date string.<br/>
  * @param {Object} date The JavaScript Date Object.
  */_getDateString:function _getDateString(date){if(this._isDateObject(date)){return moment(date).format("YYYY-MM-DD");}},/**
  	* Returns datetime string.<br/>
  	* @param {Object} date The JavaScript Date Object.
  	*/_getDateTimeString:function _getDateTimeString(date){if(this._isDateObject(date)){return moment(date).format("YYYY-MM-DDTHH:mm:ss");}},/**
  	* Returns current date in ISO date string.<br/>
  	* @param {String} timeZone The string representation of the time zone (e.g. US/Eastern).
  	* Notice: if no time zone parameter is passed in, the method will return the current date that is based on browser time zone.
  	*/getCurrentDate:function getCurrentDate(timeZone){var dateString=this._getCurrentDateString();if(timeZone){return moment.tz(dateString,timeZone).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}else{return moment(dateString).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}},/**
  	* Returns current datetime in ISO date string.<br/>
  	* @param {String} timeZone The string representation of the time zone (e.g. US/Eastern).
  	* Notice: if no time zone parameter is passed in, the method will return the current datetime that is based on browser time zone.
  	*/getCurrentDatetime:function getCurrentDatetime(timeZone){var datetimeString=this._getCurrentDatetimeString();if(timeZone){return moment.tz(timeZone).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}else{return moment(datetimeString).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}},/**
  	* Converts to a given time zone by keeping the exact datetime in ISO date string format.<br/>
  	* Returns ISO date string.
  	* @param {String} isoString The string representation of the ISO date string (e.g. 1970-01-15T22:19:41.000-08:00).
  	* @param {String} timeZone The string representation of the time zone (e.g. Canada/Eastern).
  	*/normalizeToTimezone:function normalizeToTimezone(isoString,timeZone){if(isoString){if(this._isIsoDateStringFormat(isoString)){var datetimeString=isoString.substring(0,"YYYY-MM-DDTHH:mm:ss.SSS".length);if(timeZone){return moment.tz(datetimeString,timeZone).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}else{console.error("Missing timeZone parameter");return;}}console.error("Incorrect ISO date string format");return;}console.error("Missing ISO date string parameter");return;},/**
  	* Converts unix timestamp (seconds) to ISO date string.<br/>
  	* Return ISO date string.
  	* @param {Number} milliseconds The integer representation of the unix timestamp (seconds) (e.g. 1415467435).
  	*/toDateIsoString:function toDateIsoString(milliseconds){if(typeof milliseconds==='number'){// milliseconds = moment(milliseconds).unix();
// return moment.unix(milliseconds).format("YYYY-MM-DDTHH:mm:ss.SSSZ");
return moment(milliseconds).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}console.error("Incorrect milliseconds parameter format");return;},/**
  	* Converts ISO date/datetime string to unix timestamp (seconds).<br/>
  	* Return unix timestamp (seconds).
  	* @param {String} isoString The string representation of the ISO date string (e.g. 2010-01-20T22:00:10.000-08:00).
  	*/toMilliseconds:function toMilliseconds(isoString){if(isoString){//since the time zone offset display in 6 chars (e.g -08:00)
if(this._isIsoDateStringFormat(isoString)){return moment(isoString).valueOf();}console.error("Incorrect ISO date string format");return;}console.error("Missing ISO date string parameter or incorrect ISO date string");return;},/**
  	* Get client time zone from browser.<br/>
  	* Return string (e.g. US/Pacific).
  	*/getBrowserTimeZone:function getBrowserTimeZone(){return jstz.determine().name();},/**
   * Formats the ISO date string to a given time zone and a user date format.<br/>
   * @param {String} isoString The string representation of the ISO date string (e.g. 1970-01-15T22:19:41.000-08:00).
   * @param {String} timeZone The string representation of the time zone (e.g. Canada/Eastern).
   * @param {String} format The user date format as set in the user's profile.
   * @param {Strinh} userLanguageCode The code of the language set in the user's profile.(en-US) 
   */formatDateWithTimeZone:function formatDateWithTimeZone(isoString,timeZone,userFormat,userLanguageCode){if(isoString!=null&&this._isIsoDateStringFormat(isoString)){var fixedFormat=this._convertToFixedMomentTzFormat(userFormat);var mDatetime=moment(isoString);if(timeZone!=null){mDatetime=mDatetime.tz(timeZone);}if(userLanguageCode!=null){mDatetime=mDatetime.locale(userLanguageCode);}return mDatetime.formatWithJDF(fixedFormat);}},/**
   * Formats the ISO date string to a given user date format.
   * @param {String} isoString The string representation of the ISO date string (e.g. 1970-01-15T22:19:41.000-08:00).
   * @param {String} format the user date format as set in the user's profile.
   * @param {Strinh} userLanguageCode The code of the language set in the user's profile.(en-US) 
   */formatDate:function formatDate(date,dateFormat,locale){if(!date)return"";var parsedDate=moment.parseZone(date);if(locale){parsedDate=parsedDate.locale(locale);}return parsedDate.formatWithJDF(dateFormat);},/**
  	* To check if a string is a ISO date string format.
  	* @param {String} isoString The string representation of the ISO date string (e.g. 2010-01-20T22:00:10.000-08:00).
  	*/_isIsoDateStringFormat:function _isIsoDateStringFormat(isoString){if(isoString){if(isoString.indexOf("T")>-1&&(isoString.length===moment().format("YYYY-MM-DDTHH:mm:ss.SSSZ").length||isoString.length==="YYYY-MM-DDTHH:mm:ss.SSSZ".length)){return true;}return false;}return false;},/**
  	* To check if the object is a JavaScript date object.
  	* @param {Object} dateObj The JavaScript Date Object.
  	*/_isDateObject:function _isDateObject(dateObj){if({}.toString.call(dateObj)==="[object Date]"){if(isNaN(dateObj)){return false;}else{return true;}}return false;},/**
  	* Converts the ISO date string to a given time zone.<br/>
  	* Returns ISO date string.
  	* @param {String} isoString The string representation of the ISO date string (e.g. 1970-01-15T22:19:41.000-08:00).
  	* @param {String} timeZone The string representation of the time zone (e.g. Canada/Eastern).
  	* @param {String} format The format of the return string (e.g. YYYY-MM-DDTHH:mm:ss).
  	* Notice: The return format is in the ISO date string (YYYY-MM-DDTHH:mm:ss.SSSZ) if no specified format is passed.
  	*/_toTimeZone:function _toTimeZone(isoString,timeZone,format){if(isoString){if(this._isIsoDateStringFormat(isoString)){if(timeZone){var toMilliseconds=this.toMilliseconds(isoString);if(format){return moment(toMilliseconds).tz(timeZone).format(format);}return moment(toDateObj).tz(timeZone).format("YYYY-MM-DDTHH:mm:ss.SSSZ");}else{console.error("Missing timeZone parameter");return;}console.error("Incorrect ISO date string format");return;}}},/**
  	* Converts the ISO date string to a JavaScript Date Object.<br/>
  	* Return JavaScript Date Object.
  	* @param {String} isoString The string representation of the ISO date string (e.g. 2010-01-20T22:00:10.000-08:00).
  	*/_toDateObject:function _toDateObject(isoString){var toDateObj=new Date(this.toMilliseconds(isoString));return toDateObj;},_convertToFixedMomentTzFormat:function _convertToFixedMomentTzFormat(format){format=format||"MM/DD/YYYY hh:mm a";if(format.replace(/[^z]/g,"").length===1){format=format.replace("z","zz");}else if(format.replace(/[^z]/g,"").length===3){format=format.replace("zzz","zz");}else if(format.replace(/[^z]/g,"").length===4){format=format.replace("zzzz","zz");}if(format.replace(/[^M]/g,"").length===5){format=format.replace("MMMMM","MMMM");}var end=false;var fixedFormat=format.replace(/\'/g,function(match){return(end=!end)?'[':']';});return fixedFormat;}};_exports.TriDateUtilities=TriDateUtilities;var triplatDateUtilities={__proto__:null,importJsPromise:importJsPromise$1,TriDateUtilities:TriDateUtilities};/* IBM Confidential‌ - OCO Source Materials‌ - (C) COPYRIGHT IBM CORP. 2019-2020 - The source code for this program is not published or otherwise‌ divested of its trade secrets, irrespective of what has been‌ deposited with the U.S. Copyright Office. */_exports.$triplatDateUtilities=triplatDateUtilities;var OUTLOOK_TOKEN_KEY="outlookIdentityToken";_exports.OUTLOOK_TOKEN_KEY=OUTLOOK_TOKEN_KEY;function saveDataToLocal(data,key){if(data&&key){try{localStorage.setItem(key,JSON.stringify(data));}catch(error){console.error("ERROR: Unable to save to local storage.",error);}}}function getDataFromLocal(key){var result;try{result=JSON.parse(localStorage.getItem(key));}catch(error){console.error("ERROR: Unable to retrieve from local storage.",error);}deleteDataFromLocal(key);return result;}function deleteDataFromLocal(key){localStorage.removeItem(key);}var triutilsLocalstorage={__proto__:null,OUTLOOK_TOKEN_KEY:OUTLOOK_TOKEN_KEY,saveDataToLocal:saveDataToLocal,getDataFromLocal:getDataFromLocal,deleteDataFromLocal:deleteDataFromLocal};_exports.$triutilsLocalstorage=triutilsLocalstorage;Polymer({is:"triplat-geo",/**
   * Fired after finding the geo location successfully.
   * The event detail includes the detected latitude and longitude.
   *
   * @event triplat-geo-success
   */ /**
       * Fired after finding the geo location with no success.
       *
       * @event triplat-geo-error
       */properties:{/**
     * The current longitude of the device.
     */longitude:{type:Number,reflectToAttribute:true,notify:true,readOnly:true},/**
     * The current latitude of the device.
     */latitude:{type:Number,reflectToAttribute:true,notify:true,readOnly:true},/**
     * The length of time (millisecond) that the device accepts cached positions. 
     */maximumAge:{type:Number,value:600000},/**
     * The length of time (millisecond) that the device is taken to return the coordinates.  
     */timeOut:{type:Number,value:10000},/**
     * A number that representing the accuracy of the coordinates (latitude and longitude) express in meters. 
     */accuracy:{type:Number,reflectToAttribute:true,readOnly:true,notify:true},/**
     * Set to **true** will update the current position information when the device is moved or more accurate location is detected.
     */isWatchPosition:{type:Boolean,value:false},/**
     * A flag to disable the detection of location.
     */disable:{type:Boolean,notify:false,readOnly:false,value:false,observer:"_onDisableChanged"},/**
     * Flag that allows the second attempt to fetch the current location if the high accuracy failed. 
     */_attemptLowerAccuracy:{type:Boolean,value:false},_geoResponseOccurred:{type:Boolean,value:false,readOnly:true}},attached:function attached(){this.async(function(){if(!this.disable){this._getCoordinates();}});},_onDisableChanged:function _onDisableChanged(disable,oldDisable){if(oldDisable&&!disable){this._getCoordinates();}},_getCoordinates:function _getCoordinates(){this._set_geoResponseOccurred(false);var success=this._success.bind(this);var watchPositionId;var error=this._error.bind(this);var options={maximumAge:this.maximumAge,timeout:this.timeOut,enableHighAccuracy:true};if(this._attemptLowerAccuracy){options.enableHighAccuracy=false;}if(this.isWatchPosition){watchPositionId=navigator.geolocation.watchPosition(success,error,options);}else{navigator.geolocation.getCurrentPosition(success,error,options);}// Set timeout to call error after the timeout time.
// This is necessary for Firefox and Edge browsers when the user ignores the permission popup.
window.setTimeout(function(){if(!this._geoResponseOccurred){this._error();}}.bind(this),options.timeout);},_success:function _success(position){this._set_geoResponseOccurred(true);this._setLatitude(position.coords.latitude);this._setLongitude(position.coords.longitude);this._setAccuracy(position.coords.accuracy);this.fire('triplat-geo-success',{lat:position.coords.latitude,lng:position.coords.longitude});return;},_error:function _error(position){// attempt lower accuracy
if(!this._attemptLowerAccuracy){this.set("_attemptLowerAccuracy",true);this._getCoordinates();return;}if(!this.isWatchPosition){this._set_geoResponseOccurred(true);console.warn("Couldn't retrieve the current location");this.fire('triplat-geo-error');}}});Polymer({_template:html(_templateObject42_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-search-location",/**
  * Fired after finding the geo location successfully.
  * The event detail includes the detected latitude and longitude.
  *
  * @event triplat-geo-success
  */ /**
     * Fired after finding the geo location with no success.
     *
     * @event triplat-geo-error
     */properties:{/**
     * The length of time (millisecond) that the device is given to return the coordinates.  
     */timeOut:{type:Number,value:10000},/**
     * Set to <b>true</b> will update the current position information when the device is moved or 
     * a more accurate location is detected.
     */isWatchPosition:{type:Boolean,value:false},/**
     * A number that represents the accuracy of the coordinates (latitude and longitude) in meters. 
     */accuracy:{type:Number,readOnly:true,notify:true},/**
     * The length of time (milliseconds) that the device accepts cached positions. 
     */maximumAge:{type:Number,value:600000},/*
     * The locations data object to which the data source values can be bound.
     */locations:{type:Object,notify:true,readOnly:false},/*
     * The radius(meters) of a circle around the position of
     * the user where locations can be found.
     */threshold:{type:Number,value:100},/*
     * An array of locations found within the 
     * threshold.
     */locationsWithinThreshold:{type:Object,notify:true,value:null},/*
     * Closest location found.
     */closestLocation:{type:Object,notify:true,value:null},/*
     * Closest distance found.
     */closestDistance:{type:Number,notify:true,value:0},/**
     * A flag to disable the detection of a location.
     */disable:{type:Boolean,notify:false,readOnly:false,observer:"_disableChanged"},_geoLocationFound:{type:Boolean,value:false,readOnly:true}},listeners:{'triplat-geo-success':'_handleSuccessGeoLocation'},observers:["_findLocation(locations.*, _geoLocationFound)"],_handleSuccessGeoLocation:function _handleSuccessGeoLocation(){this._set_geoLocationFound(true);},_findLocation:function _findLocation(change,geoLocationFound){if(!assertParametersAreDefined(arguments)){return;}if(!geoLocationFound){return;}if(change.path=="locations"&&change.value&&change.value.length>0){this._findClosestLocation(change.value);}},_findClosestLocation:function _findClosestLocation(value){if(!this.disable){var locations=value;var tmpLocationsWithinThreshold=[];var tmpClosestLocation=null;var tmpClosestDistance=-1;for(var i=0;i<locations!=null&&i<locations.length;i++){var location=locations[i];var distance=this._getDistanceBetween(this.latitude,this.longitude,location.latitude,location.longitude);//within Location Threshold
if(distance<=this.threshold){tmpLocationsWithinThreshold.push(location);}//closest location
if(tmpClosestDistance==-1||tmpClosestDistance>distance){tmpClosestDistance=distance;tmpClosestLocation=location;}};this.set("locationsWithinThreshold",tmpLocationsWithinThreshold.length>0?tmpLocationsWithinThreshold:[]);if(tmpClosestDistance>-1){this.set("closestDistance",tmpClosestDistance);this.set("closestLocation",tmpClosestLocation);}}},/**
  * Implements the haversine formula to determine 
  * the great-circle distance between two
  * points on a sphere given their latitudes
  * and longitudes.
  */_getDistanceBetween:function _getDistanceBetween(lat1,lng1,lat2,lng2){var earthRadius=6371;var latitudeDistance=this._degreeToRadians(lat2-lat1);var longitudeDistance=this._degreeToRadians(lng2-lng1);var a=Math.sin(latitudeDistance/2)*Math.sin(latitudeDistance/2)+Math.cos(this._degreeToRadians(lat1))*Math.cos(this._degreeToRadians(lat2))*Math.sin(longitudeDistance/2)*Math.sin(longitudeDistance/2);var c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return earthRadius*c*1000;},_degreeToRadians:function _degreeToRadians(value){return value*(Math.PI/180);},_disableChanged:function _disableChanged(disable){if(disable){this._set_geoLocationFound(false);this.set("closestLocation",null);this.set("closestDistance",0);}}});function getTriserviceUser(){return getService(TriserviceUser.is);};var TriserviceUser=/*#__PURE__*/function(_TrimixinService4){babelHelpers.inherits(TriserviceUser,_TrimixinService4);function TriserviceUser(){babelHelpers.classCallCheck(this,TriserviceUser);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceUser).apply(this,arguments));}babelHelpers.createClass(TriserviceUser,[{key:"getCurrentUser",value:function getCurrentUser(force){if(this._isRootInstance){if(force||!this.currentUser){return this.shadowRoot.querySelector("#currentUserDS").refresh().then(this._returnDataFromResponse.bind(this));}else{return Promise.resolve(this.currentUser);}}else{return this._rootInstance.getCurrentUser(force);}}/**
     * if geolocation is available this returns the nearest building that has at least one reservable room that is integrated into outlook.
     * if geolocation is not available then returns the user primary building if it has at least one reservable room that is integrated into outlook.
     * otherwise returns null
     */},{key:"getUserBuilding",value:function(){var _getUserBuilding=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(){var closestBuilding,buildingsForGeoLocation,userBuilding;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!this._isRootInstance){_context.next=30;break;}_context.prev=1;_context.next=4;return this._getGeoLocation();case 4:_context.next=6;return this._getBuildingsForGeoLocation();case 6:buildingsForGeoLocation=_context.sent;closestBuilding=this._getClosestBuilding(buildingsForGeoLocation);_context.next=14;break;case 10:_context.prev=10;_context.t0=_context["catch"](1);closestBuilding=null;this._clearGeoLocationPromise();case 14:if(!(closestBuilding!=null)){_context.next=18;break;}userBuilding=closestBuilding;_context.next=27;break;case 18:_context.prev=18;_context.next=21;return this._getUserPrimaryBuilding();case 21:userBuilding=_context.sent;_context.next=27;break;case 24:_context.prev=24;_context.t1=_context["catch"](18);userBuilding=null;case 27:return _context.abrupt("return",userBuilding&&userBuilding._id?userBuilding:null);case 30:return _context.abrupt("return",this._rootInstance.getUserBuilding());case 31:case"end":return _context.stop();}}},_callee,this,[[1,10],[18,24]]);}));function getUserBuilding(){return _getUserBuilding.apply(this,arguments);}return getUserBuilding;}()},{key:"_getGeoLocation",value:function _getGeoLocation(){var _this43=this;if(getTriserviceOutlook().isOutlookDesktopClient())return Promise.reject("Geolocation is not supported on Outlook Desktop Clients.");if(this._getGeoLocationPromise)return this._getGeoLocationPromise;return this._getGeoLocationPromise=new Promise(function(resolve,reject){_this43._loadingGeoLocation=true;_this43._getGeoLocationResolve=resolve;_this43._getGeoLocationReject=reject;_this43.$.rootInstanceIf.render();_this43.shadowRoot.querySelector("#searchLocation").disable=false;});}},{key:"_handleGetGeoLocationSuccess",value:function _handleGetGeoLocationSuccess(){if(this._getGeoLocationResolve){this._getGeoLocationResolve();this._clearGeoLocationPromise();}}},{key:"_clearGeoLocationPromise",value:function _clearGeoLocationPromise(){this._getGeoLocationReject=null;this._getGeoLocationResolve=null;this._getGeoLocationPromise=null;this._loadingGeoLocation=false;}},{key:"_handleGetGeoLocationError",value:function _handleGetGeoLocationError(){if(this._getGeoLocationReject){this._getGeoLocationReject();this._clearGeoLocationPromise();}}},{key:"_getBuildingsForGeoLocation",value:function(){var _getBuildingsForGeoLocation2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(){return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(this._buildingsForGeoLocation){_context2.next=4;break;}_context2.next=3;return this.shadowRoot.querySelector("#buildingsDS").refresh().then(this._returnDataFromResponse.bind(this));case 3:this._buildingsForGeoLocation=_context2.sent;case 4:return _context2.abrupt("return",this._buildingsForGeoLocation);case 5:case"end":return _context2.stop();}}},_callee2,this);}));function _getBuildingsForGeoLocation(){return _getBuildingsForGeoLocation2.apply(this,arguments);}return _getBuildingsForGeoLocation;}()},{key:"_getClosestBuilding",value:function _getClosestBuilding(buildingsForGeoLocation){if(!buildingsForGeoLocation||buildingsForGeoLocation.length==0){return null;}var searchLocation=this.shadowRoot.querySelector("#searchLocation");searchLocation.closestLocation=null;searchLocation.locationsWithinThreshold=null;searchLocation.locations=buildingsForGeoLocation;return searchLocation.locationsWithinThreshold&&searchLocation.locationsWithinThreshold.length>0?searchLocation.closestLocation:null;}},{key:"_getUserPrimaryBuilding",value:function(){var _getUserPrimaryBuilding2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3(){return regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!this._userPrimaryBuilding){_context3.next=2;break;}return _context3.abrupt("return",this._userPrimaryBuilding);case 2:_context3.next=4;return this.shadowRoot.querySelector("#primaryBuildingDS").refresh().then(this._returnDataFromResponse.bind(this));case 4:this._userPrimaryBuilding=_context3.sent;return _context3.abrupt("return",this._userPrimaryBuilding);case 6:case"end":return _context3.stop();}}},_callee3,this);}));function _getUserPrimaryBuilding(){return _getUserPrimaryBuilding2.apply(this,arguments);}return _getUserPrimaryBuilding;}()}],[{key:"is",get:function get(){return"triservice-user";}},{key:"template",get:function get(){return html(_templateObject43_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{currentUser:{type:Object,notify:true},_loadingCurrentUser:{type:Boolean,value:false},_loadingBuildingsForGeoLocation:{type:Boolean,value:false},_loadingPrimaryBuilding:{type:Boolean,value:false},_loadingGeoLocation:{type:Boolean,value:false},_closestBuilding:{type:Object}};}},{key:"observers",get:function get(){return["_handleLoadingChanged(_loadingCurrentUser, _loadingBuildingsForGeoLocation, _loadingPrimaryBuilding, _loadingGeoLocation)"];}}]);return TriserviceUser;}(TrimixinService(PolymerElement));;window.customElements.define(TriserviceUser.is,TriserviceUser);var triserviceUser={__proto__:null,getTriserviceUser:getTriserviceUser};_exports.$triserviceUser=triserviceUser;var DEFAULT_ROOM_FILTERS="DEFAULT_ROOM_FILTERS";var DEFAULT_ROOM_FILTERS_EXPIRATION=24*60*60*1000;// ONE DAY
function getTriserviceRoomFilters(){return getService(TriserviceRoomFilters.is);}var TriserviceRoomFilters=/*#__PURE__*/function(_TrimixinService5){babelHelpers.inherits(TriserviceRoomFilters,_TrimixinService5);function TriserviceRoomFilters(){babelHelpers.classCallCheck(this,TriserviceRoomFilters);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceRoomFilters).apply(this,arguments));}babelHelpers.createClass(TriserviceRoomFilters,[{key:"loadDefaultRoomFilters",value:function(){var _loadDefaultRoomFilters=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee4(){var defaultRoomFilters,userBuilding;return regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!this._isRootInstance){_context4.next=14;break;}defaultRoomFilters=this._loadDefaultRoomFiltersFromStorage();if(!(defaultRoomFilters==null)){_context4.next=10;break;}_context4.next=5;return getTriserviceUser().getUserBuilding();case 5:userBuilding=_context4.sent;if(userBuilding){this.locationFilter=[userBuilding];}this._saveDefaultRoomFiltersToStorage(this.locationFilter);_context4.next=11;break;case 10:this.locationFilter=defaultRoomFilters;case 11:this.defaultFiltersLoaded=true;_context4.next=15;break;case 14:return _context4.abrupt("return",this._rootInstance.loadDefaultRoomFilters());case 15:case"end":return _context4.stop();}}},_callee4,this);}));function loadDefaultRoomFilters(){return _loadDefaultRoomFilters.apply(this,arguments);}return loadDefaultRoomFilters;}()},{key:"_loadDefaultRoomFiltersFromStorage",value:function _loadDefaultRoomFiltersFromStorage(){try{var defaultRoomFilters=localStorage.getItem(DEFAULT_ROOM_FILTERS);defaultRoomFilters=defaultRoomFilters!=null?JSON.parse(defaultRoomFilters):null;if(defaultRoomFilters&&defaultRoomFilters.user==getTriserviceOutlook().getCurrentUserEmail().toUpperCase()&&new Date().getTime()-defaultRoomFilters.date<DEFAULT_ROOM_FILTERS_EXPIRATION){return defaultRoomFilters.locationFilter;}return null;}catch(error){return null;}}},{key:"_saveDefaultRoomFiltersToStorage",value:function _saveDefaultRoomFiltersToStorage(locationFilter){try{localStorage.setItem(DEFAULT_ROOM_FILTERS,JSON.stringify({locationFilter:locationFilter?locationFilter:[],date:new Date().getTime(),user:getTriserviceOutlook().getCurrentUserEmail().toUpperCase()}));}catch(error){return;}}},{key:"_setAllFilters",value:function _setAllFilters(){if(this._isRootInstance){var allFilters=[];if(!isEmptyArray(this.locationFilter)){allFilters.push.apply(allFilters,babelHelpers.toConsumableArray(this.locationFilter));}if(!isEmptyArray(this.layoutFilter)){allFilters.push.apply(allFilters,babelHelpers.toConsumableArray(this.layoutFilter));}if(!isEmptyArray(this.amenitiesFilter)){allFilters.push.apply(allFilters,babelHelpers.toConsumableArray(this.amenitiesFilter));}this.allFilters=[].concat(allFilters);}}},{key:"setLocationFilters",value:function setLocationFilters(){if(this._isRootInstance){this.locationFilter=babelHelpers.toConsumableArray(this.tempLocationFilter);}else{this._rootInstance.setLocationFilters();}}},{key:"resetTempLocationFilter",value:function resetTempLocationFilter(){if(this._isRootInstance){this.tempLocationFilter=babelHelpers.toConsumableArray(this.locationFilter);}else{this._rootInstance.resetTempLocationFilter();}}},{key:"clearTempLocationFilter",value:function clearTempLocationFilter(){if(this._isRootInstance){this.tempLocationFilter=[];}else{this._rootInstance.clearTempLocationFilter();}}},{key:"removeLocationFilter",value:function removeLocationFilter(selectedItem){if(this._isRootInstance){var locationIndex=this.locationFilter.findIndex(function(location){return location._id===selectedItem._id;});if(locationIndex>-1)this.splice("locationFilter",locationIndex,1);}else{this._rootInstance.removeLocationFilter(selectedItem);}}},{key:"setLayoutFilter",value:function setLayoutFilter(){if(this._isRootInstance){this.layoutFilter=babelHelpers.toConsumableArray(this.tempLayoutFilter);}else{this._rootInstance.setLayoutFilter();}}},{key:"resetTempLayoutFilter",value:function resetTempLayoutFilter(){if(this._isRootInstance){this.tempLayoutFilter=babelHelpers.toConsumableArray(this.layoutFilter);}else{this._rootInstance.resetTempLayoutFilter();}}},{key:"addToTempLayoutFilter",value:function addToTempLayoutFilter(layout){if(this._isRootInstance){this.push("tempLayoutFilter",layout);}else{this._rootInstance.addToTempLayoutFilter(layout);}}},{key:"removeFromTempLayoutFilter",value:function removeFromTempLayoutFilter(layout){if(this._isRootInstance){var layoutIndex=this.tempLayoutFilter.findIndex(function(filter){return filter._id===layout._id;});if(layoutIndex>-1)this.splice("tempLayoutFilter",layoutIndex,1);}else{this._rootInstance.removeFromTempLayoutFilter(layout);}}},{key:"removeLayoutFilter",value:function removeLayoutFilter(selectedItem){if(this._isRootInstance){var layoutIndex=this.layoutFilter.findIndex(function(filter){return filter._id===selectedItem._id;});if(layoutIndex>-1)this.splice("layoutFilter",layoutIndex,1);}else{this._rootInstance.removeLayoutFilter(selectedItem);}}},{key:"setAmenitiesFilter",value:function setAmenitiesFilter(){if(this._isRootInstance){this.amenitiesFilter=babelHelpers.toConsumableArray(this.tempAmenitiesFilter);}else{this._rootInstance.setAmenitiesFilter();}}},{key:"resetTempAmenitiesFilter",value:function resetTempAmenitiesFilter(){if(this._isRootInstance){this.tempAmenitiesFilter=babelHelpers.toConsumableArray(this.amenitiesFilter);}else{this._rootInstance.resetTempAmenitiesFilter();}}},{key:"addToTempAmenitiesFilter",value:function addToTempAmenitiesFilter(amenity){if(this._isRootInstance){this.push("tempAmenitiesFilter",amenity);}else{this._rootInstance.addToAmenitiesFilter(amenity);}}},{key:"removeFromTempAmenitiesFilter",value:function removeFromTempAmenitiesFilter(amenity){if(this._isRootInstance){var amenityIndex=this.tempAmenitiesFilter.findIndex(function(filter){return filter.amenity===amenity.amenity;});if(amenityIndex>-1)this.splice("tempAmenitiesFilter",amenityIndex,1);}else{this._rootInstance.removeFromAmenitiesFilter(amenity);}}},{key:"removeAmenityFilter",value:function removeAmenityFilter(selectedItem){if(this._isRootInstance){var amenityIndex=this.amenitiesFilter.findIndex(function(filter){return filter.amenity===selectedItem.amenity;});if(amenityIndex>-1)this.splice("amenitiesFilter",amenityIndex,1);}else{this._rootInstance.removeAmenityFilter(selectedItem);}}}],[{key:"is",get:function get(){return"triservice-room-filters";}},{key:"properties",get:function get(){return{allFilters:{type:Array,value:function value(){return[];},notify:true},locationFilter:{type:Array,value:function value(){return[];},notify:true},tempLocationFilter:{type:Array,value:function value(){return[];},notify:true},roomCapacity:{type:Number,value:1,notify:true},layoutFilter:{type:Array,value:function value(){return[];},notify:true},tempLayoutFilter:{type:Array,value:function value(){return[];},notify:true},amenitiesFilter:{type:Array,value:function value(){return[];},notify:true},tempAmenitiesFilter:{type:Array,value:function value(){return[];},notify:true},defaultFiltersLoaded:{type:Boolean,value:false,notify:true}};}},{key:"observers",get:function get(){return["_setAllFilters(locationFilter.*, layoutFilter.*, amenitiesFilter.*)"];}}]);return TriserviceRoomFilters;}(TrimixinService(PolymerElement));window.customElements.define(TriserviceRoomFilters.is,TriserviceRoomFilters);var triserviceRoomFilters={__proto__:null,getTriserviceRoomFilters:getTriserviceRoomFilters};_exports.$triserviceRoomFilters=triserviceRoomFilters;var popupStyles="\n<dom-module id=\"room-reservation-popup-styles\">\n\t<template>\n\t\t<style>\n\n\t\t\ttriblock-popup {\n\t\t\t\tborder: 4px solid var(--tri-primary-content-accent-color);\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\n\t\t\t.popup-alert {\n\t\t\t\tline-height: 20px;\n\t\t\t\tmargin: 15px;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t\t.popup-alert > * {\n\t\t\t\tmargin-bottom: 20px;\n\t\t\t}\n\n\t\t\t.popup-alert .header-warning {\n\t\t\t\tcolor: var(--tri-major-warning-color);\n\t\t\t\tfont-weight: 300;\n\t\t\t\tmargin-top: 0px;\n\t\t\t}\n\n\t\t\t.popup-alert .header-general {\n\t\t\t\tcolor: var(--ibm-gray-70);\n\t\t\t\tfont-weight: 300;\n\t\t\t\tmargin-top: 0px;\n\t\t\t}\n\n\t\t\t.popup-alert a {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\n\t\t\t.popup-alert .footer {\n\t\t\t\t@apply --layout-horizontal;\n\t\t\t\t@apply --layout-center-justified;\n\t\t\t\tmargin-bottom: 0px;\n\t\t\t}\n\n\t\t\t.close {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 20px;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 20px;\n\t\t\t\theight: 20px;\n\t\t\t\t--paper-icon-button: {\n\t\t\t\t\tpadding: 0px;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t:host([dir=\"ltr\"]) .close {\n\t\t\t\tright: 20px;\n\t\t\t}\n\n\t\t\t:host([dir=\"rtl\"]) .close {\n\t\t\t\tleft: 20px;\n\t\t\t}\n\n\t\t</style>\n\t</template>\n</dom-module>\n";addDomStyleModule(popupStyles,"trioutlook-room-reservation/styles/tristyles-popup.js");function getTriserviceMessage(){return getService(TriserviceMessage.is);};var TriserviceMessage=/*#__PURE__*/function(_TrimixinService6){babelHelpers.inherits(TriserviceMessage,_TrimixinService6);function TriserviceMessage(){babelHelpers.classCallCheck(this,TriserviceMessage);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceMessage).apply(this,arguments));}babelHelpers.createClass(TriserviceMessage,[{key:"openDefaultErrorPopup",value:function openDefaultErrorPopup(){var _this44=this;if(this._isRootInstance){setTimeout(function(){return _this44.shadowRoot.querySelector("#defaultErrorPopup").open();},500);}else{this._rootInstance.openDefaultErrorPopup();}}},{key:"openUnauthorizedAccessToastMessage",value:function openUnauthorizedAccessToastMessage(){if(this._isRootInstance){var __dictionary__unauthorized="Session timeout or unauthorized access.";var __dictionary__title="Unauthorized";this.openToastMessage("error",__dictionary__title,__dictionary__unauthorized);}else{this._rootInstance.openUnauthorizedAccessToastMessage();}}},{key:"openToastMessage",value:function openToastMessage(type,title,text){if(this._isRootInstance){if(title!=""||text!=""){var alertToast=this.shadowRoot.querySelector("#toastAlert");if(alertToast.opened){alertToast.close();}alertToast.setAttribute("role","alert");alertToast.setAttribute("aria-label",title);alertToast.type=type;alertToast.title=title;alertToast.text=text;alertToast.open();}}else{this._rootInstance.openToastMessage(type,title,text);}}},{key:"_handleToastOpenedChanged",value:function _handleToastOpenedChanged(event){if(!event.detail.value){var alertToast=this.shadowRoot.querySelector("#toastAlert");if(alertToast)alertToast.removeAttribute("role");}}},{key:"_handleRefreshPage",value:function _handleRefreshPage(e){e.stopPropagation();location.reload();}},{key:"_handleDomIfChange",value:function _handleDomIfChange(){if(this._isRootInstance){var defaultErrorPopup=this.shadowRoot.querySelector("#defaultErrorPopup");if(defaultErrorPopup)setTimeout(function(){return defaultErrorPopup.removeAttribute("hidden");},500);}}}],[{key:"is",get:function get(){return"triservice-message";}},{key:"template",get:function get(){return html(_templateObject44_d98ac2c0a07c11eaa53fe90f40c8b4df());}}]);return TriserviceMessage;}(TrimixinService(PolymerElement));;window.customElements.define(TriserviceMessage.is,TriserviceMessage);var triserviceMessage={__proto__:null,getTriserviceMessage:getTriserviceMessage};_exports.$triserviceMessage=triserviceMessage;function getTriserviceOutlook(){return getService(TriserviceOutlook.is);}var EXTRACT_CAL_UID_FROM_SOAP_RESPONSE_PATTERN=/<([^:]+:)?UID>(.*?)<\/([^:]+:)?UID>/;var TriserviceOutlook=/*#__PURE__*/function(_TrimixinService7){babelHelpers.inherits(TriserviceOutlook,_TrimixinService7);function TriserviceOutlook(){babelHelpers.classCallCheck(this,TriserviceOutlook);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceOutlook).apply(this,arguments));}babelHelpers.createClass(TriserviceOutlook,[{key:"refreshParametersFromOutlook",value:function(){var _refreshParametersFromOutlook=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee5(){var startDate,endDate,attendeesCount,enhancedLocations,recurrence,__dictionary__outlookError;return regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!this._isRootInstance){_context5.next=41;break;}this._loadingFromOutlook=true;_context5.prev=2;_context5.next=5;return importJsPromise$1;case 5:_context5.next=7;return this._getStartDate();case 7:startDate=_context5.sent;_context5.next=10;return this._getEndDate();case 10:endDate=_context5.sent;_context5.next=13;return this._getAttendeesCount();case 13:attendeesCount=_context5.sent;_context5.next=16;return this._getEnhancedLocations();case 16:enhancedLocations=_context5.sent;_context5.next=19;return this._getRecurrence();case 19:recurrence=_context5.sent;this.startDate=startDate;this.endDate=endDate;this.attendeesCount=attendeesCount;getTriserviceRoomFilters().roomCapacity=this.attendeesCount;this.enhancedLocations=enhancedLocations;_context5.next=27;return getTriserviceRoomsSearch().refreshAddedRoomsFromEmailList(enhancedLocations);case 27:this.recurrence=recurrence;_context5.next=36;break;case 30:_context5.prev=30;_context5.t0=_context5["catch"](2);console.log(_context5.t0);__dictionary__outlookError="An error occured while retrieving meeting information from Outlook.";getTriserviceMessage().openToastMessage("error","",__dictionary__outlookError);throw __dictionary__outlookError;case 36:_context5.prev=36;this._loadingFromOutlook=false;return _context5.finish(36);case 39:_context5.next=42;break;case 41:return _context5.abrupt("return",this._rootInstance.refreshParametersFromOutlook());case 42:case"end":return _context5.stop();}}},_callee5,this,[[2,30,36,39]]);}));function refreshParametersFromOutlook(){return _refreshParametersFromOutlook.apply(this,arguments);}return refreshParametersFromOutlook;}()},{key:"listenToMeetingChanges",value:function listenToMeetingChanges(){if(this._isRootInstance){if(this._isListeningToMeetingChanges)return;Office.context.mailbox.item.addHandlerAsync(Office.EventType.AppointmentTimeChanged,this._handleMeetingChanged.bind(this));Office.context.mailbox.item.addHandlerAsync(Office.EventType.RecurrenceChanged,this._handleMeetingChanged.bind(this));Office.context.mailbox.item.addHandlerAsync(Office.EventType.RecipientsChanged,this._handleMeetingChanged.bind(this));Office.context.mailbox.item.addHandlerAsync(Office.EventType.EnhancedLocationsChanged,this._handleMeetingChanged.bind(this));this._isListeningToMeetingChanges=true;}else{return this._rootInstance.listenToMeetingChanges();}}/**
     * Returns true if it is an occurrence of a repeating series or if it is the parent series.
     */},{key:"isRecurrence",value:function isRecurrence(){if(this._isRootInstance){return this.isOccurrence()||!isEmptyObj(this.recurrence);}else{return this._rootInstance.isRecurrence();}}},{key:"_handleMeetingChanged",value:function _handleMeetingChanged(){if(this._isRootInstance){if(this._loadingFromOutlook)return;this._debounceHandleMeetingChanged=Debouncer.debounce(this._debounceHandleMeetingChanged,timeOut.after(300),this.refreshParametersFromOutlook.bind(this));}}},{key:"getIdentityToken",value:function getIdentityToken(){var _this45=this;if(this._isRootInstance){if(this._identityToken){return Promise.resolve(this._identityToken);}return new Promise(function(resolve,reject){_this45._loadingFromOutlook=true;Office.context.mailbox.getUserIdentityTokenAsync(function(asyncResult){_this45._loadingFromOutlook=false;if(asyncResult.status===Office.AsyncResultStatus.Succeeded){_this45._identityToken=asyncResult.value;resolve(asyncResult.value);}else{reject(asyncResult.error);}});});}else{return this._rootInstance.getIdentityToken();}}},{key:"addRoomToOutlookMeeting",value:function addRoomToOutlookMeeting(room){var _this46=this;if(this._isRootInstance){this._loadingFromOutlook=true;var enhancedLocations=[{id:room.exchangeMailbox,type:"room"}];return new Promise(function(resolve,reject){Office.context.mailbox.item.enhancedLocation.addAsync(enhancedLocations,function(asyncResult){if(asyncResult.status==Office.AsyncResultStatus.Failed){_this46._loadingFromOutlook=false;reject(asyncResult.error);}else{_this46.push("enhancedLocations",room.exchangeMailbox);getTriserviceRoomsSearch().addRoomToAddedRooms(room);_this46._loadingFromOutlook=false;resolve();}});});}else{return this._rootInstance.addRoomToOutlookMeeting(room);}}},{key:"removeRoomFromOutlookMeeting",value:function removeRoomFromOutlookMeeting(room){var _this47=this;if(this._isRootInstance){this._loadingFromOutlook=true;var enhancedLocations=[{id:room.exchangeMailbox,type:"room"}];return new Promise(function(resolve,reject){Office.context.mailbox.item.enhancedLocation.removeAsync(enhancedLocations,function(asyncResult){if(asyncResult.status==Office.AsyncResultStatus.Failed){_this47._loadingFromOutlook=false;reject(asyncResult.error);}else{_this47._removeRoomFromEnhancedLocations(room);getTriserviceRoomsSearch().removeRoomFromAddedRooms(room);_this47._loadingFromOutlook=false;resolve();}});});}else{return this._rootInstance.removeRoomFromOutlookMeeting(room);}}},{key:"isAuthDialog",value:function isAuthDialog(){var urlSearch=window.location.search;urlSearch=urlSearch!=null?urlSearch:"";return urlSearch.indexOf("authDialog=true")>=0;}},{key:"openAuthDialog",value:function openAuthDialog(){if(this._isRootInstance){var dialogOptions={height:60,width:30,promptBeforeOpen:false};return this.openDialog("?authDialog=true",dialogOptions);}else{return this._rootInstance.openAuthDialog();}}},{key:"openSSODialog",value:function openSSODialog(){if(this._isRootInstance){var dialogOptions={height:60,width:30,promptBeforeOpen:false};var redirectUrl="".concat(window.location.origin).concat(window.location.pathname,"#!/sso");var dialogUrl="".concat(window.location.origin).concat(this._webSignonUrl,"?redirectUrl=").concat(encodeURIComponent(redirectUrl));if(this.isAuthDialog()){window.location.href=dialogUrl;}else{return this.openDialog(dialogUrl,dialogOptions,true);}}else{return this._rootInstance.openSSODialog();}}},{key:"openDialog",value:function openDialog(url,dialogOptions){var _this48=this;var completeUrl=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(this._isRootInstance){this._loadingFromOutlook=true;var defaultOptions={height:80,width:60,promptBeforeOpen:false};dialogOptions=dialogOptions!=null?dialogOptions:defaultOptions;this._closeDialog();return new Promise(function(resolve,reject){Office.context.ui.displayDialogAsync(completeUrl?url:window.location.origin+window.location.pathname+url,dialogOptions,_this48._dialogCallback.bind(_this48,resolve,reject));});}else{return this._rootInstance.openDialog(url);}}},{key:"_dialogCallback",value:function _dialogCallback(resolve,reject,asyncResult){var _this49=this;this._loadingFromOutlook=false;if(asyncResult.status==Office.AsyncResultStatus.Failed){reject(asyncResult.error);}else{this.set("_dialog",asyncResult.value);this._dialog.addEventHandler(Office.EventType.DialogMessageReceived,function(arg){_this49._debouncePopupDialogCallback=Debouncer.debounce(_this49._debouncePopupDialogCallback,timeOut.after(100),function(){var messageFromDialog=JSON.parse(arg.message);if(messageFromDialog.messageType==="dialogAction"&&messageFromDialog.message==="addRoom"){_this49.addRoomToOutlookMeeting(messageFromDialog.room);_this49._closeDialog();}else if(messageFromDialog.messageType==="dialogAction"&&messageFromDialog.message==="removeRoom"){_this49.removeRoomFromOutlookMeeting(messageFromDialog.room);_this49._closeDialog();}else if(messageFromDialog.messageType==="dialogAction"&&messageFromDialog.message==="favoriteToggled"){var popupRoom=messageFromDialog.room;if(messageFromDialog.isFavorite){getTriserviceFavoriteRooms().addFavoriteRoom(popupRoom);}else{getTriserviceFavoriteRooms().removeFavoriteRoom(popupRoom);}}else if(messageFromDialog.messageType==="authAction"&&messageFromDialog.message==="reloadApp"){_this49._closeDialog();location.reload();}else if(messageFromDialog.messageType==="dialogClosed"){_this49._closeDialog();}});});resolve();}}},{key:"sendReloadMessageToParent",value:function sendReloadMessageToParent(){if(this._isRootInstance){var messageObject={messageType:"authAction",message:"reloadApp"};this.messageParent(messageObject);}else{return this._rootInstance.sendReloadMessageToParent();}}},{key:"messageParent",value:function messageParent(messageObject){if(this._isRootInstance){var jsonMessage=JSON.stringify(messageObject);Office.context.ui.messageParent(jsonMessage);}else{return this._rootInstance.messageParent(messageObject);}}},{key:"getCurrentUserEmail",value:function getCurrentUserEmail(){return Office.context.mailbox.userProfile.emailAddress;}},{key:"_removeRoomFromEnhancedLocations",value:function _removeRoomFromEnhancedLocations(room){if(this._isRootInstance){var locationIndex=this.enhancedLocations.findIndex(function(location){return location===room.exchangeMailbox;});if(locationIndex>-1)this.splice("enhancedLocations",locationIndex,1);}}},{key:"closeAddin",value:function closeAddin(){if(this._isRootInstance){this._closeDialog();return Office.context.ui.closeContainer();}else{return this._rootInstance.closeAddin();}}},{key:"_closeDialog",value:function _closeDialog(){try{if(this._dialog){this._dialog.close();}}catch(e){console.log(e);}this.set("_dialog",null);}},{key:"_getStartDate",value:function _getStartDate(){var _this50=this;return new Promise(function(resolve,reject){Office.context.mailbox.item.start.getAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve(_this50._convertDateToIso(result.value));}else{reject(result.error);}});});}},{key:"_getEndDate",value:function _getEndDate(){var _this51=this;return new Promise(function(resolve,reject){Office.context.mailbox.item.end.getAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve(_this51._convertDateToIso(result.value));}else{reject(result.error);}});});}},{key:"_convertDateToIso",value:function _convertDateToIso(date){if(date&&date.getTime){return TriDateUtilities.toDateIsoString(date.getTime());}return TriDateUtilities.getCurrentDatetime();}},{key:"_getAttendeesCount",value:function(){var _getAttendeesCount2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee6(){var requiredCount,optionalCount;return regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return this._getRequiredAttendeesCount();case 2:requiredCount=_context6.sent;_context6.next=5;return this._getOptionalAttendeesCount();case 5:optionalCount=_context6.sent;return _context6.abrupt("return",1+requiredCount+optionalCount);case 7:case"end":return _context6.stop();}}},_callee6,this);}));function _getAttendeesCount(){return _getAttendeesCount2.apply(this,arguments);}return _getAttendeesCount;}()},{key:"_getRequiredAttendeesCount",value:function _getRequiredAttendeesCount(){var _this52=this;return new Promise(function(resolve,reject){Office.context.mailbox.item.requiredAttendees.getAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){var currentUserEmail=toLowerCase(_this52.getCurrentUserEmail());var requiredAttendees=result.value.filter(function(item){return toLowerCase(item.emailAddress)!=currentUserEmail;});resolve(requiredAttendees.length);}else{resolve(0);}});});}},{key:"_getOptionalAttendeesCount",value:function _getOptionalAttendeesCount(){return new Promise(function(resolve,reject){Office.context.mailbox.item.optionalAttendees.getAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve(result.value.length);}else{resolve(0);}});});}},{key:"_getEnhancedLocations",value:function _getEnhancedLocations(){return new Promise(function(resolve,reject){Office.context.mailbox.item.enhancedLocation.getAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){var locationResults=result.value;var enhancedLocations=[];if(!isEmptyArray(locationResults)){locationResults.forEach(function(location){return enhancedLocations.push(location.emailAddress);});}resolve(enhancedLocations);}else{resolve([]);}});});}},{key:"_getRecurrence",value:function _getRecurrence(){if(this.isOccurrence()){return Promise.resolve({});}return new Promise(function(resolve,reject){Office.context.mailbox.item.recurrence.getAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){var recurrence=result.value;resolve(!isEmptyObj(recurrence)?_objectSpread({},recurrence):{});}else{resolve({});}});});}},{key:"_handleEnhancedLocationsChanged",value:function _handleEnhancedLocationsChanged(enhancedLocationsChange){var _this53=this;if(this._isRootInstance){var triRoutesApp=getTriroutesApp();if(!triRoutesApp||!triRoutesApp.roomSearchRouteActive)return;this._debounceHandleEnhancedLocationsChanged=Debouncer.debounce(this._debounceHandleEnhancedLocationsChanged,microTask,function(){_this53._refreshRoomLinks=true;});}}},{key:"_refreshRoomLinksOnMeetingBody",value:function(){var _refreshRoomLinksOnMeetingBody2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee7(){var _this54=this;var serviceRoomsSearch,addedRooms,__dictionary__linkText,roomLinks,meetingBody,lastDivIndex,leftPart,rightPart,newMeetingBody;return regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!this._isRootInstance){_context7.next=24;break;}if(!(!this._refreshRoomLinks||this._loadingFromOutlook)){_context7.next=3;break;}return _context7.abrupt("return");case 3:this._loadingFromOutlook=true;_context7.prev=4;serviceRoomsSearch=getTriserviceRoomsSearch();addedRooms=serviceRoomsSearch!=null?serviceRoomsSearch.getAddedRoomsWithoutFavoriteData():[];addedRooms=addedRooms!=null?addedRooms:[];__dictionary__linkText="Open floor plan for {1}.";roomLinks=addedRooms.reduce(function(accumulator,currentValue){var linkText=__dictionary__linkText.replace("{1}",currentValue.name);return accumulator+"<p><a href=\"".concat(window.location.origin).concat(_this54._locateUrl,"#!/room/").concat(currentValue._id,"/location/min\">").concat(linkText,"</a></p>");},"");_context7.next=12;return this._getMeetingBody();case 12:meetingBody=_context7.sent;meetingBody=this._clearRoomLinks(meetingBody);lastDivIndex=meetingBody.lastIndexOf("</div>");leftPart=lastDivIndex<0?meetingBody:lastDivIndex>0?meetingBody.substring(0,lastDivIndex):"";rightPart=lastDivIndex>=0?meetingBody.substring(lastDivIndex):"";newMeetingBody="".concat(leftPart).concat(roomLinks).concat(rightPart);_context7.next=20;return this._setMeetingBody(newMeetingBody);case 20:_context7.prev=20;this._refreshRoomLinks=false;this._loadingFromOutlook=false;return _context7.finish(20);case 24:case"end":return _context7.stop();}}},_callee7,this,[[4,,20,24]]);}));function _refreshRoomLinksOnMeetingBody(){return _refreshRoomLinksOnMeetingBody2.apply(this,arguments);}return _refreshRoomLinksOnMeetingBody;}()},{key:"_clearRoomLinks",value:function _clearRoomLinks(meetingBody){return meetingBody.replace(new RegExp("<a(.|[\\n,\\r])+?/p/web/locate#!/room/(.|[\\n,\\r])+?</a>","g"),"").replace(new RegExp("<p[^>]*>(&nbsp;|[\\s\\r\\n]*)</p>","g"),"");}},{key:"_getMeetingBody",value:function _getMeetingBody(){return new Promise(function(resolve,reject){Office.context.mailbox.item.body.getAsync(Office.CoercionType.Html,function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve(result.value);}else{reject(result.error);}});});}},{key:"_setMeetingBody",value:function _setMeetingBody(meetingBody){return new Promise(function(resolve,reject){Office.context.mailbox.item.body.setAsync(meetingBody,{coercionType:Office.CoercionType.Html},function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve();}else{reject(result.error);}});});}},{key:"getSeriesId",value:function getSeriesId(){if(this._isRootInstance){return Office.context.mailbox.item.seriesId;}else{return this._rootInstance.getSeriesId();}}},{key:"isOccurrence",value:function isOccurrence(){if(this._isRootInstance){var seriesId=this.getSeriesId();return seriesId!=null&&seriesId.length>0;}else{return this._rootInstance.isOccurrence();}}},{key:"isOutlookDesktopClient",value:function isOutlookDesktopClient(){if(this._isRootInstance){return Office.context.mailbox.diagnostics.hostName=="Outlook";}else{return this._rootInstance.isOutlookDesktopClient();}}},{key:"isClientNotSupported",value:function isClientNotSupported(){if(this._isRootInstance){return this.isOutlookWebClient()&&!Office.context.requirements.isSetSupported("mailbox","1.7");}else{return this._rootInstance.isClientNotSupported();}}},{key:"isOutlookWebClient",value:function isOutlookWebClient(){if(this._isRootInstance){return Office.context.mailbox.diagnostics.hostName=="OutlookWebApp";}else{return this._rootInstance.isOutlookWebClient();}}},{key:"getCalendarUIDFromMeeting",value:function(){var _getCalendarUIDFromMeeting=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee8(){var itemId;return regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!this._isRootInstance){_context8.next=19;break;}this._loadingFromOutlook=true;_context8.prev=2;_context8.next=5;return this._getMeetingId();case 5:itemId=_context8.sent;_context8.next=8;return this._makeEwsRequestToGetCalendarUID(itemId);case 8:return _context8.abrupt("return",_context8.sent);case 11:_context8.prev=11;_context8.t0=_context8["catch"](2);return _context8.abrupt("return",null);case 14:_context8.prev=14;this._loadingFromOutlook=false;return _context8.finish(14);case 17:_context8.next=20;break;case 19:return _context8.abrupt("return",this._rootInstance.getCalendarUIDFromMeeting());case 20:case"end":return _context8.stop();}}},_callee8,this,[[2,11,14,17]]);}));function getCalendarUIDFromMeeting(){return _getCalendarUIDFromMeeting.apply(this,arguments);}return getCalendarUIDFromMeeting;}()},{key:"_makeEwsRequestToGetCalendarUID",value:function _makeEwsRequestToGetCalendarUID(itemId){var _this55=this;return new Promise(function(resolve,reject){Office.context.mailbox.makeEwsRequestAsync(_this55._getCalendarUIDSoapRequest(itemId),function(result){if(result.status===Office.AsyncResultStatus.Succeeded){var matchesUid=result.value.match(EXTRACT_CAL_UID_FROM_SOAP_RESPONSE_PATTERN);resolve(matchesUid&&matchesUid.length==4?matchesUid[2]:null);}else{reject(result.error);}});});}},{key:"_getMeetingId",value:function(){var _getMeetingId2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee9(){return regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.prev=0;_context9.next=3;return this._getMeetingIdFromGetItem();case 3:return _context9.abrupt("return",_context9.sent);case 6:_context9.prev=6;_context9.t0=_context9["catch"](0);_context9.next=10;return this._getMeetingIdFromSaveAsync();case 10:return _context9.abrupt("return",_context9.sent);case 11:case"end":return _context9.stop();}}},_callee9,this,[[0,6]]);}));function _getMeetingId(){return _getMeetingId2.apply(this,arguments);}return _getMeetingId;}()},{key:"_getMeetingIdFromSaveAsync",value:function _getMeetingIdFromSaveAsync(){return new Promise(function(resolve,reject){Office.context.mailbox.item.saveAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve(result.value);}else{reject(result.error);}});});}},{key:"_getMeetingIdFromGetItem",value:function _getMeetingIdFromGetItem(){return new Promise(function(resolve,reject){Office.context.mailbox.item.getItemIdAsync(function(result){if(result.status===Office.AsyncResultStatus.Succeeded){resolve(result.value);}else if(result.error&&result.error.name=="ItemNotSaved"){// If the item is not saved, then just return null since there is no item ID.
return resolve(null);}else{reject(result.error);}});});}},{key:"_getCalendarUIDSoapRequest",value:function _getCalendarUIDSoapRequest(itemId){return"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t\t\t<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:t=\"http://schemas.microsoft.com/exchange/services/2006/types\">\n\t\t\t\t<soap:Header>\n\t\t\t\t\t<RequestServerVersion Version=\"Exchange2013\" xmlns=\"http://schemas.microsoft.com/exchange/services/2006/types\" soap:mustUnderstand=\"0\" />\n\t\t\t\t</soap:Header>\n\t\t\t\t<soap:Body>\n\t\t\t\t\t<GetItem xmlns=\"http://schemas.microsoft.com/exchange/services/2006/messages\">\n\t\t\t\t\t<ItemShape>\n\t\t\t\t\t\t<t:BaseShape>IdOnly</t:BaseShape>\n\t\t\t\t\t\t<t:AdditionalProperties>\n\t\t\t\t\t\t\t<t:FieldURI FieldURI=\"calendar:UID\"/>\n\t\t\t\t\t\t</t:AdditionalProperties>\n\t\t\t\t\t</ItemShape>\n\t\t\t\t\t<ItemIds><t:ItemId Id=\"".concat(itemId,"\"/></ItemIds>\n\t\t\t\t\t</GetItem>\n\t\t\t\t</soap:Body>\n\t\t\t</soap:Envelope>\n\t\t");}},{key:"isOutlookMacDesktopClient",value:function isOutlookMacDesktopClient(){return this.isOutlookDesktopClient()&&isSafariBrowser();}},{key:"isOutlookWebOnSafari",value:function isOutlookWebOnSafari(){return!this.isOutlookDesktopClient()&&isSafariBrowser();}}],[{key:"is",get:function get(){return"triservice-outlook";}},{key:"template",get:function get(){return html(_templateObject45_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{startDate:{type:String,value:null,notify:true},endDate:{type:String,value:null,notify:true},attendeesCount:{type:Number,value:0,notify:true},enhancedLocations:{type:Array,value:function value(){return[];},notify:true},recurrence:{type:Object,value:function value(){},notify:true},_loadingFromOutlook:{type:Boolean,value:false},_dialog:{type:Object},_locateUrl:{type:String,value:""},_webSignonUrl:{type:String,value:""},_refreshRoomLinks:{type:Boolean,value:false}};}},{key:"observers",get:function get(){return["_handleLoadingChanged(_loadingFromOutlook)","_handleEnhancedLocationsChanged(enhancedLocations.*)","_refreshRoomLinksOnMeetingBody(_refreshRoomLinks, _loadingFromOutlook)"];}}]);return TriserviceOutlook;}(TrimixinService(PolymerElement));;window.customElements.define(TriserviceOutlook.is,TriserviceOutlook);var triserviceOutlook={__proto__:null,getTriserviceOutlook:getTriserviceOutlook};_exports.$triserviceOutlook=triserviceOutlook;function getTriserviceRecurrence(){return getService(TriserviceRecurrence.is);}var TriserviceRecurrence=/*#__PURE__*/function(_TrimixinService8){babelHelpers.inherits(TriserviceRecurrence,_TrimixinService8);function TriserviceRecurrence(){babelHelpers.classCallCheck(this,TriserviceRecurrence);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceRecurrence).apply(this,arguments));}babelHelpers.createClass(TriserviceRecurrence,[{key:"_handleOutlookRecurrenceChanged",value:function(){var _handleOutlookRecurrenceChanged2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee10(outlookRecurrence){var recurrenceObj,recurrenceWeekDays,recurrenceType,recurrenceProperties,recurrenceEndDate,endDate,endDateObj;return regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(!this._isRootInstance){_context10.next=41;break;}_context10.prev=1;this._loadingRecurrence=true;if(!(isEmptyObj(outlookRecurrence)||getTriserviceOutlook().isOccurrence())){_context10.next=8;break;}this.recurrence=null;this.isRecurring=false;this.recurrenceEndDate="";return _context10.abrupt("return");case 8:_context10.next=10;return importJsPromise$1;case 10:recurrenceObj={};recurrenceWeekDays=[];recurrenceType=outlookRecurrence.recurrenceType;if(recurrenceType&&recurrenceType!==""){recurrenceObj.type=recurrenceType==="weekday"?"WEEKLY":recurrenceType.toUpperCase();}recurrenceProperties=outlookRecurrence.recurrenceProperties;recurrenceEndDate=outlookRecurrence.seriesTime&&outlookRecurrence.seriesTime.getEndDate()?outlookRecurrence.seriesTime.getEndDate():"";endDate=recurrenceEndDate!==""?moment(recurrenceEndDate).endOf("day").toISOString():"";endDateObj={};endDateObj.type=endDate&&endDate!==""?"End Date":"No End Date";if(endDate&&endDate!=="")endDateObj.endDate=endDate;this.recurrenceEndDate=endDate;_context10.t0=recurrenceType;_context10.next=_context10.t0==="daily"?24:_context10.t0==="weekday"?26:_context10.t0==="weekly"?29:_context10.t0==="monthly"?32:_context10.t0==="yearly"?34:36;break;case 24:recurrenceObj.dailyProperties=this._getDailyObj(recurrenceProperties.interval,endDateObj);return _context10.abrupt("break",36);case 26:recurrenceWeekDays=this._getFormattedWeekDaysArray(["mon","tue","wed","thu","fri"]);recurrenceObj.weeklyProperties=this._getWeeklyObj(1,recurrenceWeekDays,endDateObj);return _context10.abrupt("break",36);case 29:recurrenceWeekDays=this._getFormattedWeekDaysArray(recurrenceProperties.days);recurrenceObj.weeklyProperties=this._getWeeklyObj(recurrenceProperties.interval,recurrenceWeekDays,endDateObj);return _context10.abrupt("break",36);case 32:recurrenceObj.monthlyProperties=this._getMonthlyObj(recurrenceProperties.dayOfMonth,recurrenceProperties.dayOfWeek,recurrenceProperties.weekNumber,recurrenceProperties.interval,endDateObj);return _context10.abrupt("break",36);case 34:recurrenceObj.yearlyProperties=this._getYearlyObj(recurrenceProperties.dayOfMonth,recurrenceProperties.dayOfWeek,recurrenceProperties.month,recurrenceProperties.weekNumber,endDateObj);return _context10.abrupt("break",36);case 36:this.recurrence=!isEmptyObj(recurrenceObj)?_objectSpread({},recurrenceObj):null;this.isRecurring=!isEmptyObj(this.recurrence);case 38:_context10.prev=38;this._loadingRecurrence=false;return _context10.finish(38);case 41:case"end":return _context10.stop();}}},_callee10,this,[[1,,38,41]]);}));function _handleOutlookRecurrenceChanged(_x){return _handleOutlookRecurrenceChanged2.apply(this,arguments);}return _handleOutlookRecurrenceChanged;}()},{key:"_getDailyObj",value:function _getDailyObj(interval,endDateObj){if(this._isRootInstance){return{type:"Every [x] day(s)",interval:interval,end:endDateObj};}}},{key:"_getWeeklyObj",value:function _getWeeklyObj(interval,weeklyDays,endDateObj){if(this._isRootInstance){return{interval:interval,weeklyDays:weeklyDays,end:endDateObj};}}},{key:"_getMonthlyObj",value:function _getMonthlyObj(dayOfMonth,dayOfWeek,weekNumber,interval,endDateObj){if(this._isRootInstance){if(dayOfMonth){return{type:"Day [x] of every [x] month(s)",interval:interval,dayOfMonth:dayOfMonth,end:endDateObj};}if(dayOfWeek){return{type:"The [First] [Monday] of every [x] month(s)",interval:interval,dayOfWeek:this._getFormattedWeekDay(dayOfWeek),weekOfMonth:capitalizeString(weekNumber),end:endDateObj};}}}},{key:"_getYearlyObj",value:function _getYearlyObj(dayOfMonth,dayOfWeek,month,weekNumber,endDateObj){if(this._isRootInstance){if(dayOfMonth){return{type:"Every [May] [1]",dayOfMonth:dayOfMonth,month:this._getFormattedMonth(month),end:endDateObj};}if(dayOfWeek){return{type:"The [First] [Monday] of [May]",dayOfWeek:this._getFormattedWeekDay(dayOfWeek),weekOfMonth:capitalizeString(weekNumber),month:this._getFormattedMonth(month),end:endDateObj};}}}},{key:"_getFormattedWeekDaysArray",value:function _getFormattedWeekDaysArray(days){var _this56=this;if(this._isRootInstance){var formattedWeekDays=days.map(function(day){return _this56._getFormattedWeekDay(day);});return formattedWeekDays;}}},{key:"_getFormattedWeekDay",value:function _getFormattedWeekDay(day){if(this._isRootInstance){switch(day){case"sun":return"Sunday";case"mon":return"Monday";case"tue":return"Tuesday";case"wed":return"Wednesday";case"thu":return"Thursday";case"fri":return"Friday";case"sat":return"Saturday";}}}},{key:"_getFormattedMonth",value:function _getFormattedMonth(month){if(this._isRootInstance){switch(month){case"jan":return"January";case"feb":return"February";case"mar":return"March";case"apr":return"April";case"may":return"May";case"jun":return"June";case"jul":return"July";case"aug":return"August";case"sep":return"September";case"oct":return"October";case"nov":return"November";case"dec":return"December";}}}},{key:"_setRecurrenceAvailabilityPercentage",value:function _setRecurrenceAvailabilityPercentage(applicationSettings){if(this._isRootInstance){this.recurrenceAvailabilityPercentage=!isEmptyObj(applicationSettings)&&applicationSettings.occurrenceMatch?applicationSettings.occurrenceMatch:null;}}}],[{key:"is",get:function get(){return"triservice-recurrence";}},{key:"template",get:function get(){return html(_templateObject46_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{recurrence:{type:Object,value:function value(){},notify:true},recurrenceAvailabilityPercentage:{type:Number,notify:true},isRecurring:{type:Boolean,value:false,notify:true},recurrenceEndDate:{type:String,value:"",notify:true},_applicationSettings:{type:Object},_outlookRecurrence:{type:Object},_loadingRecurrence:{type:Boolean,value:false}};}},{key:"observers",get:function get(){return["_handleOutlookRecurrenceChanged(_outlookRecurrence)","_setRecurrenceAvailabilityPercentage(_applicationSettings)","_handleLoadingChanged(_loadingRecurrence)"];}}]);return TriserviceRecurrence;}(TrimixinService(PolymerElement));window.customElements.define(TriserviceRecurrence.is,TriserviceRecurrence);var triserviceRecurrence={__proto__:null,getTriserviceRecurrence:getTriserviceRecurrence};_exports.$triserviceRecurrence=triserviceRecurrence;function getTriserviceRoomsSearch(){return getService(TriserviceRoomsSearch.is);};var TriserviceRoomsSearch=/*#__PURE__*/function(_TrimixinService9){babelHelpers.inherits(TriserviceRoomsSearch,_TrimixinService9);function TriserviceRoomsSearch(){babelHelpers.classCallCheck(this,TriserviceRoomsSearch);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceRoomsSearch).apply(this,arguments));}babelHelpers.createClass(TriserviceRoomsSearch,[{key:"refreshAddedRoomsFromEmailList",value:function(){var _refreshAddedRoomsFromEmailList=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee11(emailList){var query,_i82,addedRoomsDSCore,response,addedRooms;return regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(!this._isRootInstance){_context11.next=29;break;}if(isEmptyArray(emailList)){_context11.next=26;break;}this._loadingAddedRoomsDSCore=true;query={page:{from:0,size:emailList.length},filters:[]};for(_i82=0;_i82<emailList.length;_i82++){query.filters.push({operator:"starts with",name:"exchangeMailbox",value:emailList[_i82]});if(_i82<emailList.length-1)query.filters.push({operator:"or"});}addedRoomsDSCore=this.shadowRoot.querySelector("#addedRoomsDSCore");addedRoomsDSCore.query=query;_context11.prev=7;_context11.next=10;return getTriserviceFavoriteRooms().getFavoriteRooms();case 10:_context11.next=12;return addedRoomsDSCore.generateRequest();case 12:response=_context11.sent;addedRooms=this._getRoomsWithFavoriteData(response.data);this._addedRooms=babelHelpers.toConsumableArray(addedRooms);_context11.next=21;break;case 17:_context11.prev=17;_context11.t0=_context11["catch"](7);this._addedRooms=[];throw _context11.t0;case 21:_context11.prev=21;this._loadingAddedRoomsDSCore=false;return _context11.finish(21);case 24:_context11.next=27;break;case 26:this._addedRooms=[];case 27:_context11.next=30;break;case 29:return _context11.abrupt("return",this._rootInstance.refreshAddedRoomsFromEmailList(emailList));case 30:case"end":return _context11.stop();}}},_callee11,this,[[7,17,21,24]]);}));function refreshAddedRoomsFromEmailList(_x2){return _refreshAddedRoomsFromEmailList.apply(this,arguments);}return refreshAddedRoomsFromEmailList;}()},{key:"getAddedRoomsWithoutFavoriteData",value:function getAddedRoomsWithoutFavoriteData(){if(this._isRootInstance){return this._addedRooms;}else{this._rootInstance.getAddedRoomsWithoutFavoriteData();}}},{key:"addRoomToAddedRooms",value:function addRoomToAddedRooms(room){if(this._isRootInstance){this.push("_addedRooms",room);}else{this._rootInstance.addRoomToAddedRooms(room);}}},{key:"removeRoomFromAddedRooms",value:function removeRoomFromAddedRooms(room){if(this._isRootInstance){var roomIndex=this._addedRooms.findIndex(function(addedRoom){return addedRoom._id===room._id;});if(roomIndex>-1)this.splice("_addedRooms",roomIndex,1);}else{this._rootInstance.removeRoomFromAddedRooms(room);}}},{key:"_setAddedRoomsWithFavorites",value:function(){var _setAddedRoomsWithFavorites2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee12(addedRoomsChange){var addedRooms;return regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:if(!this._isRootInstance){_context12.next=5;break;}_context12.next=3;return getTriserviceFavoriteRooms().getFavoriteRooms();case 3:addedRooms=this._getRoomsWithFavoriteData(addedRoomsChange.base);this._addedRoomsWithFavorites=babelHelpers.toConsumableArray(addedRooms);case 5:case"end":return _context12.stop();}}},_callee12,this);}));function _setAddedRoomsWithFavorites(_x3){return _setAddedRoomsWithFavorites2.apply(this,arguments);}return _setAddedRoomsWithFavorites;}()},{key:"_getRoomsWithFavoriteData",value:function _getRoomsWithFavoriteData(rooms){if(this._isRootInstance){if(!rooms)return[];var favoriteRooms=!this._favoriteRooms?[]:this._favoriteRooms;var _loop5=function _loop5(_i83){var roomIndex=favoriteRooms.findIndex(function(room){return room._id===rooms[_i83]._id;});rooms[_i83].isFavorite=roomIndex>-1;};for(var _i83=0;_i83<rooms.length;_i83++){_loop5(_i83);}return rooms;}}},{key:"_setNeedsToRefresh",value:function _setNeedsToRefresh(){var _this57=this;if(this._isRootInstance){this._debounceSetNeedsToRefresh=Debouncer.debounce(this._debounceSetNeedsToRefresh,timeOut.after(300),function(){if(_this57._isApplicationSettingsReady&&_this57._defaultFiltersLoaded&&(!isEmptyArray(_this57._locationFilter)||isEmptyArray(_this57._locationFilter)&&!isEmptyArray(_this57._favoriteRooms))){_this57._needsToRefresh=true;}else{_this57._needsToRefresh=false;_this57._resetRoomHierarchyData();}});}}},{key:"_handleLocationFilterChange",value:function _handleLocationFilterChange(){var _this58=this;if(this._isRootInstance){this._debounceHandleLocationFilterChange=Debouncer.debounce(this._debounceHandleLocationFilterChange,microTask,function(){var cityFilter=_this58._locationFilter.filter(function(locationFilter){return locationFilter.type=="City";});_this58._cityFilter=!isEmptyArray(cityFilter)?cityFilter[0]:{};_this58._propertyFilter=_this58._locationFilter.filter(function(locationFilter){return locationFilter.type=="Property";});_this58._buildingFilter=_this58._locationFilter.filter(function(locationFilter){return locationFilter.type=="Building";});});}}},{key:"_resetRoomHierarchyData",value:function _resetRoomHierarchyData(){if(this._isRootInstance){this._reservableRooms=null;this.roomsHierarchy=null;}}},{key:"_refreshReservableRooms",value:function(){var _refreshReservableRooms2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee13(resultsRouteActive,needsToRefresh){var _this59=this;return regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(!this._isRootInstance){_context13.next=5;break;}if(!(resultsRouteActive&&needsToRefresh)){_context13.next=5;break;}_context13.next=4;return this._setReservableRoomsDSArrayFilters();case 4:return _context13.abrupt("return",this.shadowRoot.querySelector("#reservableRoomsDS").refresh().then(function(){_this59._needsToRefresh=false;_this59._returnDataFromResponse();}));case 5:case"end":return _context13.stop();}}},_callee13,this);}));function _refreshReservableRooms(_x4,_x5){return _refreshReservableRooms2.apply(this,arguments);}return _refreshReservableRooms;}()},{key:"_setReservableRoomsDSArrayFilters",value:function _setReservableRoomsDSArrayFilters(){var _this60=this;return new Promise(function(resolve){var favoriteFilterById=[];if(isEmptyArray(_this60._locationFilter))_this60._favoriteRooms.forEach(function(favorite){favoriteFilterById.push(favorite._id);});var cityFilterById=_this60._cityFilter&&_this60._cityFilter._id?_this60._cityFilter._id:"";var propertyFilterById=[];_this60._propertyFilter.forEach(function(property){propertyFilterById.push(property._id);});var buildingFilterById=[];_this60._buildingFilter.forEach(function(building){buildingFilterById.push(building._id);});var layoutFilterByInternalValue=[];if(!isEmptyArray(_this60._locationFilter))_this60._layoutFilter.forEach(function(layout){layoutFilterByInternalValue.push(layout.internalValue);});_this60.shadowRoot.querySelector("#reservableRoomsDSIdFilter").value=favoriteFilterById;_this60.shadowRoot.querySelector("#reservableRoomsDSCityFilter").value=cityFilterById;_this60.shadowRoot.querySelector("#reservableRoomsDSPropertiesFilter").value=propertyFilterById;_this60.shadowRoot.querySelector("#reservableRoomsDSBuildingsFilter").value=buildingFilterById;_this60.shadowRoot.querySelector("#reservableRoomsDSRoomLayoutFilter").value=layoutFilterByInternalValue;_this60.shadowRoot.querySelector("#reservableRoomsDSCateringFilter").value=_this60._hasAmenityFilter("catering");_this60.shadowRoot.querySelector("#reservableRoomsDSAdaFilter").value=_this60._hasAmenityFilter("accessibility");_this60.shadowRoot.querySelector("#reservableRoomsDSProjectorFilter").value=_this60._hasAmenityFilter("projector");_this60.shadowRoot.querySelector("#reservableRoomsDSTelephoneFilter").value=_this60._hasAmenityFilter("phone");_this60.shadowRoot.querySelector("#reservableRoomsDSWhiteboardFilter").value=_this60._hasAmenityFilter("whiteboard");_this60.shadowRoot.querySelector("#reservableRoomsDSVideoConferenceFilter").value=_this60._hasAmenityFilter("tvscreen");_this60.shadowRoot.querySelector("#reservableRoomsDSNetworkConnectionFilter").value=_this60._hasAmenityFilter("networkConnection");setTimeout(resolve,100);});}},{key:"_hasAmenityFilter",value:function _hasAmenityFilter(amenity){var amenityIndex=this._amenitiesFilter.findIndex(function(filter){return filter.amenity===amenity;});return amenityIndex>-1&&!isEmptyArray(this._locationFilter)?"Yes":"";}// Set available rooms with availability based on advance limit, cut-off, and availCount.
},{key:"_setReservableRoomsAvailability",value:function(){var _setReservableRoomsAvailability2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee14(reservableRoomsChange){var reservableRooms,reservableRoomsWithFavorites,reservableRoomsWithAvailability;return regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(!this._isRootInstance){_context14.next=13;break;}reservableRooms=reservableRoomsChange.base;if(isEmptyArray(reservableRooms)){_context14.next=12;break;}_context14.next=5;return getTriserviceFavoriteRooms().getFavoriteRooms();case 5:reservableRoomsWithFavorites=this._getRoomsWithFavoriteData(reservableRooms);_context14.next=8;return this._getReservableRoomsAvailability(reservableRoomsWithFavorites);case 8:reservableRoomsWithAvailability=_context14.sent;this._reservableRoomsWithAvailability=reservableRoomsWithAvailability;_context14.next=13;break;case 12:this._reservableRoomsWithAvailability=null;case 13:case"end":return _context14.stop();}}},_callee14,this);}));function _setReservableRoomsAvailability(_x6){return _setReservableRoomsAvailability2.apply(this,arguments);}return _setReservableRoomsAvailability;}()},{key:"_getReservableRoomsAvailability",value:function(){var _getReservableRoomsAvailability2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee15(reservableRooms){var _this61=this;var durationComp,currentTime,allReservableRooms;return regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:if(!this._isRootInstance){_context15.next=13;break;}_context15.prev=1;this._filteringReservableRooms=true;_context15.next=5;return importJsPromise$1;case 5:durationComp=this.shadowRoot.querySelector("#duration");currentTime=new Date();allReservableRooms=!isEmptyArray(reservableRooms)?reservableRooms:[];if(durationComp&&!isEmptyArray(allReservableRooms)){durationComp.displayTokens="y:M:w:d:h:m:s";allReservableRooms.forEach(function(room){durationComp.value=room.reserveAdvanceLimit;var calculatedStartDateTime=durationComp.getCalculatedEndDateTime(currentTime);durationComp.value=room.reserveCutOffDuration;var calculatedEndDateTime=durationComp.getCalculatedEndDateTime(currentTime);var isStartDateBeforeAdvanceLimit=room.reserveAdvanceLimit===0?false:_this61._isStartDateBeforeAdvanceLimit(calculatedStartDateTime);var isEndDateAfterCutOffDuration=room.reserveCutOffDuration===0?false:_this61._isEndDateAfterCutOffDuration(calculatedEndDateTime);var noRecurrenceEndDateWithCutOff=_this61._isRecurring&&_this61._recurrenceEndDate===""&&room.reserveCutOffDuration>0;var isUnavailable=isStartDateBeforeAdvanceLimit||isEndDateAfterCutOffDuration||noRecurrenceEndDateWithCutOff;var isRoomUnavailable=isUnavailable||!_this61._isRecurring&&room._availCount===0||_this61._isRecurring&&room._availCount/room._maxOccurrenceCount*100<_this61._recurrenceAvailabilityPercentage;room.isUnavailable=isRoomUnavailable;});}return _context15.abrupt("return",babelHelpers.toConsumableArray(allReservableRooms));case 10:_context15.prev=10;this._filteringReservableRooms=false;return _context15.finish(10);case 13:case"end":return _context15.stop();}}},_callee15,this,[[1,,10,13]]);}));function _getReservableRoomsAvailability(_x7){return _getReservableRoomsAvailability2.apply(this,arguments);}return _getReservableRoomsAvailability;}()},{key:"_isStartDateBeforeAdvanceLimit",value:function _isStartDateBeforeAdvanceLimit(calculatedStartDateTime){var startDateMo=moment(this._startDate);var calculatedStartDateTimeMo=moment(calculatedStartDateTime);return startDateMo.isBefore(calculatedStartDateTimeMo,"second");}},{key:"_isEndDateAfterCutOffDuration",value:function _isEndDateAfterCutOffDuration(calculatedEndDateTime){var endDateMo=this._isRecurring?moment(this._recurrenceEndDate):moment(this._endDate);var calculatedEndDateTimeMo=moment(calculatedEndDateTime);return endDateMo.isAfter(calculatedEndDateTimeMo,"second");}// Set the definitive available rooms array removing the added roooms.
},{key:"_setDefinitiveReservableRooms",value:function _setDefinitiveReservableRooms(reservableRoomsWithAvailabilityChange,addedRoomsChange){var _this62=this;if(this._isRootInstance){(function(){var reservableRooms=!isEmptyArray(reservableRoomsWithAvailabilityChange.base)?babelHelpers.toConsumableArray(reservableRoomsWithAvailabilityChange.base):[];var addedRooms=!isEmptyArray(addedRoomsChange.base)?addedRoomsChange.base:[];if(!isEmptyArray(reservableRooms)){var _loop6=function _loop6(_i84){var roomIndex=reservableRooms.findIndex(function(room){return room._id===addedRooms[_i84-1]._id;});if(roomIndex>-1)reservableRooms.splice(roomIndex,1);};for(var _i84=addedRooms.length;_i84>0;_i84--){_loop6(_i84);}_this62._definitiveReservableRooms=reservableRooms;}else{_this62._definitiveReservableRooms=null;}})();}}},{key:"_createRoomsHierarchy",value:function _createRoomsHierarchy(reservableRooms){var _this63=this;if(this._isRootInstance){(function(){var roomsHierarchy=[];var rooms=!isEmptyArray(reservableRooms)?reservableRooms:[];var _loop7=function _loop7(_i85){var hasParentCity=rooms[_i85].citySystemRecordID&&rooms[_i85].citySystemRecordID!=="";var hasParentProperty=rooms[_i85].propertySystemRecordID&&rooms[_i85].propertySystemRecordID!=="";var parentId=(hasParentCity?rooms[_i85].citySystemRecordID:"")+(hasParentCity&&hasParentProperty?" - ":"")+(hasParentProperty?rooms[_i85].propertySystemRecordID:"");var indexParent=roomsHierarchy.findIndex(function(e){return e.parentId==parentId;});if(indexParent==-1){var parentName=(hasParentCity?rooms[_i85].city:"")+(hasParentCity&&hasParentProperty?" - ":"")+(hasParentProperty?rooms[_i85].property:"");var parent={parentName:parentName,parentId:parentId,isFavorite:rooms[_i85].isFavorite,isUnavailable:rooms[_i85].isUnavailable,buildingsFloors:[_this63._setBuildingFloorObj(rooms[_i85])]};roomsHierarchy.push(parent);}else{var indexBuildingFloor=roomsHierarchy[indexParent].buildingsFloors.findIndex(function(e){return e.buildingFloorId==rooms[_i85].buildingSystemRecordID+" - "+rooms[_i85].floorSystemRecordID;});if(indexBuildingFloor==-1){var buildingFloor=_this63._setBuildingFloorObj(rooms[_i85]);roomsHierarchy[indexParent].buildingsFloors.push(buildingFloor);}else{var indexRoom=roomsHierarchy[indexParent].buildingsFloors[indexBuildingFloor].rooms.findIndex(function(e){return e._id==rooms[_i85]._id;});if(indexRoom==-1){roomsHierarchy[indexParent].buildingsFloors[indexBuildingFloor].rooms.push(rooms[_i85]);}if(rooms[_i85].isFavorite){roomsHierarchy[indexParent].isFavorite=true;roomsHierarchy[indexParent].buildingsFloors[indexBuildingFloor].isFavorite=true;}if(!rooms[_i85].isUnavailable){roomsHierarchy[indexParent].isUnavailable=false;roomsHierarchy[indexParent].buildingsFloors[indexBuildingFloor].isUnavailable=false;}}}};for(var _i85=0;_i85<rooms.length;_i85++){_loop7(_i85);}_this63.roomsHierarchy=[].concat(roomsHierarchy);})();}}},{key:"_setBuildingFloorObj",value:function _setBuildingFloorObj(room){return{building:room.building,floor:room.floor,floorLevel:room.floorLevel,buildingFloorId:room.buildingSystemRecordID+" - "+room.floorSystemRecordID,isFavorite:room.isFavorite,isUnavailable:room.isUnavailable,rooms:[room]};}},{key:"_setRoomsCount",value:function _setRoomsCount(reservableRooms){if(this._isRootInstance){this.roomsCount=!isEmptyArray(reservableRooms)?reservableRooms.length:0;}}},{key:"setRoomFavoriteValue",value:function setRoomFavoriteValue(room,value){if(this._isRootInstance){// Get room index from reservableRooms.
var roomIndex=this._definitiveReservableRooms?this._definitiveReservableRooms.findIndex(function(reservableRoom){return reservableRoom._id===room._id;}):-1;// Get room index from addedRooms.
var baseAddedRoomIndex=this._addedRoomsWithFavorites.findIndex(function(addedRoom){return addedRoom._id===room._id;});var addedRoomIndex=this.addedRooms.findIndex(function(addedRoom){return addedRoom._id===room._id;});// Get room index from roomsHierarchy.
var hierarchyIndex,hierarchyBuildingFloorIndex,hierarchyRoomIndex;var roomsHierarchy=this.roomsHierarchy?this.roomsHierarchy:[];for(var x=0;x<roomsHierarchy.length;x++){var buildingsFloors=roomsHierarchy[x].buildingsFloors;for(var y=0;y<buildingsFloors.length;y++){var rooms=buildingsFloors[y].rooms;var index=rooms.findIndex(function(currentRoom){return currentRoom._id===room._id;});if(index>-1){hierarchyIndex=x;hierarchyBuildingFloorIndex=y;hierarchyRoomIndex=index;break;}}}// Set favorite for addedRooms.
if(baseAddedRoomIndex>-1){this.set("_addedRoomsWithFavorites.".concat(addedRoomIndex,".isFavorite"),value);this.notifyPath("_addedRoomsWithFavorites.".concat(addedRoomIndex,".isFavorite"),value);}if(addedRoomIndex>-1){this.set("addedRooms.".concat(addedRoomIndex,".isFavorite"),value);this.notifyPath("addedRooms.".concat(addedRoomIndex,".isFavorite"),value);}if(!isEmptyArray(this._allFilters)){// Set favorite for reservableRooms.
if(roomIndex>-1)this.set("_definitiveReservableRooms.".concat(roomIndex,".isFavorite"),value);// Set favorite for roomsHierarchy.
this.set("roomsHierarchy.".concat(hierarchyIndex,".buildingsFloors.").concat(hierarchyBuildingFloorIndex,".rooms.").concat(hierarchyRoomIndex,".isFavorite"),value);this.notifyPath("roomsHierarchy.".concat(hierarchyIndex,".buildingsFloors.").concat(hierarchyBuildingFloorIndex,".rooms.").concat(hierarchyRoomIndex,".isFavorite"),value);}else{// Remove room from favorite rooms.
if(roomIndex>-1)this.splice("_definitiveReservableRooms",roomIndex,1);}}else{this._rootInstance.setRoomFavoriteValue(room,value);}}},{key:"_setHasUnavailableRooms",value:function _setHasUnavailableRooms(definitiveReservableRoomsChange){if(this._isRootInstance){var reservableRooms=definitiveReservableRoomsChange.base;if(!isEmptyArray(reservableRooms)){var unavailableCount=0;for(var _i86=0;_i86<reservableRooms.length;_i86++){if(reservableRooms[_i86].isUnavailable)unavailableCount++;}this.hasUnavailableRooms=unavailableCount>0;}else{this.hasUnavailableRooms=false;}}}},{key:"_setSearchHasFavoriteRooms",value:function _setSearchHasFavoriteRooms(reservableRoomsChange){if(this._isRootInstance){var reservableRooms=reservableRoomsChange.base;if(!isEmptyArray(reservableRooms)){var favoritesCount=0;for(var _i87=0;_i87<reservableRooms.length;_i87++){if(reservableRooms[_i87].isFavorite)favoritesCount++;}this.searchHasFavoriteRooms=favoritesCount>0;}else{this.searchHasFavoriteRooms=false;this.onlyFavoritesFilter="";}}}},{key:"getSpaceLabelStyles",value:function getSpaceLabelStyles(){if(this._isRootInstance){if(!this.spaceLabelStyles){return this.shadowRoot.querySelector("#spaceLabelStylesDS").refresh().then(this._returnDataFromResponse.bind(this));}else{return Promise.resolve(this.spaceLabelStyles);}}else{return this._rootInstance.getSpaceLabelStyles();}}},{key:"saveBuildingRoomsDataToLocal",value:function saveBuildingRoomsDataToLocal(cityId,buildingId,propertyId){if(this._isRootInstance){if(buildingId){var buildingRooms=this.reservableRooms.filter(function(room){return room.buildingSystemRecordID===buildingId;});var floorsKVL=buildingRooms.reduce(function(floors,room){floors[room.floorSystemRecordID]=floors[room.floorSystemRecordID]||[];floors[room.floorSystemRecordID].push(room);return floors;},{});var filteredFloors=[];for(var prop in floorsKVL){filteredFloors.push({id:prop,floor:floorsKVL[prop][0].floor,floorLevel:floorsKVL[prop][0].floorLevel,rooms:floorsKVL[prop]});}var buildingData={buildingId:buildingId,building:buildingRooms[0].building,city:buildingRooms[0].city,property:buildingRooms[0].property,floors:filteredFloors};saveDataToLocal(buildingData,'buildingData');}}else{return this._rootInstance.saveBuildingRoomsDataToLocal(cityId,buildingId,propertyId);}}},{key:"getBuildingRoomsDataFromLocal",value:function getBuildingRoomsDataFromLocal(){if(this._isRootInstance){return getDataFromLocal('buildingData');}else{return this._rootInstance.getBuildingRoomsDataFromLocal();}}},{key:"saveAddedRoomsDataToLocal",value:function saveAddedRoomsDataToLocal(){if(this._isRootInstance){saveDataToLocal(this.addedRooms,'addedRooms');}else{return this._rootInstance.saveAddedRoomsDataToLocal();}}},{key:"getAddedRoomsDataFromLocal",value:function getAddedRoomsDataFromLocal(){if(this._isRootInstance){return getDataFromLocal('addedRooms');}else{return this._rootInstance.getAddedRoomsDataFromLocal();}}}],[{key:"is",get:function get(){return"triservice-rooms-search";}},{key:"template",get:function get(){return html(_templateObject47_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{loading:{type:Boolean,value:false,notify:true},roomsHierarchy:{type:Array,notify:true},roomsCount:{type:Number,value:0,notify:true},onlyFavoritesFilter:{type:String,value:"",notify:true},unavailableFilter:{type:Number,value:0,notify:true},reservableRooms:{type:Array,notify:true},addedRooms:{type:Array,notify:true},spaceLabelStyles:{type:String,notify:true},searchHasFavoriteRooms:{type:Boolean,value:false,notify:true},hasUnavailableRooms:{type:Boolean,value:false,notify:true},_reservableRooms:{type:Array},_reservableRoomsWithAvailability:{type:Array},_definitiveReservableRooms:{type:Array},_addedRooms:{type:Array,value:function value(){return[];}},_addedRoomsWithFavorites:{type:Array},_loadingAddedRoomsDSCore:{type:Boolean},_loadingReservableRooms:{type:Boolean},_loadingGraphicLabelStyles:{type:Boolean,value:false},_resultsRouteActive:{type:Boolean},_isApplicationSettingsReady:{type:Boolean},_favoriteRooms:{type:Array},_defaultFiltersLoaded:{type:Boolean},_allFilters:{type:Array},_locationFilter:{type:Array},_startDate:{type:String},_endDate:{type:String},_recurrence:{type:Object},_recurrenceAvailabilityPercentage:{type:Number},_isRecurring:{type:Boolean},_recurrenceEndDate:{type:String},_cityFilter:{type:String},_propertyFilter:{type:Array},_buildingFilter:{type:Array},_roomCapacity:{type:Number},/**
       * Flag to indicate when reservableRoomsDS needs to refresh.
       */_needsToRefresh:{type:Boolean,value:false},_layoutFilter:{type:Array},_amenitiesFilter:{type:Array},_filteringReservableRooms:{type:Boolean,value:false}};}},{key:"observers",get:function get(){return["_handleLoadingChanged(_loadingAddedRoomsDSCore, _loadingReservableRooms, _loadingGraphicLabelStyles, _filteringReservableRooms)","_setAddedRoomsWithFavorites(_addedRooms.*)","_setNeedsToRefresh(_isApplicationSettingsReady, _favoriteRooms, _startDate, _endDate, _recurrence, _defaultFiltersLoaded, _locationFilter.*, _roomCapacity, _layoutFilter.*, _amenitiesFilter.*)","_handleLocationFilterChange(_locationFilter.*)","_refreshReservableRooms(_resultsRouteActive, _needsToRefresh)","_setReservableRoomsAvailability(_reservableRooms.*)","_setDefinitiveReservableRooms(_reservableRoomsWithAvailability.*, _addedRooms.*)","_createRoomsHierarchy(reservableRooms)","_setRoomsCount(reservableRooms)","_setHasUnavailableRooms(_definitiveReservableRooms.*)","_setSearchHasFavoriteRooms(reservableRooms.*)"];}}]);return TriserviceRoomsSearch;}(TrimixinService(PolymerElement));;window.customElements.define(TriserviceRoomsSearch.is,TriserviceRoomsSearch);var triserviceRoomsSearch={__proto__:null,getTriserviceRoomsSearch:getTriserviceRoomsSearch};_exports.$triserviceRoomsSearch=triserviceRoomsSearch;function getTriserviceFavoriteRooms(){return getService(TriserviceFavoriteRooms.is);}var TriserviceFavoriteRooms=/*#__PURE__*/function(_TrimixinService10){babelHelpers.inherits(TriserviceFavoriteRooms,_TrimixinService10);function TriserviceFavoriteRooms(){babelHelpers.classCallCheck(this,TriserviceFavoriteRooms);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceFavoriteRooms).apply(this,arguments));}babelHelpers.createClass(TriserviceFavoriteRooms,[{key:"getFavoriteRooms",value:function getFavoriteRooms(force){if(this._isRootInstance){if(!this._currentUser||!this._currentUser._id)return Promise.resolve([]);if(force||!this.favoriteRooms){return this.shadowRoot.querySelector("#favoriteRoomsDS").refresh().then(this._returnDataFromResponse.bind(this));}else{return Promise.resolve(this.favoriteRooms);}}else{this._rootInstance.getFavoriteRooms(force);}}},{key:"addFavoriteRoom",value:function(){var _addFavoriteRoom=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee16(room){var _this64=this;return regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:if(!this._isRootInstance){_context16.next=9;break;}if(!(!this._currentUser||!this._currentUser._id)){_context16.next=3;break;}return _context16.abrupt("return",Promise.resolve());case 3:if(this.favoriteRoom){_context16.next=6;break;}_context16.next=6;return this.getFavoriteRooms();case 6:return _context16.abrupt("return",this.shadowRoot.querySelector("#favoriteRoomsDS").addRecord(room,TriPlatDs.RefreshType.NONE).then(function(){var favoriteRoomIndex=_this64.favoriteRooms.findIndex(function(favoriteRoom){return favoriteRoom._id===room._id;});if(favoriteRoomIndex<0)_this64.push("favoriteRooms",room);getTriserviceRoomsSearch().setRoomFavoriteValue(room,true);if(isEmptyArray(getTriserviceRoomFilters().locationFilter)){_this64.favoriteRooms=babelHelpers.toConsumableArray(_this64.favoriteRooms);}}));case 9:this._rootInstance.addFavoriteRoom(roomId);case 10:case"end":return _context16.stop();}}},_callee16,this);}));function addFavoriteRoom(_x8){return _addFavoriteRoom.apply(this,arguments);}return addFavoriteRoom;}()},{key:"removeFavoriteRoom",value:function(){var _removeFavoriteRoom=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee17(room){var _this65=this;return regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:if(!this._isRootInstance){_context17.next=9;break;}if(!(!this._currentUser||!this._currentUser._id)){_context17.next=3;break;}return _context17.abrupt("return",Promise.resolve());case 3:if(this.favoriteRoom){_context17.next=6;break;}_context17.next=6;return this.getFavoriteRooms();case 6:return _context17.abrupt("return",this.shadowRoot.querySelector("#favoriteRoomsDS").removeRecord(room,TriPlatDs.RefreshType.NONE).then(function(){var favoriteRoomIndex=_this65.favoriteRooms.findIndex(function(favoriteRoom){return favoriteRoom._id===room._id;});if(favoriteRoomIndex>-1)_this65.splice("favoriteRooms",favoriteRoomIndex,1);getTriserviceRoomsSearch().setRoomFavoriteValue(room,false);}));case 9:this._rootInstance.removeFavoriteRoom(roomId);case 10:case"end":return _context17.stop();}}},_callee17,this);}));function removeFavoriteRoom(_x9){return _removeFavoriteRoom.apply(this,arguments);}return removeFavoriteRoom;}()}],[{key:"is",get:function get(){return"triservice-favorite-rooms";}},{key:"template",get:function get(){return html(_templateObject48_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{favoriteRooms:{type:Array,notify:true},_loadingFavoriteRooms:{type:Boolean},_currentUser:{type:Object}};}},{key:"observers",get:function get(){return["_handleLoadingChanged(_loadingFavoriteRooms)"];}}]);return TriserviceFavoriteRooms;}(TrimixinService(PolymerElement));window.customElements.define(TriserviceFavoriteRooms.is,TriserviceFavoriteRooms);var triserviceFavoriteRooms={__proto__:null,getTriserviceFavoriteRooms:getTriserviceFavoriteRooms};_exports.$triserviceFavoriteRooms=triserviceFavoriteRooms;var TriserviceLoading=/*#__PURE__*/function(_TrimixinService11){babelHelpers.inherits(TriserviceLoading,_TrimixinService11);babelHelpers.createClass(TriserviceLoading,null,[{key:"is",get:function get(){return"triservice-loading";}},{key:"properties",get:function get(){return{loading:{type:Boolean,value:false,notify:true}};}}]);function TriserviceLoading(){var _this66;babelHelpers.classCallCheck(this,TriserviceLoading);_this66=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceLoading).call(this));if(_this66._isRootInstance){addLoadingListener(_this66._handleGeneralLoadingChanges.bind(babelHelpers.assertThisInitialized(_this66)));}return _this66;}babelHelpers.createClass(TriserviceLoading,[{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(TriserviceLoading.prototype),"ready",this).call(this);if(this._isRootInstance){this.loading=computeGeneralLoading();}}},{key:"_handleGeneralLoadingChanges",value:function _handleGeneralLoadingChanges(generalLoading){this.loading=generalLoading;}}]);return TriserviceLoading;}(TrimixinService(PolymerElement));;window.customElements.define(TriserviceLoading.is,TriserviceLoading);function getTriserviceLogin(){return getService(TriserviceLogin.is);};var AUTHENTICATION_REQUIRED="user_authentication_required";_exports.AUTHENTICATION_REQUIRED=AUTHENTICATION_REQUIRED;var ALREADY_LOGGED="already_logged";_exports.ALREADY_LOGGED=ALREADY_LOGGED;var UNAUTHORIZED="unauthorized";_exports.UNAUTHORIZED=UNAUTHORIZED;var INTERNAL_SERVER_ERROR="error";_exports.INTERNAL_SERVER_ERROR=INTERNAL_SERVER_ERROR;var SUCCESS="success";_exports.SUCCESS=SUCCESS;var TriserviceLogin=/*#__PURE__*/function(_TrimixinService12){babelHelpers.inherits(TriserviceLogin,_TrimixinService12);function TriserviceLogin(){babelHelpers.classCallCheck(this,TriserviceLogin);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TriserviceLogin).apply(this,arguments));}babelHelpers.createClass(TriserviceLogin,[{key:"signin",/**
     * Signin using an Exchange Identity Token (from the Outlook Add-In).
     * The exchangeToken parameter is always required.
     * When the application is loaded this method will be called with empty username and password.
     * If there is a Tririga user associated to the Exchange Indenty token, then the user will be authenticated.
     * Otherwise this method will return AUTHENTICATION_REQUIRED.
     * 
     * In that case the application will display the login form and call this method again passing the exchangeToken, username and password.
     */value:function signin(exchangeToken,username,password,force){var _this67=this;this._loggingIn=true;return new Promise(function(resolve,reject){var ajax=document.createElement("iron-ajax");ajax.method="POST";ajax.contentType="application/json";ajax.body=JSON.stringify({token:exchangeToken,userName:username,password:password,normal:!force});ajax.handleAs='json';ajax.url=_this67._signonUrl;ajax.addEventListener("response",_this67._handleSigninResponse.bind(_this67,resolve,reject));ajax.addEventListener("error",_this67._handleError.bind(_this67,resolve,reject));ajax.generateRequest();});}/**
     * Associate the current user to an Exchange Indenty token.
     */},{key:"saveEIT",value:function saveEIT(exchangeToken){var _this68=this;this._loggingIn=true;return new Promise(function(resolve,reject){var ajax=document.createElement("iron-ajax");ajax.method="POST";ajax.contentType="application/json";ajax.body=JSON.stringify({token:exchangeToken});ajax.handleAs='json';ajax.url=_this68._saveEITUrl;ajax.addEventListener("response",_this68._handleSigninResponse.bind(_this68,resolve,reject));ajax.addEventListener("error",_this68._handleError.bind(_this68,resolve,reject));ajax.generateRequest();});}},{key:"_handleSigninResponse",value:function _handleSigninResponse(resolve,reject,e){var loginResponse=e.detail.response;if(loginResponse.result==SUCCESS){resolve();}else{reject(loginResponse.result);}this._loggingIn=false;}},{key:"_handleError",value:function _handleError(resolve,reject,e){if(e.detail.request.status===403){reject(ALREADY_LOGGED);}else if(e.detail.request.status===401){reject(UNAUTHORIZED);}else{reject(INTERNAL_SERVER_ERROR);}this._loggingIn=false;}}],[{key:"is",get:function get(){return"triservice-login";}},{key:"template",get:function get(){return html(_templateObject49_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{_loggingIn:{type:Boolean,value:false,notify:true},_signonUrl:{type:String},_saveEITUrl:{type:String}};}},{key:"observers",get:function get(){return["_handleLoadingChanged(_loggingIn)"];}}]);return TriserviceLogin;}(TrimixinService(PolymerElement));;window.customElements.define(TriserviceLogin.is,TriserviceLogin);var triserviceLogin={__proto__:null,getTriserviceLogin:getTriserviceLogin,AUTHENTICATION_REQUIRED:AUTHENTICATION_REQUIRED,ALREADY_LOGGED:ALREADY_LOGGED,UNAUTHORIZED:UNAUTHORIZED,INTERNAL_SERVER_ERROR:INTERNAL_SERVER_ERROR,SUCCESS:SUCCESS};_exports.$triserviceLogin=triserviceLogin;Polymer({_template:html(_templateObject50_d98ac2c0a07c11eaa53fe90f40c8b4df()),is:"triplat-loading-indicator",properties:{/**
     * If true, the screen is dimmed and a loading indicator is shown on the screen.
     */show:{type:Boolean,value:false},/**
     * If true, hides the content of the page when the loading indicator is activated.  Otherwise, it shows the content of the page in the background.
     */hideBackground:{type:Boolean,value:false}}});var TrioutlookLogin=/*#__PURE__*/function(_PolymerElement5){babelHelpers.inherits(TrioutlookLogin,_PolymerElement5);function TrioutlookLogin(){babelHelpers.classCallCheck(this,TrioutlookLogin);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TrioutlookLogin).apply(this,arguments));}babelHelpers.createClass(TrioutlookLogin,[{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(TrioutlookLogin.prototype),"ready",this).call(this);afterNextRender(this,this._initLogin);}},{key:"_initLogin",value:function(){var _initLogin2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee18(){return regeneratorRuntime.wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:if(!getTriserviceOutlook().isAuthDialog()){_context18.next=7;break;}this._outlookIdentityToken=getDataFromLocal(OUTLOOK_TOKEN_KEY);deleteDataFromLocal(OUTLOOK_TOKEN_KEY);_context18.next=5;return this._loginUsingOutlookIdentityToken();case 5:_context18.next=17;break;case 7:_context18.next=9;return getTriserviceOutlook().getIdentityToken();case 9:this._outlookIdentityToken=_context18.sent;if(!getTriserviceOutlook().isOutlookWebOnSafari()){_context18.next=15;break;}this._displayLoginPage=true;this._loginButtonOnly=true;_context18.next=17;break;case 15:_context18.next=17;return this._loginUsingOutlookIdentityToken();case 17:case"end":return _context18.stop();}}},_callee18,this);}));function _initLogin(){return _initLogin2.apply(this,arguments);}return _initLogin;}()},{key:"_loginUsingOutlookIdentityToken",value:function(){var _loginUsingOutlookIdentityToken2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee19(){return regeneratorRuntime.wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:_context19.prev=0;_context19.next=3;return getTriserviceLogin().signin(this._outlookIdentityToken);case 3:this._reloadApp();_context19.next=9;break;case 6:_context19.prev=6;_context19.t0=_context19["catch"](0);if(this._sso&&getTriserviceOutlook().isAuthDialog()){saveDataToLocal(this._outlookIdentityToken,OUTLOOK_TOKEN_KEY);getTriserviceOutlook().openSSODialog();}else{this._displayLoginPage=true;this._loginButtonOnly=this._sso;}case 9:case"end":return _context19.stop();}}},_callee19,this,[[0,6]]);}));function _loginUsingOutlookIdentityToken(){return _loginUsingOutlookIdentityToken2.apply(this,arguments);}return _loginUsingOutlookIdentityToken;}()},{key:"_reloadApp",value:function _reloadApp(){if(getTriserviceOutlook().isAuthDialog()){getTriserviceOutlook().sendReloadMessageToParent();}else{location.reload();}}},{key:"_computeShowLoading",value:function _computeShowLoading(displayLoginPage,loading){return!displayLoginPage||loading;}},{key:"_handleLogin",value:function _handleLogin(){if(this._loginButtonOnly){saveDataToLocal(this._outlookIdentityToken,OUTLOOK_TOKEN_KEY);if(this._sso&&!getTriserviceOutlook().isAuthDialog()&&!getTriserviceOutlook().isOutlookWebOnSafari()){getTriserviceOutlook().openSSODialog();}else{getTriserviceOutlook().openAuthDialog();}}else{this._login(false);}}},{key:"_login",value:function(){var _login2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee20(force){var loginUI;return regeneratorRuntime.wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:loginUI=this.shadowRoot.querySelector("#loginUI");_context20.prev=1;_context20.next=4;return getTriserviceLogin().signin(this._outlookIdentityToken,loginUI.username,loginUI.password,force);case 4:this._reloadApp();_context20.next=18;break;case 7:_context20.prev=7;_context20.t0=_context20["catch"](1);_context20.t1=_context20.t0;_context20.next=_context20.t1===ALREADY_LOGGED?12:_context20.t1===UNAUTHORIZED?14:16;break;case 12:this._handleAlreadyLogged();return _context20.abrupt("break",18);case 14:this._handleUnauthorized();return _context20.abrupt("break",18);case 16:this._handleError();return _context20.abrupt("break",18);case 18:case"end":return _context20.stop();}}},_callee20,this,[[1,7]]);}));function _login(_x10){return _login2.apply(this,arguments);}return _login;}()},{key:"_handleForceLogin",value:function _handleForceLogin(){this._login(true);}},{key:"_handleUnauthorized",value:function _handleUnauthorized(){this.shadowRoot.querySelector("#loginUI").showUnauthorizedMessage();}},{key:"_handleAlreadyLogged",value:function _handleAlreadyLogged(){this.shadowRoot.querySelector("#loginUI").showAlreadyLoggedMessage();}},{key:"_handleError",value:function _handleError(){this.shadowRoot.querySelector("#loginUI").showErrorMessage();}}],[{key:"is",get:function get(){return"trioutlook-login";}},{key:"template",get:function get(){return html(_templateObject51_d98ac2c0a07c11eaa53fe90f40c8b4df());}},{key:"properties",get:function get(){return{_displayLoginPage:{type:Boolean,value:false},_loginButtonOnly:{type:Boolean,value:false},_loading:{type:Boolean},_sso:{type:Boolean,value:false}};}},{key:"importMeta",get:function get(){return getModuleUrl("trioutlook-room-reservation/trioutlook-login.js");}}]);return TrioutlookLogin;}(PolymerElement);window.customElements.define(TrioutlookLogin.is,TrioutlookLogin);});